{"compilerVersion":"0.15.8","github":["purescript-contrib","purescript-colors"],"moduleMap":{"Control.Alt":"purescript-control","Control.Alternative":"purescript-control","Control.Applicative":"purescript-prelude","Control.Apply":"purescript-prelude","Control.Biapplicative":"purescript-bifunctors","Control.Biapply":"purescript-bifunctors","Control.Bind":"purescript-prelude","Control.Category":"purescript-prelude","Control.Comonad":"purescript-control","Control.Extend":"purescript-control","Control.Lazy":"purescript-control","Control.Monad":"purescript-prelude","Control.Monad.Gen":"purescript-gen","Control.Monad.Gen.Class":"purescript-gen","Control.Monad.Gen.Common":"purescript-gen","Control.Monad.Rec.Class":"purescript-tailrec","Control.Monad.ST":"purescript-st","Control.Monad.ST.Class":"purescript-st","Control.Monad.ST.Global":"purescript-st","Control.Monad.ST.Internal":"purescript-st","Control.Monad.ST.Ref":"purescript-st","Control.Monad.ST.Uncurried":"purescript-st","Control.MonadPlus":"purescript-control","Control.Plus":"purescript-control","Control.Semigroupoid":"purescript-prelude","Data.Array":"purescript-arrays","Data.Array.NonEmpty":"purescript-arrays","Data.Array.NonEmpty.Internal":"purescript-arrays","Data.Array.Partial":"purescript-arrays","Data.Array.ST":"purescript-arrays","Data.Array.ST.Iterator":"purescript-arrays","Data.Array.ST.Partial":"purescript-arrays","Data.Bifoldable":"purescript-foldable-traversable","Data.Bifunctor":"purescript-bifunctors","Data.Bifunctor.Join":"purescript-bifunctors","Data.Bitraversable":"purescript-foldable-traversable","Data.Boolean":"purescript-prelude","Data.BooleanAlgebra":"purescript-prelude","Data.Bounded":"purescript-prelude","Data.Bounded.Generic":"purescript-prelude","Data.Char":"purescript-strings","Data.Char.Gen":"purescript-strings","Data.CommutativeRing":"purescript-prelude","Data.Comparison":"purescript-contravariant","Data.Const":"purescript-const","Data.Decidable":"purescript-contravariant","Data.Decide":"purescript-contravariant","Data.Distributive":"purescript-distributive","Data.Divide":"purescript-contravariant","Data.Divisible":"purescript-contravariant","Data.DivisionRing":"purescript-prelude","Data.Either":"purescript-either","Data.Either.Inject":"purescript-either","Data.Either.Nested":"purescript-either","Data.Enum":"purescript-enums","Data.Enum.Gen":"purescript-enums","Data.Enum.Generic":"purescript-enums","Data.Eq":"purescript-prelude","Data.Eq.Generic":"purescript-prelude","Data.Equivalence":"purescript-contravariant","Data.EuclideanRing":"purescript-prelude","Data.Exists":"purescript-exists","Data.Field":"purescript-prelude","Data.Foldable":"purescript-foldable-traversable","Data.FoldableWithIndex":"purescript-foldable-traversable","Data.Function":"purescript-prelude","Data.Function.Uncurried":"purescript-functions","Data.Functor":"purescript-prelude","Data.Functor.App":"purescript-functors","Data.Functor.Clown":"purescript-functors","Data.Functor.Compose":"purescript-functors","Data.Functor.Contravariant":"purescript-contravariant","Data.Functor.Coproduct":"purescript-functors","Data.Functor.Coproduct.Inject":"purescript-functors","Data.Functor.Coproduct.Nested":"purescript-functors","Data.Functor.Costar":"purescript-functors","Data.Functor.Flip":"purescript-functors","Data.Functor.Invariant":"purescript-invariant","Data.Functor.Joker":"purescript-functors","Data.Functor.Product":"purescript-functors","Data.Functor.Product.Nested":"purescript-functors","Data.Functor.Product2":"purescript-functors","Data.FunctorWithIndex":"purescript-foldable-traversable","Data.Generic.Rep":"purescript-prelude","Data.HeytingAlgebra":"purescript-prelude","Data.HeytingAlgebra.Generic":"purescript-prelude","Data.Identity":"purescript-identity","Data.Int":"purescript-integers","Data.Int.Bits":"purescript-integers","Data.Lazy":"purescript-lazy","Data.List":"purescript-lists","Data.List.Internal":"purescript-lists","Data.List.Lazy":"purescript-lists","Data.List.Lazy.NonEmpty":"purescript-lists","Data.List.Lazy.Types":"purescript-lists","Data.List.NonEmpty":"purescript-lists","Data.List.Partial":"purescript-lists","Data.List.Types":"purescript-lists","Data.List.ZipList":"purescript-lists","Data.Maybe":"purescript-maybe","Data.Maybe.First":"purescript-maybe","Data.Maybe.Last":"purescript-maybe","Data.Monoid":"purescript-prelude","Data.Monoid.Additive":"purescript-prelude","Data.Monoid.Alternate":"purescript-control","Data.Monoid.Conj":"purescript-prelude","Data.Monoid.Disj":"purescript-prelude","Data.Monoid.Dual":"purescript-prelude","Data.Monoid.Endo":"purescript-prelude","Data.Monoid.Generic":"purescript-prelude","Data.Monoid.Multiplicative":"purescript-prelude","Data.NaturalTransformation":"purescript-prelude","Data.Newtype":"purescript-newtype","Data.NonEmpty":"purescript-nonempty","Data.Number":"purescript-numbers","Data.Number.Approximate":"purescript-numbers","Data.Number.Format":"purescript-numbers","Data.Op":"purescript-contravariant","Data.Ord":"purescript-prelude","Data.Ord.Down":"purescript-orders","Data.Ord.Generic":"purescript-prelude","Data.Ord.Max":"purescript-orders","Data.Ord.Min":"purescript-orders","Data.Ordering":"purescript-prelude","Data.Predicate":"purescript-contravariant","Data.Profunctor":"purescript-profunctor","Data.Profunctor.Choice":"purescript-profunctor","Data.Profunctor.Closed":"purescript-profunctor","Data.Profunctor.Cochoice":"purescript-profunctor","Data.Profunctor.Costrong":"purescript-profunctor","Data.Profunctor.Join":"purescript-profunctor","Data.Profunctor.Split":"purescript-profunctor","Data.Profunctor.Star":"purescript-profunctor","Data.Profunctor.Strong":"purescript-profunctor","Data.Reflectable":"purescript-prelude","Data.Ring":"purescript-prelude","Data.Ring.Generic":"purescript-prelude","Data.Semigroup":"purescript-prelude","Data.Semigroup.First":"purescript-prelude","Data.Semigroup.Foldable":"purescript-foldable-traversable","Data.Semigroup.Generic":"purescript-prelude","Data.Semigroup.Last":"purescript-prelude","Data.Semigroup.Traversable":"purescript-foldable-traversable","Data.Semiring":"purescript-prelude","Data.Semiring.Generic":"purescript-prelude","Data.Show":"purescript-prelude","Data.Show.Generic":"purescript-prelude","Data.String":"purescript-strings","Data.String.CaseInsensitive":"purescript-strings","Data.String.CodePoints":"purescript-strings","Data.String.CodeUnits":"purescript-strings","Data.String.Common":"purescript-strings","Data.String.Gen":"purescript-strings","Data.String.NonEmpty":"purescript-strings","Data.String.NonEmpty.CaseInsensitive":"purescript-strings","Data.String.NonEmpty.CodePoints":"purescript-strings","Data.String.NonEmpty.CodeUnits":"purescript-strings","Data.String.NonEmpty.Internal":"purescript-strings","Data.String.Pattern":"purescript-strings","Data.String.Regex":"purescript-strings","Data.String.Regex.Flags":"purescript-strings","Data.String.Regex.Unsafe":"purescript-strings","Data.String.Unsafe":"purescript-strings","Data.Symbol":"purescript-prelude","Data.Traversable":"purescript-foldable-traversable","Data.Traversable.Accum":"purescript-foldable-traversable","Data.Traversable.Accum.Internal":"purescript-foldable-traversable","Data.TraversableWithIndex":"purescript-foldable-traversable","Data.Tuple":"purescript-tuples","Data.Tuple.Nested":"purescript-tuples","Data.Unfoldable":"purescript-unfoldable","Data.Unfoldable1":"purescript-unfoldable","Data.Unit":"purescript-prelude","Data.Void":"purescript-prelude","Effect":"purescript-effect","Effect.Class":"purescript-effect","Effect.Ref":"purescript-refs","Effect.Uncurried":"purescript-effect","Effect.Unsafe":"purescript-effect","Partial":"purescript-partial","Partial.Unsafe":"purescript-partial","Prelude":"purescript-prelude","Record.Unsafe":"purescript-prelude","Safe.Coerce":"purescript-safe-coerce","Type.Equality":"purescript-type-equality","Type.Proxy":"purescript-prelude","Unsafe.Coerce":"purescript-unsafe-coerce"},"modules":[{"comments":"This module provides basic types and functions for dealing with colors.\n\nColors can be constructed from HSL values, RGB values or Hex strings /\nintegers. In addition, a lot of standardized named colors can be found in\n`Color.Scheme.X11`.\n\nThis module also provides functions to modify colors (e.g. lighten/darken,\nsaturate/desaturate, complementary), to combine colors (mix) and to\nanalyze colors (e.g. brightness, luminance, contrast).\n\nImplementation detail: Colors are represented by their HSL values (hue,\nsaturation, lightness) internally, as this provides more flexibility than\nstoring RGB values. In particular, note that only colors within the sRGB\ngamut can be represented.\n","declarations":[{"children":[{"comments":null,"info":{"declType":"instance","dependencies":[],"type":{"annotation":[],"contents":[{"annotation":[],"contents":[["Data","Show"],"Show"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Color"],"Color"],"tag":"TypeConstructor"}],"tag":"TypeApp"}},"sourceSpan":{"end":[120,19],"name":"/tmp/tmp-2027-ug1HMm7pO0Tc/purescript-colors/src/Color.purs","start":[111,1]},"title":"showColor"},{"comments":null,"info":{"declType":"instance","dependencies":[],"type":{"annotation":[],"contents":[{"annotation":[],"contents":[["Data","Eq"],"Eq"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Color"],"Color"],"tag":"TypeConstructor"}],"tag":"TypeApp"}},"sourceSpan":{"end":[123,22],"name":"/tmp/tmp-2027-ug1HMm7pO0Tc/purescript-colors/src/Color.purs","start":[122,1]},"title":"eqColor"}],"comments":"The representation of a color.\n\nNote:\n- The `Eq` instance compares two `Color`s by comparing their (integer) RGB\n  values. This is different from comparing the HSL values (for example,\n  HSL has many different representations of black (arbitrary hue and\n  saturation values).\n- Colors outside the sRGB gamut which cannot be displayed on a typical\n  computer screen can not be represented by `Color`.\n\n","info":{"dataDeclType":"data","declType":"data","roles":[],"typeArguments":[]},"kind":null,"sourceSpan":{"end":[95,43],"name":"/tmp/tmp-2027-ug1HMm7pO0Tc/purescript-colors/src/Color.purs","start":[95,1]},"title":"Color"},{"children":[{"comments":null,"info":{"arguments":[],"declType":"dataConstructor"},"sourceSpan":{"end":[109,22],"name":"/tmp/tmp-2027-ug1HMm7pO0Tc/purescript-colors/src/Color.purs","start":[109,17]},"title":"RGB"},{"comments":null,"info":{"arguments":[],"declType":"dataConstructor"},"sourceSpan":{"end":[109,28],"name":"/tmp/tmp-2027-ug1HMm7pO0Tc/purescript-colors/src/Color.purs","start":[109,23]},"title":"HSL"},{"comments":null,"info":{"arguments":[],"declType":"dataConstructor"},"sourceSpan":{"end":[109,34],"name":"/tmp/tmp-2027-ug1HMm7pO0Tc/purescript-colors/src/Color.purs","start":[109,29]},"title":"LCh"},{"comments":null,"info":{"arguments":[],"declType":"dataConstructor"},"sourceSpan":{"end":[109,40],"name":"/tmp/tmp-2027-ug1HMm7pO0Tc/purescript-colors/src/Color.purs","start":[109,35]},"title":"Lab"}],"comments":"Definition of a color space.\n\n* `RGB`: red, green, blue\n* `HSL`: hue, saturation, lightness\n* `LCh`: Lightness, chroma, hue\n* `Lab`: Lightness, a, b\n","info":{"dataDeclType":"data","declType":"data","roles":[],"typeArguments":[]},"kind":null,"sourceSpan":{"end":[109,40],"name":"/tmp/tmp-2027-ug1HMm7pO0Tc/purescript-colors/src/Color.purs","start":[109,1]},"title":"ColorSpace"},{"children":[],"comments":"Create a `Color` from integer RGB values between 0 and 255 and a floating\npoint alpha value between 0.0 and 1.0.\n","info":{"declType":"value","type":{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Prim"],"Int"],"tag":"TypeConstructor"}],"tag":"TypeApp"},{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Prim"],"Int"],"tag":"TypeConstructor"}],"tag":"TypeApp"},{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Prim"],"Int"],"tag":"TypeConstructor"}],"tag":"TypeApp"},{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Prim"],"Number"],"tag":"TypeConstructor"}],"tag":"TypeApp"},{"annotation":[],"contents":[["Color"],"Color"],"tag":"TypeConstructor"}],"tag":"TypeApp"}],"tag":"TypeApp"}],"tag":"TypeApp"}],"tag":"TypeApp"}},"kind":null,"sourceSpan":{"end":[131,45],"name":"/tmp/tmp-2027-ug1HMm7pO0Tc/purescript-colors/src/Color.purs","start":[131,1]},"title":"rgba"},{"children":[],"comments":"Create a `Color` from integer RGB values between 0 and 255.\n","info":{"declType":"value","type":{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Prim"],"Int"],"tag":"TypeConstructor"}],"tag":"TypeApp"},{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Prim"],"Int"],"tag":"TypeConstructor"}],"tag":"TypeApp"},{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Prim"],"Int"],"tag":"TypeConstructor"}],"tag":"TypeApp"},{"annotation":[],"contents":[["Color"],"Color"],"tag":"TypeConstructor"}],"tag":"TypeApp"}],"tag":"TypeApp"}],"tag":"TypeApp"}},"kind":null,"sourceSpan":{"end":[165,34],"name":"/tmp/tmp-2027-ug1HMm7pO0Tc/purescript-colors/src/Color.purs","start":[165,1]},"title":"rgb"},{"children":[],"comments":"Create a `Color` from RGB and alpha values between 0.0 and 1.0.\n","info":{"declType":"value","type":{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Prim"],"Number"],"tag":"TypeConstructor"}],"tag":"TypeApp"},{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Prim"],"Number"],"tag":"TypeConstructor"}],"tag":"TypeApp"},{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Prim"],"Number"],"tag":"TypeConstructor"}],"tag":"TypeApp"},{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Prim"],"Number"],"tag":"TypeConstructor"}],"tag":"TypeApp"},{"annotation":[],"contents":[["Color"],"Color"],"tag":"TypeConstructor"}],"tag":"TypeApp"}],"tag":"TypeApp"}],"tag":"TypeApp"}],"tag":"TypeApp"}},"kind":null,"sourceSpan":{"end":[169,55],"name":"/tmp/tmp-2027-ug1HMm7pO0Tc/purescript-colors/src/Color.purs","start":[169,1]},"title":"rgba'"},{"children":[],"comments":"Create a `Color` from RGB values between 0.0 and 1.0.\n","info":{"declType":"value","type":{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Prim"],"Number"],"tag":"TypeConstructor"}],"tag":"TypeApp"},{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Prim"],"Number"],"tag":"TypeConstructor"}],"tag":"TypeApp"},{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Prim"],"Number"],"tag":"TypeConstructor"}],"tag":"TypeApp"},{"annotation":[],"contents":[["Color"],"Color"],"tag":"TypeConstructor"}],"tag":"TypeApp"}],"tag":"TypeApp"}],"tag":"TypeApp"}},"kind":null,"sourceSpan":{"end":[176,44],"name":"/tmp/tmp-2027-ug1HMm7pO0Tc/purescript-colors/src/Color.purs","start":[176,1]},"title":"rgb'"},{"children":[],"comments":"Create a `Color` from Hue, Saturation, Lightness and Alpha values. The\nHue is given in degrees, as a `Number` between 0.0 and 360.0. Saturation,\nLightness and Alpha are numbers between 0.0 and 1.0.\n","info":{"declType":"value","type":{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Prim"],"Number"],"tag":"TypeConstructor"}],"tag":"TypeApp"},{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Prim"],"Number"],"tag":"TypeConstructor"}],"tag":"TypeApp"},{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Prim"],"Number"],"tag":"TypeConstructor"}],"tag":"TypeApp"},{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Prim"],"Number"],"tag":"TypeConstructor"}],"tag":"TypeApp"},{"annotation":[],"contents":[["Color"],"Color"],"tag":"TypeConstructor"}],"tag":"TypeApp"}],"tag":"TypeApp"}],"tag":"TypeApp"}],"tag":"TypeApp"}},"kind":null,"sourceSpan":{"end":[182,54],"name":"/tmp/tmp-2027-ug1HMm7pO0Tc/purescript-colors/src/Color.purs","start":[182,1]},"title":"hsla"},{"children":[],"comments":"Create a `Color` from Hue, Saturation and Lightness values. The Hue is\ngiven in degrees, as a `Number` between 0.0 and 360.0. Both Saturation and\nLightness are numbers between 0.0 and 1.0.\n","info":{"declType":"value","type":{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Prim"],"Number"],"tag":"TypeConstructor"}],"tag":"TypeApp"},{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Prim"],"Number"],"tag":"TypeConstructor"}],"tag":"TypeApp"},{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Prim"],"Number"],"tag":"TypeConstructor"}],"tag":"TypeApp"},{"annotation":[],"contents":[["Color"],"Color"],"tag":"TypeConstructor"}],"tag":"TypeApp"}],"tag":"TypeApp"}],"tag":"TypeApp"}},"kind":null,"sourceSpan":{"end":[192,43],"name":"/tmp/tmp-2027-ug1HMm7pO0Tc/purescript-colors/src/Color.purs","start":[192,1]},"title":"hsl"},{"children":[],"comments":"Create a `Color` from Hue, Saturation, Value and Alpha values. The\nHue is given in degrees, as a `Number` between 0.0 and 360.0. Saturation,\nValue and Alpha are numbers between 0.0 and 1.0.\n","info":{"declType":"value","type":{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Prim"],"Number"],"tag":"TypeConstructor"}],"tag":"TypeApp"},{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Prim"],"Number"],"tag":"TypeConstructor"}],"tag":"TypeApp"},{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Prim"],"Number"],"tag":"TypeConstructor"}],"tag":"TypeApp"},{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Prim"],"Number"],"tag":"TypeConstructor"}],"tag":"TypeApp"},{"annotation":[],"contents":[["Color"],"Color"],"tag":"TypeConstructor"}],"tag":"TypeApp"}],"tag":"TypeApp"}],"tag":"TypeApp"}],"tag":"TypeApp"}},"kind":null,"sourceSpan":{"end":[198,54],"name":"/tmp/tmp-2027-ug1HMm7pO0Tc/purescript-colors/src/Color.purs","start":[198,1]},"title":"hsva"},{"children":[],"comments":"Create a `Color` from Hue, Saturation and Value values. The Hue is\ngiven in degrees, as a `Number` between 0.0 and 360.0. Both Saturation and\nValue are numbers between 0.0 and 1.0.\n","info":{"declType":"value","type":{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Prim"],"Number"],"tag":"TypeConstructor"}],"tag":"TypeApp"},{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Prim"],"Number"],"tag":"TypeConstructor"}],"tag":"TypeApp"},{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Prim"],"Number"],"tag":"TypeConstructor"}],"tag":"TypeApp"},{"annotation":[],"contents":[["Color"],"Color"],"tag":"TypeConstructor"}],"tag":"TypeApp"}],"tag":"TypeApp"}],"tag":"TypeApp"}},"kind":null,"sourceSpan":{"end":[210,43],"name":"/tmp/tmp-2027-ug1HMm7pO0Tc/purescript-colors/src/Color.purs","start":[210,1]},"title":"hsv"},{"children":[],"comments":"Create a `Color` from XYZ coordinates in the CIE 1931 color space. Note\nthat a `Color` always represents a color in the sRGB gamut (colors that\ncan be represented on a typical computer screen) while the XYZ color space\nis bigger. This function will tend to create fully saturated colors at the\nedge of the sRGB gamut if the coordinates lie outside the sRGB range.\n\nSee:\n- https://en.wikipedia.org/wiki/CIE_1931_color_space\n- https://en.wikipedia.org/wiki/SRGB\n","info":{"declType":"value","type":{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Prim"],"Number"],"tag":"TypeConstructor"}],"tag":"TypeApp"},{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Prim"],"Number"],"tag":"TypeConstructor"}],"tag":"TypeApp"},{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Prim"],"Number"],"tag":"TypeConstructor"}],"tag":"TypeApp"},{"annotation":[],"contents":[["Color"],"Color"],"tag":"TypeConstructor"}],"tag":"TypeApp"}],"tag":"TypeApp"}],"tag":"TypeApp"}},"kind":null,"sourceSpan":{"end":[222,43],"name":"/tmp/tmp-2027-ug1HMm7pO0Tc/purescript-colors/src/Color.purs","start":[222,1]},"title":"xyz"},{"children":[],"comments":"Create a `Color` from L, a and b coordinates coordinates in the Lab color\nspace.\nNote: See documentation for `xyz`. The same restrictions apply here.\n\nSee: https://en.wikipedia.org/wiki/Lab_color_space\n","info":{"declType":"value","type":{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Prim"],"Number"],"tag":"TypeConstructor"}],"tag":"TypeApp"},{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Prim"],"Number"],"tag":"TypeConstructor"}],"tag":"TypeApp"},{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Prim"],"Number"],"tag":"TypeConstructor"}],"tag":"TypeApp"},{"annotation":[],"contents":[["Color"],"Color"],"tag":"TypeConstructor"}],"tag":"TypeApp"}],"tag":"TypeApp"}],"tag":"TypeApp"}},"kind":null,"sourceSpan":{"end":[246,43],"name":"/tmp/tmp-2027-ug1HMm7pO0Tc/purescript-colors/src/Color.purs","start":[246,1]},"title":"lab"},{"children":[],"comments":"Create a `Color` from lightness, chroma and hue coordinates in the CIE LCh\ncolor space. This is a cylindrical transform of the Lab color space.\nNote: See documentation for `xyz`. The same restrictions apply here.\n\nSee: https://en.wikipedia.org/wiki/Lab_color_space\n","info":{"declType":"value","type":{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Prim"],"Number"],"tag":"TypeConstructor"}],"tag":"TypeApp"},{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Prim"],"Number"],"tag":"TypeConstructor"}],"tag":"TypeApp"},{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Prim"],"Number"],"tag":"TypeConstructor"}],"tag":"TypeApp"},{"annotation":[],"contents":[["Color"],"Color"],"tag":"TypeConstructor"}],"tag":"TypeApp"}],"tag":"TypeApp"}],"tag":"TypeApp"}},"kind":null,"sourceSpan":{"end":[264,43],"name":"/tmp/tmp-2027-ug1HMm7pO0Tc/purescript-colors/src/Color.purs","start":[264,1]},"title":"lch"},{"children":[],"comments":"Parse a hexadecimal RGB code of the form `#rgb` or `#rrggbb`. The `#`\ncharacter is required. Each hexadecimal digit is of the form `[0-9a-fA-F]`\n(case insensitive). Returns `Nothing` if the string is in a wrong format.\n","info":{"declType":"value","type":{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Prim"],"String"],"tag":"TypeConstructor"}],"tag":"TypeApp"},{"annotation":[],"contents":[{"annotation":[],"contents":[["Data","Maybe"],"Maybe"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Color"],"Color"],"tag":"TypeConstructor"}],"tag":"TypeApp"}],"tag":"TypeApp"}},"kind":null,"sourceSpan":{"end":[274,39],"name":"/tmp/tmp-2027-ug1HMm7pO0Tc/purescript-colors/src/Color.purs","start":[274,1]},"title":"fromHexString"},{"children":[],"comments":"Converts an integer to a color (RGB representation). `0` is black and\n`0xffffff` is white. Values outside this range will be clamped.\n\nThis function is useful if you want to hard-code Hex values. For example:\n\n``` purs\nred = fromInt 0xff0000\n```\n","info":{"declType":"value","type":{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Prim"],"Int"],"tag":"TypeConstructor"}],"tag":"TypeApp"},{"annotation":[],"contents":[["Color"],"Color"],"tag":"TypeConstructor"}],"tag":"TypeApp"}},"kind":null,"sourceSpan":{"end":[312,24],"name":"/tmp/tmp-2027-ug1HMm7pO0Tc/purescript-colors/src/Color.purs","start":[312,1]},"title":"fromInt"},{"children":[],"comments":"Convert a `Color` to its Hue, Saturation, Lightness and Alpha values. See\n`hsla` for the ranges of each channel.\n","info":{"declType":"value","type":{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Color"],"Color"],"tag":"TypeConstructor"}],"tag":"TypeApp"},{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Record"],"tag":"TypeConstructor"},{"annotation":[],"contents":["h",{"annotation":[],"contents":[["Prim"],"Number"],"tag":"TypeConstructor"},{"annotation":[],"contents":["s",{"annotation":[],"contents":[["Prim"],"Number"],"tag":"TypeConstructor"},{"annotation":[],"contents":["l",{"annotation":[],"contents":[["Prim"],"Number"],"tag":"TypeConstructor"},{"annotation":[],"contents":["a",{"annotation":[],"contents":[["Prim"],"Number"],"tag":"TypeConstructor"},{"annotation":[],"tag":"REmpty"}],"tag":"RCons"}],"tag":"RCons"}],"tag":"RCons"}],"tag":"RCons"}],"tag":"TypeApp"}],"tag":"TypeApp"}},"kind":null,"sourceSpan":{"end":[322,74],"name":"/tmp/tmp-2027-ug1HMm7pO0Tc/purescript-colors/src/Color.purs","start":[322,1]},"title":"toHSLA"},{"children":[],"comments":"Convert a `Color` to its Hue, Saturation, Value and Alpha values. See\n`hsva` for the ranges of each channel.\n","info":{"declType":"value","type":{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Color"],"Color"],"tag":"TypeConstructor"}],"tag":"TypeApp"},{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Record"],"tag":"TypeConstructor"},{"annotation":[],"contents":["h",{"annotation":[],"contents":[["Prim"],"Number"],"tag":"TypeConstructor"},{"annotation":[],"contents":["s",{"annotation":[],"contents":[["Prim"],"Number"],"tag":"TypeConstructor"},{"annotation":[],"contents":["v",{"annotation":[],"contents":[["Prim"],"Number"],"tag":"TypeConstructor"},{"annotation":[],"contents":["a",{"annotation":[],"contents":[["Prim"],"Number"],"tag":"TypeConstructor"},{"annotation":[],"tag":"REmpty"}],"tag":"RCons"}],"tag":"RCons"}],"tag":"RCons"}],"tag":"RCons"}],"tag":"TypeApp"}],"tag":"TypeApp"}},"kind":null,"sourceSpan":{"end":[327,74],"name":"/tmp/tmp-2027-ug1HMm7pO0Tc/purescript-colors/src/Color.purs","start":[327,1]},"title":"toHSVA"},{"children":[],"comments":"Convert a `Color` to its red, green, blue and alpha values. The RGB values\nare integers in the range from 0 to 255. The alpha channel is a number\nbetween 0.0 and 1.0.\n","info":{"declType":"value","type":{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Color"],"Color"],"tag":"TypeConstructor"}],"tag":"TypeApp"},{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Record"],"tag":"TypeConstructor"},{"annotation":[],"contents":["r",{"annotation":[],"contents":[["Prim"],"Int"],"tag":"TypeConstructor"},{"annotation":[],"contents":["g",{"annotation":[],"contents":[["Prim"],"Int"],"tag":"TypeConstructor"},{"annotation":[],"contents":["b",{"annotation":[],"contents":[["Prim"],"Int"],"tag":"TypeConstructor"},{"annotation":[],"contents":["a",{"annotation":[],"contents":[["Prim"],"Number"],"tag":"TypeConstructor"},{"annotation":[],"tag":"REmpty"}],"tag":"RCons"}],"tag":"RCons"}],"tag":"RCons"}],"tag":"RCons"}],"tag":"TypeApp"}],"tag":"TypeApp"}},"kind":null,"sourceSpan":{"end":[339,65],"name":"/tmp/tmp-2027-ug1HMm7pO0Tc/purescript-colors/src/Color.purs","start":[339,1]},"title":"toRGBA"},{"children":[],"comments":"Convert a `Color` to its red, green, blue and alpha values. All values\nare numbers in the range from 0.0 to 1.0.\n","info":{"declType":"value","type":{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Color"],"Color"],"tag":"TypeConstructor"}],"tag":"TypeApp"},{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Record"],"tag":"TypeConstructor"},{"annotation":[],"contents":["r",{"annotation":[],"contents":[["Prim"],"Number"],"tag":"TypeConstructor"},{"annotation":[],"contents":["g",{"annotation":[],"contents":[["Prim"],"Number"],"tag":"TypeConstructor"},{"annotation":[],"contents":["b",{"annotation":[],"contents":[["Prim"],"Number"],"tag":"TypeConstructor"},{"annotation":[],"contents":["a",{"annotation":[],"contents":[["Prim"],"Number"],"tag":"TypeConstructor"},{"annotation":[],"tag":"REmpty"}],"tag":"RCons"}],"tag":"RCons"}],"tag":"RCons"}],"tag":"RCons"}],"tag":"TypeApp"}],"tag":"TypeApp"}},"kind":null,"sourceSpan":{"end":[349,75],"name":"/tmp/tmp-2027-ug1HMm7pO0Tc/purescript-colors/src/Color.purs","start":[349,1]},"title":"toRGBA'"},{"children":[],"comments":"Get XYZ coordinates according to the CIE 1931 color space.\n\nSee:\n- https://en.wikipedia.org/wiki/CIE_1931_color_space\n- https://en.wikipedia.org/wiki/SRGB\n","info":{"declType":"value","type":{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Color"],"Color"],"tag":"TypeConstructor"}],"tag":"TypeApp"},{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Record"],"tag":"TypeConstructor"},{"annotation":[],"contents":["x",{"annotation":[],"contents":[["Prim"],"Number"],"tag":"TypeConstructor"},{"annotation":[],"contents":["y",{"annotation":[],"contents":[["Prim"],"Number"],"tag":"TypeConstructor"},{"annotation":[],"contents":["z",{"annotation":[],"contents":[["Prim"],"Number"],"tag":"TypeConstructor"},{"annotation":[],"tag":"REmpty"}],"tag":"RCons"}],"tag":"RCons"}],"tag":"RCons"}],"tag":"TypeApp"}],"tag":"TypeApp"}},"kind":null,"sourceSpan":{"end":[369,60],"name":"/tmp/tmp-2027-ug1HMm7pO0Tc/purescript-colors/src/Color.purs","start":[369,1]},"title":"toXYZ"},{"children":[],"comments":"Get L, a and b coordinates according to the Lab color space.\n\nSee: https://en.wikipedia.org/wiki/Lab_color_space\n","info":{"declType":"value","type":{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Color"],"Color"],"tag":"TypeConstructor"}],"tag":"TypeApp"},{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Record"],"tag":"TypeConstructor"},{"annotation":[],"contents":["l",{"annotation":[],"contents":[["Prim"],"Number"],"tag":"TypeConstructor"},{"annotation":[],"contents":["a",{"annotation":[],"contents":[["Prim"],"Number"],"tag":"TypeConstructor"},{"annotation":[],"contents":["b",{"annotation":[],"contents":[["Prim"],"Number"],"tag":"TypeConstructor"},{"annotation":[],"tag":"REmpty"}],"tag":"RCons"}],"tag":"RCons"}],"tag":"RCons"}],"tag":"TypeApp"}],"tag":"TypeApp"}},"kind":null,"sourceSpan":{"end":[388,60],"name":"/tmp/tmp-2027-ug1HMm7pO0Tc/purescript-colors/src/Color.purs","start":[388,1]},"title":"toLab"},{"children":[],"comments":"Get L, C and h coordinates according to the CIE LCh color space.\n\nSee: https://en.wikipedia.org/wiki/Lab_color_space\n","info":{"declType":"value","type":{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Color"],"Color"],"tag":"TypeConstructor"}],"tag":"TypeApp"},{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Record"],"tag":"TypeConstructor"},{"annotation":[],"contents":["l",{"annotation":[],"contents":[["Prim"],"Number"],"tag":"TypeConstructor"},{"annotation":[],"contents":["c",{"annotation":[],"contents":[["Prim"],"Number"],"tag":"TypeConstructor"},{"annotation":[],"contents":["h",{"annotation":[],"contents":[["Prim"],"Number"],"tag":"TypeConstructor"},{"annotation":[],"tag":"REmpty"}],"tag":"RCons"}],"tag":"RCons"}],"tag":"RCons"}],"tag":"TypeApp"}],"tag":"TypeApp"}},"kind":null,"sourceSpan":{"end":[407,60],"name":"/tmp/tmp-2027-ug1HMm7pO0Tc/purescript-colors/src/Color.purs","start":[407,1]},"title":"toLCh"},{"children":[],"comments":"Return a hexadecimal representation of the color in the forms `#rrggbb`\nor `#rrggbbaa`, where `rr`, `gg`, `bb`, and `aa` refer to hexadecimal\ndigits corresponding to the RGBA channel values between `00` and `ff`. The\nalpha channel is only represented when it has a value less than 100%.\n","info":{"declType":"value","type":{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Color"],"Color"],"tag":"TypeConstructor"}],"tag":"TypeApp"},{"annotation":[],"contents":[["Prim"],"String"],"tag":"TypeConstructor"}],"tag":"TypeApp"}},"kind":null,"sourceSpan":{"end":[425,31],"name":"/tmp/tmp-2027-ug1HMm7pO0Tc/purescript-colors/src/Color.purs","start":[425,1]},"title":"toHexString"},{"children":[],"comments":"A CSS representation of the color in the form `hsl(..)` or `hsla(...)`.\n","info":{"declType":"value","type":{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Color"],"Color"],"tag":"TypeConstructor"}],"tag":"TypeApp"},{"annotation":[],"contents":[["Prim"],"String"],"tag":"TypeConstructor"}],"tag":"TypeApp"}},"kind":null,"sourceSpan":{"end":[440,33],"name":"/tmp/tmp-2027-ug1HMm7pO0Tc/purescript-colors/src/Color.purs","start":[440,1]},"title":"cssStringHSLA"},{"children":[],"comments":"A CSS representation of the color in the form `rgb(..)` or `rgba(...)`.\n","info":{"declType":"value","type":{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Color"],"Color"],"tag":"TypeConstructor"}],"tag":"TypeApp"},{"annotation":[],"contents":[["Prim"],"String"],"tag":"TypeConstructor"}],"tag":"TypeApp"}},"kind":null,"sourceSpan":{"end":[454,33],"name":"/tmp/tmp-2027-ug1HMm7pO0Tc/purescript-colors/src/Color.purs","start":[454,1]},"title":"cssStringRGBA"},{"children":[],"comments":"Pure black.\n","info":{"declType":"value","type":{"annotation":[],"contents":[["Color"],"Color"],"tag":"TypeConstructor"}},"kind":null,"sourceSpan":{"end":[468,15],"name":"/tmp/tmp-2027-ug1HMm7pO0Tc/purescript-colors/src/Color.purs","start":[468,1]},"title":"black"},{"children":[],"comments":"Pure white.\n","info":{"declType":"value","type":{"annotation":[],"contents":[["Color"],"Color"],"tag":"TypeConstructor"}},"kind":null,"sourceSpan":{"end":[472,15],"name":"/tmp/tmp-2027-ug1HMm7pO0Tc/purescript-colors/src/Color.purs","start":[472,1]},"title":"white"},{"children":[],"comments":"Create a gray tone from a lightness values (0.0 is black, 1.0 is white).\n","info":{"declType":"value","type":{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Prim"],"Number"],"tag":"TypeConstructor"}],"tag":"TypeApp"},{"annotation":[],"contents":[["Color"],"Color"],"tag":"TypeConstructor"}],"tag":"TypeApp"}},"kind":null,"sourceSpan":{"end":[476,28],"name":"/tmp/tmp-2027-ug1HMm7pO0Tc/purescript-colors/src/Color.purs","start":[476,1]},"title":"graytone"},{"children":[],"comments":"Rotate the hue of a `Color` by a certain angle (in degrees).\n","info":{"declType":"value","type":{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Prim"],"Number"],"tag":"TypeConstructor"}],"tag":"TypeApp"},{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Color"],"Color"],"tag":"TypeConstructor"}],"tag":"TypeApp"},{"annotation":[],"contents":[["Color"],"Color"],"tag":"TypeConstructor"}],"tag":"TypeApp"}],"tag":"TypeApp"}},"kind":null,"sourceSpan":{"end":[480,38],"name":"/tmp/tmp-2027-ug1HMm7pO0Tc/purescript-colors/src/Color.purs","start":[480,1]},"title":"rotateHue"},{"children":[],"comments":"Get the complementary color (hue rotated by 180°).\n","info":{"declType":"value","type":{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Color"],"Color"],"tag":"TypeConstructor"}],"tag":"TypeApp"},{"annotation":[],"contents":[["Color"],"Color"],"tag":"TypeConstructor"}],"tag":"TypeApp"}},"kind":null,"sourceSpan":{"end":[484,32],"name":"/tmp/tmp-2027-ug1HMm7pO0Tc/purescript-colors/src/Color.purs","start":[484,1]},"title":"complementary"},{"children":[],"comments":"Lighten a color by adding a certain amount (number between -1.0 and 1.0)\nto the lightness channel. If the number is negative, the color is\ndarkened.\n","info":{"declType":"value","type":{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Prim"],"Number"],"tag":"TypeConstructor"}],"tag":"TypeApp"},{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Color"],"Color"],"tag":"TypeConstructor"}],"tag":"TypeApp"},{"annotation":[],"contents":[["Color"],"Color"],"tag":"TypeConstructor"}],"tag":"TypeApp"}],"tag":"TypeApp"}},"kind":null,"sourceSpan":{"end":[490,36],"name":"/tmp/tmp-2027-ug1HMm7pO0Tc/purescript-colors/src/Color.purs","start":[490,1]},"title":"lighten"},{"children":[],"comments":"Darken a color by subtracting a certain amount (number between -1.0 and\n1.0) from the lightness channel. If the number is negative, the color is\nlightened.\n","info":{"declType":"value","type":{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Prim"],"Number"],"tag":"TypeConstructor"}],"tag":"TypeApp"},{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Color"],"Color"],"tag":"TypeConstructor"}],"tag":"TypeApp"},{"annotation":[],"contents":[["Color"],"Color"],"tag":"TypeConstructor"}],"tag":"TypeApp"}],"tag":"TypeApp"}},"kind":null,"sourceSpan":{"end":[496,35],"name":"/tmp/tmp-2027-ug1HMm7pO0Tc/purescript-colors/src/Color.purs","start":[496,1]},"title":"darken"},{"children":[],"comments":"Increase the saturation of a color by adding a certain amount (number\nbetween -1.0 and 1.0) to the saturation channel. If the number is\nnegative, the color is desaturated.\n","info":{"declType":"value","type":{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Prim"],"Number"],"tag":"TypeConstructor"}],"tag":"TypeApp"},{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Color"],"Color"],"tag":"TypeConstructor"}],"tag":"TypeApp"},{"annotation":[],"contents":[["Color"],"Color"],"tag":"TypeConstructor"}],"tag":"TypeApp"}],"tag":"TypeApp"}},"kind":null,"sourceSpan":{"end":[502,37],"name":"/tmp/tmp-2027-ug1HMm7pO0Tc/purescript-colors/src/Color.purs","start":[502,1]},"title":"saturate"},{"children":[],"comments":"Decrease the saturation of a color by subtracting a certain amount (number\nbetween -1.0 and 1.0) from the saturation channel. If the number is\nnegative, the color is saturated.\n","info":{"declType":"value","type":{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Prim"],"Number"],"tag":"TypeConstructor"}],"tag":"TypeApp"},{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Color"],"Color"],"tag":"TypeConstructor"}],"tag":"TypeApp"},{"annotation":[],"contents":[["Color"],"Color"],"tag":"TypeConstructor"}],"tag":"TypeApp"}],"tag":"TypeApp"}},"kind":null,"sourceSpan":{"end":[508,39],"name":"/tmp/tmp-2027-ug1HMm7pO0Tc/purescript-colors/src/Color.purs","start":[508,1]},"title":"desaturate"},{"children":[],"comments":"Convert a color to a gray tone with the same perceived luminance (see\n`luminance`).\n","info":{"declType":"value","type":{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Color"],"Color"],"tag":"TypeConstructor"}],"tag":"TypeApp"},{"annotation":[],"contents":[["Color"],"Color"],"tag":"TypeConstructor"}],"tag":"TypeApp"}},"kind":null,"sourceSpan":{"end":[513,25],"name":"/tmp/tmp-2027-ug1HMm7pO0Tc/purescript-colors/src/Color.purs","start":[513,1]},"title":"toGray"},{"children":[],"comments":"A function that interpolates between two colors. It takes a start color,\nan end color, and a ratio in the interval [0.0, 1.0]. It returns the\nmixed color.\n","info":{"arguments":[],"declType":"typeSynonym","type":{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Color"],"Color"],"tag":"TypeConstructor"}],"tag":"TypeApp"},{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Color"],"Color"],"tag":"TypeConstructor"}],"tag":"TypeApp"},{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Prim"],"Number"],"tag":"TypeConstructor"}],"tag":"TypeApp"},{"annotation":[],"contents":[["Color"],"Color"],"tag":"TypeConstructor"}],"tag":"TypeApp"}],"tag":"TypeApp"}],"tag":"TypeApp"}},"kind":null,"sourceSpan":{"end":[540,54],"name":"/tmp/tmp-2027-ug1HMm7pO0Tc/purescript-colors/src/Color.purs","start":[540,1]},"title":"Interpolator"},{"children":[],"comments":"Mix two colors by linearly interpolating between them in the specified\ncolor space. For the HSL colorspace, the shortest path is chosen along the\ncircle of hue values.\n","info":{"declType":"value","type":{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Color"],"ColorSpace"],"tag":"TypeConstructor"}],"tag":"TypeApp"},{"annotation":[],"contents":[["Color"],"Interpolator"],"tag":"TypeConstructor"}],"tag":"TypeApp"}},"kind":null,"sourceSpan":{"end":[545,34],"name":"/tmp/tmp-2027-ug1HMm7pO0Tc/purescript-colors/src/Color.purs","start":[545,1]},"title":"mix"},{"children":[],"comments":"Mix two colors via Dave Green's [cubehelix](http://www.mrao.cam.ac.uk/~dag/CUBEHELIX/) by\ninterpolating between them. Takes a gamma correction value as an argument and\nreturns an `Interpolator` function.\n\nFor more details see:\n* [d3-plugins/cubehelix](https://github.com/d3/d3-plugins/tree/40f8b3b91e67719f58408732d7ddae94cafa559a/cubehelix#interpolateCubehelix)\n\nPorted from:\n* [d3-plugins/cubehelix/cubehelix.js](https://github.com/d3/d3-plugins/blob/40f8b3b91e67719f58408732d7ddae94cafa559a/cubehelix/cubehelix.js#L13)\n","info":{"declType":"value","type":{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Prim"],"Number"],"tag":"TypeConstructor"}],"tag":"TypeApp"},{"annotation":[],"contents":[["Color"],"Interpolator"],"tag":"TypeConstructor"}],"tag":"TypeApp"}},"kind":null,"sourceSpan":{"end":[589,39],"name":"/tmp/tmp-2027-ug1HMm7pO0Tc/purescript-colors/src/Color.purs","start":[589,1]},"title":"mixCubehelix"},{"children":[],"comments":"The percieved brightness of the color (A number between 0.0 and 1.0).\n\nSee: https://www.w3.org/TR/AERT#color-contrast\n","info":{"declType":"value","type":{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Color"],"Color"],"tag":"TypeConstructor"}],"tag":"TypeApp"},{"annotation":[],"contents":[["Prim"],"Number"],"tag":"TypeConstructor"}],"tag":"TypeApp"}},"kind":null,"sourceSpan":{"end":[616,30],"name":"/tmp/tmp-2027-ug1HMm7pO0Tc/purescript-colors/src/Color.purs","start":[616,1]},"title":"brightness"},{"children":[],"comments":"The relative brightness of a color (normalized to 0.0 for darkest black\nand 1.0 for lightest white), according to the WCAG definition.\n\nSee: https://www.w3.org/TR/2008/REC-WCAG20-20081211/#relativeluminancedef\n","info":{"declType":"value","type":{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Color"],"Color"],"tag":"TypeConstructor"}],"tag":"TypeApp"},{"annotation":[],"contents":[["Prim"],"Number"],"tag":"TypeConstructor"}],"tag":"TypeApp"}},"kind":null,"sourceSpan":{"end":[625,29],"name":"/tmp/tmp-2027-ug1HMm7pO0Tc/purescript-colors/src/Color.purs","start":[625,1]},"title":"luminance"},{"children":[],"comments":"The contrast ratio of two colors. A minimum contrast ratio of 4.5 is\nrecommended to ensure that text is readable on a colored background. The\ncontrast ratio is symmetric on both arguments:\n`contrast c1 c2 == contrast c2 c1`.\n\nSee http://www.w3.org/TR/2008/REC-WCAG20-20081211/#contrast-ratiodef\n","info":{"declType":"value","type":{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Color"],"Color"],"tag":"TypeConstructor"}],"tag":"TypeApp"},{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Color"],"Color"],"tag":"TypeConstructor"}],"tag":"TypeApp"},{"annotation":[],"contents":[["Prim"],"Number"],"tag":"TypeConstructor"}],"tag":"TypeApp"}],"tag":"TypeApp"}},"kind":null,"sourceSpan":{"end":[644,37],"name":"/tmp/tmp-2027-ug1HMm7pO0Tc/purescript-colors/src/Color.purs","start":[644,1]},"title":"contrast"},{"children":[],"comments":"Determine whether a color is perceived as a light color.\n\n``` purs\nisLight c = brightness c > 0.5\n```\n","info":{"declType":"value","type":{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Color"],"Color"],"tag":"TypeConstructor"}],"tag":"TypeApp"},{"annotation":[],"contents":[["Prim"],"Boolean"],"tag":"TypeConstructor"}],"tag":"TypeApp"}},"kind":null,"sourceSpan":{"end":[658,28],"name":"/tmp/tmp-2027-ug1HMm7pO0Tc/purescript-colors/src/Color.purs","start":[658,1]},"title":"isLight"},{"children":[],"comments":"Determine whether text of one color is readable on a background of a\ndifferent color (see `contrast`). This function is symmetric in both\narguments.\n\n``` purs\nisReadable c1 c2 = contrast c1 c2 > 4.5\n```\n","info":{"declType":"value","type":{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Color"],"Color"],"tag":"TypeConstructor"}],"tag":"TypeApp"},{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Color"],"Color"],"tag":"TypeConstructor"}],"tag":"TypeApp"},{"annotation":[],"contents":[["Prim"],"Boolean"],"tag":"TypeConstructor"}],"tag":"TypeApp"}],"tag":"TypeApp"}},"kind":null,"sourceSpan":{"end":[668,40],"name":"/tmp/tmp-2027-ug1HMm7pO0Tc/purescript-colors/src/Color.purs","start":[668,1]},"title":"isReadable"},{"children":[],"comments":"Return a readable foreground text color (either `black` or `white`) for a\ngiven background color.\n","info":{"declType":"value","type":{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Color"],"Color"],"tag":"TypeConstructor"}],"tag":"TypeApp"},{"annotation":[],"contents":[["Color"],"Color"],"tag":"TypeConstructor"}],"tag":"TypeApp"}},"kind":null,"sourceSpan":{"end":[673,28],"name":"/tmp/tmp-2027-ug1HMm7pO0Tc/purescript-colors/src/Color.purs","start":[673,1]},"title":"textColor"},{"children":[],"comments":"Compute the perceived 'distance' between two colors according to the CIE76\ndelta-E standard. A distance below ~2.3 is not noticable.\n\nSee: https://en.wikipedia.org/wiki/Color_difference\n","info":{"declType":"value","type":{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Color"],"Color"],"tag":"TypeConstructor"}],"tag":"TypeApp"},{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Color"],"Color"],"tag":"TypeConstructor"}],"tag":"TypeApp"},{"annotation":[],"contents":[["Prim"],"Number"],"tag":"TypeConstructor"}],"tag":"TypeApp"}],"tag":"TypeApp"}},"kind":null,"sourceSpan":{"end":[682,37],"name":"/tmp/tmp-2027-ug1HMm7pO0Tc/purescript-colors/src/Color.purs","start":[682,1]},"title":"distance"}],"name":"Color","reExports":[]},{"comments":null,"declarations":[{"children":[{"comments":null,"info":{"arguments":[],"declType":"dataConstructor"},"sourceSpan":{"end":[10,26],"name":"/tmp/tmp-2027-ug1HMm7pO0Tc/purescript-colors/src/Color/Blending.purs","start":[10,16]},"title":"Multiply"},{"comments":null,"info":{"arguments":[],"declType":"dataConstructor"},"sourceSpan":{"end":[10,35],"name":"/tmp/tmp-2027-ug1HMm7pO0Tc/purescript-colors/src/Color/Blending.purs","start":[10,27]},"title":"Screen"},{"comments":null,"info":{"arguments":[],"declType":"dataConstructor"},"sourceSpan":{"end":[10,45],"name":"/tmp/tmp-2027-ug1HMm7pO0Tc/purescript-colors/src/Color/Blending.purs","start":[10,36]},"title":"Overlay"}],"comments":null,"info":{"dataDeclType":"data","declType":"data","roles":[],"typeArguments":[]},"kind":null,"sourceSpan":{"end":[10,45],"name":"/tmp/tmp-2027-ug1HMm7pO0Tc/purescript-colors/src/Color/Blending.purs","start":[10,1]},"title":"BlendMode"},{"children":[],"comments":"Blend two colors with a specified blend mode. The first color is the\nbackground color, the second one is the foreground color. The resulting\nalpha value is calculated as arithmetic mean.\n","info":{"declType":"value","type":{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Color","Blending"],"BlendMode"],"tag":"TypeConstructor"}],"tag":"TypeApp"},{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Color"],"Color"],"tag":"TypeConstructor"}],"tag":"TypeApp"},{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Color"],"Color"],"tag":"TypeConstructor"}],"tag":"TypeApp"},{"annotation":[],"contents":[["Color"],"Color"],"tag":"TypeConstructor"}],"tag":"TypeApp"}],"tag":"TypeApp"}],"tag":"TypeApp"}},"kind":null,"sourceSpan":{"end":[23,46],"name":"/tmp/tmp-2027-ug1HMm7pO0Tc/purescript-colors/src/Color/Blending.purs","start":[23,1]},"title":"blend"}],"name":"Color.Blending","reExports":[]},{"comments":"This module defines color scales. A color scale is a continuum of colors\nthat is defined on the closed interval `[0, 1]`. It is defined by the two\ncolors at each endpoint (0 and 1) and possibly additional color stops\nin between. If a color scale is sampled between two color stops, the\nspecified color space is used for linear interpolation (see `mix`).\n","declarations":[{"children":[],"comments":"A point on the color scale.\n","info":{"dataDeclType":"data","declType":"data","roles":[],"typeArguments":[]},"kind":null,"sourceSpan":{"end":[53,40],"name":"/tmp/tmp-2027-ug1HMm7pO0Tc/purescript-colors/src/Color/Scale.purs","start":[53,1]},"title":"ColorStop"},{"children":[],"comments":"Create a color stop from a given `Color` and a number between 0 and 1.\nIf the number is outside this range, it is clamped.\n","info":{"declType":"value","type":{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Color"],"Color"],"tag":"TypeConstructor"}],"tag":"TypeApp"},{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Prim"],"Number"],"tag":"TypeConstructor"}],"tag":"TypeApp"},{"annotation":[],"contents":[["Color","Scale"],"ColorStop"],"tag":"TypeConstructor"}],"tag":"TypeApp"}],"tag":"TypeApp"}},"kind":null,"sourceSpan":{"end":[57,42],"name":"/tmp/tmp-2027-ug1HMm7pO0Tc/purescript-colors/src/Color/Scale.purs","start":[57,1]},"title":"colorStop"},{"children":[],"comments":null,"info":{"declType":"value","type":{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Color","Scale"],"ColorStop"],"tag":"TypeConstructor"}],"tag":"TypeApp"},{"annotation":[],"contents":[["Prim"],"Number"],"tag":"TypeConstructor"}],"tag":"TypeApp"}},"kind":null,"sourceSpan":{"end":[60,33],"name":"/tmp/tmp-2027-ug1HMm7pO0Tc/purescript-colors/src/Color/Scale.purs","start":[60,1]},"title":"stopRatio"},{"children":[],"comments":null,"info":{"declType":"value","type":{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Color","Scale"],"ColorStop"],"tag":"TypeConstructor"}],"tag":"TypeApp"},{"annotation":[],"contents":[["Color"],"Color"],"tag":"TypeConstructor"}],"tag":"TypeApp"}},"kind":null,"sourceSpan":{"end":[63,32],"name":"/tmp/tmp-2027-ug1HMm7pO0Tc/purescript-colors/src/Color/Scale.purs","start":[63,1]},"title":"stopColor"},{"children":[],"comments":"A color scale is represented by a list of `ColorStops` and a `ColorSpace` that is\nused for interpolation between the stops.\n","info":{"dataDeclType":"data","declType":"data","roles":[],"typeArguments":[]},"kind":null,"sourceSpan":{"end":[68,51],"name":"/tmp/tmp-2027-ug1HMm7pO0Tc/purescript-colors/src/Color/Scale.purs","start":[68,1]},"title":"ColorScale"},{"children":[],"comments":"Create a color scale. The color space is used for interpolation between\ndifferent stops. The first `Color` defines the left end (color at ratio\n0.0), the list of stops defines possible intermediate steps and the second\n`Color` argument defines the right end point (color at ratio 1.0).\n","info":{"declType":"value","type":{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Color"],"ColorSpace"],"tag":"TypeConstructor"}],"tag":"TypeApp"},{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Color"],"Color"],"tag":"TypeConstructor"}],"tag":"TypeApp"},{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[{"annotation":[],"contents":[["Data","List","Types"],"List"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Color","Scale"],"ColorStop"],"tag":"TypeConstructor"}],"tag":"TypeApp"}],"tag":"TypeApp"},{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Color"],"Color"],"tag":"TypeConstructor"}],"tag":"TypeApp"},{"annotation":[],"contents":[["Color","Scale"],"ColorScale"],"tag":"TypeConstructor"}],"tag":"TypeApp"}],"tag":"TypeApp"}],"tag":"TypeApp"}],"tag":"TypeApp"}},"kind":null,"sourceSpan":{"end":[79,75],"name":"/tmp/tmp-2027-ug1HMm7pO0Tc/purescript-colors/src/Color/Scale.purs","start":[79,1]},"title":"colorScale"},{"children":[{"comments":null,"info":{"arguments":[{"annotation":[],"contents":[["Color"],"Color"],"tag":"TypeConstructor"},{"annotation":[],"contents":{"annotation":[],"contents":[{"annotation":[],"contents":[["Data","List","Types"],"List"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Color","Scale"],"ColorStop"],"tag":"TypeConstructor"}],"tag":"TypeApp"},"tag":"ParensInType"},{"annotation":[],"contents":[["Color"],"Color"],"tag":"TypeConstructor"}],"declType":"dataConstructor"},"sourceSpan":{"end":[73,29],"name":"/tmp/tmp-2027-ug1HMm7pO0Tc/purescript-colors/src/Color/Scale.purs","start":[73,17]},"title":"ColorStops"}],"comments":"Represents all `ColorStops` in a color scale. The first `Color` defines the left end\n(color at ratio 0.0), the list of stops defines possible intermediate steps\nand the second `Color` argument defines the right end point (color at ratio 1.0).\n","info":{"dataDeclType":"data","declType":"data","roles":[],"typeArguments":[]},"kind":null,"sourceSpan":{"end":[73,58],"name":"/tmp/tmp-2027-ug1HMm7pO0Tc/purescript-colors/src/Color/Scale.purs","start":[73,1]},"title":"ColorStops"},{"children":[],"comments":"Like `combineStops`, but the width of the \"transition zone\" can be specified as the\nfirst argument.\n\nExample:\n\n``` purs\nredToBlue `combineStops epsilon x` orangeToGray\n```\n\nHere, the color at `x` will be orange and color at `x - epsilon` will be blue.\nIf we want the color at `x` to be blue, `combineStops' epsilon (x + epsilon)` could be used.\n","info":{"declType":"value","type":{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Prim"],"Number"],"tag":"TypeConstructor"}],"tag":"TypeApp"},{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Prim"],"Number"],"tag":"TypeConstructor"}],"tag":"TypeApp"},{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Color","Scale"],"ColorStops"],"tag":"TypeConstructor"}],"tag":"TypeApp"},{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Color","Scale"],"ColorStops"],"tag":"TypeConstructor"}],"tag":"TypeApp"},{"annotation":[],"contents":[["Color","Scale"],"ColorStops"],"tag":"TypeConstructor"}],"tag":"TypeApp"}],"tag":"TypeApp"}],"tag":"TypeApp"}],"tag":"TypeApp"}},"kind":null,"sourceSpan":{"end":[105,76],"name":"/tmp/tmp-2027-ug1HMm7pO0Tc/purescript-colors/src/Color/Scale.purs","start":[105,1]},"title":"combineStops'"},{"children":[],"comments":"Concatenates two color scales. The first argument specifies the transition point as\na number between zero and one. The color right at the transition point is the first\ncolor of the second color scale.\n\nExample:\n\n``` purs\nredToBlue `combineStops 0.4` orangeToGray\n```\n","info":{"declType":"value","type":{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Prim"],"Number"],"tag":"TypeConstructor"}],"tag":"TypeApp"},{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Color","Scale"],"ColorStops"],"tag":"TypeConstructor"}],"tag":"TypeApp"},{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Color","Scale"],"ColorStops"],"tag":"TypeConstructor"}],"tag":"TypeApp"},{"annotation":[],"contents":[["Color","Scale"],"ColorStops"],"tag":"TypeConstructor"}],"tag":"TypeApp"}],"tag":"TypeApp"}],"tag":"TypeApp"}},"kind":null,"sourceSpan":{"end":[91,65],"name":"/tmp/tmp-2027-ug1HMm7pO0Tc/purescript-colors/src/Color/Scale.purs","start":[91,1]},"title":"combineStops"},{"children":[],"comments":"Takes `ColorStops` and returns reverses it\n","info":{"declType":"value","type":{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Color","Scale"],"ColorStops"],"tag":"TypeConstructor"}],"tag":"TypeApp"},{"annotation":[],"contents":[["Color","Scale"],"ColorStops"],"tag":"TypeConstructor"}],"tag":"TypeApp"}},"kind":null,"sourceSpan":{"end":[117,41],"name":"/tmp/tmp-2027-ug1HMm7pO0Tc/purescript-colors/src/Color/Scale.purs","start":[117,1]},"title":"reverseStops"},{"children":[],"comments":"Create a uniform color scale from a list of colors that will be evenly\nspaced on the scale.\n","info":{"declType":"value","type":{"annotation":[],"contents":["f",{"annotation":[],"contents":[{"constraintAnn":[],"constraintArgs":[{"annotation":[],"contents":"f","tag":"TypeVar"}],"constraintClass":[["Data","Foldable"],"Foldable"],"constraintData":null,"constraintKindArgs":[]},{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Color"],"ColorSpace"],"tag":"TypeConstructor"}],"tag":"TypeApp"},{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Color"],"Color"],"tag":"TypeConstructor"}],"tag":"TypeApp"},{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[{"annotation":[],"contents":"f","tag":"TypeVar"},{"annotation":[],"contents":[["Color"],"Color"],"tag":"TypeConstructor"}],"tag":"TypeApp"}],"tag":"TypeApp"},{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Color"],"Color"],"tag":"TypeConstructor"}],"tag":"TypeApp"},{"annotation":[],"contents":[["Color","Scale"],"ColorScale"],"tag":"TypeConstructor"}],"tag":"TypeApp"}],"tag":"TypeApp"}],"tag":"TypeApp"}],"tag":"TypeApp"}],"tag":"ConstrainedType"},null],"tag":"ForAll"}},"kind":null,"sourceSpan":{"end":[126,94],"name":"/tmp/tmp-2027-ug1HMm7pO0Tc/purescript-colors/src/Color/Scale.purs","start":[126,1]},"title":"uniformScale"},{"children":[],"comments":"Create `ColorStops` from a list of colors such that they will be evenly\nspaced on the scale.\n","info":{"declType":"value","type":{"annotation":[],"contents":["f",{"annotation":[],"contents":[{"constraintAnn":[],"constraintArgs":[{"annotation":[],"contents":"f","tag":"TypeVar"}],"constraintClass":[["Data","Foldable"],"Foldable"],"constraintData":null,"constraintKindArgs":[]},{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Color"],"Color"],"tag":"TypeConstructor"}],"tag":"TypeApp"},{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[{"annotation":[],"contents":"f","tag":"TypeVar"},{"annotation":[],"contents":[["Color"],"Color"],"tag":"TypeConstructor"}],"tag":"TypeApp"}],"tag":"TypeApp"},{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Color"],"Color"],"tag":"TypeConstructor"}],"tag":"TypeApp"},{"annotation":[],"contents":[["Color","Scale"],"ColorStops"],"tag":"TypeConstructor"}],"tag":"TypeApp"}],"tag":"TypeApp"}],"tag":"TypeApp"}],"tag":"ConstrainedType"},null],"tag":"ForAll"}},"kind":null,"sourceSpan":{"end":[131,81],"name":"/tmp/tmp-2027-ug1HMm7pO0Tc/purescript-colors/src/Color/Scale.purs","start":[131,1]},"title":"uniformScale'"},{"children":[],"comments":"Add a stop to a color scale.\n","info":{"declType":"value","type":{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Color","Scale"],"ColorScale"],"tag":"TypeConstructor"}],"tag":"TypeApp"},{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Color"],"Color"],"tag":"TypeConstructor"}],"tag":"TypeApp"},{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Prim"],"Number"],"tag":"TypeConstructor"}],"tag":"TypeApp"},{"annotation":[],"contents":[["Color","Scale"],"ColorScale"],"tag":"TypeConstructor"}],"tag":"TypeApp"}],"tag":"TypeApp"}],"tag":"TypeApp"}},"kind":null,"sourceSpan":{"end":[141,55],"name":"/tmp/tmp-2027-ug1HMm7pO0Tc/purescript-colors/src/Color/Scale.purs","start":[141,1]},"title":"addStop"},{"children":[],"comments":"Add a stop to a list of `ColorStops`.\n","info":{"declType":"value","type":{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Color","Scale"],"ColorStops"],"tag":"TypeConstructor"}],"tag":"TypeApp"},{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Color"],"Color"],"tag":"TypeConstructor"}],"tag":"TypeApp"},{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Prim"],"Number"],"tag":"TypeConstructor"}],"tag":"TypeApp"},{"annotation":[],"contents":[["Color","Scale"],"ColorStops"],"tag":"TypeConstructor"}],"tag":"TypeApp"}],"tag":"TypeApp"}],"tag":"TypeApp"}},"kind":null,"sourceSpan":{"end":[145,56],"name":"/tmp/tmp-2027-ug1HMm7pO0Tc/purescript-colors/src/Color/Scale.purs","start":[145,1]},"title":"addStop'"},{"children":[],"comments":"Get the color at a specific point on the color scale by linearly\ninterpolating between its colors (see `mix` and `mkSimpleSampler`).\n","info":{"declType":"value","type":{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Color","Scale"],"ColorScale"],"tag":"TypeConstructor"}],"tag":"TypeApp"},{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Prim"],"Number"],"tag":"TypeConstructor"}],"tag":"TypeApp"},{"annotation":[],"contents":[["Color"],"Color"],"tag":"TypeConstructor"}],"tag":"TypeApp"}],"tag":"TypeApp"}},"kind":null,"sourceSpan":{"end":[153,40],"name":"/tmp/tmp-2027-ug1HMm7pO0Tc/purescript-colors/src/Color/Scale.purs","start":[153,1]},"title":"sample"},{"children":[],"comments":"Get the color at a specific point on the color scale, using the cubehelix\ninterpolation  (see `mixCubehelix` and `mkSimpleSampler`).\n","info":{"declType":"value","type":{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Color","Scale"],"ColorStops"],"tag":"TypeConstructor"}],"tag":"TypeApp"},{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Prim"],"Number"],"tag":"TypeConstructor"}],"tag":"TypeApp"},{"annotation":[],"contents":[["Color"],"Color"],"tag":"TypeConstructor"}],"tag":"TypeApp"}],"tag":"TypeApp"}},"kind":null,"sourceSpan":{"end":[158,49],"name":"/tmp/tmp-2027-ug1HMm7pO0Tc/purescript-colors/src/Color/Scale.purs","start":[158,1]},"title":"cubehelixSample"},{"children":[],"comments":"Get the color at a specific point on the color scale (number between 0 and\n1). If the number is smaller than 0, the color at 0 is returned. If the\nnumber is larger than 1, the color at 1 is returned.\n","info":{"declType":"value","type":{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Color"],"Interpolator"],"tag":"TypeConstructor"}],"tag":"TypeApp"},{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Color","Scale"],"ColorStops"],"tag":"TypeConstructor"}],"tag":"TypeApp"},{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Prim"],"Number"],"tag":"TypeConstructor"}],"tag":"TypeApp"},{"annotation":[],"contents":[["Color"],"Color"],"tag":"TypeConstructor"}],"tag":"TypeApp"}],"tag":"TypeApp"}],"tag":"TypeApp"}},"kind":null,"sourceSpan":{"end":[164,65],"name":"/tmp/tmp-2027-ug1HMm7pO0Tc/purescript-colors/src/Color/Scale.purs","start":[164,1]},"title":"mkSimpleSampler"},{"children":[],"comments":"A list of colors that is sampled from a color scale. The number of colors\ncan be specified.\n","info":{"declType":"value","type":{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Color","Scale"],"ColorScale"],"tag":"TypeConstructor"}],"tag":"TypeApp"},{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Prim"],"Int"],"tag":"TypeConstructor"}],"tag":"TypeApp"},{"annotation":[],"contents":[{"annotation":[],"contents":[["Data","List","Types"],"List"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Color"],"Color"],"tag":"TypeConstructor"}],"tag":"TypeApp"}],"tag":"TypeApp"}],"tag":"TypeApp"}},"kind":null,"sourceSpan":{"end":[179,42],"name":"/tmp/tmp-2027-ug1HMm7pO0Tc/purescript-colors/src/Color/Scale.purs","start":[179,1]},"title":"colors"},{"children":[],"comments":"Takes a sampling function and returns a list of colors that is sampled via\nthat function. The number of colors can be specified.\n","info":{"declType":"value","type":{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Prim"],"Number"],"tag":"TypeConstructor"}],"tag":"TypeApp"},{"annotation":[],"contents":[["Color"],"Color"],"tag":"TypeConstructor"}],"tag":"TypeApp"},"tag":"ParensInType"}],"tag":"TypeApp"},{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Prim"],"Int"],"tag":"TypeConstructor"}],"tag":"TypeApp"},{"annotation":[],"contents":[{"annotation":[],"contents":[["Data","List","Types"],"List"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Color"],"Color"],"tag":"TypeConstructor"}],"tag":"TypeApp"}],"tag":"TypeApp"}],"tag":"TypeApp"}},"kind":null,"sourceSpan":{"end":[184,50],"name":"/tmp/tmp-2027-ug1HMm7pO0Tc/purescript-colors/src/Color/Scale.purs","start":[184,1]},"title":"colors'"},{"children":[],"comments":"Modify the color scale by applying the given function to each color stop.\nThe first argument is the position of the color stop.\n","info":{"declType":"value","type":{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Prim"],"Number"],"tag":"TypeConstructor"}],"tag":"TypeApp"},{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Color"],"Color"],"tag":"TypeConstructor"}],"tag":"TypeApp"},{"annotation":[],"contents":[["Color"],"Color"],"tag":"TypeConstructor"}],"tag":"TypeApp"}],"tag":"TypeApp"},"tag":"ParensInType"}],"tag":"TypeApp"},{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Color","Scale"],"ColorScale"],"tag":"TypeConstructor"}],"tag":"TypeApp"},{"annotation":[],"contents":[["Color","Scale"],"ColorScale"],"tag":"TypeConstructor"}],"tag":"TypeApp"}],"tag":"TypeApp"}},"kind":null,"sourceSpan":{"end":[193,65],"name":"/tmp/tmp-2027-ug1HMm7pO0Tc/purescript-colors/src/Color/Scale.purs","start":[193,1]},"title":"modify"},{"children":[],"comments":"Modify a list of  `ColorStops` by applying the given function to each color\nstop. The first argument is the position of the color stop.\n","info":{"declType":"value","type":{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Prim"],"Number"],"tag":"TypeConstructor"}],"tag":"TypeApp"},{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Color"],"Color"],"tag":"TypeConstructor"}],"tag":"TypeApp"},{"annotation":[],"contents":[["Color"],"Color"],"tag":"TypeConstructor"}],"tag":"TypeApp"}],"tag":"TypeApp"},"tag":"ParensInType"}],"tag":"TypeApp"},{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Color","Scale"],"ColorStops"],"tag":"TypeConstructor"}],"tag":"TypeApp"},{"annotation":[],"contents":[["Color","Scale"],"ColorStops"],"tag":"TypeConstructor"}],"tag":"TypeApp"}],"tag":"TypeApp"}},"kind":null,"sourceSpan":{"end":[198,66],"name":"/tmp/tmp-2027-ug1HMm7pO0Tc/purescript-colors/src/Color/Scale.purs","start":[198,1]},"title":"modify'"},{"children":[],"comments":"A scale of colors from black to white.\n","info":{"declType":"value","type":{"annotation":[],"contents":[["Color","Scale"],"ColorScale"],"tag":"TypeConstructor"}},"kind":null,"sourceSpan":{"end":[205,24],"name":"/tmp/tmp-2027-ug1HMm7pO0Tc/purescript-colors/src/Color/Scale.purs","start":[205,1]},"title":"grayscale"},{"children":[],"comments":"A color scale that represents 'hot' colors.\n","info":{"declType":"value","type":{"annotation":[],"contents":[["Color","Scale"],"ColorScale"],"tag":"TypeConstructor"}},"kind":null,"sourceSpan":{"end":[249,18],"name":"/tmp/tmp-2027-ug1HMm7pO0Tc/purescript-colors/src/Color/Scale.purs","start":[249,1]},"title":"hot"},{"children":[],"comments":"A color scale that represents 'cool' colors.\n","info":{"declType":"value","type":{"annotation":[],"contents":[["Color","Scale"],"ColorScale"],"tag":"TypeConstructor"}},"kind":null,"sourceSpan":{"end":[253,19],"name":"/tmp/tmp-2027-ug1HMm7pO0Tc/purescript-colors/src/Color/Scale.purs","start":[253,1]},"title":"cool"},{"children":[],"comments":"A spectrum of fully saturated hues (HSL color space).\n","info":{"declType":"value","type":{"annotation":[],"contents":[["Color","Scale"],"ColorScale"],"tag":"TypeConstructor"}},"kind":null,"sourceSpan":{"end":[209,23],"name":"/tmp/tmp-2027-ug1HMm7pO0Tc/purescript-colors/src/Color/Scale.purs","start":[209,1]},"title":"spectrum"},{"children":[],"comments":"A perceptually-uniform spectrum of all hues (LCh color space).\n","info":{"declType":"value","type":{"annotation":[],"contents":[["Color","Scale"],"ColorScale"],"tag":"TypeConstructor"}},"kind":null,"sourceSpan":{"end":[219,26],"name":"/tmp/tmp-2027-ug1HMm7pO0Tc/purescript-colors/src/Color/Scale.purs","start":[219,1]},"title":"spectrumLCh"},{"children":[],"comments":"A perceptually-uniform, diverging color scale from blue to red, similar to\nthe ColorBrewer scale 'RdBu'.\n","info":{"declType":"value","type":{"annotation":[],"contents":[["Color","Scale"],"ColorScale"],"tag":"TypeConstructor"}},"kind":null,"sourceSpan":{"end":[232,24],"name":"/tmp/tmp-2027-ug1HMm7pO0Tc/purescript-colors/src/Color/Scale.purs","start":[232,1]},"title":"blueToRed"},{"children":[],"comments":"A perceptually-uniform, multi-hue color scale from yellow to red, similar\nto the ColorBrewer scale YlOrRd.\n","info":{"declType":"value","type":{"annotation":[],"contents":[["Color","Scale"],"ColorScale"],"tag":"TypeConstructor"}},"kind":null,"sourceSpan":{"end":[241,26],"name":"/tmp/tmp-2027-ug1HMm7pO0Tc/purescript-colors/src/Color/Scale.purs","start":[241,1]},"title":"yellowToRed"},{"children":[],"comments":"The standard [cubehelix](http://www.mrao.cam.ac.uk/~dag/CUBEHELIX/) color\nscale.\n","info":{"declType":"value","type":{"annotation":[],"contents":[["Color","Scale"],"ColorScale"],"tag":"TypeConstructor"}},"kind":null,"sourceSpan":{"end":[258,24],"name":"/tmp/tmp-2027-ug1HMm7pO0Tc/purescript-colors/src/Color/Scale.purs","start":[258,1]},"title":"cubehelix"},{"children":[],"comments":"Takes number of stops `ColorStops` should contain, function to generate\nmissing colors and `ColorStops` itself.\n","info":{"declType":"value","type":{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Prim"],"Int"],"tag":"TypeConstructor"}],"tag":"TypeApp"},{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Color","Scale"],"ColorStops"],"tag":"TypeConstructor"}],"tag":"TypeApp"},{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Prim"],"Number"],"tag":"TypeConstructor"}],"tag":"TypeApp"},{"annotation":[],"contents":[["Color"],"Color"],"tag":"TypeConstructor"}],"tag":"TypeApp"}],"tag":"TypeApp"},"tag":"ParensInType"}],"tag":"TypeApp"},{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Color","Scale"],"ColorStops"],"tag":"TypeConstructor"}],"tag":"TypeApp"},{"annotation":[],"contents":[["Color","Scale"],"ColorStops"],"tag":"TypeConstructor"}],"tag":"TypeApp"}],"tag":"TypeApp"}],"tag":"TypeApp"}},"kind":null,"sourceSpan":{"end":[267,84],"name":"/tmp/tmp-2027-ug1HMm7pO0Tc/purescript-colors/src/Color/Scale.purs","start":[267,1]},"title":"minColorStops"},{"children":[],"comments":"A CSS representation of the color scale in the form of a comma-separated\nlist of color stops. This list can be used in a `linear-gradient` or\na similar construct.\n\nNote that CSS uses the RGB space for color interpolation. Consequently, if\nthe color scale is in RGB mode, this is just a list of all defined color\nstops.\n\nFor other color spaces, the color scale is sampled at (at least) 10\ndifferent points. This should give a reasonable approximation to the true\ngradient in the specified color space.\n","info":{"declType":"value","type":{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Color","Scale"],"ColorScale"],"tag":"TypeConstructor"}],"tag":"TypeApp"},{"annotation":[],"contents":[["Prim"],"String"],"tag":"TypeConstructor"}],"tag":"TypeApp"}},"kind":null,"sourceSpan":{"end":[290,38],"name":"/tmp/tmp-2027-ug1HMm7pO0Tc/purescript-colors/src/Color/Scale.purs","start":[290,1]},"title":"cssColorStops"},{"children":[],"comments":"Underling function of `cssColorStops`.\n","info":{"declType":"value","type":{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Color","Scale"],"ColorStops"],"tag":"TypeConstructor"}],"tag":"TypeApp"},{"annotation":[],"contents":[["Prim"],"String"],"tag":"TypeConstructor"}],"tag":"TypeApp"}},"kind":null,"sourceSpan":{"end":[295,41],"name":"/tmp/tmp-2027-ug1HMm7pO0Tc/purescript-colors/src/Color/Scale.purs","start":[295,1]},"title":"cssColorStopsRGB"}],"name":"Color.Scale","reExports":[]}],"packageMeta":{"dependencies":{"purescript-arrays":">=7.0.0 <8.0.0","purescript-integers":">=6.0.0 <7.0.0","purescript-lists":">=7.0.0 <8.0.0","purescript-numbers":">=9.0.0 <10.0.0","purescript-partial":">=4.0.0 <5.0.0","purescript-strings":">=6.0.0 <7.0.0"},"homepage":"https://github.com/purescript-contrib/purescript-colors.git","license":["MIT"],"name":"purescript-colors","repository":{"type":"git","url":"https://github.com/purescript-contrib/purescript-colors.git"}},"resolvedDependencies":{"purescript-arrays":"7.2.1","purescript-bifunctors":"6.0.0","purescript-const":"6.0.0","purescript-contravariant":"6.0.0","purescript-control":"6.0.0","purescript-distributive":"6.0.0","purescript-effect":"4.0.0","purescript-either":"6.1.0","purescript-enums":"6.0.1","purescript-exists":"6.0.0","purescript-foldable-traversable":"6.0.0","purescript-functions":"6.0.0","purescript-functors":"5.0.0","purescript-gen":"4.0.0","purescript-identity":"6.0.0","purescript-integers":"6.0.0","purescript-invariant":"6.0.0","purescript-lazy":"6.0.0","purescript-lists":"7.0.0","purescript-maybe":"6.0.0","purescript-newtype":"5.0.0","purescript-nonempty":"7.0.0","purescript-numbers":"9.0.1","purescript-orders":"6.0.0","purescript-partial":"4.0.0","purescript-prelude":"6.0.1","purescript-profunctor":"6.0.0","purescript-refs":"6.0.0","purescript-safe-coerce":"2.0.0","purescript-st":"6.2.0","purescript-strings":"6.0.1","purescript-tailrec":"6.1.0","purescript-tuples":"7.0.0","purescript-type-equality":"4.0.1","purescript-unfoldable":"6.0.0","purescript-unsafe-coerce":"6.0.0"},"tagTime":"2022-04-27T21:52:32+0000","uploader":"pacchettibotti","version":"7.0.0","versionTag":"v7.0.0"}