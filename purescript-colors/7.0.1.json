{"uploader":"JordanMartinez","packageMeta":{"repository":{"url":"https://github.com/purescript-contrib/purescript-colors.git","type":"git"},"ignore":["**/.*","bower_components","html","output","test"],"devDependencies":{"purescript-assert":"^6.0.0"},"dependencies":{"purescript-arrays":"^7.0.0","purescript-integers":"^6.0.0","purescript-numbers":"^9.0.0","purescript-partial":"^4.0.0","purescript-strings":"^6.0.0","purescript-lists":"^7.0.0"},"name":"purescript-colors","license":["MIT"]},"tagTime":"2022-04-27T22:03:43+0000","modules":[{"reExports":[],"name":"Color","comments":"This module provides basic types and functions for dealing with colors.\n\nColors can be constructed from HSL values, RGB values or Hex strings /\nintegers. In addition, a lot of standardized named colors can be found in\n`Color.Scheme.X11`.\n\nThis module also provides functions to modify colors (e.g. lighten/darken,\nsaturate/desaturate, complementary), to combine colors (mix) and to\nanalyze colors (e.g. brightness, luminance, contrast).\n\nImplementation detail: Colors are represented by their HSL values (hue,\nsaturation, lightness) internally, as this provides more flexibility than\nstoring RGB values. In particular, note that only colors within the sRGB\ngamut can be represented.\n","declarations":[{"kind":null,"children":[{"comments":null,"title":"showColor","info":{"declType":"instance","dependencies":[],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Show"],"Show"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Color"],"Color"]}]}},"sourceSpan":{"start":[111,1],"name":"/home/jordan/Programming/ps-libs/lib/colors/src/Color.purs","end":[120,19]}},{"comments":null,"title":"eqColor","info":{"declType":"instance","dependencies":[],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Eq"],"Eq"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Color"],"Color"]}]}},"sourceSpan":{"start":[122,1],"name":"/home/jordan/Programming/ps-libs/lib/colors/src/Color.purs","end":[123,22]}}],"comments":"The representation of a color.\n\nNote:\n- The `Eq` instance compares two `Color`s by comparing their (integer) RGB\n  values. This is different from comparing the HSL values (for example,\n  HSL has many different representations of black (arbitrary hue and\n  saturation values).\n- Colors outside the sRGB gamut which cannot be displayed on a typical\n  computer screen can not be represented by `Color`.\n\n","title":"Color","info":{"declType":"data","dataDeclType":"data","typeArguments":[]},"sourceSpan":{"start":[95,1],"name":"/home/jordan/Programming/ps-libs/lib/colors/src/Color.purs","end":[95,43]}},{"kind":null,"children":[{"comments":null,"title":"RGB","info":{"arguments":[],"declType":"dataConstructor"},"sourceSpan":{"start":[109,17],"name":"/home/jordan/Programming/ps-libs/lib/colors/src/Color.purs","end":[109,22]}},{"comments":null,"title":"HSL","info":{"arguments":[],"declType":"dataConstructor"},"sourceSpan":{"start":[109,23],"name":"/home/jordan/Programming/ps-libs/lib/colors/src/Color.purs","end":[109,28]}},{"comments":null,"title":"LCh","info":{"arguments":[],"declType":"dataConstructor"},"sourceSpan":{"start":[109,29],"name":"/home/jordan/Programming/ps-libs/lib/colors/src/Color.purs","end":[109,34]}},{"comments":null,"title":"Lab","info":{"arguments":[],"declType":"dataConstructor"},"sourceSpan":{"start":[109,35],"name":"/home/jordan/Programming/ps-libs/lib/colors/src/Color.purs","end":[109,40]}}],"comments":"Definition of a color space.\n\n* `RGB`: red, green, blue\n* `HSL`: hue, saturation, lightness\n* `LCh`: Lightness, chroma, hue\n* `Lab`: Lightness, a, b\n","title":"ColorSpace","info":{"declType":"data","dataDeclType":"data","typeArguments":[]},"sourceSpan":{"start":[109,1],"name":"/home/jordan/Programming/ps-libs/lib/colors/src/Color.purs","end":[109,40]}},{"kind":null,"children":[],"comments":"Create a `Color` from integer RGB values between 0 and 255 and a floating\npoint alpha value between 0.0 and 1.0.\n","title":"rgba","info":{"declType":"value","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Number"]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Color"],"Color"]}]}]}]}]}},"sourceSpan":{"start":[131,1],"name":"/home/jordan/Programming/ps-libs/lib/colors/src/Color.purs","end":[131,45]}},{"kind":null,"children":[],"comments":"Create a `Color` from integer RGB values between 0 and 255.\n","title":"rgb","info":{"declType":"value","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Color"],"Color"]}]}]}]}},"sourceSpan":{"start":[165,1],"name":"/home/jordan/Programming/ps-libs/lib/colors/src/Color.purs","end":[165,34]}},{"kind":null,"children":[],"comments":"Create a `Color` from RGB and alpha values between 0.0 and 1.0.\n","title":"rgba'","info":{"declType":"value","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Number"]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Number"]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Number"]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Number"]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Color"],"Color"]}]}]}]}]}},"sourceSpan":{"start":[169,1],"name":"/home/jordan/Programming/ps-libs/lib/colors/src/Color.purs","end":[169,55]}},{"kind":null,"children":[],"comments":"Create a `Color` from RGB values between 0.0 and 1.0.\n","title":"rgb'","info":{"declType":"value","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Number"]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Number"]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Number"]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Color"],"Color"]}]}]}]}},"sourceSpan":{"start":[176,1],"name":"/home/jordan/Programming/ps-libs/lib/colors/src/Color.purs","end":[176,44]}},{"kind":null,"children":[],"comments":"Create a `Color` from Hue, Saturation, Lightness and Alpha values. The\nHue is given in degrees, as a `Number` between 0.0 and 360.0. Saturation,\nLightness and Alpha are numbers between 0.0 and 1.0.\n","title":"hsla","info":{"declType":"value","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Number"]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Number"]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Number"]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Number"]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Color"],"Color"]}]}]}]}]}},"sourceSpan":{"start":[182,1],"name":"/home/jordan/Programming/ps-libs/lib/colors/src/Color.purs","end":[182,54]}},{"kind":null,"children":[],"comments":"Create a `Color` from Hue, Saturation and Lightness values. The Hue is\ngiven in degrees, as a `Number` between 0.0 and 360.0. Both Saturation and\nLightness are numbers between 0.0 and 1.0.\n","title":"hsl","info":{"declType":"value","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Number"]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Number"]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Number"]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Color"],"Color"]}]}]}]}},"sourceSpan":{"start":[192,1],"name":"/home/jordan/Programming/ps-libs/lib/colors/src/Color.purs","end":[192,43]}},{"kind":null,"children":[],"comments":"Create a `Color` from Hue, Saturation, Value and Alpha values. The\nHue is given in degrees, as a `Number` between 0.0 and 360.0. Saturation,\nValue and Alpha are numbers between 0.0 and 1.0.\n","title":"hsva","info":{"declType":"value","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Number"]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Number"]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Number"]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Number"]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Color"],"Color"]}]}]}]}]}},"sourceSpan":{"start":[198,1],"name":"/home/jordan/Programming/ps-libs/lib/colors/src/Color.purs","end":[198,54]}},{"kind":null,"children":[],"comments":"Create a `Color` from Hue, Saturation and Value values. The Hue is\ngiven in degrees, as a `Number` between 0.0 and 360.0. Both Saturation and\nValue are numbers between 0.0 and 1.0.\n","title":"hsv","info":{"declType":"value","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Number"]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Number"]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Number"]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Color"],"Color"]}]}]}]}},"sourceSpan":{"start":[210,1],"name":"/home/jordan/Programming/ps-libs/lib/colors/src/Color.purs","end":[210,43]}},{"kind":null,"children":[],"comments":"Create a `Color` from XYZ coordinates in the CIE 1931 color space. Note\nthat a `Color` always represents a color in the sRGB gamut (colors that\ncan be represented on a typical computer screen) while the XYZ color space\nis bigger. This function will tend to create fully saturated colors at the\nedge of the sRGB gamut if the coordinates lie outside the sRGB range.\n\nSee:\n- https://en.wikipedia.org/wiki/CIE_1931_color_space\n- https://en.wikipedia.org/wiki/SRGB\n","title":"xyz","info":{"declType":"value","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Number"]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Number"]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Number"]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Color"],"Color"]}]}]}]}},"sourceSpan":{"start":[222,1],"name":"/home/jordan/Programming/ps-libs/lib/colors/src/Color.purs","end":[222,43]}},{"kind":null,"children":[],"comments":"Create a `Color` from L, a and b coordinates coordinates in the Lab color\nspace.\nNote: See documentation for `xyz`. The same restrictions apply here.\n\nSee: https://en.wikipedia.org/wiki/Lab_color_space\n","title":"lab","info":{"declType":"value","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Number"]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Number"]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Number"]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Color"],"Color"]}]}]}]}},"sourceSpan":{"start":[246,1],"name":"/home/jordan/Programming/ps-libs/lib/colors/src/Color.purs","end":[246,43]}},{"kind":null,"children":[],"comments":"Create a `Color` from lightness, chroma and hue coordinates in the CIE LCh\ncolor space. This is a cylindrical transform of the Lab color space.\nNote: See documentation for `xyz`. The same restrictions apply here.\n\nSee: https://en.wikipedia.org/wiki/Lab_color_space\n","title":"lch","info":{"declType":"value","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Number"]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Number"]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Number"]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Color"],"Color"]}]}]}]}},"sourceSpan":{"start":[264,1],"name":"/home/jordan/Programming/ps-libs/lib/colors/src/Color.purs","end":[264,43]}},{"kind":null,"children":[],"comments":"Parse a hexadecimal RGB code of the form `#rgb` or `#rrggbb`. The `#`\ncharacter is required. Each hexadecimal digit is of the form `[0-9a-fA-F]`\n(case insensitive). Returns `Nothing` if the string is in a wrong format.\n","title":"fromHexString","info":{"declType":"value","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Color"],"Color"]}]}]}},"sourceSpan":{"start":[274,1],"name":"/home/jordan/Programming/ps-libs/lib/colors/src/Color.purs","end":[274,39]}},{"kind":null,"children":[],"comments":"Converts an integer to a color (RGB representation). `0` is black and\n`0xffffff` is white. Values outside this range will be clamped.\n\nThis function is useful if you want to hard-code Hex values. For example:\n\n``` purs\nred = fromInt 0xff0000\n```\n","title":"fromInt","info":{"declType":"value","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Color"],"Color"]}]}},"sourceSpan":{"start":[312,1],"name":"/home/jordan/Programming/ps-libs/lib/colors/src/Color.purs","end":[312,24]}},{"kind":null,"children":[],"comments":"Convert a `Color` to its Hue, Saturation, Lightness and Alpha values. See\n`hsla` for the ranges of each channel.\n","title":"toHSLA","info":{"declType":"value","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Color"],"Color"]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"annotation":[],"tag":"RCons","contents":["h",{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Number"]},{"annotation":[],"tag":"RCons","contents":["s",{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Number"]},{"annotation":[],"tag":"RCons","contents":["l",{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Number"]},{"annotation":[],"tag":"RCons","contents":["a",{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Number"]},{"annotation":[],"tag":"REmpty"}]}]}]}]}]}]}},"sourceSpan":{"start":[322,1],"name":"/home/jordan/Programming/ps-libs/lib/colors/src/Color.purs","end":[322,74]}},{"kind":null,"children":[],"comments":"Convert a `Color` to its Hue, Saturation, Value and Alpha values. See\n`hsva` for the ranges of each channel.\n","title":"toHSVA","info":{"declType":"value","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Color"],"Color"]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"annotation":[],"tag":"RCons","contents":["h",{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Number"]},{"annotation":[],"tag":"RCons","contents":["s",{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Number"]},{"annotation":[],"tag":"RCons","contents":["v",{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Number"]},{"annotation":[],"tag":"RCons","contents":["a",{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Number"]},{"annotation":[],"tag":"REmpty"}]}]}]}]}]}]}},"sourceSpan":{"start":[327,1],"name":"/home/jordan/Programming/ps-libs/lib/colors/src/Color.purs","end":[327,74]}},{"kind":null,"children":[],"comments":"Convert a `Color` to its red, green, blue and alpha values. The RGB values\nare integers in the range from 0 to 255. The alpha channel is a number\nbetween 0.0 and 1.0.\n","title":"toRGBA","info":{"declType":"value","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Color"],"Color"]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"annotation":[],"tag":"RCons","contents":["r",{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Int"]},{"annotation":[],"tag":"RCons","contents":["g",{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Int"]},{"annotation":[],"tag":"RCons","contents":["b",{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Int"]},{"annotation":[],"tag":"RCons","contents":["a",{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Number"]},{"annotation":[],"tag":"REmpty"}]}]}]}]}]}]}},"sourceSpan":{"start":[339,1],"name":"/home/jordan/Programming/ps-libs/lib/colors/src/Color.purs","end":[339,65]}},{"kind":null,"children":[],"comments":"Convert a `Color` to its red, green, blue and alpha values. All values\nare numbers in the range from 0.0 to 1.0.\n","title":"toRGBA'","info":{"declType":"value","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Color"],"Color"]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"annotation":[],"tag":"RCons","contents":["r",{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Number"]},{"annotation":[],"tag":"RCons","contents":["g",{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Number"]},{"annotation":[],"tag":"RCons","contents":["b",{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Number"]},{"annotation":[],"tag":"RCons","contents":["a",{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Number"]},{"annotation":[],"tag":"REmpty"}]}]}]}]}]}]}},"sourceSpan":{"start":[349,1],"name":"/home/jordan/Programming/ps-libs/lib/colors/src/Color.purs","end":[349,75]}},{"kind":null,"children":[],"comments":"Get XYZ coordinates according to the CIE 1931 color space.\n\nSee:\n- https://en.wikipedia.org/wiki/CIE_1931_color_space\n- https://en.wikipedia.org/wiki/SRGB\n","title":"toXYZ","info":{"declType":"value","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Color"],"Color"]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"annotation":[],"tag":"RCons","contents":["x",{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Number"]},{"annotation":[],"tag":"RCons","contents":["y",{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Number"]},{"annotation":[],"tag":"RCons","contents":["z",{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Number"]},{"annotation":[],"tag":"REmpty"}]}]}]}]}]}},"sourceSpan":{"start":[369,1],"name":"/home/jordan/Programming/ps-libs/lib/colors/src/Color.purs","end":[369,60]}},{"kind":null,"children":[],"comments":"Get L, a and b coordinates according to the Lab color space.\n\nSee: https://en.wikipedia.org/wiki/Lab_color_space\n","title":"toLab","info":{"declType":"value","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Color"],"Color"]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"annotation":[],"tag":"RCons","contents":["l",{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Number"]},{"annotation":[],"tag":"RCons","contents":["a",{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Number"]},{"annotation":[],"tag":"RCons","contents":["b",{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Number"]},{"annotation":[],"tag":"REmpty"}]}]}]}]}]}},"sourceSpan":{"start":[388,1],"name":"/home/jordan/Programming/ps-libs/lib/colors/src/Color.purs","end":[388,60]}},{"kind":null,"children":[],"comments":"Get L, C and h coordinates according to the CIE LCh color space.\n\nSee: https://en.wikipedia.org/wiki/Lab_color_space\n","title":"toLCh","info":{"declType":"value","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Color"],"Color"]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"annotation":[],"tag":"RCons","contents":["l",{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Number"]},{"annotation":[],"tag":"RCons","contents":["c",{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Number"]},{"annotation":[],"tag":"RCons","contents":["h",{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Number"]},{"annotation":[],"tag":"REmpty"}]}]}]}]}]}},"sourceSpan":{"start":[407,1],"name":"/home/jordan/Programming/ps-libs/lib/colors/src/Color.purs","end":[407,60]}},{"kind":null,"children":[],"comments":"Return a hexadecimal representation of the color in the forms `#rrggbb`\nor `#rrggbbaa`, where `rr`, `gg`, `bb`, and `aa` refer to hexadecimal\ndigits corresponding to the RGBA channel values between `00` and `ff`. The\nalpha channel is only represented when it has a value less than 100%.\n","title":"toHexString","info":{"declType":"value","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Color"],"Color"]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}},"sourceSpan":{"start":[425,1],"name":"/home/jordan/Programming/ps-libs/lib/colors/src/Color.purs","end":[425,31]}},{"kind":null,"children":[],"comments":"A CSS representation of the color in the form `hsl(..)` or `hsla(...)`.\n","title":"cssStringHSLA","info":{"declType":"value","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Color"],"Color"]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}},"sourceSpan":{"start":[440,1],"name":"/home/jordan/Programming/ps-libs/lib/colors/src/Color.purs","end":[440,33]}},{"kind":null,"children":[],"comments":"A CSS representation of the color in the form `rgb(..)` or `rgba(...)`.\n","title":"cssStringRGBA","info":{"declType":"value","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Color"],"Color"]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}},"sourceSpan":{"start":[454,1],"name":"/home/jordan/Programming/ps-libs/lib/colors/src/Color.purs","end":[454,33]}},{"kind":null,"children":[],"comments":"Pure black.\n","title":"black","info":{"declType":"value","type":{"annotation":[],"tag":"TypeConstructor","contents":[["Color"],"Color"]}},"sourceSpan":{"start":[468,1],"name":"/home/jordan/Programming/ps-libs/lib/colors/src/Color.purs","end":[468,15]}},{"kind":null,"children":[],"comments":"Pure white.\n","title":"white","info":{"declType":"value","type":{"annotation":[],"tag":"TypeConstructor","contents":[["Color"],"Color"]}},"sourceSpan":{"start":[472,1],"name":"/home/jordan/Programming/ps-libs/lib/colors/src/Color.purs","end":[472,15]}},{"kind":null,"children":[],"comments":"Create a gray tone from a lightness values (0.0 is black, 1.0 is white).\n","title":"graytone","info":{"declType":"value","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Number"]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Color"],"Color"]}]}},"sourceSpan":{"start":[476,1],"name":"/home/jordan/Programming/ps-libs/lib/colors/src/Color.purs","end":[476,28]}},{"kind":null,"children":[],"comments":"Rotate the hue of a `Color` by a certain angle (in degrees).\n","title":"rotateHue","info":{"declType":"value","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Number"]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Color"],"Color"]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Color"],"Color"]}]}]}},"sourceSpan":{"start":[480,1],"name":"/home/jordan/Programming/ps-libs/lib/colors/src/Color.purs","end":[480,38]}},{"kind":null,"children":[],"comments":"Get the complementary color (hue rotated by 180°).\n","title":"complementary","info":{"declType":"value","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Color"],"Color"]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Color"],"Color"]}]}},"sourceSpan":{"start":[484,1],"name":"/home/jordan/Programming/ps-libs/lib/colors/src/Color.purs","end":[484,32]}},{"kind":null,"children":[],"comments":"Lighten a color by adding a certain amount (number between -1.0 and 1.0)\nto the lightness channel. If the number is negative, the color is\ndarkened.\n","title":"lighten","info":{"declType":"value","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Number"]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Color"],"Color"]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Color"],"Color"]}]}]}},"sourceSpan":{"start":[490,1],"name":"/home/jordan/Programming/ps-libs/lib/colors/src/Color.purs","end":[490,36]}},{"kind":null,"children":[],"comments":"Darken a color by subtracting a certain amount (number between -1.0 and\n1.0) from the lightness channel. If the number is negative, the color is\nlightened.\n","title":"darken","info":{"declType":"value","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Number"]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Color"],"Color"]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Color"],"Color"]}]}]}},"sourceSpan":{"start":[496,1],"name":"/home/jordan/Programming/ps-libs/lib/colors/src/Color.purs","end":[496,35]}},{"kind":null,"children":[],"comments":"Increase the saturation of a color by adding a certain amount (number\nbetween -1.0 and 1.0) to the saturation channel. If the number is\nnegative, the color is desaturated.\n","title":"saturate","info":{"declType":"value","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Number"]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Color"],"Color"]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Color"],"Color"]}]}]}},"sourceSpan":{"start":[502,1],"name":"/home/jordan/Programming/ps-libs/lib/colors/src/Color.purs","end":[502,37]}},{"kind":null,"children":[],"comments":"Decrease the saturation of a color by subtracting a certain amount (number\nbetween -1.0 and 1.0) from the saturation channel. If the number is\nnegative, the color is saturated.\n","title":"desaturate","info":{"declType":"value","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Number"]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Color"],"Color"]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Color"],"Color"]}]}]}},"sourceSpan":{"start":[508,1],"name":"/home/jordan/Programming/ps-libs/lib/colors/src/Color.purs","end":[508,39]}},{"kind":null,"children":[],"comments":"Convert a color to a gray tone with the same perceived luminance (see\n`luminance`).\n","title":"toGray","info":{"declType":"value","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Color"],"Color"]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Color"],"Color"]}]}},"sourceSpan":{"start":[513,1],"name":"/home/jordan/Programming/ps-libs/lib/colors/src/Color.purs","end":[513,25]}},{"kind":null,"children":[],"comments":"A function that interpolates between two colors. It takes a start color,\nan end color, and a ratio in the interval [0.0, 1.0]. It returns the\nmixed color.\n","title":"Interpolator","info":{"arguments":[],"declType":"typeSynonym","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Color"],"Color"]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Color"],"Color"]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Number"]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Color"],"Color"]}]}]}]}},"sourceSpan":{"start":[540,1],"name":"/home/jordan/Programming/ps-libs/lib/colors/src/Color.purs","end":[540,54]}},{"kind":null,"children":[],"comments":"Mix two colors by linearly interpolating between them in the specified\ncolor space. For the HSL colorspace, the shortest path is chosen along the\ncircle of hue values.\n","title":"mix","info":{"declType":"value","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Color"],"ColorSpace"]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Color"],"Interpolator"]}]}},"sourceSpan":{"start":[545,1],"name":"/home/jordan/Programming/ps-libs/lib/colors/src/Color.purs","end":[545,34]}},{"kind":null,"children":[],"comments":"Mix two colors via Dave Green's [cubehelix](http://www.mrao.cam.ac.uk/~dag/CUBEHELIX/) by\ninterpolating between them. Takes a gamma correction value as an argument and\nreturns an `Interpolator` function.\n\nFor more details see:\n* [d3-plugins/cubehelix](https://github.com/d3/d3-plugins/tree/40f8b3b91e67719f58408732d7ddae94cafa559a/cubehelix#interpolateCubehelix)\n\nPorted from:\n* [d3-plugins/cubehelix/cubehelix.js](https://github.com/d3/d3-plugins/blob/40f8b3b91e67719f58408732d7ddae94cafa559a/cubehelix/cubehelix.js#L13)\n","title":"mixCubehelix","info":{"declType":"value","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Number"]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Color"],"Interpolator"]}]}},"sourceSpan":{"start":[589,1],"name":"/home/jordan/Programming/ps-libs/lib/colors/src/Color.purs","end":[589,39]}},{"kind":null,"children":[],"comments":"The percieved brightness of the color (A number between 0.0 and 1.0).\n\nSee: https://www.w3.org/TR/AERT#color-contrast\n","title":"brightness","info":{"declType":"value","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Color"],"Color"]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Number"]}]}},"sourceSpan":{"start":[616,1],"name":"/home/jordan/Programming/ps-libs/lib/colors/src/Color.purs","end":[616,30]}},{"kind":null,"children":[],"comments":"The relative brightness of a color (normalized to 0.0 for darkest black\nand 1.0 for lightest white), according to the WCAG definition.\n\nSee: https://www.w3.org/TR/2008/REC-WCAG20-20081211/#relativeluminancedef\n","title":"luminance","info":{"declType":"value","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Color"],"Color"]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Number"]}]}},"sourceSpan":{"start":[625,1],"name":"/home/jordan/Programming/ps-libs/lib/colors/src/Color.purs","end":[625,29]}},{"kind":null,"children":[],"comments":"The contrast ratio of two colors. A minimum contrast ratio of 4.5 is\nrecommended to ensure that text is readable on a colored background. The\ncontrast ratio is symmetric on both arguments:\n`contrast c1 c2 == contrast c2 c1`.\n\nSee http://www.w3.org/TR/2008/REC-WCAG20-20081211/#contrast-ratiodef\n","title":"contrast","info":{"declType":"value","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Color"],"Color"]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Color"],"Color"]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Number"]}]}]}},"sourceSpan":{"start":[644,1],"name":"/home/jordan/Programming/ps-libs/lib/colors/src/Color.purs","end":[644,37]}},{"kind":null,"children":[],"comments":"Determine whether a color is perceived as a light color.\n\n``` purs\nisLight c = brightness c > 0.5\n```\n","title":"isLight","info":{"declType":"value","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Color"],"Color"]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}},"sourceSpan":{"start":[658,1],"name":"/home/jordan/Programming/ps-libs/lib/colors/src/Color.purs","end":[658,28]}},{"kind":null,"children":[],"comments":"Determine whether text of one color is readable on a background of a\ndifferent color (see `contrast`). This function is symmetric in both\narguments.\n\n``` purs\nisReadable c1 c2 = contrast c1 c2 > 4.5\n```\n","title":"isReadable","info":{"declType":"value","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Color"],"Color"]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Color"],"Color"]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}]}},"sourceSpan":{"start":[668,1],"name":"/home/jordan/Programming/ps-libs/lib/colors/src/Color.purs","end":[668,40]}},{"kind":null,"children":[],"comments":"Return a readable foreground text color (either `black` or `white`) for a\ngiven background color.\n","title":"textColor","info":{"declType":"value","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Color"],"Color"]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Color"],"Color"]}]}},"sourceSpan":{"start":[673,1],"name":"/home/jordan/Programming/ps-libs/lib/colors/src/Color.purs","end":[673,28]}},{"kind":null,"children":[],"comments":"Compute the perceived 'distance' between two colors according to the CIE76\ndelta-E standard. A distance below ~2.3 is not noticable.\n\nSee: https://en.wikipedia.org/wiki/Color_difference\n","title":"distance","info":{"declType":"value","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Color"],"Color"]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Color"],"Color"]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Number"]}]}]}},"sourceSpan":{"start":[682,1],"name":"/home/jordan/Programming/ps-libs/lib/colors/src/Color.purs","end":[682,37]}}]},{"reExports":[],"name":"Color.Blending","comments":null,"declarations":[{"kind":null,"children":[{"comments":null,"title":"Multiply","info":{"arguments":[],"declType":"dataConstructor"},"sourceSpan":{"start":[10,16],"name":"/home/jordan/Programming/ps-libs/lib/colors/src/Color/Blending.purs","end":[10,26]}},{"comments":null,"title":"Screen","info":{"arguments":[],"declType":"dataConstructor"},"sourceSpan":{"start":[10,27],"name":"/home/jordan/Programming/ps-libs/lib/colors/src/Color/Blending.purs","end":[10,35]}},{"comments":null,"title":"Overlay","info":{"arguments":[],"declType":"dataConstructor"},"sourceSpan":{"start":[10,36],"name":"/home/jordan/Programming/ps-libs/lib/colors/src/Color/Blending.purs","end":[10,45]}}],"comments":null,"title":"BlendMode","info":{"declType":"data","dataDeclType":"data","typeArguments":[]},"sourceSpan":{"start":[10,1],"name":"/home/jordan/Programming/ps-libs/lib/colors/src/Color/Blending.purs","end":[10,45]}},{"kind":null,"children":[],"comments":"Blend two colors with a specified blend mode. The first color is the\nbackground color, the second one is the foreground color. The resulting\nalpha value is calculated as arithmetic mean.\n","title":"blend","info":{"declType":"value","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Color","Blending"],"BlendMode"]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Color"],"Color"]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Color"],"Color"]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Color"],"Color"]}]}]}]}},"sourceSpan":{"start":[23,1],"name":"/home/jordan/Programming/ps-libs/lib/colors/src/Color/Blending.purs","end":[23,46]}}]},{"reExports":[],"name":"Color.Scale","comments":"This module defines color scales. A color scale is a continuum of colors\nthat is defined on the closed interval `[0, 1]`. It is defined by the two\ncolors at each endpoint (0 and 1) and possibly additional color stops\nin between. If a color scale is sampled between two color stops, the\nspecified color space is used for linear interpolation (see `mix`).\n","declarations":[{"kind":null,"children":[],"comments":"A point on the color scale.\n","title":"ColorStop","info":{"declType":"data","dataDeclType":"data","typeArguments":[]},"sourceSpan":{"start":[53,1],"name":"/home/jordan/Programming/ps-libs/lib/colors/src/Color/Scale.purs","end":[53,40]}},{"kind":null,"children":[],"comments":"Create a color stop from a given `Color` and a number between 0 and 1.\nIf the number is outside this range, it is clamped.\n","title":"colorStop","info":{"declType":"value","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Color"],"Color"]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Number"]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Color","Scale"],"ColorStop"]}]}]}},"sourceSpan":{"start":[57,1],"name":"/home/jordan/Programming/ps-libs/lib/colors/src/Color/Scale.purs","end":[57,42]}},{"kind":null,"children":[],"comments":null,"title":"stopRatio","info":{"declType":"value","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Color","Scale"],"ColorStop"]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Number"]}]}},"sourceSpan":{"start":[60,1],"name":"/home/jordan/Programming/ps-libs/lib/colors/src/Color/Scale.purs","end":[60,33]}},{"kind":null,"children":[],"comments":null,"title":"stopColor","info":{"declType":"value","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Color","Scale"],"ColorStop"]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Color"],"Color"]}]}},"sourceSpan":{"start":[63,1],"name":"/home/jordan/Programming/ps-libs/lib/colors/src/Color/Scale.purs","end":[63,32]}},{"kind":null,"children":[],"comments":"A color scale is represented by a list of `ColorStops` and a `ColorSpace` that is\nused for interpolation between the stops.\n","title":"ColorScale","info":{"declType":"data","dataDeclType":"data","typeArguments":[]},"sourceSpan":{"start":[68,1],"name":"/home/jordan/Programming/ps-libs/lib/colors/src/Color/Scale.purs","end":[68,51]}},{"kind":null,"children":[],"comments":"Create a color scale. The color space is used for interpolation between\ndifferent stops. The first `Color` defines the left end (color at ratio\n0.0), the list of stops defines possible intermediate steps and the second\n`Color` argument defines the right end point (color at ratio 1.0).\n","title":"colorScale","info":{"declType":"value","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Color"],"ColorSpace"]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Color"],"Color"]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","List","Types"],"List"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Color","Scale"],"ColorStop"]}]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Color"],"Color"]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Color","Scale"],"ColorScale"]}]}]}]}]}},"sourceSpan":{"start":[79,1],"name":"/home/jordan/Programming/ps-libs/lib/colors/src/Color/Scale.purs","end":[79,75]}},{"kind":null,"children":[{"comments":null,"title":"ColorStops","info":{"arguments":[{"annotation":[],"tag":"TypeConstructor","contents":[["Color"],"Color"]},{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","List","Types"],"List"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Color","Scale"],"ColorStop"]}]}},{"annotation":[],"tag":"TypeConstructor","contents":[["Color"],"Color"]}],"declType":"dataConstructor"},"sourceSpan":{"start":[73,17],"name":"/home/jordan/Programming/ps-libs/lib/colors/src/Color/Scale.purs","end":[73,29]}}],"comments":"Represents all `ColorStops` in a color scale. The first `Color` defines the left end\n(color at ratio 0.0), the list of stops defines possible intermediate steps\nand the second `Color` argument defines the right end point (color at ratio 1.0).\n","title":"ColorStops","info":{"declType":"data","dataDeclType":"data","typeArguments":[]},"sourceSpan":{"start":[73,1],"name":"/home/jordan/Programming/ps-libs/lib/colors/src/Color/Scale.purs","end":[73,58]}},{"kind":null,"children":[],"comments":"Like `combineStops`, but the width of the \"transition zone\" can be specified as the\nfirst argument.\n\nExample:\n\n``` purs\nredToBlue `combineStops epsilon x` orangeToGray\n```\n\nHere, the color at `x` will be orange and color at `x - epsilon` will be blue.\nIf we want the color at `x` to be blue, `combineStops' epsilon (x + epsilon)` could be used.\n","title":"combineStops'","info":{"declType":"value","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Number"]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Number"]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Color","Scale"],"ColorStops"]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Color","Scale"],"ColorStops"]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Color","Scale"],"ColorStops"]}]}]}]}]}},"sourceSpan":{"start":[105,1],"name":"/home/jordan/Programming/ps-libs/lib/colors/src/Color/Scale.purs","end":[105,76]}},{"kind":null,"children":[],"comments":"Concatenates two color scales. The first argument specifies the transition point as\na number between zero and one. The color right at the transition point is the first\ncolor of the second color scale.\n\nExample:\n\n``` purs\nredToBlue `combineStops 0.4` orangeToGray\n```\n","title":"combineStops","info":{"declType":"value","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Number"]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Color","Scale"],"ColorStops"]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Color","Scale"],"ColorStops"]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Color","Scale"],"ColorStops"]}]}]}]}},"sourceSpan":{"start":[91,1],"name":"/home/jordan/Programming/ps-libs/lib/colors/src/Color/Scale.purs","end":[91,65]}},{"kind":null,"children":[],"comments":"Takes `ColorStops` and returns reverses it\n","title":"reverseStops","info":{"declType":"value","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Color","Scale"],"ColorStops"]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Color","Scale"],"ColorStops"]}]}},"sourceSpan":{"start":[117,1],"name":"/home/jordan/Programming/ps-libs/lib/colors/src/Color/Scale.purs","end":[117,41]}},{"kind":null,"children":[],"comments":"Create a uniform color scale from a list of colors that will be evenly\nspaced on the scale.\n","title":"uniformScale","info":{"declType":"value","type":{"annotation":[],"tag":"ForAll","contents":["f",{"annotation":[],"tag":"ConstrainedType","contents":[{"constraintAnn":[],"constraintClass":[["Data","Foldable"],"Foldable"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"f"}],"constraintKindArgs":[],"constraintData":null},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Color"],"ColorSpace"]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Color"],"Color"]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeVar","contents":"f"},{"annotation":[],"tag":"TypeConstructor","contents":[["Color"],"Color"]}]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Color"],"Color"]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Color","Scale"],"ColorScale"]}]}]}]}]}]},null]}},"sourceSpan":{"start":[126,1],"name":"/home/jordan/Programming/ps-libs/lib/colors/src/Color/Scale.purs","end":[126,94]}},{"kind":null,"children":[],"comments":"Create `ColorStops` from a list of colors such that they will be evenly\nspaced on the scale.\n","title":"uniformScale'","info":{"declType":"value","type":{"annotation":[],"tag":"ForAll","contents":["f",{"annotation":[],"tag":"ConstrainedType","contents":[{"constraintAnn":[],"constraintClass":[["Data","Foldable"],"Foldable"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"f"}],"constraintKindArgs":[],"constraintData":null},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Color"],"Color"]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeVar","contents":"f"},{"annotation":[],"tag":"TypeConstructor","contents":[["Color"],"Color"]}]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Color"],"Color"]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Color","Scale"],"ColorStops"]}]}]}]}]},null]}},"sourceSpan":{"start":[131,1],"name":"/home/jordan/Programming/ps-libs/lib/colors/src/Color/Scale.purs","end":[131,81]}},{"kind":null,"children":[],"comments":"Add a stop to a color scale.\n","title":"addStop","info":{"declType":"value","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Color","Scale"],"ColorScale"]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Color"],"Color"]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Number"]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Color","Scale"],"ColorScale"]}]}]}]}},"sourceSpan":{"start":[141,1],"name":"/home/jordan/Programming/ps-libs/lib/colors/src/Color/Scale.purs","end":[141,55]}},{"kind":null,"children":[],"comments":"Add a stop to a list of `ColorStops`.\n","title":"addStop'","info":{"declType":"value","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Color","Scale"],"ColorStops"]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Color"],"Color"]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Number"]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Color","Scale"],"ColorStops"]}]}]}]}},"sourceSpan":{"start":[145,1],"name":"/home/jordan/Programming/ps-libs/lib/colors/src/Color/Scale.purs","end":[145,56]}},{"kind":null,"children":[],"comments":"Get the color at a specific point on the color scale by linearly\ninterpolating between its colors (see `mix` and `mkSimpleSampler`).\n","title":"sample","info":{"declType":"value","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Color","Scale"],"ColorScale"]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Number"]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Color"],"Color"]}]}]}},"sourceSpan":{"start":[153,1],"name":"/home/jordan/Programming/ps-libs/lib/colors/src/Color/Scale.purs","end":[153,40]}},{"kind":null,"children":[],"comments":"Get the color at a specific point on the color scale, using the cubehelix\ninterpolation  (see `mixCubehelix` and `mkSimpleSampler`).\n","title":"cubehelixSample","info":{"declType":"value","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Color","Scale"],"ColorStops"]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Number"]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Color"],"Color"]}]}]}},"sourceSpan":{"start":[158,1],"name":"/home/jordan/Programming/ps-libs/lib/colors/src/Color/Scale.purs","end":[158,49]}},{"kind":null,"children":[],"comments":"Get the color at a specific point on the color scale (number between 0 and\n1). If the number is smaller than 0, the color at 0 is returned. If the\nnumber is larger than 1, the color at 1 is returned.\n","title":"mkSimpleSampler","info":{"declType":"value","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Color"],"Interpolator"]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Color","Scale"],"ColorStops"]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Number"]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Color"],"Color"]}]}]}]}},"sourceSpan":{"start":[164,1],"name":"/home/jordan/Programming/ps-libs/lib/colors/src/Color/Scale.purs","end":[164,65]}},{"kind":null,"children":[],"comments":"A list of colors that is sampled from a color scale. The number of colors\ncan be specified.\n","title":"colors","info":{"declType":"value","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Color","Scale"],"ColorScale"]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","List","Types"],"List"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Color"],"Color"]}]}]}]}},"sourceSpan":{"start":[179,1],"name":"/home/jordan/Programming/ps-libs/lib/colors/src/Color/Scale.purs","end":[179,42]}},{"kind":null,"children":[],"comments":"Takes a sampling function and returns a list of colors that is sampled via\nthat function. The number of colors can be specified.\n","title":"colors'","info":{"declType":"value","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Number"]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Color"],"Color"]}]}}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","List","Types"],"List"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Color"],"Color"]}]}]}]}},"sourceSpan":{"start":[184,1],"name":"/home/jordan/Programming/ps-libs/lib/colors/src/Color/Scale.purs","end":[184,50]}},{"kind":null,"children":[],"comments":"Modify the color scale by applying the given function to each color stop.\nThe first argument is the position of the color stop.\n","title":"modify","info":{"declType":"value","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Number"]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Color"],"Color"]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Color"],"Color"]}]}]}}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Color","Scale"],"ColorScale"]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Color","Scale"],"ColorScale"]}]}]}},"sourceSpan":{"start":[193,1],"name":"/home/jordan/Programming/ps-libs/lib/colors/src/Color/Scale.purs","end":[193,65]}},{"kind":null,"children":[],"comments":"Modify a list of  `ColorStops` by applying the given function to each color\nstop. The first argument is the position of the color stop.\n","title":"modify'","info":{"declType":"value","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Number"]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Color"],"Color"]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Color"],"Color"]}]}]}}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Color","Scale"],"ColorStops"]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Color","Scale"],"ColorStops"]}]}]}},"sourceSpan":{"start":[198,1],"name":"/home/jordan/Programming/ps-libs/lib/colors/src/Color/Scale.purs","end":[198,66]}},{"kind":null,"children":[],"comments":"A scale of colors from black to white.\n","title":"grayscale","info":{"declType":"value","type":{"annotation":[],"tag":"TypeConstructor","contents":[["Color","Scale"],"ColorScale"]}},"sourceSpan":{"start":[205,1],"name":"/home/jordan/Programming/ps-libs/lib/colors/src/Color/Scale.purs","end":[205,24]}},{"kind":null,"children":[],"comments":"A color scale that represents 'hot' colors.\n","title":"hot","info":{"declType":"value","type":{"annotation":[],"tag":"TypeConstructor","contents":[["Color","Scale"],"ColorScale"]}},"sourceSpan":{"start":[249,1],"name":"/home/jordan/Programming/ps-libs/lib/colors/src/Color/Scale.purs","end":[249,18]}},{"kind":null,"children":[],"comments":"A color scale that represents 'cool' colors.\n","title":"cool","info":{"declType":"value","type":{"annotation":[],"tag":"TypeConstructor","contents":[["Color","Scale"],"ColorScale"]}},"sourceSpan":{"start":[253,1],"name":"/home/jordan/Programming/ps-libs/lib/colors/src/Color/Scale.purs","end":[253,19]}},{"kind":null,"children":[],"comments":"A spectrum of fully saturated hues (HSL color space).\n","title":"spectrum","info":{"declType":"value","type":{"annotation":[],"tag":"TypeConstructor","contents":[["Color","Scale"],"ColorScale"]}},"sourceSpan":{"start":[209,1],"name":"/home/jordan/Programming/ps-libs/lib/colors/src/Color/Scale.purs","end":[209,23]}},{"kind":null,"children":[],"comments":"A perceptually-uniform spectrum of all hues (LCh color space).\n","title":"spectrumLCh","info":{"declType":"value","type":{"annotation":[],"tag":"TypeConstructor","contents":[["Color","Scale"],"ColorScale"]}},"sourceSpan":{"start":[219,1],"name":"/home/jordan/Programming/ps-libs/lib/colors/src/Color/Scale.purs","end":[219,26]}},{"kind":null,"children":[],"comments":"A perceptually-uniform, diverging color scale from blue to red, similar to\nthe ColorBrewer scale 'RdBu'.\n","title":"blueToRed","info":{"declType":"value","type":{"annotation":[],"tag":"TypeConstructor","contents":[["Color","Scale"],"ColorScale"]}},"sourceSpan":{"start":[232,1],"name":"/home/jordan/Programming/ps-libs/lib/colors/src/Color/Scale.purs","end":[232,24]}},{"kind":null,"children":[],"comments":"A perceptually-uniform, multi-hue color scale from yellow to red, similar\nto the ColorBrewer scale YlOrRd.\n","title":"yellowToRed","info":{"declType":"value","type":{"annotation":[],"tag":"TypeConstructor","contents":[["Color","Scale"],"ColorScale"]}},"sourceSpan":{"start":[241,1],"name":"/home/jordan/Programming/ps-libs/lib/colors/src/Color/Scale.purs","end":[241,26]}},{"kind":null,"children":[],"comments":"The standard [cubehelix](http://www.mrao.cam.ac.uk/~dag/CUBEHELIX/) color\nscale.\n","title":"cubehelix","info":{"declType":"value","type":{"annotation":[],"tag":"TypeConstructor","contents":[["Color","Scale"],"ColorScale"]}},"sourceSpan":{"start":[258,1],"name":"/home/jordan/Programming/ps-libs/lib/colors/src/Color/Scale.purs","end":[258,24]}},{"kind":null,"children":[],"comments":"Takes number of stops `ColorStops` should contain, function to generate\nmissing colors and `ColorStops` itself.\n","title":"minColorStops","info":{"declType":"value","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Color","Scale"],"ColorStops"]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Number"]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Color"],"Color"]}]}]}}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Color","Scale"],"ColorStops"]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Color","Scale"],"ColorStops"]}]}]}]}},"sourceSpan":{"start":[267,1],"name":"/home/jordan/Programming/ps-libs/lib/colors/src/Color/Scale.purs","end":[267,84]}},{"kind":null,"children":[],"comments":"A CSS representation of the color scale in the form of a comma-separated\nlist of color stops. This list can be used in a `linear-gradient` or\na similar construct.\n\nNote that CSS uses the RGB space for color interpolation. Consequently, if\nthe color scale is in RGB mode, this is just a list of all defined color\nstops.\n\nFor other color spaces, the color scale is sampled at (at least) 10\ndifferent points. This should give a reasonable approximation to the true\ngradient in the specified color space.\n","title":"cssColorStops","info":{"declType":"value","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Color","Scale"],"ColorScale"]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}},"sourceSpan":{"start":[290,1],"name":"/home/jordan/Programming/ps-libs/lib/colors/src/Color/Scale.purs","end":[290,38]}},{"kind":null,"children":[],"comments":"Underling function of `cssColorStops`.\n","title":"cssColorStopsRGB","info":{"declType":"value","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Color","Scale"],"ColorStops"]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}},"sourceSpan":{"start":[295,1],"name":"/home/jordan/Programming/ps-libs/lib/colors/src/Color/Scale.purs","end":[295,41]}}]}],"resolvedDependencies":{"purescript-newtype":"5.0.0","purescript-effect":"4.0.0","purescript-control":"6.0.0","purescript-console":"6.0.0","purescript-either":"6.0.0","purescript-profunctor":"6.0.0","purescript-arrays":"7.0.0","purescript-maybe":"6.0.0","purescript-type-equality":"4.0.1","purescript-exists":"6.0.0","purescript-distributive":"6.0.0","purescript-unfoldable":"6.0.0","purescript-invariant":"6.0.0","purescript-lazy":"6.0.0","purescript-foldable-traversable":"6.0.0","purescript-tailrec":"6.0.0","purescript-gen":"4.0.0","purescript-functors":"5.0.0","purescript-prelude":"6.0.0","purescript-st":"6.0.0","purescript-bifunctors":"6.0.0","purescript-nonempty":"7.0.0","purescript-contravariant":"6.0.0","purescript-assert":"6.0.0","purescript-unsafe-coerce":"6.0.0","purescript-refs":"6.0.0","purescript-integers":"6.0.0","purescript-orders":"6.0.0","purescript-const":"6.0.0","purescript-numbers":"9.0.0","purescript-enums":"6.0.0","purescript-tuples":"7.0.0","purescript-partial":"4.0.0","purescript-strings":"6.0.0","purescript-identity":"6.0.0","purescript-safe-coerce":"2.0.0","purescript-lists":"7.0.0","purescript-functions":"6.0.0"},"version":"7.0.1","github":["purescript-contrib","purescript-colors"],"versionTag":"v7.0.1","moduleMap":{"Data.BooleanAlgebra":"purescript-prelude","Data.Decide":"purescript-contravariant","Data.Ring":"purescript-prelude","Data.Semigroup.Generic":"purescript-prelude","Data.Functor.Product":"purescript-functors","Data.Functor.Flip":"purescript-functors","Data.NonEmpty":"purescript-nonempty","Effect.Uncurried":"purescript-effect","Data.Char.Gen":"purescript-strings","Data.Monoid.Generic":"purescript-prelude","Data.String.NonEmpty":"purescript-strings","Effect":"purescript-effect","Data.Traversable.Accum.Internal":"purescript-foldable-traversable","Data.Enum.Gen":"purescript-enums","Data.Functor.Costar":"purescript-functors","Data.HeytingAlgebra.Generic":"purescript-prelude","Data.Functor.Compose":"purescript-functors","Data.Int.Bits":"purescript-integers","Data.String.CodePoints":"purescript-strings","Data.Ord":"purescript-prelude","Control.Monad.Gen":"purescript-gen","Data.Bounded.Generic":"purescript-prelude","Safe.Coerce":"purescript-safe-coerce","Data.Monoid.Dual":"purescript-prelude","Control.Monad.Rec.Class":"purescript-tailrec","Data.Bitraversable":"purescript-foldable-traversable","Data.Boolean":"purescript-prelude","Data.Show.Generic":"purescript-prelude","Control.Biapplicative":"purescript-bifunctors","Data.Array.NonEmpty.Internal":"purescript-arrays","Type.Proxy":"purescript-prelude","Data.Array.ST.Iterator":"purescript-arrays","Data.Enum.Generic":"purescript-enums","Data.String.Pattern":"purescript-strings","Data.Bounded":"purescript-prelude","Data.TraversableWithIndex":"purescript-foldable-traversable","Data.Int":"purescript-integers","Data.Profunctor.Cochoice":"purescript-profunctor","Data.Show":"purescript-prelude","Data.Foldable":"purescript-foldable-traversable","Data.Divide":"purescript-contravariant","Data.Number":"purescript-numbers","Data.Enum":"purescript-enums","Control.Apply":"purescript-prelude","Data.Functor.Contravariant":"purescript-contravariant","Data.Tuple.Nested":"purescript-tuples","Data.List.Internal":"purescript-lists","Control.Monad":"purescript-prelude","Data.Lazy":"purescript-lazy","Data.Monoid":"purescript-prelude","Data.Profunctor.Closed":"purescript-profunctor","Data.Ord.Generic":"purescript-prelude","Data.String.Common":"purescript-strings","Data.Maybe.First":"purescript-maybe","Control.Bind":"purescript-prelude","Data.Profunctor.Split":"purescript-profunctor","Data.Number.Format":"purescript-numbers","Data.Monoid.Additive":"purescript-prelude","Data.Symbol":"purescript-prelude","Data.String.Regex":"purescript-strings","Data.Profunctor.Join":"purescript-profunctor","Data.HeytingAlgebra":"purescript-prelude","Control.Alt":"purescript-control","Control.Monad.ST.Internal":"purescript-st","Effect.Ref":"purescript-refs","Data.Either.Inject":"purescript-either","Data.List.ZipList":"purescript-lists","Data.Ord.Min":"purescript-orders","Data.Functor.Coproduct.Nested":"purescript-functors","Data.Ring.Generic":"purescript-prelude","Data.Semigroup":"purescript-prelude","Data.Array.NonEmpty":"purescript-arrays","Data.Const":"purescript-const","Data.Ord.Down":"purescript-orders","Data.Number.Approximate":"purescript-numbers","Data.Array.ST.Partial":"purescript-arrays","Effect.Unsafe":"purescript-effect","Data.Tuple":"purescript-tuples","Data.Functor.Clown":"purescript-functors","Data.Semigroup.Foldable":"purescript-foldable-traversable","Control.Biapply":"purescript-bifunctors","Data.Distributive":"purescript-distributive","Type.Equality":"purescript-type-equality","Control.Alternative":"purescript-control","Data.Semiring":"purescript-prelude","Data.Functor.Product2":"purescript-functors","Data.Exists":"purescript-exists","Effect.Console":"purescript-console","Data.Traversable.Accum":"purescript-foldable-traversable","Data.CommutativeRing":"purescript-prelude","Data.NaturalTransformation":"purescript-prelude","Data.Monoid.Conj":"purescript-prelude","Data.Functor.App":"purescript-functors","Data.Profunctor.Star":"purescript-profunctor","Data.Unfoldable":"purescript-unfoldable","Control.Monad.ST":"purescript-st","Data.List.Types":"purescript-lists","Data.String.NonEmpty.CodeUnits":"purescript-strings","Data.Functor":"purescript-prelude","Unsafe.Coerce":"purescript-unsafe-coerce","Data.Profunctor.Strong":"purescript-profunctor","Data.List.Lazy.Types":"purescript-lists","Control.Category":"purescript-prelude","Control.Monad.Gen.Common":"purescript-gen","Data.Maybe":"purescript-maybe","Data.String.Regex.Unsafe":"purescript-strings","Data.Profunctor":"purescript-profunctor","Control.Comonad":"purescript-control","Control.Monad.ST.Global":"purescript-st","Data.Function":"purescript-prelude","Data.List":"purescript-lists","Data.Field":"purescript-prelude","Data.List.Lazy":"purescript-lists","Data.EuclideanRing":"purescript-prelude","Data.Semigroup.Last":"purescript-prelude","Data.Semigroup.First":"purescript-prelude","Data.Functor.Invariant":"purescript-invariant","Data.Comparison":"purescript-contravariant","Data.String.Unsafe":"purescript-strings","Prelude":"purescript-prelude","Effect.Class":"purescript-effect","Data.Predicate":"purescript-contravariant","Partial.Unsafe":"purescript-partial","Data.Array":"purescript-arrays","Control.Extend":"purescript-control","Data.Unfoldable1":"purescript-unfoldable","Control.Lazy":"purescript-control","Data.Function.Uncurried":"purescript-functions","Data.Functor.Product.Nested":"purescript-functors","Data.Eq":"purescript-prelude","Data.Either.Nested":"purescript-either","Data.Newtype":"purescript-newtype","Data.Semigroup.Traversable":"purescript-foldable-traversable","Data.Bifunctor":"purescript-bifunctors","Test.Assert":"purescript-assert","Data.Monoid.Disj":"purescript-prelude","Control.Monad.Gen.Class":"purescript-gen","Data.Array.Partial":"purescript-arrays","Data.String.CaseInsensitive":"purescript-strings","Control.MonadPlus":"purescript-control","Data.Void":"purescript-prelude","Data.Profunctor.Costrong":"purescript-profunctor","Data.Ord.Max":"purescript-orders","Data.String.CodeUnits":"purescript-strings","Data.FunctorWithIndex":"purescript-foldable-traversable","Data.Divisible":"purescript-contravariant","Data.Eq.Generic":"purescript-prelude","Data.DivisionRing":"purescript-prelude","Data.Equivalence":"purescript-contravariant","Data.Maybe.Last":"purescript-maybe","Data.Unit":"purescript-prelude","Data.List.NonEmpty":"purescript-lists","Data.List.Lazy.NonEmpty":"purescript-lists","Data.Ordering":"purescript-prelude","Data.Functor.Coproduct":"purescript-functors","Data.Identity":"purescript-identity","Data.String":"purescript-strings","Data.Reflectable":"purescript-prelude","Control.Plus":"purescript-control","Partial":"purescript-partial","Data.String.NonEmpty.CodePoints":"purescript-strings","Data.Decidable":"purescript-contravariant","Data.String.NonEmpty.Internal":"purescript-strings","Data.Monoid.Multiplicative":"purescript-prelude","Data.String.NonEmpty.CaseInsensitive":"purescript-strings","Data.Functor.Joker":"purescript-functors","Data.Array.ST":"purescript-arrays","Control.Semigroupoid":"purescript-prelude","Data.Monoid.Alternate":"purescript-control","Data.Char":"purescript-strings","Data.Generic.Rep":"purescript-prelude","Effect.Class.Console":"purescript-console","Data.Bifunctor.Join":"purescript-bifunctors","Data.Bifoldable":"purescript-foldable-traversable","Control.Monad.ST.Ref":"purescript-st","Data.Monoid.Endo":"purescript-prelude","Data.List.Partial":"purescript-lists","Data.Semiring.Generic":"purescript-prelude","Data.String.Regex.Flags":"purescript-strings","Data.Either":"purescript-either","Control.Applicative":"purescript-prelude","Control.Monad.ST.Class":"purescript-st","Data.FoldableWithIndex":"purescript-foldable-traversable","Data.Op":"purescript-contravariant","Record.Unsafe":"purescript-prelude","Data.Functor.Coproduct.Inject":"purescript-functors","Data.Profunctor.Choice":"purescript-profunctor","Data.Traversable":"purescript-foldable-traversable","Data.String.Gen":"purescript-strings"},"compilerVersion":"0.14.5"}