{"uploader":"srghma","packageMeta":{"repository":{"url":"https://github.com/f-o-a-m/purescript-optparse","type":"git"},"ignore":["**/.*","node_modules","bower_components","output"],"dependencies":{"purescript-free":"^v6.0.0","purescript-newtype":"^v4.0.0","purescript-effect":"^v3.0.0","purescript-control":"^v5.0.0","purescript-console":"^v5.0.0","purescript-either":"^v5.0.0","purescript-node-streams":"^v5.0.0","purescript-arrays":"^v6.0.0","purescript-maybe":"^v5.0.0","purescript-open-memoize":"https://github.com/purescript-open-community/purescript-open-memoize.git#v6.1.0","purescript-exists":"^v5.0.0","purescript-lazy":"^v5.0.0","purescript-exitcodes":"^v4.0.0","purescript-node-process":"^v8.1.0","purescript-aff":"^v6.0.0","purescript-foldable-traversable":"^v5.0.0","purescript-tailrec":"^v5.0.0","purescript-gen":"^v3.0.0","purescript-prelude":"^v5.0.0","purescript-bifunctors":"^v5.0.0","purescript-nonempty":"^v6.0.0","purescript-integers":"^v5.0.0","purescript-spec":"^v5.0.0","purescript-node-buffer":"^v7.0.0","purescript-transformers":"^v5.0.0","purescript-numbers":"^v8.0.0","purescript-enums":"^v5.0.0","purescript-tuples":"^v6.0.0","purescript-partial":"^v3.0.0","purescript-quickcheck":"^v7.0.0","purescript-strings":"^v5.0.0","purescript-lists":"^v6.0.0"},"name":"purescript-optparse","license":["BSD-3-Clause"]},"tagTime":"2021-04-28T08:37:55+0000","modules":[{"reExports":[{"moduleName":{"package":null,"item":["Options","Applicative","Builder"]},"declarations":[{"children":[{"comments":null,"title":"newtypePrefsMod","info":{"declType":"instance","dependencies":[],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Newtype"],"Newtype"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Builder"],"PrefsMod"]}]},{"annotation":[],"tag":"TypeWildcard","contents":null}]}},"sourceSpan":{"start":[457,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Builder.purs","end":[457,54]}},{"comments":null,"title":"prefsModMonoid","info":{"declType":"instance","dependencies":[],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Monoid"],"Monoid"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Builder"],"PrefsMod"]}]}},"sourceSpan":{"start":[459,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Builder.purs","end":[460,29]}},{"comments":null,"title":"prefsModSemigroup","info":{"declType":"instance","dependencies":[],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Semigroup"],"Semigroup"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Builder"],"PrefsMod"]}]}},"sourceSpan":{"start":[462,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Builder.purs","end":[463,62]}}],"comments":null,"title":"PrefsMod","info":{"declType":"data","dataDeclType":"newtype","typeArguments":[]},"sourceSpan":{"start":[456,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Builder.purs","end":[456,57]}},{"children":[{"comments":null,"title":"newtypeOptionFields","info":{"declType":"instance","dependencies":[],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Newtype"],"Newtype"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Builder","Internal"],"OptionFields"]},{"annotation":[],"tag":"TypeVar","contents":"a"}]}]},{"annotation":[],"tag":"TypeWildcard","contents":null}]}},"sourceSpan":{"start":[41,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Builder/Internal.purs","end":[41,66]}},{"comments":null,"title":"optionFieldsHasName","info":{"declType":"instance","dependencies":[],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Builder","Internal"],"HasName"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Builder","Internal"],"OptionFields"]}]}},"sourceSpan":{"start":[63,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Builder/Internal.purs","end":[64,84]}},{"comments":null,"title":"optionFieldsHasCompleter","info":{"declType":"instance","dependencies":[],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Builder","Internal"],"HasCompleter"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Builder","Internal"],"OptionFields"]}]}},"sourceSpan":{"start":[73,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Builder/Internal.purs","end":[74,80]}},{"comments":null,"title":"optionFieldsHasValue","info":{"declType":"instance","dependencies":[],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Builder","Internal"],"HasValue"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Builder","Internal"],"OptionFields"]}]}},"sourceSpan":{"start":[83,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Builder/Internal.purs","end":[84,25]}},{"comments":null,"title":"optionFieldsHasMetavar","info":{"declType":"instance","dependencies":[],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Builder","Internal"],"HasMetavar"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Builder","Internal"],"OptionFields"]}]}},"sourceSpan":{"start":[91,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Builder/Internal.purs","end":[92,27]}}],"comments":null,"title":"OptionFields","info":{"declType":"data","dataDeclType":"newtype","typeArguments":[["a",null]]},"sourceSpan":{"start":[37,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Builder/Internal.purs","end":[40,44]}},{"children":[{"comments":null,"title":"modMonoid","info":{"declType":"instance","dependencies":[],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Monoid"],"Monoid"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Builder","Internal"],"Mod"]},{"annotation":[],"tag":"TypeVar","contents":"f"}]},{"annotation":[],"tag":"TypeVar","contents":"a"}]}]}},"sourceSpan":{"start":[150,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Builder/Internal.purs","end":[151,40]}},{"comments":"@since 0.13.0.0\n","title":"modSemigroup","info":{"declType":"instance","dependencies":[],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Semigroup"],"Semigroup"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Builder","Internal"],"Mod"]},{"annotation":[],"tag":"TypeVar","contents":"f"}]},{"annotation":[],"tag":"TypeVar","contents":"a"}]}]}},"sourceSpan":{"start":[154,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Builder/Internal.purs","end":[156,45]}}],"comments":"An option modifier.\n\nOption modifiers are values that represent a modification of the properties\nof an option.\n\nThe type parameter @a@ is the pure type of the option, while @f@ is a\nrecord containing its properties (e.g. 'OptionFields' for regular options,\n'FlagFields' for flags, etc...).\n\nAn option modifier consists of 3 elements:\n\n - A field modifier, of the form @f a -> f a@. These are essentially\n (compositions of) setters for some of the properties supported by @f@.\n\n - An optional default value and function to display it.\n\n - A property modifier, of the form @OptProperties -> OptProperties@. This\n is just like the field modifier, but for properties applicable to any\n option.\n\nModifiers are instances of 'Monoid', and can be composed as such.\n\nOne rarely needs to deal with modifiers directly, as most of the times it is\nsufficient to pass them to builders (such as 'strOption' or 'flag') to\ncreate options (see 'Options.Applicative.Builder').\n\nContraints are often used to ensure that the modifiers can be sensibly applied.\nFor example, positional arguments can't be specified by long or short names,\nso the 'HasName' constraint is used to ensure we have a flag or option.\n","title":"Mod","info":{"declType":"data","dataDeclType":"data","typeArguments":[["f",null],["a",null]]},"sourceSpan":{"start":[140,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Builder/Internal.purs","end":[142,52]}},{"children":[{"comments":null,"title":"newtypeInfoMod","info":{"declType":"instance","dependencies":[],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Newtype"],"Newtype"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Builder"],"InfoMod"]},{"annotation":[],"tag":"TypeVar","contents":"a"}]}]},{"annotation":[],"tag":"TypeWildcard","contents":null}]}},"sourceSpan":{"start":[375,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Builder.purs","end":[375,56]}},{"comments":null,"title":"infoModMonoid","info":{"declType":"instance","dependencies":[],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Monoid"],"Monoid"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Builder"],"InfoMod"]},{"annotation":[],"tag":"TypeVar","contents":"a"}]}]}},"sourceSpan":{"start":[377,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Builder.purs","end":[378,28]}},{"comments":null,"title":"infoModSemigroup","info":{"declType":"instance","dependencies":[],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Semigroup"],"Semigroup"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Builder"],"InfoMod"]},{"annotation":[],"tag":"TypeVar","contents":"a"}]}]}},"sourceSpan":{"start":[380,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Builder.purs","end":[381,59]}}],"comments":"Modifier for 'ParserInfo'.\n","title":"InfoMod","info":{"declType":"data","dataDeclType":"newtype","typeArguments":[["a",null]]},"sourceSpan":{"start":[374,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Builder.purs","end":[374,59]}},{"children":[{"comments":null,"title":"newtypeFlagFields","info":{"declType":"instance","dependencies":[],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Newtype"],"Newtype"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Builder","Internal"],"FlagFields"]},{"annotation":[],"tag":"TypeVar","contents":"a"}]}]},{"annotation":[],"tag":"TypeWildcard","contents":null}]}},"sourceSpan":{"start":[46,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Builder/Internal.purs","end":[46,62]}},{"comments":null,"title":"flagFieldsHasName","info":{"declType":"instance","dependencies":[],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Builder","Internal"],"HasName"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Builder","Internal"],"FlagFields"]}]}},"sourceSpan":{"start":[66,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Builder/Internal.purs","end":[67,84]}}],"comments":null,"title":"FlagFields","info":{"declType":"data","dataDeclType":"newtype","typeArguments":[["a",null]]},"sourceSpan":{"start":[43,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Builder/Internal.purs","end":[45,22]}},{"children":[{"comments":null,"title":"newtypeCommandFields","info":{"declType":"instance","dependencies":[],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Newtype"],"Newtype"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Builder","Internal"],"CommandFields"]},{"annotation":[],"tag":"TypeVar","contents":"a"}]}]},{"annotation":[],"tag":"TypeWildcard","contents":null}]}},"sourceSpan":{"start":[51,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Builder/Internal.purs","end":[51,68]}},{"comments":null,"title":"commandFieldsHasMetavar","info":{"declType":"instance","dependencies":[],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Builder","Internal"],"HasMetavar"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Builder","Internal"],"CommandFields"]}]}},"sourceSpan":{"start":[95,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Builder/Internal.purs","end":[96,27]}}],"comments":null,"title":"CommandFields","info":{"declType":"data","dataDeclType":"newtype","typeArguments":[["a",null]]},"sourceSpan":{"start":[48,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Builder/Internal.purs","end":[50,31]}},{"children":[{"comments":null,"title":"newtypeArgumentFields","info":{"declType":"instance","dependencies":[],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Newtype"],"Newtype"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Builder","Internal"],"ArgumentFields"]},{"annotation":[],"tag":"TypeVar","contents":"a"}]}]},{"annotation":[],"tag":"TypeWildcard","contents":null}]}},"sourceSpan":{"start":[56,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Builder/Internal.purs","end":[56,70]}},{"comments":null,"title":"argumentFieldsHasCompleter","info":{"declType":"instance","dependencies":[],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Builder","Internal"],"HasCompleter"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Builder","Internal"],"ArgumentFields"]}]}},"sourceSpan":{"start":[76,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Builder/Internal.purs","end":[77,82]}},{"comments":null,"title":"argumentFieldsHasValue","info":{"declType":"instance","dependencies":[],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Builder","Internal"],"HasValue"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Builder","Internal"],"ArgumentFields"]}]}},"sourceSpan":{"start":[85,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Builder/Internal.purs","end":[86,25]}},{"comments":null,"title":"argumentFieldsHasMetavar","info":{"declType":"instance","dependencies":[],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Builder","Internal"],"HasMetavar"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Builder","Internal"],"ArgumentFields"]}]}},"sourceSpan":{"start":[93,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Builder/Internal.purs","end":[94,27]}}],"comments":null,"title":"ArgumentFields","info":{"declType":"data","dataDeclType":"newtype","typeArguments":[["a",null]]},"sourceSpan":{"start":[54,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Builder/Internal.purs","end":[55,32]}},{"children":[{"comments":null,"title":"optionFieldsHasCompleter","info":{"declType":"instance","dependencies":[],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Builder","Internal"],"HasCompleter"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Builder","Internal"],"OptionFields"]}]}},"sourceSpan":{"start":[73,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Builder/Internal.purs","end":[74,80]}},{"comments":null,"title":"argumentFieldsHasCompleter","info":{"declType":"instance","dependencies":[],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Builder","Internal"],"HasCompleter"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Builder","Internal"],"ArgumentFields"]}]}},"sourceSpan":{"start":[76,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Builder/Internal.purs","end":[77,82]}}],"comments":null,"title":"HasCompleter","info":{"fundeps":[],"arguments":[["f",null]],"declType":"typeClass","superclasses":[]},"sourceSpan":{"start":[70,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Builder/Internal.purs","end":[71,67]}},{"children":[{"comments":null,"title":"optionFieldsHasMetavar","info":{"declType":"instance","dependencies":[],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Builder","Internal"],"HasMetavar"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Builder","Internal"],"OptionFields"]}]}},"sourceSpan":{"start":[91,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Builder/Internal.purs","end":[92,27]}},{"comments":null,"title":"argumentFieldsHasMetavar","info":{"declType":"instance","dependencies":[],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Builder","Internal"],"HasMetavar"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Builder","Internal"],"ArgumentFields"]}]}},"sourceSpan":{"start":[93,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Builder/Internal.purs","end":[94,27]}},{"comments":null,"title":"commandFieldsHasMetavar","info":{"declType":"instance","dependencies":[],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Builder","Internal"],"HasMetavar"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Builder","Internal"],"CommandFields"]}]}},"sourceSpan":{"start":[95,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Builder/Internal.purs","end":[96,27]}}],"comments":null,"title":"HasMetavar","info":{"fundeps":[],"arguments":[["f",null]],"declType":"typeClass","superclasses":[]},"sourceSpan":{"start":[89,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Builder/Internal.purs","end":[90,43]}},{"children":[{"comments":null,"title":"optionFieldsHasName","info":{"declType":"instance","dependencies":[],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Builder","Internal"],"HasName"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Builder","Internal"],"OptionFields"]}]}},"sourceSpan":{"start":[63,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Builder/Internal.purs","end":[64,84]}},{"comments":null,"title":"flagFieldsHasName","info":{"declType":"instance","dependencies":[],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Builder","Internal"],"HasName"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Builder","Internal"],"FlagFields"]}]}},"sourceSpan":{"start":[66,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Builder/Internal.purs","end":[67,84]}}],"comments":null,"title":"HasName","info":{"fundeps":[],"arguments":[["f",null]],"declType":"typeClass","superclasses":[]},"sourceSpan":{"start":[59,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Builder/Internal.purs","end":[60,42]}},{"children":[{"comments":null,"title":"optionFieldsHasValue","info":{"declType":"instance","dependencies":[],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Builder","Internal"],"HasValue"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Builder","Internal"],"OptionFields"]}]}},"sourceSpan":{"start":[83,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Builder/Internal.purs","end":[84,25]}},{"comments":null,"title":"argumentFieldsHasValue","info":{"declType":"instance","dependencies":[],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Builder","Internal"],"HasValue"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Builder","Internal"],"ArgumentFields"]}]}},"sourceSpan":{"start":[85,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Builder/Internal.purs","end":[86,25]}}],"comments":null,"title":"HasValue","info":{"fundeps":[],"arguments":[["f",null]],"declType":"typeClass","superclasses":[]},"sourceSpan":{"start":[80,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Builder/Internal.purs","end":[82,41]}},{"children":[],"comments":"Specify a default value for an option.\n\n**Note**: Because this modifier means the parser will never fail,\ndo not use it with combinators such as 'some' or 'many', as\nthese combinators continue until a failure occurs.\nCareless use will thus result in a hang.\n\nTo display the default value, combine with `showDefault` or\n`showDefaultWith`.\n","title":"value","info":{"declType":"value","type":{"annotation":[],"tag":"ForAll","contents":["f",{"annotation":[],"tag":"ForAll","contents":["a",{"annotation":[],"tag":"ConstrainedType","contents":[{"constraintAnn":[],"constraintClass":[["Options","Applicative","Builder","Internal"],"HasValue"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"f"}],"constraintKindArgs":[],"constraintData":null},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeVar","contents":"a"}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Builder","Internal"],"Mod"]},{"annotation":[],"tag":"TypeVar","contents":"f"}]},{"annotation":[],"tag":"TypeVar","contents":"a"}]}]}]},null]},null]}},"sourceSpan":{"start":[174,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Builder.purs","end":[174,48]}},{"children":[],"comments":"Builder for a boolean flag.\n\n**Note**: Because this parser will never fail, it can not be used with\ncombinators such as 'some' or 'many', as these combinators continue until\na failure occurs. See @flag'@.\n\n> switch = flag false true\n","title":"switch","info":{"declType":"value","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Builder","Internal"],"Mod"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Builder","Internal"],"FlagFields"]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Types"],"Parser"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}]}},"sourceSpan":{"start":[336,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Builder.purs","end":[336,51]}},{"children":[],"comments":"Allow full mixing of subcommand and parent arguments by inlining\nselected subparsers into the parent parser.\n\n**Note:** When this option is used, preferences for the subparser which\neffect the parser behaviour (such as noIntersperse) are ignored.\n","title":"subparserInline","info":{"declType":"value","type":{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Builder"],"PrefsMod"]}},"sourceSpan":{"start":[498,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Builder.purs","end":[498,28]}},{"children":[],"comments":"Builder for a command parser. The 'command' modifier can be used to\nspecify individual commands.\n","title":"subparser","info":{"declType":"value","type":{"annotation":[],"tag":"ForAll","contents":["a",{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Builder","Internal"],"Mod"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Builder","Internal"],"CommandFields"]}]},{"annotation":[],"tag":"TypeVar","contents":"a"}]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Types"],"Parser"]},{"annotation":[],"tag":"TypeVar","contents":"a"}]}]},null]}},"sourceSpan":{"start":[271,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Builder.purs","end":[271,55]}},{"children":[],"comments":"Apply a function to the option description in the usage text.\n\n> import Options.Applicative.Help\n> flag' () (short 't' <> style bold)\n\n**NOTE**: This builder is more flexible than its name and example\nallude. One of the motivating examples for its addition was to\nused `const` to completely replace the usage text of an option.\n","title":"style","info":{"declType":"value","type":{"annotation":[],"tag":"ForAll","contents":["f",{"annotation":[],"tag":"ForAll","contents":["a",{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]}]}}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Builder","Internal"],"Mod"]},{"annotation":[],"tag":"TypeVar","contents":"f"}]},{"annotation":[],"tag":"TypeVar","contents":"a"}]}]},null]},null]}},"sourceSpan":{"start":[218,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Builder.purs","end":[218,47]}},{"children":[],"comments":"Builder for an option taking a 'String' argument.\n","title":"strOption","info":{"declType":"value","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Builder","Internal"],"Mod"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Builder","Internal"],"OptionFields"]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Types"],"Parser"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}]}},"sourceSpan":{"start":[355,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Builder.purs","end":[355,54]}},{"children":[],"comments":"Builder for a 'String' argument.\n","title":"strArgument","info":{"declType":"value","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Builder","Internal"],"Mod"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Builder","Internal"],"ArgumentFields"]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Types"],"Parser"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}]}},"sourceSpan":{"start":[286,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Builder.purs","end":[286,58]}},{"children":[],"comments":"String 'Option' reader.\n","title":"str","info":{"declType":"value","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Types"],"ReadM"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}},"sourceSpan":{"start":[119,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Builder.purs","end":[119,20]}},{"children":[],"comments":"Show full help text on any error.\n","title":"showHelpOnError","info":{"declType":"value","type":{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Builder"],"PrefsMod"]}},"sourceSpan":{"start":[478,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Builder.purs","end":[478,28]}},{"children":[],"comments":"Show the help text if the user enters only the program name or\nsubcommand.\n\nThis will suppress a \"Missing:\" error and show the full usage\ninstead if a user just types the name of the program.\n","title":"showHelpOnEmpty","info":{"declType":"value","type":{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Builder"],"PrefsMod"]}},"sourceSpan":{"start":[486,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Builder.purs","end":[486,28]}},{"children":[],"comments":"Show the default value for this option using a function.\n","title":"showDefaultWith","info":{"declType":"value","type":{"annotation":[],"tag":"ForAll","contents":["f",{"annotation":[],"tag":"ForAll","contents":["a",{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeVar","contents":"a"}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Builder","Internal"],"Mod"]},{"annotation":[],"tag":"TypeVar","contents":"f"}]},{"annotation":[],"tag":"TypeVar","contents":"a"}]}]},null]},null]}},"sourceSpan":{"start":[178,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Builder.purs","end":[178,56]}},{"children":[],"comments":"Show the default value for this option using its 'Show' instance.\n","title":"showDefault","info":{"declType":"value","type":{"annotation":[],"tag":"ForAll","contents":["f",{"annotation":[],"tag":"ForAll","contents":["a",{"annotation":[],"tag":"ConstrainedType","contents":[{"constraintAnn":[],"constraintClass":[["Data","Show"],"Show"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"a"}],"constraintKindArgs":[],"constraintData":null},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Builder","Internal"],"Mod"]},{"annotation":[],"tag":"TypeVar","contents":"f"}]},{"annotation":[],"tag":"TypeVar","contents":"a"}]}]},null]},null]}},"sourceSpan":{"start":[182,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Builder.purs","end":[182,45]}},{"children":[],"comments":"Specify a short name for an option.\n","title":"short","info":{"declType":"value","type":{"annotation":[],"tag":"ForAll","contents":["f",{"annotation":[],"tag":"ForAll","contents":["a",{"annotation":[],"tag":"ConstrainedType","contents":[{"constraintAnn":[],"constraintClass":[["Options","Applicative","Builder","Internal"],"HasName"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"f"}],"constraintKindArgs":[],"constraintData":null},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Char"]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Builder","Internal"],"Mod"]},{"annotation":[],"tag":"TypeVar","contents":"f"}]},{"annotation":[],"tag":"TypeVar","contents":"a"}]}]}]},null]},null]}},"sourceSpan":{"start":[158,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Builder.purs","end":[158,50]}},{"children":[],"comments":"Specify a short program description as a 'Text.PrettyPrint.ANSI.Leijen.Doc'\nvalue.\n","title":"progDescDoc","info":{"declType":"value","type":{"annotation":[],"tag":"ForAll","contents":["a",{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]}]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Builder"],"InfoMod"]},{"annotation":[],"tag":"TypeVar","contents":"a"}]}]},null]}},"sourceSpan":{"start":[419,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Builder.purs","end":[419,48]}},{"children":[],"comments":"Specify a short program description.\n","title":"progDesc","info":{"declType":"value","type":{"annotation":[],"tag":"ForAll","contents":["a",{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Builder"],"InfoMod"]},{"annotation":[],"tag":"TypeVar","contents":"a"}]}]},null]}},"sourceSpan":{"start":[414,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Builder.purs","end":[414,42]}},{"children":[],"comments":"Create a `ParserPrefs` given a modifier\n","title":"prefs","info":{"declType":"value","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Builder"],"PrefsMod"]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Types"],"ParserPrefs"]}]}},"sourceSpan":{"start":[506,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Builder.purs","end":[506,33]}},{"children":[],"comments":"Builder for an option using the given reader.\n\nThis is a regular option, and should always have either a `long` or\n`short` name specified in the modifiers (or both).\n\n> nameParser = option str ( long \"name\" <> short 'n' )\n","title":"option","info":{"declType":"value","type":{"annotation":[],"tag":"ForAll","contents":["a",{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Types"],"ReadM"]},{"annotation":[],"tag":"TypeVar","contents":"a"}]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Builder","Internal"],"Mod"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Builder","Internal"],"OptionFields"]}]},{"annotation":[],"tag":"TypeVar","contents":"a"}]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Types"],"Parser"]},{"annotation":[],"tag":"TypeVar","contents":"a"}]}]}]},null]}},"sourceSpan":{"start":[365,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Builder.purs","end":[365,62]}},{"children":[],"comments":"Number 'Option' reader.\n","title":"number","info":{"declType":"value","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Types"],"ReadM"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Number"]}]}},"sourceSpan":{"start":[129,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Builder.purs","end":[129,23]}},{"children":[],"comments":"Disable parsing of regular options after arguments. After a positional\nargument is parsed, all remaining options and arguments will be treated\nas a positional arguments. Not recommended in general as users often\nexpect to be able to freely intersperse regular options and flags within\ncommand line options.\n","title":"noIntersperse","info":{"declType":"value","type":{"annotation":[],"tag":"ForAll","contents":["a",{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Builder"],"InfoMod"]},{"annotation":[],"tag":"TypeVar","contents":"a"}]},null]}},"sourceSpan":{"start":[431,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Builder.purs","end":[431,37]}},{"children":[],"comments":"Turn off backtracking after subcommand is parsed.\n","title":"noBacktrack","info":{"declType":"value","type":{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Builder"],"PrefsMod"]}},"sourceSpan":{"start":[490,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Builder.purs","end":[490,24]}},{"children":[],"comments":"Specify the error to display when no argument is provided to this option.\n","title":"noArgError","info":{"declType":"value","type":{"annotation":[],"tag":"ForAll","contents":["a",{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Types"],"ParseError"]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Builder","Internal"],"Mod"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Builder","Internal"],"OptionFields"]}]},{"annotation":[],"tag":"TypeVar","contents":"a"}]}]},null]}},"sourceSpan":{"start":[195,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Builder.purs","end":[195,57]}},{"children":[],"comments":"Include a suffix to attach to the metavar when multiple values\ncan be entered.\n","title":"multiSuffix","info":{"declType":"value","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Builder"],"PrefsMod"]}]}},"sourceSpan":{"start":[467,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Builder.purs","end":[467,34]}},{"children":[],"comments":"Specify a metavariable for the argument.\n\nMetavariables have no effect on the actual parser, and only serve to specify\nthe symbolic name for an argument to be displayed in the help text.\n","title":"metavar","info":{"declType":"value","type":{"annotation":[],"tag":"ForAll","contents":["f",{"annotation":[],"tag":"ForAll","contents":["a",{"annotation":[],"tag":"ConstrainedType","contents":[{"constraintAnn":[],"constraintClass":[["Options","Applicative","Builder","Internal"],"HasMetavar"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"f"}],"constraintKindArgs":[],"constraintData":null},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Builder","Internal"],"Mod"]},{"annotation":[],"tag":"TypeVar","contents":"f"}]},{"annotation":[],"tag":"TypeVar","contents":"a"}]}]}]},null]},null]}},"sourceSpan":{"start":[202,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Builder.purs","end":[202,57]}},{"children":[],"comments":"Convert a function producing a 'Maybe' into a reader.\n","title":"maybeReader","info":{"declType":"value","type":{"annotation":[],"tag":"ForAll","contents":["a",{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"annotation":[],"tag":"TypeVar","contents":"a"}]}]}}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Types"],"ReadM"]},{"annotation":[],"tag":"TypeVar","contents":"a"}]}]},null]}},"sourceSpan":{"start":[146,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Builder.purs","end":[146,56]}},{"children":[],"comments":"Specify a long name for an option.\n","title":"long","info":{"declType":"value","type":{"annotation":[],"tag":"ForAll","contents":["f",{"annotation":[],"tag":"ForAll","contents":["a",{"annotation":[],"tag":"ConstrainedType","contents":[{"constraintAnn":[],"constraintClass":[["Options","Applicative","Builder","Internal"],"HasName"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"f"}],"constraintKindArgs":[],"constraintData":null},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Builder","Internal"],"Mod"]},{"annotation":[],"tag":"TypeVar","contents":"f"}]},{"annotation":[],"tag":"TypeVar","contents":"a"}]}]}]},null]},null]}},"sourceSpan":{"start":[162,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Builder.purs","end":[162,51]}},{"children":[],"comments":"Hide this option from the help text\n","title":"internal","info":{"declType":"value","type":{"annotation":[],"tag":"ForAll","contents":["f",{"annotation":[],"tag":"ForAll","contents":["a",{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Builder","Internal"],"Mod"]},{"annotation":[],"tag":"TypeVar","contents":"f"}]},{"annotation":[],"tag":"TypeVar","contents":"a"}]},null]},null]}},"sourceSpan":{"start":[198,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Builder/Internal.purs","end":[198,32]}},{"children":[],"comments":"Int 'Option' reader.\n","title":"int","info":{"declType":"value","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Types"],"ReadM"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]}},"sourceSpan":{"start":[123,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Builder.purs","end":[123,17]}},{"children":[],"comments":"An option that always fails and displays a message.\n","title":"infoOption","info":{"declType":"value","type":{"annotation":[],"tag":"ForAll","contents":["a",{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Builder","Internal"],"Mod"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Builder","Internal"],"OptionFields"]}]},{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeVar","contents":"a"}]},{"annotation":[],"tag":"TypeVar","contents":"a"}]}}]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Types"],"Parser"]},{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeVar","contents":"a"}]},{"annotation":[],"tag":"TypeVar","contents":"a"}]}}]}]}]},null]}},"sourceSpan":{"start":[351,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Builder.purs","end":[351,79]}},{"children":[],"comments":"Create a 'ParserInfo' given a 'Parser' and a modifier.\n","title":"info","info":{"declType":"value","type":{"annotation":[],"tag":"ForAll","contents":["a",{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Types"],"Parser"]},{"annotation":[],"tag":"TypeVar","contents":"a"}]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Builder"],"InfoMod"]},{"annotation":[],"tag":"TypeVar","contents":"a"}]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Types"],"ParserInfo"]},{"annotation":[],"tag":"TypeVar","contents":"a"}]}]}]},null]}},"sourceSpan":{"start":[444,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Builder.purs","end":[444,56]}},{"children":[],"comments":"Trivial option modifier.\n","title":"idm","info":{"declType":"value","type":{"annotation":[],"tag":"ForAll","contents":["m",{"annotation":[],"tag":"ConstrainedType","contents":[{"constraintAnn":[],"constraintClass":[["Data","Monoid"],"Monoid"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"m"}],"constraintKindArgs":[],"constraintData":null},{"annotation":[],"tag":"TypeVar","contents":"m"}]},null]}},"sourceSpan":{"start":[520,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Builder.purs","end":[520,31]}},{"children":[],"comments":"Hide this option from the brief description.\n","title":"hidden","info":{"declType":"value","type":{"annotation":[],"tag":"ForAll","contents":["f",{"annotation":[],"tag":"ForAll","contents":["a",{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Builder","Internal"],"Mod"]},{"annotation":[],"tag":"TypeVar","contents":"f"}]},{"annotation":[],"tag":"TypeVar","contents":"a"}]},null]},null]}},"sourceSpan":{"start":[206,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Builder.purs","end":[206,30]}},{"children":[],"comments":"Specify the help text for an option as a 'Text.PrettyPrint.ANSI.Leijen.Doc'\nvalue.\n","title":"helpDoc","info":{"declType":"value","type":{"annotation":[],"tag":"ForAll","contents":["f",{"annotation":[],"tag":"ForAll","contents":["a",{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]}]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Builder","Internal"],"Mod"]},{"annotation":[],"tag":"TypeVar","contents":"f"}]},{"annotation":[],"tag":"TypeVar","contents":"a"}]}]},null]},null]}},"sourceSpan":{"start":[191,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Builder.purs","end":[191,44]}},{"children":[],"comments":"Specify the help text for an option.\n","title":"help","info":{"declType":"value","type":{"annotation":[],"tag":"ForAll","contents":["a",{"annotation":[],"tag":"ForAll","contents":["f",{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Builder","Internal"],"Mod"]},{"annotation":[],"tag":"TypeVar","contents":"f"}]},{"annotation":[],"tag":"TypeVar","contents":"a"}]}]},null]},null]}},"sourceSpan":{"start":[186,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Builder.purs","end":[186,38]}},{"children":[],"comments":"Specify a header for this parser as a 'Text.PrettyPrint.ANSI.Leijen.Doc'\nvalue.\n","title":"headerDoc","info":{"declType":"value","type":{"annotation":[],"tag":"ForAll","contents":["a",{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]}]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Builder"],"InfoMod"]},{"annotation":[],"tag":"TypeVar","contents":"a"}]}]},null]}},"sourceSpan":{"start":[401,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Builder.purs","end":[401,46]}},{"children":[],"comments":"Specify a header for this parser.\n","title":"header","info":{"declType":"value","type":{"annotation":[],"tag":"ForAll","contents":["a",{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Builder"],"InfoMod"]},{"annotation":[],"tag":"TypeVar","contents":"a"}]}]},null]}},"sourceSpan":{"start":[396,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Builder.purs","end":[396,40]}},{"children":[],"comments":"Show a full description in the help text of this parser (i.e.\noptions with the `hidden` modifier will still be displayed,\nunlike `briefDesc`).\n","title":"fullDesc","info":{"declType":"value","type":{"annotation":[],"tag":"ForAll","contents":["a",{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Builder"],"InfoMod"]},{"annotation":[],"tag":"TypeVar","contents":"a"}]},null]}},"sourceSpan":{"start":[386,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Builder.purs","end":[386,32]}},{"children":[],"comments":"Intersperse matched options and arguments normally, but allow unmatched\noptions to be treated as positional arguments.\nThis is sometimes useful if one is wrapping a third party cli tool and\nneeds to pass options through, while also providing a handful of their\nown options. Not recommended in general as typos by the user may not\nyield a parse error and cause confusion.\n","title":"forwardOptions","info":{"declType":"value","type":{"annotation":[],"tag":"ForAll","contents":["a",{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Builder"],"InfoMod"]},{"annotation":[],"tag":"TypeVar","contents":"a"}]},null]}},"sourceSpan":{"start":[440,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Builder.purs","end":[440,38]}},{"children":[],"comments":"Specify a footer for this parser as a 'Text.PrettyPrint.ANSI.Leijen.Doc'\nvalue.\n","title":"footerDoc","info":{"declType":"value","type":{"annotation":[],"tag":"ForAll","contents":["a",{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]}]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Builder"],"InfoMod"]},{"annotation":[],"tag":"TypeVar","contents":"a"}]}]},null]}},"sourceSpan":{"start":[410,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Builder.purs","end":[410,46]}},{"children":[],"comments":"Specify a footer for this parser.\n","title":"footer","info":{"declType":"value","type":{"annotation":[],"tag":"ForAll","contents":["a",{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Builder"],"InfoMod"]},{"annotation":[],"tag":"TypeVar","contents":"a"}]}]},null]}},"sourceSpan":{"start":[405,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Builder.purs","end":[405,40]}},{"children":[],"comments":"Builder for a flag parser without a default value.\n\nSame as 'flag', but with no default value. In particular, this flag will\nnever parse successfully by itself.\n\nIt still makes sense to use it as part of a composite parser. For example\n\n> length <$> many (flag' () (short 't'))\n\nis a parser that counts the number of \"-t\" arguments on the command line,\nalternatively\n\n> flag' true (long \"on\") <|> flag' false (long \"off\")\n\nwill require the user to enter '--on' or '--off' on the command line.\n","title":"flag'","info":{"declType":"value","type":{"annotation":[],"tag":"ForAll","contents":["a",{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeVar","contents":"a"}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Builder","Internal"],"Mod"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Builder","Internal"],"FlagFields"]}]},{"annotation":[],"tag":"TypeVar","contents":"a"}]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Types"],"Parser"]},{"annotation":[],"tag":"TypeVar","contents":"a"}]}]}]},null]}},"sourceSpan":{"start":[319,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Builder.purs","end":[322,18]}},{"children":[],"comments":"Builder for a flag parser.\n\nA flag that switches from a \\\"default value\\\" to an \\\"active value\\\" when\nencountered. For a simple boolean value, use `switch` instead.\n\n**Note**: Because this parser will never fail, it can not be used with\ncombinators such as 'some' or 'many', as these combinators continue until\na failure occurs. See @flag'@.\n","title":"flag","info":{"declType":"value","type":{"annotation":[],"tag":"ForAll","contents":["a",{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeVar","contents":"a"}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeVar","contents":"a"}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Builder","Internal"],"Mod"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Builder","Internal"],"FlagFields"]}]},{"annotation":[],"tag":"TypeVar","contents":"a"}]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Types"],"Parser"]},{"annotation":[],"tag":"TypeVar","contents":"a"}]}]}]}]},null]}},"sourceSpan":{"start":[297,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Builder.purs","end":[301,17]}},{"children":[],"comments":"Specify an exit code if a parse error occurs.\n","title":"failureCode","info":{"declType":"value","type":{"annotation":[],"tag":"ForAll","contents":["a",{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["ExitCodes"],"ExitCode"]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Builder"],"InfoMod"]},{"annotation":[],"tag":"TypeVar","contents":"a"}]}]},null]}},"sourceSpan":{"start":[423,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Builder.purs","end":[423,47]}},{"children":[],"comments":"Convert a function producing an 'Either' into a reader.\n","title":"eitherReader","info":{"declType":"value","type":{"annotation":[],"tag":"ForAll","contents":["a",{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Either"],"Either"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"annotation":[],"tag":"TypeVar","contents":"a"}]}]}}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Types"],"ReadM"]},{"annotation":[],"tag":"TypeVar","contents":"a"}]}]},null]}},"sourceSpan":{"start":[142,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Builder.purs","end":[142,65]}},{"children":[],"comments":"Turn on disambiguation.\n\nSee\nhttps://github.com/pcapriotti/optparse-applicative#disambiguation\n","title":"disambiguate","info":{"declType":"value","type":{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Builder"],"PrefsMod"]}},"sourceSpan":{"start":[474,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Builder.purs","end":[474,25]}},{"children":[],"comments":"Null 'Option' reader. All arguments will fail validation.\n","title":"disabled","info":{"declType":"value","type":{"annotation":[],"tag":"ForAll","contents":["a",{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Types"],"ReadM"]},{"annotation":[],"tag":"TypeVar","contents":"a"}]},null]}},"sourceSpan":{"start":[152,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Builder.purs","end":[152,30]}},{"children":[],"comments":"Default preferences.\n","title":"defaultPrefs","info":{"declType":"value","type":{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Types"],"ParserPrefs"]}},"sourceSpan":{"start":[524,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Builder.purs","end":[524,28]}},{"children":[],"comments":"Add a completer to an argument.\n\nA completer is a function `String -> Effect String` which, given a partial\nargument, returns all possible completions for that argument.\n","title":"completer","info":{"declType":"value","type":{"annotation":[],"tag":"ForAll","contents":["f",{"annotation":[],"tag":"ForAll","contents":["a",{"annotation":[],"tag":"ConstrainedType","contents":[{"constraintAnn":[],"constraintClass":[["Options","Applicative","Builder","Internal"],"HasCompleter"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"f"}],"constraintKindArgs":[],"constraintData":null},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Types"],"Completer"]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Builder","Internal"],"Mod"]},{"annotation":[],"tag":"TypeVar","contents":"f"}]},{"annotation":[],"tag":"TypeVar","contents":"a"}]}]}]},null]},null]}},"sourceSpan":{"start":[264,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Builder.purs","end":[264,64]}},{"children":[],"comments":"Add a list of possible completion values.\n","title":"completeWith","info":{"declType":"value","type":{"annotation":[],"tag":"ForAll","contents":["f",{"annotation":[],"tag":"ForAll","contents":["a",{"annotation":[],"tag":"ConstrainedType","contents":[{"constraintAnn":[],"constraintClass":[["Options","Applicative","Builder","Internal"],"HasCompleter"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"f"}],"constraintKindArgs":[],"constraintData":null},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Array"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Builder","Internal"],"Mod"]},{"annotation":[],"tag":"TypeVar","contents":"f"}]},{"annotation":[],"tag":"TypeVar","contents":"a"}]}]}]},null]},null]}},"sourceSpan":{"start":[250,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Builder.purs","end":[250,70]}},{"children":[],"comments":"Add a description to a group of commands.\n\nAdvanced feature for separating logical groups of commands on the parse line.\n\nIf using the same `metavar` for each group of commands, it may yield a more\nattractive usage text combined with `hidden` for some groups.\n","title":"commandGroup","info":{"declType":"value","type":{"annotation":[],"tag":"ForAll","contents":["a",{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Builder","Internal"],"Mod"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Builder","Internal"],"CommandFields"]}]},{"annotation":[],"tag":"TypeVar","contents":"a"}]}]},null]}},"sourceSpan":{"start":[245,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Builder.purs","end":[245,56]}},{"children":[],"comments":"Add a command to a subparser option.\n\nSuggested usage for multiple commands is to add them to a single subparser. e.g.\n\n```purescript\nsample :: Parser Sample\nsample = subparser\n       ( command \"hello\"\n         (info hello (progDesc \"Print greeting\"))\n      <> command \"goodbye\"\n         (info goodbye (progDesc \"Say goodbye\"))\n       )\n```\n","title":"command","info":{"declType":"value","type":{"annotation":[],"tag":"ForAll","contents":["a",{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Types"],"ParserInfo"]},{"annotation":[],"tag":"TypeVar","contents":"a"}]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Builder","Internal"],"Mod"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Builder","Internal"],"CommandFields"]}]},{"annotation":[],"tag":"TypeVar","contents":"a"}]}]}]},null]}},"sourceSpan":{"start":[235,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Builder.purs","end":[235,67]}},{"children":[],"comments":"Set the maximum width of the generated help text.\n","title":"columns","info":{"declType":"value","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Builder"],"PrefsMod"]}]}},"sourceSpan":{"start":[502,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Builder.purs","end":[502,27]}},{"children":[],"comments":"Only show a brief description in the help text of this parser (i.e.\noptions with the `hidden` modifier will NOT be displayed,\nunlike `fullDesc`).\n","title":"briefDesc","info":{"declType":"value","type":{"annotation":[],"tag":"ForAll","contents":["a",{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Builder"],"InfoMod"]},{"annotation":[],"tag":"TypeVar","contents":"a"}]},null]}},"sourceSpan":{"start":[392,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Builder.purs","end":[392,33]}},{"children":[],"comments":"Boolean 'Option' reader.\n","title":"boolean","info":{"declType":"value","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Types"],"ReadM"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}},"sourceSpan":{"start":[135,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Builder.purs","end":[135,25]}},{"children":[],"comments":"Builder for an argument parser.\n","title":"argument","info":{"declType":"value","type":{"annotation":[],"tag":"ForAll","contents":["a",{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Types"],"ReadM"]},{"annotation":[],"tag":"TypeVar","contents":"a"}]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Builder","Internal"],"Mod"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Builder","Internal"],"ArgumentFields"]}]},{"annotation":[],"tag":"TypeVar","contents":"a"}]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Types"],"Parser"]},{"annotation":[],"tag":"TypeVar","contents":"a"}]}]}]},null]}},"sourceSpan":{"start":[279,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Builder.purs","end":[279,66]}},{"children":[],"comments":"Add a bash completion action. Common actions include `file` and\n`directory`. See\n<http://www.gnu.org/software/bash/manual/html_node/Programmable-Completion-Builtins.html#Programmable-Completion-Builtins>\nfor a complete list.\n","title":"action","info":{"declType":"value","type":{"annotation":[],"tag":"ForAll","contents":["f",{"annotation":[],"tag":"ForAll","contents":["a",{"annotation":[],"tag":"ConstrainedType","contents":[{"constraintAnn":[],"constraintClass":[["Options","Applicative","Builder","Internal"],"HasCompleter"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"f"}],"constraintKindArgs":[],"constraintData":null},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Builder","Internal"],"Mod"]},{"annotation":[],"tag":"TypeVar","contents":"f"}]},{"annotation":[],"tag":"TypeVar","contents":"a"}]}]}]},null]},null]}},"sourceSpan":{"start":[257,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Builder.purs","end":[257,58]}},{"children":[],"comments":"An option that always fails.\n\nWhen this option is encountered, the option parser immediately aborts with\nthe given parse error.  If you simply want to output a message, use\n'infoOption' instead.\n","title":"abortOption","info":{"declType":"value","type":{"annotation":[],"tag":"ForAll","contents":["a",{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Types"],"ParseError"]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Builder","Internal"],"Mod"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Builder","Internal"],"OptionFields"]}]},{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeVar","contents":"a"}]},{"annotation":[],"tag":"TypeVar","contents":"a"}]}}]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Types"],"Parser"]},{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeVar","contents":"a"}]},{"annotation":[],"tag":"TypeVar","contents":"a"}]}}]}]}]},null]}},"sourceSpan":{"start":[344,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Builder.purs","end":[344,84]}}]},{"moduleName":{"package":null,"item":["Options","Applicative","Builder","Completer"]},"declarations":[{"children":[],"comments":"Create a 'Completer' from an IO action\n","title":"listIOCompleter","info":{"declType":"value","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Array"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}}]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Types"],"Completer"]}]}},"sourceSpan":{"start":[25,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Builder/Completer.purs","end":[25,54]}},{"children":[],"comments":"Create a 'Completer' from a constant\n","title":"listCompleter","info":{"declType":"value","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Array"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Types"],"Completer"]}]}},"sourceSpan":{"start":[31,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Builder/Completer.purs","end":[31,45]}},{"children":[],"comments":"Run a compgen completion action.\n","title":"bashCompleter","info":{"declType":"value","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Types"],"Completer"]}]}},"sourceSpan":{"start":[40,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Builder/Completer.purs","end":[40,37]}}]},{"moduleName":{"package":null,"item":["Options","Applicative","Extra"]},"declarations":[{"children":[],"comments":null,"title":"renderFailure","info":{"declType":"value","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Types"],"ParserFailure"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Help","Types"],"ParserHelp"]}]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Tuple"],"Tuple"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["ExitCodes"],"ExitCode"]}]}]}]}},"sourceSpan":{"start":[300,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Extra.purs","end":[300,77]}},{"children":[],"comments":"Generate a `ParserFailure` from a `ParseError` in a given `Context`.\n\nThis function can be used, for example, to show the help text for a parser:\n\n`handleParseResult <<< Failure $ parserFailure pprefs pinfo ShowHelpText mempty`\n","title":"parserFailure","info":{"declType":"value","type":{"annotation":[],"tag":"ForAll","contents":["a",{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Types"],"ParserPrefs"]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Types"],"ParserInfo"]},{"annotation":[],"tag":"TypeVar","contents":"a"}]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Types"],"ParseError"]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Array"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Types"],"Context"]}]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Types"],"ParserFailure"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Help","Types"],"ParserHelp"]}]}]}]}]}]},null]}},"sourceSpan":{"start":[159,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Extra.purs","end":[161,42]}},{"children":[],"comments":"Builder for a command parser with a \"helper\" option attached.\nUsed in the same way as `subparser`, but includes a `--help|-h` inside\nthe subcommand.\n","title":"hsubparser","info":{"declType":"value","type":{"annotation":[],"tag":"ForAll","contents":["a",{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Builder","Internal"],"Mod"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Builder","Internal"],"CommandFields"]}]},{"annotation":[],"tag":"TypeVar","contents":"a"}]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Types"],"Parser"]},{"annotation":[],"tag":"TypeVar","contents":"a"}]}]},null]}},"sourceSpan":{"start":[87,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Extra.purs","end":[87,56]}},{"children":[],"comments":"A hidden \"helper\" option which always fails. Use this to\nadd the `--help` flag to your CLI parser\n\nA common usage pattern is to apply this applicatively when\ncreating a 'ParserInfo'\n\n> opts :: ParserInfo Sample\n> opts = info (sample <**> helper) mempty\n","title":"helper","info":{"declType":"value","type":{"annotation":[],"tag":"ForAll","contents":["a",{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Types"],"Parser"]},{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeVar","contents":"a"}]},{"annotation":[],"tag":"TypeVar","contents":"a"}]}}]},null]}},"sourceSpan":{"start":[77,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Extra.purs","end":[77,36]}},{"children":[],"comments":"Handle `ParserResult`.\n","title":"handleParseResult","info":{"declType":"value","type":{"annotation":[],"tag":"ForAll","contents":["a",{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Types"],"ParserResult"]},{"annotation":[],"tag":"TypeVar","contents":"a"}]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"annotation":[],"tag":"TypeVar","contents":"a"}]}]},null]}},"sourceSpan":{"start":[110,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Extra.purs","end":[110,58]}},{"children":[],"comments":"Extract the actual result from a `ParserResult` value.\n\nThis function returns 'Nothing' in case of errors.  Possible error messages\nor completion actions are simply discarded.\n\nIf you want to display error messages and invoke completion actions\nappropriately, use 'handleParseResult' instead.\n","title":"getParseResult","info":{"declType":"value","type":{"annotation":[],"tag":"ForAll","contents":["a",{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Types"],"ParserResult"]},{"annotation":[],"tag":"TypeVar","contents":"a"}]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"annotation":[],"tag":"TypeVar","contents":"a"}]}]},null]}},"sourceSpan":{"start":[134,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Extra.purs","end":[134,54]}},{"children":[],"comments":"The most general way to run a program description in pure code.\n","title":"execParserPure","info":{"declType":"value","type":{"annotation":[],"tag":"ForAll","contents":["a",{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Types"],"ParserPrefs"]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Types"],"ParserInfo"]},{"annotation":[],"tag":"TypeVar","contents":"a"}]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Array"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Types"],"ParserResult"]},{"annotation":[],"tag":"TypeVar","contents":"a"}]}]}]}]},null]}},"sourceSpan":{"start":[139,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Extra.purs","end":[142,33]}},{"children":[],"comments":"Run a program description.\n\nParse command line arguments. Display help text and exit if any parse error\noccurs.\n","title":"execParser","info":{"declType":"value","type":{"annotation":[],"tag":"ForAll","contents":["a",{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Types"],"ParserInfo"]},{"annotation":[],"tag":"TypeVar","contents":"a"}]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"annotation":[],"tag":"TypeVar","contents":"a"}]}]},null]}},"sourceSpan":{"start":[100,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Extra.purs","end":[100,49]}},{"children":[],"comments":"Run a program description with custom preferences.\n","title":"customExecParser","info":{"declType":"value","type":{"annotation":[],"tag":"ForAll","contents":["a",{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Types"],"ParserPrefs"]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Types"],"ParserInfo"]},{"annotation":[],"tag":"TypeVar","contents":"a"}]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"annotation":[],"tag":"TypeVar","contents":"a"}]}]}]},null]}},"sourceSpan":{"start":[104,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Extra.purs","end":[104,70]}}]},{"moduleName":{"package":null,"item":["Options","Applicative","Internal","Utils"]},"declarations":[{"children":[],"comments":null,"title":"(<**>)","info":{"declType":"alias","alias":[["Options","Applicative","Internal","Utils"],{"Right":{"Left":{"Ident":"apApplyFlipped"}}}],"fixity":{"associativity":"infixl","precedence":4}},"sourceSpan":{"start":[47,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Internal/Utils.purs","end":[47,32]}}]},{"moduleName":{"package":null,"item":["Options","Applicative","Types"]},"declarations":[{"children":[{"comments":null,"title":"readMNewtype","info":{"declType":"instance","dependencies":[],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Newtype"],"Newtype"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Types"],"ReadM"]},{"annotation":[],"tag":"TypeVar","contents":"a"}]}]},{"annotation":[],"tag":"TypeWildcard","contents":null}]}},"sourceSpan":{"start":[212,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Types.purs","end":[212,52]}},{"comments":null,"title":"readMFunctor","info":{"declType":"instance","dependencies":[],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Functor"],"Functor"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Types"],"ReadM"]}]}},"sourceSpan":{"start":[213,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Types.purs","end":[214,36]}},{"comments":null,"title":"readMApply","info":{"declType":"instance","dependencies":[],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Control","Apply"],"Apply"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Types"],"ReadM"]}]}},"sourceSpan":{"start":[216,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Types.purs","end":[217,46]}},{"comments":null,"title":"readMApplicative","info":{"declType":"instance","dependencies":[],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Control","Applicative"],"Applicative"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Types"],"ReadM"]}]}},"sourceSpan":{"start":[219,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Types.purs","end":[220,24]}},{"comments":null,"title":"readMAlt","info":{"declType":"instance","dependencies":[],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Control","Alt"],"Alt"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Types"],"ReadM"]}]}},"sourceSpan":{"start":[222,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Types.purs","end":[223,44]}},{"comments":null,"title":"readMBind","info":{"declType":"instance","dependencies":[],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Control","Bind"],"Bind"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Types"],"ReadM"]}]}},"sourceSpan":{"start":[225,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Types.purs","end":[226,50]}},{"comments":null,"title":"readMMonad","info":{"declType":"instance","dependencies":[],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Control","Monad"],"Monad"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Types"],"ReadM"]}]}},"sourceSpan":{"start":[228,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Types.purs","end":[228,35]}},{"comments":null,"title":"readMMonadFail","info":{"declType":"instance","dependencies":[],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Control","Monad","Error","Class"],"MonadThrow"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Types"],"ReadM"]}]}},"sourceSpan":{"start":[230,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Types.purs","end":[231,27]}}],"comments":"A reader is used by the 'option' and 'argument' builders to parse\nthe data passed by the user on the command line into a data type.\n\nThe most common are 'str' which is used for 'String', there are\nreaders for `Int`, `Number`, `Boolean`.\n\nMore complex types can use the 'eitherReader' or 'maybeReader'\nfunctions to pattern match or use a more expressive parser like a\nmember of the 'Parsec' family.\nA newtype over 'ReaderT String Except', used by option readers.\n","title":"ReadM","info":{"declType":"data","dataDeclType":"newtype","typeArguments":[["a",null]]},"sourceSpan":{"start":[210,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Types.purs","end":[210,63]}},{"children":[{"comments":null,"title":"Success","info":{"arguments":[{"annotation":[],"tag":"TypeVar","contents":"a"}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"Failure","info":{"arguments":[{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Types"],"ParserFailure"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Help","Types"],"ParserHelp"]}]}}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"CompletionInvoked","info":{"arguments":[{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Types"],"CompletionResult"]}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"parserResultGeneric","info":{"declType":"instance","dependencies":[],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Generic","Rep"],"Generic"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Types"],"ParserResult"]},{"annotation":[],"tag":"TypeVar","contents":"a"}]}]},{"annotation":[],"tag":"TypeWildcard","contents":null}]}},"sourceSpan":{"start":[452,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Types.purs","end":[452,66]}},{"comments":null,"title":"parserResultShow","info":{"declType":"instance","dependencies":[{"constraintAnn":[],"constraintClass":[["Data","Show"],"Show"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"a"}],"constraintKindArgs":[],"constraintData":null}],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Show"],"Show"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Types"],"ParserResult"]},{"annotation":[],"tag":"TypeVar","contents":"a"}]}]}},"sourceSpan":{"start":[453,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Types.purs","end":[453,86]}},{"comments":null,"title":"parserResultFunctor","info":{"declType":"instance","dependencies":[],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Functor"],"Functor"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Types"],"ParserResult"]}]}},"sourceSpan":{"start":[455,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Types.purs","end":[458,52]}},{"comments":null,"title":"parserResultApply","info":{"declType":"instance","dependencies":[],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Control","Apply"],"Apply"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Types"],"ParserResult"]}]}},"sourceSpan":{"start":[465,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Types.purs","end":[468,54]}},{"comments":null,"title":"parserResultApplicative","info":{"declType":"instance","dependencies":[],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Control","Applicative"],"Applicative"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Types"],"ParserResult"]}]}},"sourceSpan":{"start":[470,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Types.purs","end":[471,17]}},{"comments":null,"title":"parserResultBind","info":{"declType":"instance","dependencies":[],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Control","Bind"],"Bind"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Types"],"ParserResult"]}]}},"sourceSpan":{"start":[473,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Types.purs","end":[476,53]}},{"comments":null,"title":"parserResultMonad","info":{"declType":"instance","dependencies":[],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Control","Monad"],"Monad"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Types"],"ParserResult"]}]}},"sourceSpan":{"start":[478,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Types.purs","end":[478,49]}}],"comments":"Result of 'execParserPure'.\n","title":"ParserResult","info":{"declType":"data","dataDeclType":"data","typeArguments":[["a",null]]},"sourceSpan":{"start":[448,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Types.purs","end":[451,39]}},{"children":[{"comments":null,"title":"ParserPrefs","info":{"arguments":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"annotation":[],"tag":"RCons","contents":["prefMultiSuffix",{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"String"]},{"annotation":[],"tag":"RCons","contents":["prefDisambiguate",{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]},{"annotation":[],"tag":"RCons","contents":["prefShowHelpOnError",{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]},{"annotation":[],"tag":"RCons","contents":["prefShowHelpOnEmpty",{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]},{"annotation":[],"tag":"RCons","contents":["prefBacktrack",{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Types"],"Backtracking"]},{"annotation":[],"tag":"RCons","contents":["prefColumns",{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Int"]},{"annotation":[],"tag":"REmpty"}]}]}]}]}]}]}]}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"parserPrefsNewtype","info":{"declType":"instance","dependencies":[],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Newtype"],"Newtype"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Types"],"ParserPrefs"]}]},{"annotation":[],"tag":"TypeWildcard","contents":null}]}},"sourceSpan":{"start":[138,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Types.purs","end":[138,60]}},{"comments":null,"title":"parserPrefsEq","info":{"declType":"instance","dependencies":[],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Eq"],"Eq"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Types"],"ParserPrefs"]}]}},"sourceSpan":{"start":[139,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Types.purs","end":[139,48]}},{"comments":null,"title":"parserPrefsGeneric","info":{"declType":"instance","dependencies":[],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Generic","Rep"],"Generic"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Types"],"ParserPrefs"]}]},{"annotation":[],"tag":"TypeWildcard","contents":null}]}},"sourceSpan":{"start":[140,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Types.purs","end":[140,60]}},{"comments":null,"title":"parserPrefsShow","info":{"declType":"instance","dependencies":[],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Show"],"Show"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Types"],"ParserPrefs"]}]}},"sourceSpan":{"start":[141,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Types.purs","end":[141,70]}}],"comments":"Global preferences for a top-level 'Parser'.\nA 'ParserPrefs' contains general preferences for all command-line\noptions, and can be built with the 'prefs' function.\n","title":"ParserPrefs","info":{"declType":"data","dataDeclType":"newtype","typeArguments":[]},"sourceSpan":{"start":[125,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Types.purs","end":[137,4]}},{"children":[{"comments":null,"title":"ParserInfo","info":{"arguments":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"annotation":[],"tag":"RCons","contents":["infoParser",{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Types"],"Parser"]},{"annotation":[],"tag":"TypeVar","contents":"a"}]},{"annotation":[],"tag":"RCons","contents":["infoFullDesc",{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]},{"annotation":[],"tag":"RCons","contents":["infoProgDesc",{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Help","Chunk"],"Chunk"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]}]},{"annotation":[],"tag":"RCons","contents":["infoHeader",{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Help","Chunk"],"Chunk"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]}]},{"annotation":[],"tag":"RCons","contents":["infoFooter",{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Help","Chunk"],"Chunk"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]}]},{"annotation":[],"tag":"RCons","contents":["infoFailureCode",{"annotation":[],"tag":"TypeConstructor","contents":[["ExitCodes"],"ExitCode"]},{"annotation":[],"tag":"RCons","contents":["infoPolicy",{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Types"],"ArgPolicy"]},{"annotation":[],"tag":"REmpty"}]}]}]}]}]}]}]}]}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"parserInfoNewtype","info":{"declType":"instance","dependencies":[],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Newtype"],"Newtype"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Types"],"ParserInfo"]},{"annotation":[],"tag":"TypeVar","contents":"a"}]}]},{"annotation":[],"tag":"TypeWildcard","contents":null}]}},"sourceSpan":{"start":[109,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Types.purs","end":[109,62]}},{"comments":null,"title":"parserInfoFunctor","info":{"declType":"instance","dependencies":[],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Functor"],"Functor"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Types"],"ParserInfo"]}]}},"sourceSpan":{"start":[110,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Types.purs","end":[111,72]}}],"comments":"A 'ParserInfo' describes a command line program, used to generate a help\nscreen. Two help modes are supported: brief and full. In brief mode, only\nan option and argument summary is displayed, while in full mode each\navailable option and command, including hidden ones, is described.\n\nA basic 'ParserInfo' with default values for fields can be created using\nthe 'info' function.\n","title":"ParserInfo","info":{"declType":"data","dataDeclType":"newtype","typeArguments":[["a",null]]},"sourceSpan":{"start":[97,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Types.purs","end":[107,4]}},{"children":[{"comments":null,"title":"ParserHelp","info":{"arguments":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"annotation":[],"tag":"RCons","contents":["helpError",{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Help","Chunk"],"Chunk"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]}]},{"annotation":[],"tag":"RCons","contents":["helpSuggestions",{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Help","Chunk"],"Chunk"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]}]},{"annotation":[],"tag":"RCons","contents":["helpHeader",{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Help","Chunk"],"Chunk"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]}]},{"annotation":[],"tag":"RCons","contents":["helpUsage",{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Help","Chunk"],"Chunk"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]}]},{"annotation":[],"tag":"RCons","contents":["helpBody",{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Help","Chunk"],"Chunk"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]}]},{"annotation":[],"tag":"RCons","contents":["helpFooter",{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Help","Chunk"],"Chunk"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]}]},{"annotation":[],"tag":"REmpty"}]}]}]}]}]}]}]}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"newtypeParserHelp","info":{"declType":"instance","dependencies":[],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Newtype"],"Newtype"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Help","Types"],"ParserHelp"]}]},{"annotation":[],"tag":"TypeWildcard","contents":null}]}},"sourceSpan":{"start":[20,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Help/Types.purs","end":[20,58]}},{"comments":null,"title":"parserHelpShow","info":{"declType":"instance","dependencies":[],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Show"],"Show"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Help","Types"],"ParserHelp"]}]}},"sourceSpan":{"start":[21,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Help/Types.purs","end":[22,32]}},{"comments":null,"title":"parserHelpSemigroup","info":{"declType":"instance","dependencies":[],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Semigroup"],"Semigroup"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Help","Types"],"ParserHelp"]}]}},"sourceSpan":{"start":[23,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Help/Types.purs","end":[23,68]}},{"comments":null,"title":"parserHelpMonoid","info":{"declType":"instance","dependencies":[],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Monoid"],"Monoid"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Help","Types"],"ParserHelp"]}]}},"sourceSpan":{"start":[24,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Help/Types.purs","end":[24,62]}}],"comments":null,"title":"ParserHelp","info":{"declType":"data","dataDeclType":"newtype","typeArguments":[]},"sourceSpan":{"start":[12,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Help/Types.purs","end":[19,4]}},{"children":[{"comments":null,"title":"ParserFailure","info":{"arguments":[{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Tuple","Nested"],"Tuple3"]},{"annotation":[],"tag":"TypeVar","contents":"h"}]},{"annotation":[],"tag":"TypeConstructor","contents":[["ExitCodes"],"ExitCode"]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]}]}}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"newtypeParserFailure","info":{"declType":"instance","dependencies":[],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Newtype"],"Newtype"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Types"],"ParserFailure"]},{"annotation":[],"tag":"TypeVar","contents":"h"}]}]},{"annotation":[],"tag":"TypeWildcard","contents":null}]}},"sourceSpan":{"start":[437,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Types.purs","end":[437,68]}},{"comments":null,"title":"parserFailureShow","info":{"declType":"instance","dependencies":[],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Show"],"Show"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Types"],"ParserFailure"]},{"annotation":[],"tag":"TypeVar","contents":"h"}]}]}},"sourceSpan":{"start":[439,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Types.purs","end":[440,40]}},{"comments":null,"title":"parserFailureFunctor","info":{"declType":"instance","dependencies":[],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Functor"],"Functor"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Types"],"ParserFailure"]}]}},"sourceSpan":{"start":[442,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Types.purs","end":[445,35]}}],"comments":null,"title":"ParserFailure","info":{"declType":"data","dataDeclType":"newtype","typeArguments":[["h",null]]},"sourceSpan":{"start":[435,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Types.purs","end":[435,74]}},{"children":[{"comments":null,"title":"parserFunctor","info":{"declType":"instance","dependencies":[],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Functor"],"Functor"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Types"],"Parser"]}]}},"sourceSpan":{"start":[317,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Types.purs","end":[322,36]}},{"comments":null,"title":"parserApply","info":{"declType":"instance","dependencies":[],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Control","Apply"],"Apply"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Types"],"Parser"]}]}},"sourceSpan":{"start":[324,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Types.purs","end":[325,44]}},{"comments":null,"title":"parserApplicative","info":{"declType":"instance","dependencies":[],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Control","Applicative"],"Applicative"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Types"],"Parser"]}]}},"sourceSpan":{"start":[327,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Types.purs","end":[328,14]}},{"comments":null,"title":"parserAlt","info":{"declType":"instance","dependencies":[],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Control","Alt"],"Alt"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Types"],"Parser"]}]}},"sourceSpan":{"start":[330,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Types.purs","end":[331,13]}}],"comments":"\nA 'Parser' is the core type in optparse-applicative. A value of type\nParser a@ represents a specification for a set of options, which will\nyield a value of type a when the command line arguments are successfully\nparsed.\n\nThere are several types of primitive 'Parser'.\n\n* Flags: simple no-argument options. When a flag is encountered on the\ncommand line, its value is returned.\n\n* Options: options with an argument. An option can define a /reader/,\nwhich converts its argument from String to the desired value, or throws a\nparse error if the argument does not validate correctly.\n\n* Arguments: positional arguments, validated in the same way as option\narguments.\n\n* Commands. A command defines a completely independent sub-parser. When a\ncommand is encountered, the whole command line is passed to the\ncorresponding parser.\n\n** Parser builders\n\nEach parser builder takes an option modifier. A modifier can be created by\ncomposing the basic modifiers provided by here using the 'Monoid' operations\nmempty' and 'append', or their aliases 'idm' and '<>'.\n\nFor example:\n\n> out = strOption\n>     ( long \"output\"\n>    <> short 'o'\n>    <> metavar \"FILENAME\" )\n\ncreates a parser for an option called \\\"output\\\".\n","title":"Parser","info":{"declType":"data","dataDeclType":"data","typeArguments":[["a",null]]},"sourceSpan":{"start":[308,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Types.purs","end":[313,26]}},{"children":[{"comments":null,"title":"ErrorMsg","info":{"arguments":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"String"]}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"InfoMsg","info":{"arguments":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"String"]}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"ShowHelpText","info":{"arguments":[],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"MissingError","info":{"arguments":[{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Types"],"IsCmdStart"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Types"],"SomeParser"]}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"ExpectsArgError","info":{"arguments":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"String"]}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"UnexpectedError","info":{"arguments":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"String"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Types"],"SomeParser"]}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"parseErrorSemigroup","info":{"declType":"instance","dependencies":[],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Semigroup"],"Semigroup"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Types"],"ParseError"]}]}},"sourceSpan":{"start":[85,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Types.purs","end":[86,17]}}],"comments":null,"title":"ParseError","info":{"declType":"data","dataDeclType":"data","typeArguments":[]},"sourceSpan":{"start":[73,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Types.purs","end":[79,38]}},{"children":[{"comments":null,"title":"CompletionResult","info":{"arguments":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"annotation":[],"tag":"RCons","contents":["execCompletion",{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}]},{"annotation":[],"tag":"REmpty"}]}]}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"newtypeCompletionResult","info":{"declType":"instance","dependencies":[],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Newtype"],"Newtype"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Types"],"CompletionResult"]}]},{"annotation":[],"tag":"TypeWildcard","contents":null}]}},"sourceSpan":{"start":[431,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Types.purs","end":[431,70]}},{"comments":null,"title":"completionResultShow","info":{"declType":"instance","dependencies":[],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Show"],"Show"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Types"],"CompletionResult"]}]}},"sourceSpan":{"start":[432,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Types.purs","end":[433,43]}}],"comments":null,"title":"CompletionResult","info":{"declType":"data","dataDeclType":"newtype","typeArguments":[]},"sourceSpan":{"start":[428,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Types.purs","end":[429,48]}},{"children":[{"comments":null,"title":"newtypeCompleter","info":{"declType":"instance","dependencies":[],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Newtype"],"Newtype"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Types"],"Completer"]}]},{"annotation":[],"tag":"TypeWildcard","contents":null}]}},"sourceSpan":{"start":[416,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Types.purs","end":[416,56]}},{"comments":null,"title":"completerSemigroup","info":{"declType":"instance","dependencies":[],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Semigroup"],"Semigroup"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Types"],"Completer"]}]}},"sourceSpan":{"start":[421,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Types.purs","end":[423,45]}},{"comments":null,"title":"completerMonoid","info":{"declType":"instance","dependencies":[],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Monoid"],"Monoid"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Types"],"Completer"]}]}},"sourceSpan":{"start":[425,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Types.purs","end":[426,37]}}],"comments":"optparse-applicative supplies a rich completion system for bash,\nzsh, and fish shells.\n\n'Completer' functions are used for option and argument to complete\ntheir values.\n\nUse the 'completer' builder to use these.\nThe 'action' and 'completeWith' builders are also provided for\nconvenience, to use 'bashCompleter' and 'listCompleter' as a 'Mod'.\n","title":"Completer","info":{"declType":"data","dataDeclType":"newtype","typeArguments":[]},"sourceSpan":{"start":[415,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Types.purs","end":[415,64]}},{"children":[],"comments":"Parses 1 or more values using the given parser. **Note: this should\nnever be used with the `value` modifier.**\n\nFor example, by using this option\n`some (strOption (long \"arg-name\"))`\n\none could write\n```\ncommand\n# produces failure message\n\ncommand --arg-name first\n# produces (NonEmptyList \"first\" Nil)\n\ncommand --arg-name first --arg-name second\n# produces (NonEmptyList \"first\" (\"second\" : Nil))\n```\n\nTo parse 0 or more values, see `many` instead.\n","title":"some","info":{"declType":"value","type":{"annotation":[],"tag":"ForAll","contents":["a",{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Types"],"Parser"]},{"annotation":[],"tag":"TypeVar","contents":"a"}]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Types"],"Parser"]},{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","List","Types"],"NonEmptyList"]},{"annotation":[],"tag":"TypeVar","contents":"a"}]}}]}]},null]}},"sourceSpan":{"start":[400,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Types.purs","end":[400,54]}},{"children":[],"comments":"Abort option reader by exiting with an error message.\n","title":"readerError","info":{"declType":"value","type":{"annotation":[],"tag":"ForAll","contents":["a",{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Types"],"ReadM"]},{"annotation":[],"tag":"TypeVar","contents":"a"}]}]},null]}},"sourceSpan":{"start":[242,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Types.purs","end":[242,43]}},{"children":[],"comments":"Abort option reader by exiting with a 'ParseError'.\n","title":"readerAbort","info":{"declType":"value","type":{"annotation":[],"tag":"ForAll","contents":["a",{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Types"],"ParseError"]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Types"],"ReadM"]},{"annotation":[],"tag":"TypeVar","contents":"a"}]}]},null]}},"sourceSpan":{"start":[238,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Types.purs","end":[238,47]}},{"children":[],"comments":null,"title":"overFailure","info":{"declType":"value","type":{"annotation":[],"tag":"ForAll","contents":["a",{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Help","Types"],"ParserHelp"]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Help","Types"],"ParserHelp"]}]}}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Types"],"ParserResult"]},{"annotation":[],"tag":"TypeVar","contents":"a"}]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Types"],"ParserResult"]},{"annotation":[],"tag":"TypeVar","contents":"a"}]}]}]},null]}},"sourceSpan":{"start":[460,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Types.purs","end":[461,48]}},{"children":[],"comments":"Smart constructor for a 'Completer'\n","title":"mkCompleter","info":{"declType":"value","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Array"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}}]}]}}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Types"],"Completer"]}]}},"sourceSpan":{"start":[418,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Types.purs","end":[418,62]}},{"children":[],"comments":"Parses 0 or more values using the given parser. **Note: this should\nnever be used with the `value` modifier.**\n\nFor example, by using this option\n`many (strOption (long \"arg-name\"))`\n\none could write\n```\ncommand\n# produces Nil\n\ncommand --arg-name first\n# produces (\"first\" : Nil)\n\ncommand --arg-name first --arg-name second\n# produces (\"first\" : \"second\" : Nil)\n```\n\nTo parse 1 or more values, see `some` instead.\n","title":"many","info":{"declType":"value","type":{"annotation":[],"tag":"ForAll","contents":["a",{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Types"],"Parser"]},{"annotation":[],"tag":"TypeVar","contents":"a"}]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Types"],"Parser"]},{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","List","Types"],"List"]},{"annotation":[],"tag":"TypeVar","contents":"a"}]}}]}]},null]}},"sourceSpan":{"start":[378,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Types.purs","end":[378,46]}}]}],"name":"Options.Applicative","comments":null,"declarations":[]},{"reExports":[],"name":"Options.Applicative.BashCompletion","comments":"You don't need to import this module to enable bash completion.\n\nSee [the wiki](http://github.com/pcapriotti/optparse-applicative/wiki/Bash-Completion)\nfor more information on bash completion.\n","declarations":[{"children":[],"comments":null,"title":"bashCompletionParser","info":{"declType":"value","type":{"annotation":[],"tag":"ForAll","contents":["a",{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Types"],"ParserInfo"]},{"annotation":[],"tag":"TypeVar","contents":"a"}]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Types"],"ParserPrefs"]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Types"],"Parser"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Types"],"CompletionResult"]}]}]}]},null]}},"sourceSpan":{"start":[49,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/BashCompletion.purs","end":[49,89]}}]},{"reExports":[{"moduleName":{"package":null,"item":["Options","Applicative","Builder","Internal"]},"declarations":[{"children":[{"comments":null,"title":"newtypeOptionFields","info":{"declType":"instance","dependencies":[],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Newtype"],"Newtype"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Builder","Internal"],"OptionFields"]},{"annotation":[],"tag":"TypeVar","contents":"a"}]}]},{"annotation":[],"tag":"TypeWildcard","contents":null}]}},"sourceSpan":{"start":[41,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Builder/Internal.purs","end":[41,66]}},{"comments":null,"title":"optionFieldsHasName","info":{"declType":"instance","dependencies":[],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Builder","Internal"],"HasName"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Builder","Internal"],"OptionFields"]}]}},"sourceSpan":{"start":[63,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Builder/Internal.purs","end":[64,84]}},{"comments":null,"title":"optionFieldsHasCompleter","info":{"declType":"instance","dependencies":[],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Builder","Internal"],"HasCompleter"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Builder","Internal"],"OptionFields"]}]}},"sourceSpan":{"start":[73,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Builder/Internal.purs","end":[74,80]}},{"comments":null,"title":"optionFieldsHasValue","info":{"declType":"instance","dependencies":[],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Builder","Internal"],"HasValue"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Builder","Internal"],"OptionFields"]}]}},"sourceSpan":{"start":[83,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Builder/Internal.purs","end":[84,25]}},{"comments":null,"title":"optionFieldsHasMetavar","info":{"declType":"instance","dependencies":[],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Builder","Internal"],"HasMetavar"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Builder","Internal"],"OptionFields"]}]}},"sourceSpan":{"start":[91,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Builder/Internal.purs","end":[92,27]}}],"comments":null,"title":"OptionFields","info":{"declType":"data","dataDeclType":"newtype","typeArguments":[["a",null]]},"sourceSpan":{"start":[37,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Builder/Internal.purs","end":[40,44]}},{"children":[{"comments":null,"title":"modMonoid","info":{"declType":"instance","dependencies":[],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Monoid"],"Monoid"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Builder","Internal"],"Mod"]},{"annotation":[],"tag":"TypeVar","contents":"f"}]},{"annotation":[],"tag":"TypeVar","contents":"a"}]}]}},"sourceSpan":{"start":[150,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Builder/Internal.purs","end":[151,40]}},{"comments":"@since 0.13.0.0\n","title":"modSemigroup","info":{"declType":"instance","dependencies":[],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Semigroup"],"Semigroup"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Builder","Internal"],"Mod"]},{"annotation":[],"tag":"TypeVar","contents":"f"}]},{"annotation":[],"tag":"TypeVar","contents":"a"}]}]}},"sourceSpan":{"start":[154,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Builder/Internal.purs","end":[156,45]}}],"comments":"An option modifier.\n\nOption modifiers are values that represent a modification of the properties\nof an option.\n\nThe type parameter @a@ is the pure type of the option, while @f@ is a\nrecord containing its properties (e.g. 'OptionFields' for regular options,\n'FlagFields' for flags, etc...).\n\nAn option modifier consists of 3 elements:\n\n - A field modifier, of the form @f a -> f a@. These are essentially\n (compositions of) setters for some of the properties supported by @f@.\n\n - An optional default value and function to display it.\n\n - A property modifier, of the form @OptProperties -> OptProperties@. This\n is just like the field modifier, but for properties applicable to any\n option.\n\nModifiers are instances of 'Monoid', and can be composed as such.\n\nOne rarely needs to deal with modifiers directly, as most of the times it is\nsufficient to pass them to builders (such as 'strOption' or 'flag') to\ncreate options (see 'Options.Applicative.Builder').\n\nContraints are often used to ensure that the modifiers can be sensibly applied.\nFor example, positional arguments can't be specified by long or short names,\nso the 'HasName' constraint is used to ensure we have a flag or option.\n","title":"Mod","info":{"declType":"data","dataDeclType":"data","typeArguments":[["f",null],["a",null]]},"sourceSpan":{"start":[140,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Builder/Internal.purs","end":[142,52]}},{"children":[{"comments":null,"title":"newtypeFlagFields","info":{"declType":"instance","dependencies":[],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Newtype"],"Newtype"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Builder","Internal"],"FlagFields"]},{"annotation":[],"tag":"TypeVar","contents":"a"}]}]},{"annotation":[],"tag":"TypeWildcard","contents":null}]}},"sourceSpan":{"start":[46,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Builder/Internal.purs","end":[46,62]}},{"comments":null,"title":"flagFieldsHasName","info":{"declType":"instance","dependencies":[],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Builder","Internal"],"HasName"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Builder","Internal"],"FlagFields"]}]}},"sourceSpan":{"start":[66,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Builder/Internal.purs","end":[67,84]}}],"comments":null,"title":"FlagFields","info":{"declType":"data","dataDeclType":"newtype","typeArguments":[["a",null]]},"sourceSpan":{"start":[43,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Builder/Internal.purs","end":[45,22]}},{"children":[{"comments":null,"title":"newtypeCommandFields","info":{"declType":"instance","dependencies":[],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Newtype"],"Newtype"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Builder","Internal"],"CommandFields"]},{"annotation":[],"tag":"TypeVar","contents":"a"}]}]},{"annotation":[],"tag":"TypeWildcard","contents":null}]}},"sourceSpan":{"start":[51,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Builder/Internal.purs","end":[51,68]}},{"comments":null,"title":"commandFieldsHasMetavar","info":{"declType":"instance","dependencies":[],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Builder","Internal"],"HasMetavar"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Builder","Internal"],"CommandFields"]}]}},"sourceSpan":{"start":[95,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Builder/Internal.purs","end":[96,27]}}],"comments":null,"title":"CommandFields","info":{"declType":"data","dataDeclType":"newtype","typeArguments":[["a",null]]},"sourceSpan":{"start":[48,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Builder/Internal.purs","end":[50,31]}},{"children":[{"comments":null,"title":"newtypeArgumentFields","info":{"declType":"instance","dependencies":[],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Newtype"],"Newtype"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Builder","Internal"],"ArgumentFields"]},{"annotation":[],"tag":"TypeVar","contents":"a"}]}]},{"annotation":[],"tag":"TypeWildcard","contents":null}]}},"sourceSpan":{"start":[56,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Builder/Internal.purs","end":[56,70]}},{"comments":null,"title":"argumentFieldsHasCompleter","info":{"declType":"instance","dependencies":[],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Builder","Internal"],"HasCompleter"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Builder","Internal"],"ArgumentFields"]}]}},"sourceSpan":{"start":[76,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Builder/Internal.purs","end":[77,82]}},{"comments":null,"title":"argumentFieldsHasValue","info":{"declType":"instance","dependencies":[],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Builder","Internal"],"HasValue"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Builder","Internal"],"ArgumentFields"]}]}},"sourceSpan":{"start":[85,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Builder/Internal.purs","end":[86,25]}},{"comments":null,"title":"argumentFieldsHasMetavar","info":{"declType":"instance","dependencies":[],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Builder","Internal"],"HasMetavar"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Builder","Internal"],"ArgumentFields"]}]}},"sourceSpan":{"start":[93,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Builder/Internal.purs","end":[94,27]}}],"comments":null,"title":"ArgumentFields","info":{"declType":"data","dataDeclType":"newtype","typeArguments":[["a",null]]},"sourceSpan":{"start":[54,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Builder/Internal.purs","end":[55,32]}},{"children":[{"comments":null,"title":"optionFieldsHasCompleter","info":{"declType":"instance","dependencies":[],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Builder","Internal"],"HasCompleter"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Builder","Internal"],"OptionFields"]}]}},"sourceSpan":{"start":[73,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Builder/Internal.purs","end":[74,80]}},{"comments":null,"title":"argumentFieldsHasCompleter","info":{"declType":"instance","dependencies":[],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Builder","Internal"],"HasCompleter"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Builder","Internal"],"ArgumentFields"]}]}},"sourceSpan":{"start":[76,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Builder/Internal.purs","end":[77,82]}}],"comments":null,"title":"HasCompleter","info":{"fundeps":[],"arguments":[["f",null]],"declType":"typeClass","superclasses":[]},"sourceSpan":{"start":[70,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Builder/Internal.purs","end":[71,67]}},{"children":[{"comments":null,"title":"optionFieldsHasMetavar","info":{"declType":"instance","dependencies":[],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Builder","Internal"],"HasMetavar"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Builder","Internal"],"OptionFields"]}]}},"sourceSpan":{"start":[91,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Builder/Internal.purs","end":[92,27]}},{"comments":null,"title":"argumentFieldsHasMetavar","info":{"declType":"instance","dependencies":[],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Builder","Internal"],"HasMetavar"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Builder","Internal"],"ArgumentFields"]}]}},"sourceSpan":{"start":[93,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Builder/Internal.purs","end":[94,27]}},{"comments":null,"title":"commandFieldsHasMetavar","info":{"declType":"instance","dependencies":[],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Builder","Internal"],"HasMetavar"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Builder","Internal"],"CommandFields"]}]}},"sourceSpan":{"start":[95,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Builder/Internal.purs","end":[96,27]}}],"comments":null,"title":"HasMetavar","info":{"fundeps":[],"arguments":[["f",null]],"declType":"typeClass","superclasses":[]},"sourceSpan":{"start":[89,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Builder/Internal.purs","end":[90,43]}},{"children":[{"comments":null,"title":"optionFieldsHasName","info":{"declType":"instance","dependencies":[],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Builder","Internal"],"HasName"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Builder","Internal"],"OptionFields"]}]}},"sourceSpan":{"start":[63,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Builder/Internal.purs","end":[64,84]}},{"comments":null,"title":"flagFieldsHasName","info":{"declType":"instance","dependencies":[],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Builder","Internal"],"HasName"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Builder","Internal"],"FlagFields"]}]}},"sourceSpan":{"start":[66,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Builder/Internal.purs","end":[67,84]}}],"comments":null,"title":"HasName","info":{"fundeps":[],"arguments":[["f",null]],"declType":"typeClass","superclasses":[]},"sourceSpan":{"start":[59,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Builder/Internal.purs","end":[60,42]}},{"children":[{"comments":null,"title":"optionFieldsHasValue","info":{"declType":"instance","dependencies":[],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Builder","Internal"],"HasValue"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Builder","Internal"],"OptionFields"]}]}},"sourceSpan":{"start":[83,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Builder/Internal.purs","end":[84,25]}},{"comments":null,"title":"argumentFieldsHasValue","info":{"declType":"instance","dependencies":[],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Builder","Internal"],"HasValue"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Builder","Internal"],"ArgumentFields"]}]}},"sourceSpan":{"start":[85,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Builder/Internal.purs","end":[86,25]}}],"comments":null,"title":"HasValue","info":{"fundeps":[],"arguments":[["f",null]],"declType":"typeClass","superclasses":[]},"sourceSpan":{"start":[80,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Builder/Internal.purs","end":[82,41]}},{"children":[],"comments":"Hide this option from the help text\n","title":"internal","info":{"declType":"value","type":{"annotation":[],"tag":"ForAll","contents":["f",{"annotation":[],"tag":"ForAll","contents":["a",{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Builder","Internal"],"Mod"]},{"annotation":[],"tag":"TypeVar","contents":"f"}]},{"annotation":[],"tag":"TypeVar","contents":"a"}]},null]},null]}},"sourceSpan":{"start":[198,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Builder/Internal.purs","end":[198,32]}}]},{"moduleName":{"package":null,"item":["Options","Applicative","Types"]},"declarations":[{"children":[{"comments":null,"title":"readMNewtype","info":{"declType":"instance","dependencies":[],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Newtype"],"Newtype"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Types"],"ReadM"]},{"annotation":[],"tag":"TypeVar","contents":"a"}]}]},{"annotation":[],"tag":"TypeWildcard","contents":null}]}},"sourceSpan":{"start":[212,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Types.purs","end":[212,52]}},{"comments":null,"title":"readMFunctor","info":{"declType":"instance","dependencies":[],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Functor"],"Functor"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Types"],"ReadM"]}]}},"sourceSpan":{"start":[213,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Types.purs","end":[214,36]}},{"comments":null,"title":"readMApply","info":{"declType":"instance","dependencies":[],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Control","Apply"],"Apply"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Types"],"ReadM"]}]}},"sourceSpan":{"start":[216,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Types.purs","end":[217,46]}},{"comments":null,"title":"readMApplicative","info":{"declType":"instance","dependencies":[],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Control","Applicative"],"Applicative"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Types"],"ReadM"]}]}},"sourceSpan":{"start":[219,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Types.purs","end":[220,24]}},{"comments":null,"title":"readMAlt","info":{"declType":"instance","dependencies":[],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Control","Alt"],"Alt"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Types"],"ReadM"]}]}},"sourceSpan":{"start":[222,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Types.purs","end":[223,44]}},{"comments":null,"title":"readMBind","info":{"declType":"instance","dependencies":[],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Control","Bind"],"Bind"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Types"],"ReadM"]}]}},"sourceSpan":{"start":[225,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Types.purs","end":[226,50]}},{"comments":null,"title":"readMMonad","info":{"declType":"instance","dependencies":[],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Control","Monad"],"Monad"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Types"],"ReadM"]}]}},"sourceSpan":{"start":[228,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Types.purs","end":[228,35]}},{"comments":null,"title":"readMMonadFail","info":{"declType":"instance","dependencies":[],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Control","Monad","Error","Class"],"MonadThrow"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Types"],"ReadM"]}]}},"sourceSpan":{"start":[230,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Types.purs","end":[231,27]}}],"comments":"A reader is used by the 'option' and 'argument' builders to parse\nthe data passed by the user on the command line into a data type.\n\nThe most common are 'str' which is used for 'String', there are\nreaders for `Int`, `Number`, `Boolean`.\n\nMore complex types can use the 'eitherReader' or 'maybeReader'\nfunctions to pattern match or use a more expressive parser like a\nmember of the 'Parsec' family.\nA newtype over 'ReaderT String Except', used by option readers.\n","title":"ReadM","info":{"declType":"data","dataDeclType":"newtype","typeArguments":[["a",null]]},"sourceSpan":{"start":[210,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Types.purs","end":[210,63]}},{"children":[{"comments":null,"title":"ErrorMsg","info":{"arguments":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"String"]}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"InfoMsg","info":{"arguments":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"String"]}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"ShowHelpText","info":{"arguments":[],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"MissingError","info":{"arguments":[{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Types"],"IsCmdStart"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Types"],"SomeParser"]}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"ExpectsArgError","info":{"arguments":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"String"]}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"UnexpectedError","info":{"arguments":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"String"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Types"],"SomeParser"]}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"parseErrorSemigroup","info":{"declType":"instance","dependencies":[],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Semigroup"],"Semigroup"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Types"],"ParseError"]}]}},"sourceSpan":{"start":[85,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Types.purs","end":[86,17]}}],"comments":null,"title":"ParseError","info":{"declType":"data","dataDeclType":"data","typeArguments":[]},"sourceSpan":{"start":[73,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Types.purs","end":[79,38]}},{"children":[],"comments":"Abort option reader by exiting with an error message.\n","title":"readerError","info":{"declType":"value","type":{"annotation":[],"tag":"ForAll","contents":["a",{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Types"],"ReadM"]},{"annotation":[],"tag":"TypeVar","contents":"a"}]}]},null]}},"sourceSpan":{"start":[242,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Types.purs","end":[242,43]}},{"children":[],"comments":"Abort option reader by exiting with a 'ParseError'.\n","title":"readerAbort","info":{"declType":"value","type":{"annotation":[],"tag":"ForAll","contents":["a",{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Types"],"ParseError"]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Types"],"ReadM"]},{"annotation":[],"tag":"TypeVar","contents":"a"}]}]},null]}},"sourceSpan":{"start":[238,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Types.purs","end":[238,47]}}]}],"name":"Options.Applicative.Builder","comments":"This module contains utility functions and combinators to create parsers\nfor individual options.\n\nEach parser builder takes an option modifier. A modifier can be created by\ncomposing the basic modifiers provided by this module using the 'Monoid'\noperations 'mempty' and 'append', or their aliases 'idm' and '<>'.\n\nFor example:\n\n```purescript\nout = strOption\n    ( long \"output\"\n   <> short 'o'\n   <> metavar \"FILENAME\" )\n```\n\ncreates a parser for an option called `output`.\n","declarations":[{"children":[],"comments":"Builder for a command parser. The 'command' modifier can be used to\nspecify individual commands.\n","title":"subparser","info":{"declType":"value","type":{"annotation":[],"tag":"ForAll","contents":["a",{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Builder","Internal"],"Mod"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Builder","Internal"],"CommandFields"]}]},{"annotation":[],"tag":"TypeVar","contents":"a"}]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Types"],"Parser"]},{"annotation":[],"tag":"TypeVar","contents":"a"}]}]},null]}},"sourceSpan":{"start":[271,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Builder.purs","end":[271,55]}},{"children":[],"comments":"Builder for a 'String' argument.\n","title":"strArgument","info":{"declType":"value","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Builder","Internal"],"Mod"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Builder","Internal"],"ArgumentFields"]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Types"],"Parser"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}]}},"sourceSpan":{"start":[286,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Builder.purs","end":[286,58]}},{"children":[],"comments":"Builder for an argument parser.\n","title":"argument","info":{"declType":"value","type":{"annotation":[],"tag":"ForAll","contents":["a",{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Types"],"ReadM"]},{"annotation":[],"tag":"TypeVar","contents":"a"}]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Builder","Internal"],"Mod"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Builder","Internal"],"ArgumentFields"]}]},{"annotation":[],"tag":"TypeVar","contents":"a"}]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Types"],"Parser"]},{"annotation":[],"tag":"TypeVar","contents":"a"}]}]}]},null]}},"sourceSpan":{"start":[279,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Builder.purs","end":[279,66]}},{"children":[],"comments":"Builder for a flag parser.\n\nA flag that switches from a \\\"default value\\\" to an \\\"active value\\\" when\nencountered. For a simple boolean value, use `switch` instead.\n\n**Note**: Because this parser will never fail, it can not be used with\ncombinators such as 'some' or 'many', as these combinators continue until\na failure occurs. See @flag'@.\n","title":"flag","info":{"declType":"value","type":{"annotation":[],"tag":"ForAll","contents":["a",{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeVar","contents":"a"}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeVar","contents":"a"}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Builder","Internal"],"Mod"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Builder","Internal"],"FlagFields"]}]},{"annotation":[],"tag":"TypeVar","contents":"a"}]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Types"],"Parser"]},{"annotation":[],"tag":"TypeVar","contents":"a"}]}]}]}]},null]}},"sourceSpan":{"start":[297,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Builder.purs","end":[301,17]}},{"children":[],"comments":"Builder for a flag parser without a default value.\n\nSame as 'flag', but with no default value. In particular, this flag will\nnever parse successfully by itself.\n\nIt still makes sense to use it as part of a composite parser. For example\n\n> length <$> many (flag' () (short 't'))\n\nis a parser that counts the number of \"-t\" arguments on the command line,\nalternatively\n\n> flag' true (long \"on\") <|> flag' false (long \"off\")\n\nwill require the user to enter '--on' or '--off' on the command line.\n","title":"flag'","info":{"declType":"value","type":{"annotation":[],"tag":"ForAll","contents":["a",{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeVar","contents":"a"}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Builder","Internal"],"Mod"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Builder","Internal"],"FlagFields"]}]},{"annotation":[],"tag":"TypeVar","contents":"a"}]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Types"],"Parser"]},{"annotation":[],"tag":"TypeVar","contents":"a"}]}]}]},null]}},"sourceSpan":{"start":[319,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Builder.purs","end":[322,18]}},{"children":[],"comments":"Builder for a boolean flag.\n\n**Note**: Because this parser will never fail, it can not be used with\ncombinators such as 'some' or 'many', as these combinators continue until\na failure occurs. See @flag'@.\n\n> switch = flag false true\n","title":"switch","info":{"declType":"value","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Builder","Internal"],"Mod"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Builder","Internal"],"FlagFields"]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Types"],"Parser"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}]}},"sourceSpan":{"start":[336,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Builder.purs","end":[336,51]}},{"children":[],"comments":"An option that always fails.\n\nWhen this option is encountered, the option parser immediately aborts with\nthe given parse error.  If you simply want to output a message, use\n'infoOption' instead.\n","title":"abortOption","info":{"declType":"value","type":{"annotation":[],"tag":"ForAll","contents":["a",{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Types"],"ParseError"]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Builder","Internal"],"Mod"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Builder","Internal"],"OptionFields"]}]},{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeVar","contents":"a"}]},{"annotation":[],"tag":"TypeVar","contents":"a"}]}}]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Types"],"Parser"]},{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeVar","contents":"a"}]},{"annotation":[],"tag":"TypeVar","contents":"a"}]}}]}]}]},null]}},"sourceSpan":{"start":[344,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Builder.purs","end":[344,84]}},{"children":[],"comments":"An option that always fails and displays a message.\n","title":"infoOption","info":{"declType":"value","type":{"annotation":[],"tag":"ForAll","contents":["a",{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Builder","Internal"],"Mod"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Builder","Internal"],"OptionFields"]}]},{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeVar","contents":"a"}]},{"annotation":[],"tag":"TypeVar","contents":"a"}]}}]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Types"],"Parser"]},{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeVar","contents":"a"}]},{"annotation":[],"tag":"TypeVar","contents":"a"}]}}]}]}]},null]}},"sourceSpan":{"start":[351,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Builder.purs","end":[351,79]}},{"children":[],"comments":"Builder for an option taking a 'String' argument.\n","title":"strOption","info":{"declType":"value","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Builder","Internal"],"Mod"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Builder","Internal"],"OptionFields"]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Types"],"Parser"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}]}},"sourceSpan":{"start":[355,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Builder.purs","end":[355,54]}},{"children":[],"comments":"Builder for an option using the given reader.\n\nThis is a regular option, and should always have either a `long` or\n`short` name specified in the modifiers (or both).\n\n> nameParser = option str ( long \"name\" <> short 'n' )\n","title":"option","info":{"declType":"value","type":{"annotation":[],"tag":"ForAll","contents":["a",{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Types"],"ReadM"]},{"annotation":[],"tag":"TypeVar","contents":"a"}]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Builder","Internal"],"Mod"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Builder","Internal"],"OptionFields"]}]},{"annotation":[],"tag":"TypeVar","contents":"a"}]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Types"],"Parser"]},{"annotation":[],"tag":"TypeVar","contents":"a"}]}]}]},null]}},"sourceSpan":{"start":[365,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Builder.purs","end":[365,62]}},{"children":[],"comments":"Specify a short name for an option.\n","title":"short","info":{"declType":"value","type":{"annotation":[],"tag":"ForAll","contents":["f",{"annotation":[],"tag":"ForAll","contents":["a",{"annotation":[],"tag":"ConstrainedType","contents":[{"constraintAnn":[],"constraintClass":[["Options","Applicative","Builder","Internal"],"HasName"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"f"}],"constraintKindArgs":[],"constraintData":null},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Char"]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Builder","Internal"],"Mod"]},{"annotation":[],"tag":"TypeVar","contents":"f"}]},{"annotation":[],"tag":"TypeVar","contents":"a"}]}]}]},null]},null]}},"sourceSpan":{"start":[158,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Builder.purs","end":[158,50]}},{"children":[],"comments":"Specify a long name for an option.\n","title":"long","info":{"declType":"value","type":{"annotation":[],"tag":"ForAll","contents":["f",{"annotation":[],"tag":"ForAll","contents":["a",{"annotation":[],"tag":"ConstrainedType","contents":[{"constraintAnn":[],"constraintClass":[["Options","Applicative","Builder","Internal"],"HasName"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"f"}],"constraintKindArgs":[],"constraintData":null},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Builder","Internal"],"Mod"]},{"annotation":[],"tag":"TypeVar","contents":"f"}]},{"annotation":[],"tag":"TypeVar","contents":"a"}]}]}]},null]},null]}},"sourceSpan":{"start":[162,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Builder.purs","end":[162,51]}},{"children":[],"comments":"Specify the help text for an option.\n","title":"help","info":{"declType":"value","type":{"annotation":[],"tag":"ForAll","contents":["a",{"annotation":[],"tag":"ForAll","contents":["f",{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Builder","Internal"],"Mod"]},{"annotation":[],"tag":"TypeVar","contents":"f"}]},{"annotation":[],"tag":"TypeVar","contents":"a"}]}]},null]},null]}},"sourceSpan":{"start":[186,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Builder.purs","end":[186,38]}},{"children":[],"comments":"Specify the help text for an option as a 'Text.PrettyPrint.ANSI.Leijen.Doc'\nvalue.\n","title":"helpDoc","info":{"declType":"value","type":{"annotation":[],"tag":"ForAll","contents":["f",{"annotation":[],"tag":"ForAll","contents":["a",{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]}]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Builder","Internal"],"Mod"]},{"annotation":[],"tag":"TypeVar","contents":"f"}]},{"annotation":[],"tag":"TypeVar","contents":"a"}]}]},null]},null]}},"sourceSpan":{"start":[191,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Builder.purs","end":[191,44]}},{"children":[],"comments":"Specify a default value for an option.\n\n**Note**: Because this modifier means the parser will never fail,\ndo not use it with combinators such as 'some' or 'many', as\nthese combinators continue until a failure occurs.\nCareless use will thus result in a hang.\n\nTo display the default value, combine with `showDefault` or\n`showDefaultWith`.\n","title":"value","info":{"declType":"value","type":{"annotation":[],"tag":"ForAll","contents":["f",{"annotation":[],"tag":"ForAll","contents":["a",{"annotation":[],"tag":"ConstrainedType","contents":[{"constraintAnn":[],"constraintClass":[["Options","Applicative","Builder","Internal"],"HasValue"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"f"}],"constraintKindArgs":[],"constraintData":null},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeVar","contents":"a"}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Builder","Internal"],"Mod"]},{"annotation":[],"tag":"TypeVar","contents":"f"}]},{"annotation":[],"tag":"TypeVar","contents":"a"}]}]}]},null]},null]}},"sourceSpan":{"start":[174,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Builder.purs","end":[174,48]}},{"children":[],"comments":"Show the default value for this option using a function.\n","title":"showDefaultWith","info":{"declType":"value","type":{"annotation":[],"tag":"ForAll","contents":["f",{"annotation":[],"tag":"ForAll","contents":["a",{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeVar","contents":"a"}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Builder","Internal"],"Mod"]},{"annotation":[],"tag":"TypeVar","contents":"f"}]},{"annotation":[],"tag":"TypeVar","contents":"a"}]}]},null]},null]}},"sourceSpan":{"start":[178,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Builder.purs","end":[178,56]}},{"children":[],"comments":"Show the default value for this option using its 'Show' instance.\n","title":"showDefault","info":{"declType":"value","type":{"annotation":[],"tag":"ForAll","contents":["f",{"annotation":[],"tag":"ForAll","contents":["a",{"annotation":[],"tag":"ConstrainedType","contents":[{"constraintAnn":[],"constraintClass":[["Data","Show"],"Show"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"a"}],"constraintKindArgs":[],"constraintData":null},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Builder","Internal"],"Mod"]},{"annotation":[],"tag":"TypeVar","contents":"f"}]},{"annotation":[],"tag":"TypeVar","contents":"a"}]}]},null]},null]}},"sourceSpan":{"start":[182,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Builder.purs","end":[182,45]}},{"children":[],"comments":"Specify a metavariable for the argument.\n\nMetavariables have no effect on the actual parser, and only serve to specify\nthe symbolic name for an argument to be displayed in the help text.\n","title":"metavar","info":{"declType":"value","type":{"annotation":[],"tag":"ForAll","contents":["f",{"annotation":[],"tag":"ForAll","contents":["a",{"annotation":[],"tag":"ConstrainedType","contents":[{"constraintAnn":[],"constraintClass":[["Options","Applicative","Builder","Internal"],"HasMetavar"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"f"}],"constraintKindArgs":[],"constraintData":null},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Builder","Internal"],"Mod"]},{"annotation":[],"tag":"TypeVar","contents":"f"}]},{"annotation":[],"tag":"TypeVar","contents":"a"}]}]}]},null]},null]}},"sourceSpan":{"start":[202,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Builder.purs","end":[202,57]}},{"children":[],"comments":"Specify the error to display when no argument is provided to this option.\n","title":"noArgError","info":{"declType":"value","type":{"annotation":[],"tag":"ForAll","contents":["a",{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Types"],"ParseError"]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Builder","Internal"],"Mod"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Builder","Internal"],"OptionFields"]}]},{"annotation":[],"tag":"TypeVar","contents":"a"}]}]},null]}},"sourceSpan":{"start":[195,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Builder.purs","end":[195,57]}},{"children":[],"comments":"Hide this option from the brief description.\n","title":"hidden","info":{"declType":"value","type":{"annotation":[],"tag":"ForAll","contents":["f",{"annotation":[],"tag":"ForAll","contents":["a",{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Builder","Internal"],"Mod"]},{"annotation":[],"tag":"TypeVar","contents":"f"}]},{"annotation":[],"tag":"TypeVar","contents":"a"}]},null]},null]}},"sourceSpan":{"start":[206,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Builder.purs","end":[206,30]}},{"children":[],"comments":"Apply a function to the option description in the usage text.\n\n> import Options.Applicative.Help\n> flag' () (short 't' <> style bold)\n\n**NOTE**: This builder is more flexible than its name and example\nallude. One of the motivating examples for its addition was to\nused `const` to completely replace the usage text of an option.\n","title":"style","info":{"declType":"value","type":{"annotation":[],"tag":"ForAll","contents":["f",{"annotation":[],"tag":"ForAll","contents":["a",{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]}]}}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Builder","Internal"],"Mod"]},{"annotation":[],"tag":"TypeVar","contents":"f"}]},{"annotation":[],"tag":"TypeVar","contents":"a"}]}]},null]},null]}},"sourceSpan":{"start":[218,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Builder.purs","end":[218,47]}},{"children":[],"comments":"Add a command to a subparser option.\n\nSuggested usage for multiple commands is to add them to a single subparser. e.g.\n\n```purescript\nsample :: Parser Sample\nsample = subparser\n       ( command \"hello\"\n         (info hello (progDesc \"Print greeting\"))\n      <> command \"goodbye\"\n         (info goodbye (progDesc \"Say goodbye\"))\n       )\n```\n","title":"command","info":{"declType":"value","type":{"annotation":[],"tag":"ForAll","contents":["a",{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Types"],"ParserInfo"]},{"annotation":[],"tag":"TypeVar","contents":"a"}]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Builder","Internal"],"Mod"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Builder","Internal"],"CommandFields"]}]},{"annotation":[],"tag":"TypeVar","contents":"a"}]}]}]},null]}},"sourceSpan":{"start":[235,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Builder.purs","end":[235,67]}},{"children":[],"comments":"Add a description to a group of commands.\n\nAdvanced feature for separating logical groups of commands on the parse line.\n\nIf using the same `metavar` for each group of commands, it may yield a more\nattractive usage text combined with `hidden` for some groups.\n","title":"commandGroup","info":{"declType":"value","type":{"annotation":[],"tag":"ForAll","contents":["a",{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Builder","Internal"],"Mod"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Builder","Internal"],"CommandFields"]}]},{"annotation":[],"tag":"TypeVar","contents":"a"}]}]},null]}},"sourceSpan":{"start":[245,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Builder.purs","end":[245,56]}},{"children":[],"comments":"Add a list of possible completion values.\n","title":"completeWith","info":{"declType":"value","type":{"annotation":[],"tag":"ForAll","contents":["f",{"annotation":[],"tag":"ForAll","contents":["a",{"annotation":[],"tag":"ConstrainedType","contents":[{"constraintAnn":[],"constraintClass":[["Options","Applicative","Builder","Internal"],"HasCompleter"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"f"}],"constraintKindArgs":[],"constraintData":null},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Array"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Builder","Internal"],"Mod"]},{"annotation":[],"tag":"TypeVar","contents":"f"}]},{"annotation":[],"tag":"TypeVar","contents":"a"}]}]}]},null]},null]}},"sourceSpan":{"start":[250,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Builder.purs","end":[250,70]}},{"children":[],"comments":"Add a bash completion action. Common actions include `file` and\n`directory`. See\n<http://www.gnu.org/software/bash/manual/html_node/Programmable-Completion-Builtins.html#Programmable-Completion-Builtins>\nfor a complete list.\n","title":"action","info":{"declType":"value","type":{"annotation":[],"tag":"ForAll","contents":["f",{"annotation":[],"tag":"ForAll","contents":["a",{"annotation":[],"tag":"ConstrainedType","contents":[{"constraintAnn":[],"constraintClass":[["Options","Applicative","Builder","Internal"],"HasCompleter"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"f"}],"constraintKindArgs":[],"constraintData":null},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Builder","Internal"],"Mod"]},{"annotation":[],"tag":"TypeVar","contents":"f"}]},{"annotation":[],"tag":"TypeVar","contents":"a"}]}]}]},null]},null]}},"sourceSpan":{"start":[257,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Builder.purs","end":[257,58]}},{"children":[],"comments":"Add a completer to an argument.\n\nA completer is a function `String -> Effect String` which, given a partial\nargument, returns all possible completions for that argument.\n","title":"completer","info":{"declType":"value","type":{"annotation":[],"tag":"ForAll","contents":["f",{"annotation":[],"tag":"ForAll","contents":["a",{"annotation":[],"tag":"ConstrainedType","contents":[{"constraintAnn":[],"constraintClass":[["Options","Applicative","Builder","Internal"],"HasCompleter"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"f"}],"constraintKindArgs":[],"constraintData":null},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Types"],"Completer"]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Builder","Internal"],"Mod"]},{"annotation":[],"tag":"TypeVar","contents":"f"}]},{"annotation":[],"tag":"TypeVar","contents":"a"}]}]}]},null]},null]}},"sourceSpan":{"start":[264,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Builder.purs","end":[264,64]}},{"children":[],"comments":"Trivial option modifier.\n","title":"idm","info":{"declType":"value","type":{"annotation":[],"tag":"ForAll","contents":["m",{"annotation":[],"tag":"ConstrainedType","contents":[{"constraintAnn":[],"constraintClass":[["Data","Monoid"],"Monoid"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"m"}],"constraintKindArgs":[],"constraintData":null},{"annotation":[],"tag":"TypeVar","contents":"m"}]},null]}},"sourceSpan":{"start":[520,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Builder.purs","end":[520,31]}},{"children":[],"comments":"String 'Option' reader.\n","title":"str","info":{"declType":"value","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Types"],"ReadM"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}},"sourceSpan":{"start":[119,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Builder.purs","end":[119,20]}},{"children":[],"comments":"Int 'Option' reader.\n","title":"int","info":{"declType":"value","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Types"],"ReadM"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]}},"sourceSpan":{"start":[123,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Builder.purs","end":[123,17]}},{"children":[],"comments":"Number 'Option' reader.\n","title":"number","info":{"declType":"value","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Types"],"ReadM"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Number"]}]}},"sourceSpan":{"start":[129,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Builder.purs","end":[129,23]}},{"children":[],"comments":"Boolean 'Option' reader.\n","title":"boolean","info":{"declType":"value","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Types"],"ReadM"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}},"sourceSpan":{"start":[135,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Builder.purs","end":[135,25]}},{"children":[],"comments":"Convert a function producing a 'Maybe' into a reader.\n","title":"maybeReader","info":{"declType":"value","type":{"annotation":[],"tag":"ForAll","contents":["a",{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"annotation":[],"tag":"TypeVar","contents":"a"}]}]}}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Types"],"ReadM"]},{"annotation":[],"tag":"TypeVar","contents":"a"}]}]},null]}},"sourceSpan":{"start":[146,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Builder.purs","end":[146,56]}},{"children":[],"comments":"Convert a function producing an 'Either' into a reader.\n","title":"eitherReader","info":{"declType":"value","type":{"annotation":[],"tag":"ForAll","contents":["a",{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Either"],"Either"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"annotation":[],"tag":"TypeVar","contents":"a"}]}]}}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Types"],"ReadM"]},{"annotation":[],"tag":"TypeVar","contents":"a"}]}]},null]}},"sourceSpan":{"start":[142,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Builder.purs","end":[142,65]}},{"children":[],"comments":"Null 'Option' reader. All arguments will fail validation.\n","title":"disabled","info":{"declType":"value","type":{"annotation":[],"tag":"ForAll","contents":["a",{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Types"],"ReadM"]},{"annotation":[],"tag":"TypeVar","contents":"a"}]},null]}},"sourceSpan":{"start":[152,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Builder.purs","end":[152,30]}},{"children":[{"comments":null,"title":"InfoMod","info":{"arguments":[{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Types"],"ParserInfo"]},{"annotation":[],"tag":"TypeVar","contents":"a"}]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Types"],"ParserInfo"]},{"annotation":[],"tag":"TypeVar","contents":"a"}]}]}}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"newtypeInfoMod","info":{"declType":"instance","dependencies":[],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Newtype"],"Newtype"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Builder"],"InfoMod"]},{"annotation":[],"tag":"TypeVar","contents":"a"}]}]},{"annotation":[],"tag":"TypeWildcard","contents":null}]}},"sourceSpan":{"start":[375,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Builder.purs","end":[375,56]}},{"comments":null,"title":"infoModMonoid","info":{"declType":"instance","dependencies":[],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Monoid"],"Monoid"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Builder"],"InfoMod"]},{"annotation":[],"tag":"TypeVar","contents":"a"}]}]}},"sourceSpan":{"start":[377,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Builder.purs","end":[378,28]}},{"comments":null,"title":"infoModSemigroup","info":{"declType":"instance","dependencies":[],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Semigroup"],"Semigroup"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Builder"],"InfoMod"]},{"annotation":[],"tag":"TypeVar","contents":"a"}]}]}},"sourceSpan":{"start":[380,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Builder.purs","end":[381,59]}}],"comments":"Modifier for 'ParserInfo'.\n","title":"InfoMod","info":{"declType":"data","dataDeclType":"newtype","typeArguments":[["a",null]]},"sourceSpan":{"start":[374,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Builder.purs","end":[374,59]}},{"children":[],"comments":"Show a full description in the help text of this parser (i.e.\noptions with the `hidden` modifier will still be displayed,\nunlike `briefDesc`).\n","title":"fullDesc","info":{"declType":"value","type":{"annotation":[],"tag":"ForAll","contents":["a",{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Builder"],"InfoMod"]},{"annotation":[],"tag":"TypeVar","contents":"a"}]},null]}},"sourceSpan":{"start":[386,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Builder.purs","end":[386,32]}},{"children":[],"comments":"Only show a brief description in the help text of this parser (i.e.\noptions with the `hidden` modifier will NOT be displayed,\nunlike `fullDesc`).\n","title":"briefDesc","info":{"declType":"value","type":{"annotation":[],"tag":"ForAll","contents":["a",{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Builder"],"InfoMod"]},{"annotation":[],"tag":"TypeVar","contents":"a"}]},null]}},"sourceSpan":{"start":[392,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Builder.purs","end":[392,33]}},{"children":[],"comments":"Specify a header for this parser.\n","title":"header","info":{"declType":"value","type":{"annotation":[],"tag":"ForAll","contents":["a",{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Builder"],"InfoMod"]},{"annotation":[],"tag":"TypeVar","contents":"a"}]}]},null]}},"sourceSpan":{"start":[396,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Builder.purs","end":[396,40]}},{"children":[],"comments":"Specify a header for this parser as a 'Text.PrettyPrint.ANSI.Leijen.Doc'\nvalue.\n","title":"headerDoc","info":{"declType":"value","type":{"annotation":[],"tag":"ForAll","contents":["a",{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]}]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Builder"],"InfoMod"]},{"annotation":[],"tag":"TypeVar","contents":"a"}]}]},null]}},"sourceSpan":{"start":[401,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Builder.purs","end":[401,46]}},{"children":[],"comments":"Specify a footer for this parser.\n","title":"footer","info":{"declType":"value","type":{"annotation":[],"tag":"ForAll","contents":["a",{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Builder"],"InfoMod"]},{"annotation":[],"tag":"TypeVar","contents":"a"}]}]},null]}},"sourceSpan":{"start":[405,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Builder.purs","end":[405,40]}},{"children":[],"comments":"Specify a footer for this parser as a 'Text.PrettyPrint.ANSI.Leijen.Doc'\nvalue.\n","title":"footerDoc","info":{"declType":"value","type":{"annotation":[],"tag":"ForAll","contents":["a",{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]}]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Builder"],"InfoMod"]},{"annotation":[],"tag":"TypeVar","contents":"a"}]}]},null]}},"sourceSpan":{"start":[410,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Builder.purs","end":[410,46]}},{"children":[],"comments":"Specify a short program description.\n","title":"progDesc","info":{"declType":"value","type":{"annotation":[],"tag":"ForAll","contents":["a",{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Builder"],"InfoMod"]},{"annotation":[],"tag":"TypeVar","contents":"a"}]}]},null]}},"sourceSpan":{"start":[414,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Builder.purs","end":[414,42]}},{"children":[],"comments":"Specify a short program description as a 'Text.PrettyPrint.ANSI.Leijen.Doc'\nvalue.\n","title":"progDescDoc","info":{"declType":"value","type":{"annotation":[],"tag":"ForAll","contents":["a",{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]}]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Builder"],"InfoMod"]},{"annotation":[],"tag":"TypeVar","contents":"a"}]}]},null]}},"sourceSpan":{"start":[419,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Builder.purs","end":[419,48]}},{"children":[],"comments":"Specify an exit code if a parse error occurs.\n","title":"failureCode","info":{"declType":"value","type":{"annotation":[],"tag":"ForAll","contents":["a",{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["ExitCodes"],"ExitCode"]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Builder"],"InfoMod"]},{"annotation":[],"tag":"TypeVar","contents":"a"}]}]},null]}},"sourceSpan":{"start":[423,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Builder.purs","end":[423,47]}},{"children":[],"comments":"Disable parsing of regular options after arguments. After a positional\nargument is parsed, all remaining options and arguments will be treated\nas a positional arguments. Not recommended in general as users often\nexpect to be able to freely intersperse regular options and flags within\ncommand line options.\n","title":"noIntersperse","info":{"declType":"value","type":{"annotation":[],"tag":"ForAll","contents":["a",{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Builder"],"InfoMod"]},{"annotation":[],"tag":"TypeVar","contents":"a"}]},null]}},"sourceSpan":{"start":[431,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Builder.purs","end":[431,37]}},{"children":[],"comments":"Intersperse matched options and arguments normally, but allow unmatched\noptions to be treated as positional arguments.\nThis is sometimes useful if one is wrapping a third party cli tool and\nneeds to pass options through, while also providing a handful of their\nown options. Not recommended in general as typos by the user may not\nyield a parse error and cause confusion.\n","title":"forwardOptions","info":{"declType":"value","type":{"annotation":[],"tag":"ForAll","contents":["a",{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Builder"],"InfoMod"]},{"annotation":[],"tag":"TypeVar","contents":"a"}]},null]}},"sourceSpan":{"start":[440,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Builder.purs","end":[440,38]}},{"children":[],"comments":"Create a 'ParserInfo' given a 'Parser' and a modifier.\n","title":"info","info":{"declType":"value","type":{"annotation":[],"tag":"ForAll","contents":["a",{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Types"],"Parser"]},{"annotation":[],"tag":"TypeVar","contents":"a"}]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Builder"],"InfoMod"]},{"annotation":[],"tag":"TypeVar","contents":"a"}]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Types"],"ParserInfo"]},{"annotation":[],"tag":"TypeVar","contents":"a"}]}]}]},null]}},"sourceSpan":{"start":[444,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Builder.purs","end":[444,56]}},{"children":[{"comments":null,"title":"PrefsMod","info":{"arguments":[{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Types"],"ParserPrefs"]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Types"],"ParserPrefs"]}]}}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"newtypePrefsMod","info":{"declType":"instance","dependencies":[],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Newtype"],"Newtype"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Builder"],"PrefsMod"]}]},{"annotation":[],"tag":"TypeWildcard","contents":null}]}},"sourceSpan":{"start":[457,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Builder.purs","end":[457,54]}},{"comments":null,"title":"prefsModMonoid","info":{"declType":"instance","dependencies":[],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Monoid"],"Monoid"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Builder"],"PrefsMod"]}]}},"sourceSpan":{"start":[459,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Builder.purs","end":[460,29]}},{"comments":null,"title":"prefsModSemigroup","info":{"declType":"instance","dependencies":[],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Semigroup"],"Semigroup"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Builder"],"PrefsMod"]}]}},"sourceSpan":{"start":[462,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Builder.purs","end":[463,62]}}],"comments":null,"title":"PrefsMod","info":{"declType":"data","dataDeclType":"newtype","typeArguments":[]},"sourceSpan":{"start":[456,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Builder.purs","end":[456,57]}},{"children":[],"comments":"Include a suffix to attach to the metavar when multiple values\ncan be entered.\n","title":"multiSuffix","info":{"declType":"value","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Builder"],"PrefsMod"]}]}},"sourceSpan":{"start":[467,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Builder.purs","end":[467,34]}},{"children":[],"comments":"Turn on disambiguation.\n\nSee\nhttps://github.com/pcapriotti/optparse-applicative#disambiguation\n","title":"disambiguate","info":{"declType":"value","type":{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Builder"],"PrefsMod"]}},"sourceSpan":{"start":[474,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Builder.purs","end":[474,25]}},{"children":[],"comments":"Show full help text on any error.\n","title":"showHelpOnError","info":{"declType":"value","type":{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Builder"],"PrefsMod"]}},"sourceSpan":{"start":[478,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Builder.purs","end":[478,28]}},{"children":[],"comments":"Show the help text if the user enters only the program name or\nsubcommand.\n\nThis will suppress a \"Missing:\" error and show the full usage\ninstead if a user just types the name of the program.\n","title":"showHelpOnEmpty","info":{"declType":"value","type":{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Builder"],"PrefsMod"]}},"sourceSpan":{"start":[486,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Builder.purs","end":[486,28]}},{"children":[],"comments":"Turn off backtracking after subcommand is parsed.\n","title":"noBacktrack","info":{"declType":"value","type":{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Builder"],"PrefsMod"]}},"sourceSpan":{"start":[490,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Builder.purs","end":[490,24]}},{"children":[],"comments":"Allow full mixing of subcommand and parent arguments by inlining\nselected subparsers into the parent parser.\n\n**Note:** When this option is used, preferences for the subparser which\neffect the parser behaviour (such as noIntersperse) are ignored.\n","title":"subparserInline","info":{"declType":"value","type":{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Builder"],"PrefsMod"]}},"sourceSpan":{"start":[498,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Builder.purs","end":[498,28]}},{"children":[],"comments":"Set the maximum width of the generated help text.\n","title":"columns","info":{"declType":"value","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Builder"],"PrefsMod"]}]}},"sourceSpan":{"start":[502,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Builder.purs","end":[502,27]}},{"children":[],"comments":"Create a `ParserPrefs` given a modifier\n","title":"prefs","info":{"declType":"value","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Builder"],"PrefsMod"]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Types"],"ParserPrefs"]}]}},"sourceSpan":{"start":[506,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Builder.purs","end":[506,33]}},{"children":[],"comments":"Default preferences.\n","title":"defaultPrefs","info":{"declType":"value","type":{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Types"],"ParserPrefs"]}},"sourceSpan":{"start":[524,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Builder.purs","end":[524,28]}}]},{"reExports":[{"moduleName":{"package":null,"item":["Options","Applicative","Types"]},"declarations":[{"children":[{"comments":null,"title":"newtypeCompleter","info":{"declType":"instance","dependencies":[],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Newtype"],"Newtype"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Types"],"Completer"]}]},{"annotation":[],"tag":"TypeWildcard","contents":null}]}},"sourceSpan":{"start":[416,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Types.purs","end":[416,56]}},{"comments":null,"title":"completerSemigroup","info":{"declType":"instance","dependencies":[],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Semigroup"],"Semigroup"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Types"],"Completer"]}]}},"sourceSpan":{"start":[421,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Types.purs","end":[423,45]}},{"comments":null,"title":"completerMonoid","info":{"declType":"instance","dependencies":[],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Monoid"],"Monoid"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Types"],"Completer"]}]}},"sourceSpan":{"start":[425,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Types.purs","end":[426,37]}}],"comments":"optparse-applicative supplies a rich completion system for bash,\nzsh, and fish shells.\n\n'Completer' functions are used for option and argument to complete\ntheir values.\n\nUse the 'completer' builder to use these.\nThe 'action' and 'completeWith' builders are also provided for\nconvenience, to use 'bashCompleter' and 'listCompleter' as a 'Mod'.\n","title":"Completer","info":{"declType":"data","dataDeclType":"newtype","typeArguments":[]},"sourceSpan":{"start":[415,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Types.purs","end":[415,64]}},{"children":[],"comments":"Smart constructor for a 'Completer'\n","title":"mkCompleter","info":{"declType":"value","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Array"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}}]}]}}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Types"],"Completer"]}]}},"sourceSpan":{"start":[418,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Types.purs","end":[418,62]}}]}],"name":"Options.Applicative.Builder.Completer","comments":null,"declarations":[{"children":[],"comments":"Create a 'Completer' from an IO action\n","title":"listIOCompleter","info":{"declType":"value","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Array"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}}]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Types"],"Completer"]}]}},"sourceSpan":{"start":[25,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Builder/Completer.purs","end":[25,54]}},{"children":[],"comments":"Create a 'Completer' from a constant\n","title":"listCompleter","info":{"declType":"value","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Array"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Types"],"Completer"]}]}},"sourceSpan":{"start":[31,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Builder/Completer.purs","end":[31,45]}},{"children":[],"comments":"Run a compgen completion action.\n","title":"bashCompleter","info":{"declType":"value","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Types"],"Completer"]}]}},"sourceSpan":{"start":[40,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Builder/Completer.purs","end":[40,37]}}]},{"reExports":[],"name":"Options.Applicative.Builder.Internal","comments":null,"declarations":[{"children":[{"comments":null,"title":"Mod","info":{"arguments":[{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeVar","contents":"f"},{"annotation":[],"tag":"TypeVar","contents":"a"}]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeVar","contents":"f"},{"annotation":[],"tag":"TypeVar","contents":"a"}]}]}},{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Builder","Internal"],"DefaultProp"]},{"annotation":[],"tag":"TypeVar","contents":"a"}]}},{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Types"],"OptProperties"]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Types"],"OptProperties"]}]}}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"modMonoid","info":{"declType":"instance","dependencies":[],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Monoid"],"Monoid"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Builder","Internal"],"Mod"]},{"annotation":[],"tag":"TypeVar","contents":"f"}]},{"annotation":[],"tag":"TypeVar","contents":"a"}]}]}},"sourceSpan":{"start":[150,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Builder/Internal.purs","end":[151,40]}},{"comments":"@since 0.13.0.0\n","title":"modSemigroup","info":{"declType":"instance","dependencies":[],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Semigroup"],"Semigroup"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Builder","Internal"],"Mod"]},{"annotation":[],"tag":"TypeVar","contents":"f"}]},{"annotation":[],"tag":"TypeVar","contents":"a"}]}]}},"sourceSpan":{"start":[154,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Builder/Internal.purs","end":[156,45]}}],"comments":"An option modifier.\n\nOption modifiers are values that represent a modification of the properties\nof an option.\n\nThe type parameter @a@ is the pure type of the option, while @f@ is a\nrecord containing its properties (e.g. 'OptionFields' for regular options,\n'FlagFields' for flags, etc...).\n\nAn option modifier consists of 3 elements:\n\n - A field modifier, of the form @f a -> f a@. These are essentially\n (compositions of) setters for some of the properties supported by @f@.\n\n - An optional default value and function to display it.\n\n - A property modifier, of the form @OptProperties -> OptProperties@. This\n is just like the field modifier, but for properties applicable to any\n option.\n\nModifiers are instances of 'Monoid', and can be composed as such.\n\nOne rarely needs to deal with modifiers directly, as most of the times it is\nsufficient to pass them to builders (such as 'strOption' or 'flag') to\ncreate options (see 'Options.Applicative.Builder').\n\nContraints are often used to ensure that the modifiers can be sensibly applied.\nFor example, positional arguments can't be specified by long or short names,\nso the 'HasName' constraint is used to ensure we have a flag or option.\n","title":"Mod","info":{"declType":"data","dataDeclType":"data","typeArguments":[["f",null],["a",null]]},"sourceSpan":{"start":[140,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Builder/Internal.purs","end":[142,52]}},{"children":[{"comments":null,"title":"name","info":{"declType":"typeClassMember","type":{"annotation":[],"tag":"ForAll","contents":["a",{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Types"],"OptName"]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeVar","contents":"f"},{"annotation":[],"tag":"TypeVar","contents":"a"}]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeVar","contents":"f"},{"annotation":[],"tag":"TypeVar","contents":"a"}]}]}]},null]}},"sourceSpan":{"start":[60,3],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Builder/Internal.purs","end":[60,42]}},{"comments":null,"title":"optionFieldsHasName","info":{"declType":"instance","dependencies":[],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Builder","Internal"],"HasName"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Builder","Internal"],"OptionFields"]}]}},"sourceSpan":{"start":[63,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Builder/Internal.purs","end":[64,84]}},{"comments":null,"title":"flagFieldsHasName","info":{"declType":"instance","dependencies":[],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Builder","Internal"],"HasName"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Builder","Internal"],"FlagFields"]}]}},"sourceSpan":{"start":[66,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Builder/Internal.purs","end":[67,84]}}],"comments":null,"title":"HasName","info":{"fundeps":[],"arguments":[["f",null]],"declType":"typeClass","superclasses":[]},"sourceSpan":{"start":[59,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Builder/Internal.purs","end":[60,42]}},{"children":[{"comments":null,"title":"modCompleter","info":{"declType":"typeClassMember","type":{"annotation":[],"tag":"ForAll","contents":["a",{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Types"],"Completer"]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Types"],"Completer"]}]}}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeVar","contents":"f"},{"annotation":[],"tag":"TypeVar","contents":"a"}]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeVar","contents":"f"},{"annotation":[],"tag":"TypeVar","contents":"a"}]}]}]},null]}},"sourceSpan":{"start":[71,3],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Builder/Internal.purs","end":[71,67]}},{"comments":null,"title":"optionFieldsHasCompleter","info":{"declType":"instance","dependencies":[],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Builder","Internal"],"HasCompleter"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Builder","Internal"],"OptionFields"]}]}},"sourceSpan":{"start":[73,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Builder/Internal.purs","end":[74,80]}},{"comments":null,"title":"argumentFieldsHasCompleter","info":{"declType":"instance","dependencies":[],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Builder","Internal"],"HasCompleter"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Builder","Internal"],"ArgumentFields"]}]}},"sourceSpan":{"start":[76,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Builder/Internal.purs","end":[77,82]}}],"comments":null,"title":"HasCompleter","info":{"fundeps":[],"arguments":[["f",null]],"declType":"typeClass","superclasses":[]},"sourceSpan":{"start":[70,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Builder/Internal.purs","end":[71,67]}},{"children":[{"comments":null,"title":"hasValueDummy","info":{"declType":"typeClassMember","type":{"annotation":[],"tag":"ForAll","contents":["a",{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeVar","contents":"f"},{"annotation":[],"tag":"TypeVar","contents":"a"}]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]},null]}},"sourceSpan":{"start":[82,3],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Builder/Internal.purs","end":[82,41]}},{"comments":null,"title":"optionFieldsHasValue","info":{"declType":"instance","dependencies":[],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Builder","Internal"],"HasValue"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Builder","Internal"],"OptionFields"]}]}},"sourceSpan":{"start":[83,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Builder/Internal.purs","end":[84,25]}},{"comments":null,"title":"argumentFieldsHasValue","info":{"declType":"instance","dependencies":[],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Builder","Internal"],"HasValue"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Builder","Internal"],"ArgumentFields"]}]}},"sourceSpan":{"start":[85,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Builder/Internal.purs","end":[86,25]}}],"comments":null,"title":"HasValue","info":{"fundeps":[],"arguments":[["f",null]],"declType":"typeClass","superclasses":[]},"sourceSpan":{"start":[80,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Builder/Internal.purs","end":[82,41]}},{"children":[{"comments":null,"title":"hasMetavarDummy","info":{"declType":"typeClassMember","type":{"annotation":[],"tag":"ForAll","contents":["a",{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeVar","contents":"f"},{"annotation":[],"tag":"TypeVar","contents":"a"}]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]},null]}},"sourceSpan":{"start":[90,3],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Builder/Internal.purs","end":[90,43]}},{"comments":null,"title":"optionFieldsHasMetavar","info":{"declType":"instance","dependencies":[],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Builder","Internal"],"HasMetavar"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Builder","Internal"],"OptionFields"]}]}},"sourceSpan":{"start":[91,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Builder/Internal.purs","end":[92,27]}},{"comments":null,"title":"argumentFieldsHasMetavar","info":{"declType":"instance","dependencies":[],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Builder","Internal"],"HasMetavar"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Builder","Internal"],"ArgumentFields"]}]}},"sourceSpan":{"start":[93,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Builder/Internal.purs","end":[94,27]}},{"comments":null,"title":"commandFieldsHasMetavar","info":{"declType":"instance","dependencies":[],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Builder","Internal"],"HasMetavar"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Builder","Internal"],"CommandFields"]}]}},"sourceSpan":{"start":[95,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Builder/Internal.purs","end":[96,27]}}],"comments":null,"title":"HasMetavar","info":{"fundeps":[],"arguments":[["f",null]],"declType":"typeClass","superclasses":[]},"sourceSpan":{"start":[89,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Builder/Internal.purs","end":[90,43]}},{"children":[{"comments":null,"title":"OptionFields","info":{"arguments":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"annotation":[],"tag":"RCons","contents":["optNames",{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Array"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Types"],"OptName"]}]},{"annotation":[],"tag":"RCons","contents":["optCompleter",{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Types"],"Completer"]},{"annotation":[],"tag":"RCons","contents":["optNoArgError",{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Types"],"ParseError"]}]},{"annotation":[],"tag":"REmpty"}]}]}]}]}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"newtypeOptionFields","info":{"declType":"instance","dependencies":[],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Newtype"],"Newtype"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Builder","Internal"],"OptionFields"]},{"annotation":[],"tag":"TypeVar","contents":"a"}]}]},{"annotation":[],"tag":"TypeWildcard","contents":null}]}},"sourceSpan":{"start":[41,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Builder/Internal.purs","end":[41,66]}},{"comments":null,"title":"optionFieldsHasName","info":{"declType":"instance","dependencies":[],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Builder","Internal"],"HasName"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Builder","Internal"],"OptionFields"]}]}},"sourceSpan":{"start":[63,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Builder/Internal.purs","end":[64,84]}},{"comments":null,"title":"optionFieldsHasCompleter","info":{"declType":"instance","dependencies":[],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Builder","Internal"],"HasCompleter"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Builder","Internal"],"OptionFields"]}]}},"sourceSpan":{"start":[73,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Builder/Internal.purs","end":[74,80]}},{"comments":null,"title":"optionFieldsHasValue","info":{"declType":"instance","dependencies":[],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Builder","Internal"],"HasValue"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Builder","Internal"],"OptionFields"]}]}},"sourceSpan":{"start":[83,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Builder/Internal.purs","end":[84,25]}},{"comments":null,"title":"optionFieldsHasMetavar","info":{"declType":"instance","dependencies":[],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Builder","Internal"],"HasMetavar"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Builder","Internal"],"OptionFields"]}]}},"sourceSpan":{"start":[91,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Builder/Internal.purs","end":[92,27]}}],"comments":null,"title":"OptionFields","info":{"declType":"data","dataDeclType":"newtype","typeArguments":[["a",null]]},"sourceSpan":{"start":[37,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Builder/Internal.purs","end":[40,44]}},{"children":[{"comments":null,"title":"FlagFields","info":{"arguments":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"annotation":[],"tag":"RCons","contents":["flagNames",{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Array"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Types"],"OptName"]}]},{"annotation":[],"tag":"RCons","contents":["flagActive",{"annotation":[],"tag":"TypeVar","contents":"a"},{"annotation":[],"tag":"REmpty"}]}]}]}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"newtypeFlagFields","info":{"declType":"instance","dependencies":[],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Newtype"],"Newtype"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Builder","Internal"],"FlagFields"]},{"annotation":[],"tag":"TypeVar","contents":"a"}]}]},{"annotation":[],"tag":"TypeWildcard","contents":null}]}},"sourceSpan":{"start":[46,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Builder/Internal.purs","end":[46,62]}},{"comments":null,"title":"flagFieldsHasName","info":{"declType":"instance","dependencies":[],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Builder","Internal"],"HasName"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Builder","Internal"],"FlagFields"]}]}},"sourceSpan":{"start":[66,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Builder/Internal.purs","end":[67,84]}}],"comments":null,"title":"FlagFields","info":{"declType":"data","dataDeclType":"newtype","typeArguments":[["a",null]]},"sourceSpan":{"start":[43,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Builder/Internal.purs","end":[45,22]}},{"children":[{"comments":null,"title":"CommandFields","info":{"arguments":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"annotation":[],"tag":"RCons","contents":["cmdCommands",{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Array"]},{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Tuple"],"Tuple"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Types"],"ParserInfo"]},{"annotation":[],"tag":"TypeVar","contents":"a"}]}}]}}]},{"annotation":[],"tag":"RCons","contents":["cmdGroup",{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"annotation":[],"tag":"REmpty"}]}]}]}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"newtypeCommandFields","info":{"declType":"instance","dependencies":[],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Newtype"],"Newtype"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Builder","Internal"],"CommandFields"]},{"annotation":[],"tag":"TypeVar","contents":"a"}]}]},{"annotation":[],"tag":"TypeWildcard","contents":null}]}},"sourceSpan":{"start":[51,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Builder/Internal.purs","end":[51,68]}},{"comments":null,"title":"commandFieldsHasMetavar","info":{"declType":"instance","dependencies":[],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Builder","Internal"],"HasMetavar"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Builder","Internal"],"CommandFields"]}]}},"sourceSpan":{"start":[95,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Builder/Internal.purs","end":[96,27]}}],"comments":null,"title":"CommandFields","info":{"declType":"data","dataDeclType":"newtype","typeArguments":[["a",null]]},"sourceSpan":{"start":[48,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Builder/Internal.purs","end":[50,31]}},{"children":[{"comments":null,"title":"ArgumentFields","info":{"arguments":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"annotation":[],"tag":"RCons","contents":["argCompleter",{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Types"],"Completer"]},{"annotation":[],"tag":"REmpty"}]}]}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"newtypeArgumentFields","info":{"declType":"instance","dependencies":[],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Newtype"],"Newtype"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Builder","Internal"],"ArgumentFields"]},{"annotation":[],"tag":"TypeVar","contents":"a"}]}]},{"annotation":[],"tag":"TypeWildcard","contents":null}]}},"sourceSpan":{"start":[56,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Builder/Internal.purs","end":[56,70]}},{"comments":null,"title":"argumentFieldsHasCompleter","info":{"declType":"instance","dependencies":[],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Builder","Internal"],"HasCompleter"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Builder","Internal"],"ArgumentFields"]}]}},"sourceSpan":{"start":[76,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Builder/Internal.purs","end":[77,82]}},{"comments":null,"title":"argumentFieldsHasValue","info":{"declType":"instance","dependencies":[],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Builder","Internal"],"HasValue"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Builder","Internal"],"ArgumentFields"]}]}},"sourceSpan":{"start":[85,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Builder/Internal.purs","end":[86,25]}},{"comments":null,"title":"argumentFieldsHasMetavar","info":{"declType":"instance","dependencies":[],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Builder","Internal"],"HasMetavar"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Builder","Internal"],"ArgumentFields"]}]}},"sourceSpan":{"start":[93,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Builder/Internal.purs","end":[94,27]}}],"comments":null,"title":"ArgumentFields","info":{"declType":"data","dataDeclType":"newtype","typeArguments":[["a",null]]},"sourceSpan":{"start":[54,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Builder/Internal.purs","end":[55,32]}},{"children":[{"comments":null,"title":"DefaultProp","info":{"arguments":[{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"annotation":[],"tag":"TypeVar","contents":"a"}]}},{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeVar","contents":"a"}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}}]}}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"defaultPropMonoid","info":{"declType":"instance","dependencies":[],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Monoid"],"Monoid"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Builder","Internal"],"DefaultProp"]},{"annotation":[],"tag":"TypeVar","contents":"a"}]}]}},"sourceSpan":{"start":[104,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Builder/Internal.purs","end":[105,39]}},{"comments":null,"title":"defaultPropSemigroup","info":{"declType":"instance","dependencies":[],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Semigroup"],"Semigroup"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Builder","Internal"],"DefaultProp"]},{"annotation":[],"tag":"TypeVar","contents":"a"}]}]}},"sourceSpan":{"start":[107,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Builder/Internal.purs","end":[109,44]}}],"comments":null,"title":"DefaultProp","info":{"declType":"data","dataDeclType":"data","typeArguments":[["a",null]]},"sourceSpan":{"start":[100,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Builder/Internal.purs","end":[102,24]}},{"children":[],"comments":null,"title":"optionMod","info":{"declType":"value","type":{"annotation":[],"tag":"ForAll","contents":["f",{"annotation":[],"tag":"ForAll","contents":["a",{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Types"],"OptProperties"]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Types"],"OptProperties"]}]}}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Builder","Internal"],"Mod"]},{"annotation":[],"tag":"TypeVar","contents":"f"}]},{"annotation":[],"tag":"TypeVar","contents":"a"}]}]},null]},null]}},"sourceSpan":{"start":[144,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Builder/Internal.purs","end":[144,69]}},{"children":[],"comments":null,"title":"fieldMod","info":{"declType":"value","type":{"annotation":[],"tag":"ForAll","contents":["f",{"annotation":[],"tag":"ForAll","contents":["a",{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeVar","contents":"f"},{"annotation":[],"tag":"TypeVar","contents":"a"}]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeVar","contents":"f"},{"annotation":[],"tag":"TypeVar","contents":"a"}]}]}}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Builder","Internal"],"Mod"]},{"annotation":[],"tag":"TypeVar","contents":"f"}]},{"annotation":[],"tag":"TypeVar","contents":"a"}]}]},null]},null]}},"sourceSpan":{"start":[147,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Builder/Internal.purs","end":[147,48]}},{"children":[],"comments":"Base default properties.\n","title":"baseProps","info":{"declType":"value","type":{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Types"],"OptProperties"]}},"sourceSpan":{"start":[159,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Builder/Internal.purs","end":[159,27]}},{"children":[],"comments":null,"title":"mkCommand","info":{"declType":"value","type":{"annotation":[],"tag":"ForAll","contents":["a",{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Builder","Internal"],"Mod"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Builder","Internal"],"CommandFields"]}]},{"annotation":[],"tag":"TypeVar","contents":"a"}]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Tuple","Nested"],"Tuple3"]},{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}}]},{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Array"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}}]},{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Types"],"ParserInfo"]},{"annotation":[],"tag":"TypeVar","contents":"a"}]}}]}]}}]}]},null]}},"sourceSpan":{"start":[168,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Builder/Internal.purs","end":[168,116]}},{"children":[],"comments":null,"title":"mkParser","info":{"declType":"value","type":{"annotation":[],"tag":"ForAll","contents":["a",{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Builder","Internal"],"DefaultProp"]},{"annotation":[],"tag":"TypeVar","contents":"a"}]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Types"],"OptProperties"]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Types"],"OptProperties"]}]}}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Types"],"OptReader"]},{"annotation":[],"tag":"TypeVar","contents":"a"}]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Types"],"Parser"]},{"annotation":[],"tag":"TypeVar","contents":"a"}]}]}]}]},null]}},"sourceSpan":{"start":[174,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Builder/Internal.purs","end":[177,21]}},{"children":[],"comments":null,"title":"mkOption","info":{"declType":"value","type":{"annotation":[],"tag":"ForAll","contents":["a",{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Builder","Internal"],"DefaultProp"]},{"annotation":[],"tag":"TypeVar","contents":"a"}]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Types"],"OptProperties"]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Types"],"OptProperties"]}]}}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Types"],"OptReader"]},{"annotation":[],"tag":"TypeVar","contents":"a"}]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Types"],"Option"]},{"annotation":[],"tag":"TypeVar","contents":"a"}]}]}]}]},null]}},"sourceSpan":{"start":[184,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Builder/Internal.purs","end":[187,21]}},{"children":[],"comments":null,"title":"mkProps","info":{"declType":"value","type":{"annotation":[],"tag":"ForAll","contents":["a",{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Builder","Internal"],"DefaultProp"]},{"annotation":[],"tag":"TypeVar","contents":"a"}]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Types"],"OptProperties"]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Types"],"OptProperties"]}]}}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Types"],"OptProperties"]}]}]},null]}},"sourceSpan":{"start":[190,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Builder/Internal.purs","end":[192,25]}},{"children":[],"comments":"Hide this option from the help text\n","title":"internal","info":{"declType":"value","type":{"annotation":[],"tag":"ForAll","contents":["f",{"annotation":[],"tag":"ForAll","contents":["a",{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Builder","Internal"],"Mod"]},{"annotation":[],"tag":"TypeVar","contents":"f"}]},{"annotation":[],"tag":"TypeVar","contents":"a"}]},null]},null]}},"sourceSpan":{"start":[198,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Builder/Internal.purs","end":[198,32]}}]},{"reExports":[{"moduleName":{"package":null,"item":["Options","Applicative","Types"]},"declarations":[{"children":[{"comments":null,"title":"ParserPrefs","info":{"arguments":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"annotation":[],"tag":"RCons","contents":["prefMultiSuffix",{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"String"]},{"annotation":[],"tag":"RCons","contents":["prefDisambiguate",{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]},{"annotation":[],"tag":"RCons","contents":["prefShowHelpOnError",{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]},{"annotation":[],"tag":"RCons","contents":["prefShowHelpOnEmpty",{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]},{"annotation":[],"tag":"RCons","contents":["prefBacktrack",{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Types"],"Backtracking"]},{"annotation":[],"tag":"RCons","contents":["prefColumns",{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Int"]},{"annotation":[],"tag":"REmpty"}]}]}]}]}]}]}]}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"parserPrefsNewtype","info":{"declType":"instance","dependencies":[],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Newtype"],"Newtype"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Types"],"ParserPrefs"]}]},{"annotation":[],"tag":"TypeWildcard","contents":null}]}},"sourceSpan":{"start":[138,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Types.purs","end":[138,60]}},{"comments":null,"title":"parserPrefsEq","info":{"declType":"instance","dependencies":[],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Eq"],"Eq"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Types"],"ParserPrefs"]}]}},"sourceSpan":{"start":[139,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Types.purs","end":[139,48]}},{"comments":null,"title":"parserPrefsGeneric","info":{"declType":"instance","dependencies":[],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Generic","Rep"],"Generic"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Types"],"ParserPrefs"]}]},{"annotation":[],"tag":"TypeWildcard","contents":null}]}},"sourceSpan":{"start":[140,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Types.purs","end":[140,60]}},{"comments":null,"title":"parserPrefsShow","info":{"declType":"instance","dependencies":[],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Show"],"Show"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Types"],"ParserPrefs"]}]}},"sourceSpan":{"start":[141,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Types.purs","end":[141,70]}}],"comments":"Global preferences for a top-level 'Parser'.\nA 'ParserPrefs' contains general preferences for all command-line\noptions, and can be built with the 'prefs' function.\n","title":"ParserPrefs","info":{"declType":"data","dataDeclType":"newtype","typeArguments":[]},"sourceSpan":{"start":[125,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Types.purs","end":[137,4]}},{"children":[{"comments":null,"title":"ParserInfo","info":{"arguments":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"annotation":[],"tag":"RCons","contents":["infoParser",{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Types"],"Parser"]},{"annotation":[],"tag":"TypeVar","contents":"a"}]},{"annotation":[],"tag":"RCons","contents":["infoFullDesc",{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]},{"annotation":[],"tag":"RCons","contents":["infoProgDesc",{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Help","Chunk"],"Chunk"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]}]},{"annotation":[],"tag":"RCons","contents":["infoHeader",{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Help","Chunk"],"Chunk"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]}]},{"annotation":[],"tag":"RCons","contents":["infoFooter",{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Help","Chunk"],"Chunk"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]}]},{"annotation":[],"tag":"RCons","contents":["infoFailureCode",{"annotation":[],"tag":"TypeConstructor","contents":[["ExitCodes"],"ExitCode"]},{"annotation":[],"tag":"RCons","contents":["infoPolicy",{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Types"],"ArgPolicy"]},{"annotation":[],"tag":"REmpty"}]}]}]}]}]}]}]}]}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"parserInfoNewtype","info":{"declType":"instance","dependencies":[],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Newtype"],"Newtype"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Types"],"ParserInfo"]},{"annotation":[],"tag":"TypeVar","contents":"a"}]}]},{"annotation":[],"tag":"TypeWildcard","contents":null}]}},"sourceSpan":{"start":[109,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Types.purs","end":[109,62]}},{"comments":null,"title":"parserInfoFunctor","info":{"declType":"instance","dependencies":[],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Functor"],"Functor"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Types"],"ParserInfo"]}]}},"sourceSpan":{"start":[110,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Types.purs","end":[111,72]}}],"comments":"A 'ParserInfo' describes a command line program, used to generate a help\nscreen. Two help modes are supported: brief and full. In brief mode, only\nan option and argument summary is displayed, while in full mode each\navailable option and command, including hidden ones, is described.\n\nA basic 'ParserInfo' with default values for fields can be created using\nthe 'info' function.\n","title":"ParserInfo","info":{"declType":"data","dataDeclType":"newtype","typeArguments":[["a",null]]},"sourceSpan":{"start":[97,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Types.purs","end":[107,4]}},{"children":[{"comments":null,"title":"parserFunctor","info":{"declType":"instance","dependencies":[],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Functor"],"Functor"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Types"],"Parser"]}]}},"sourceSpan":{"start":[317,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Types.purs","end":[322,36]}},{"comments":null,"title":"parserApply","info":{"declType":"instance","dependencies":[],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Control","Apply"],"Apply"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Types"],"Parser"]}]}},"sourceSpan":{"start":[324,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Types.purs","end":[325,44]}},{"comments":null,"title":"parserApplicative","info":{"declType":"instance","dependencies":[],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Control","Applicative"],"Applicative"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Types"],"Parser"]}]}},"sourceSpan":{"start":[327,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Types.purs","end":[328,14]}},{"comments":null,"title":"parserAlt","info":{"declType":"instance","dependencies":[],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Control","Alt"],"Alt"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Types"],"Parser"]}]}},"sourceSpan":{"start":[330,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Types.purs","end":[331,13]}}],"comments":"\nA 'Parser' is the core type in optparse-applicative. A value of type\nParser a@ represents a specification for a set of options, which will\nyield a value of type a when the command line arguments are successfully\nparsed.\n\nThere are several types of primitive 'Parser'.\n\n* Flags: simple no-argument options. When a flag is encountered on the\ncommand line, its value is returned.\n\n* Options: options with an argument. An option can define a /reader/,\nwhich converts its argument from String to the desired value, or throws a\nparse error if the argument does not validate correctly.\n\n* Arguments: positional arguments, validated in the same way as option\narguments.\n\n* Commands. A command defines a completely independent sub-parser. When a\ncommand is encountered, the whole command line is passed to the\ncorresponding parser.\n\n** Parser builders\n\nEach parser builder takes an option modifier. A modifier can be created by\ncomposing the basic modifiers provided by here using the 'Monoid' operations\nmempty' and 'append', or their aliases 'idm' and '<>'.\n\nFor example:\n\n> out = strOption\n>     ( long \"output\"\n>    <> short 'o'\n>    <> metavar \"FILENAME\" )\n\ncreates a parser for an option called \\\"output\\\".\n","title":"Parser","info":{"declType":"data","dataDeclType":"data","typeArguments":[["a",null]]},"sourceSpan":{"start":[308,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Types.purs","end":[313,26]}}]}],"name":"Options.Applicative.Common","comments":null,"declarations":[{"children":[],"comments":"Create a parser composed of a single option.\n","title":"liftOpt","info":{"declType":"value","type":{"annotation":[],"tag":"ForAll","contents":["a",{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Types"],"Option"]},{"annotation":[],"tag":"TypeVar","contents":"a"}]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Types"],"Parser"]},{"annotation":[],"tag":"TypeVar","contents":"a"}]}]},null]}},"sourceSpan":{"start":[57,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Common.purs","end":[57,42]}},{"children":[],"comments":null,"title":"showOption","info":{"declType":"value","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Types"],"OptName"]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}},"sourceSpan":{"start":[42,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Common.purs","end":[42,32]}},{"children":[],"comments":null,"title":"runParserInfo","info":{"declType":"value","type":{"annotation":[],"tag":"ForAll","contents":["m",{"annotation":[],"tag":"ForAll","contents":["a",{"annotation":[],"tag":"ConstrainedType","contents":[{"constraintAnn":[],"constraintClass":[["Options","Applicative","Internal"],"MonadP"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"m"}],"constraintKindArgs":[],"constraintData":null},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Types"],"ParserInfo"]},{"annotation":[],"tag":"TypeVar","contents":"a"}]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Types"],"Args"]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeVar","contents":"m"},{"annotation":[],"tag":"TypeVar","contents":"a"}]}]}]}]},null]},null]}},"sourceSpan":{"start":[207,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Common.purs","end":[207,69]}},{"children":[],"comments":null,"title":"runParserFully","info":{"declType":"value","type":{"annotation":[],"tag":"ForAll","contents":["m",{"annotation":[],"tag":"ForAll","contents":["a",{"annotation":[],"tag":"ConstrainedType","contents":[{"constraintAnn":[],"constraintClass":[["Options","Applicative","Internal"],"MonadP"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"m"}],"constraintKindArgs":[],"constraintData":null},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Types"],"ArgPolicy"]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Types"],"Parser"]},{"annotation":[],"tag":"TypeVar","contents":"a"}]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Types"],"Args"]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeVar","contents":"m"},{"annotation":[],"tag":"TypeVar","contents":"a"}]}]}]}]}]},null]},null]}},"sourceSpan":{"start":[210,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Common.purs","end":[210,79]}},{"children":[],"comments":"Apply a 'Parser' to a command line, and return a result and leftover\narguments.  This function returns an error if any parsing error occurs, or\nif any options are missing and don't have a default value.\n","title":"runParser","info":{"declType":"value","type":{"annotation":[],"tag":"ForAll","contents":["m",{"annotation":[],"tag":"ForAll","contents":["a",{"annotation":[],"tag":"ConstrainedType","contents":[{"constraintAnn":[],"constraintClass":[["Options","Applicative","Internal"],"MonadP"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"m"}],"constraintKindArgs":[],"constraintData":null},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Types"],"ArgPolicy"]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Types"],"IsCmdStart"]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Types"],"Parser"]},{"annotation":[],"tag":"TypeVar","contents":"a"}]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Types"],"Args"]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeVar","contents":"m"},{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Tuple"],"Tuple"]},{"annotation":[],"tag":"TypeVar","contents":"a"}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Types"],"Args"]}]}}]}]}]}]}]}]},null]},null]}},"sourceSpan":{"start":[184,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Common.purs","end":[184,101]}},{"children":[],"comments":"The default value of a 'Parser'.  This function returns an error if any of\nthe options don't have a default value.\n","title":"evalParser","info":{"declType":"value","type":{"annotation":[],"tag":"ForAll","contents":["a",{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Types"],"Parser"]},{"annotation":[],"tag":"TypeVar","contents":"a"}]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"annotation":[],"tag":"TypeVar","contents":"a"}]}]},null]}},"sourceSpan":{"start":[219,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Common.purs","end":[219,44]}},{"children":[],"comments":"Map a polymorphic function over all the options of a parser, and collect\nthe results in a list.\n","title":"mapParser","info":{"declType":"value","type":{"annotation":[],"tag":"ForAll","contents":["a",{"annotation":[],"tag":"ForAll","contents":["b",{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"ForAll","contents":["x",{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Types"],"OptHelpInfo"]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Types"],"Option"]},{"annotation":[],"tag":"TypeVar","contents":"x"}]}]},{"annotation":[],"tag":"TypeVar","contents":"b"}]}]},null]}}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Types"],"Parser"]},{"annotation":[],"tag":"TypeVar","contents":"a"}]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Array"]},{"annotation":[],"tag":"TypeVar","contents":"b"}]}]}]},null]},null]}},"sourceSpan":{"start":[230,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Common.purs","end":[231,33]}},{"children":[],"comments":"Like 'mapParser', but collect the results in a tree structure.\n","title":"treeMapParser","info":{"declType":"value","type":{"annotation":[],"tag":"ForAll","contents":["a",{"annotation":[],"tag":"ForAll","contents":["b",{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"ForAll","contents":["x",{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Types"],"OptHelpInfo"]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Types"],"Option"]},{"annotation":[],"tag":"TypeVar","contents":"x"}]}]},{"annotation":[],"tag":"TypeVar","contents":"b"}]}]},null]}}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Types"],"Parser"]},{"annotation":[],"tag":"TypeVar","contents":"a"}]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Types"],"OptTree"]},{"annotation":[],"tag":"TypeVar","contents":"b"}]}]}]},null]},null]}},"sourceSpan":{"start":[239,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Common.purs","end":[241,23]}},{"children":[],"comments":null,"title":"optionNames","info":{"declType":"value","type":{"annotation":[],"tag":"ForAll","contents":["a",{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Types"],"OptReader"]},{"annotation":[],"tag":"TypeVar","contents":"a"}]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Array"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Types"],"OptName"]}]}]},null]}},"sourceSpan":{"start":[46,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Common.purs","end":[46,54]}}]},{"reExports":[],"name":"Options.Applicative.Extra","comments":"This module contains high-level functions to run parsers.\n","declarations":[{"children":[],"comments":"A hidden \"helper\" option which always fails. Use this to\nadd the `--help` flag to your CLI parser\n\nA common usage pattern is to apply this applicatively when\ncreating a 'ParserInfo'\n\n> opts :: ParserInfo Sample\n> opts = info (sample <**> helper) mempty\n","title":"helper","info":{"declType":"value","type":{"annotation":[],"tag":"ForAll","contents":["a",{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Types"],"Parser"]},{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeVar","contents":"a"}]},{"annotation":[],"tag":"TypeVar","contents":"a"}]}}]},null]}},"sourceSpan":{"start":[77,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Extra.purs","end":[77,36]}},{"children":[],"comments":"Builder for a command parser with a \"helper\" option attached.\nUsed in the same way as `subparser`, but includes a `--help|-h` inside\nthe subcommand.\n","title":"hsubparser","info":{"declType":"value","type":{"annotation":[],"tag":"ForAll","contents":["a",{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Builder","Internal"],"Mod"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Builder","Internal"],"CommandFields"]}]},{"annotation":[],"tag":"TypeVar","contents":"a"}]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Types"],"Parser"]},{"annotation":[],"tag":"TypeVar","contents":"a"}]}]},null]}},"sourceSpan":{"start":[87,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Extra.purs","end":[87,56]}},{"children":[],"comments":"Run a program description.\n\nParse command line arguments. Display help text and exit if any parse error\noccurs.\n","title":"execParser","info":{"declType":"value","type":{"annotation":[],"tag":"ForAll","contents":["a",{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Types"],"ParserInfo"]},{"annotation":[],"tag":"TypeVar","contents":"a"}]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"annotation":[],"tag":"TypeVar","contents":"a"}]}]},null]}},"sourceSpan":{"start":[100,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Extra.purs","end":[100,49]}},{"children":[],"comments":"Run a program description with custom preferences.\n","title":"customExecParser","info":{"declType":"value","type":{"annotation":[],"tag":"ForAll","contents":["a",{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Types"],"ParserPrefs"]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Types"],"ParserInfo"]},{"annotation":[],"tag":"TypeVar","contents":"a"}]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"annotation":[],"tag":"TypeVar","contents":"a"}]}]}]},null]}},"sourceSpan":{"start":[104,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Extra.purs","end":[104,70]}},{"children":[],"comments":"The most general way to run a program description in pure code.\n","title":"execParserPure","info":{"declType":"value","type":{"annotation":[],"tag":"ForAll","contents":["a",{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Types"],"ParserPrefs"]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Types"],"ParserInfo"]},{"annotation":[],"tag":"TypeVar","contents":"a"}]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Array"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Types"],"ParserResult"]},{"annotation":[],"tag":"TypeVar","contents":"a"}]}]}]}]},null]}},"sourceSpan":{"start":[139,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Extra.purs","end":[142,33]}},{"children":[],"comments":"Extract the actual result from a `ParserResult` value.\n\nThis function returns 'Nothing' in case of errors.  Possible error messages\nor completion actions are simply discarded.\n\nIf you want to display error messages and invoke completion actions\nappropriately, use 'handleParseResult' instead.\n","title":"getParseResult","info":{"declType":"value","type":{"annotation":[],"tag":"ForAll","contents":["a",{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Types"],"ParserResult"]},{"annotation":[],"tag":"TypeVar","contents":"a"}]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"annotation":[],"tag":"TypeVar","contents":"a"}]}]},null]}},"sourceSpan":{"start":[134,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Extra.purs","end":[134,54]}},{"children":[],"comments":"Handle `ParserResult`.\n","title":"handleParseResult","info":{"declType":"value","type":{"annotation":[],"tag":"ForAll","contents":["a",{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Types"],"ParserResult"]},{"annotation":[],"tag":"TypeVar","contents":"a"}]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"annotation":[],"tag":"TypeVar","contents":"a"}]}]},null]}},"sourceSpan":{"start":[110,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Extra.purs","end":[110,58]}},{"children":[],"comments":"Generate a `ParserFailure` from a `ParseError` in a given `Context`.\n\nThis function can be used, for example, to show the help text for a parser:\n\n`handleParseResult <<< Failure $ parserFailure pprefs pinfo ShowHelpText mempty`\n","title":"parserFailure","info":{"declType":"value","type":{"annotation":[],"tag":"ForAll","contents":["a",{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Types"],"ParserPrefs"]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Types"],"ParserInfo"]},{"annotation":[],"tag":"TypeVar","contents":"a"}]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Types"],"ParseError"]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Array"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Types"],"Context"]}]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Types"],"ParserFailure"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Help","Types"],"ParserHelp"]}]}]}]}]}]},null]}},"sourceSpan":{"start":[159,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Extra.purs","end":[161,42]}},{"children":[],"comments":null,"title":"renderFailure","info":{"declType":"value","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Types"],"ParserFailure"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Help","Types"],"ParserHelp"]}]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Tuple"],"Tuple"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["ExitCodes"],"ExitCode"]}]}]}]}},"sourceSpan":{"start":[300,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Extra.purs","end":[300,77]}}]},{"reExports":[{"moduleName":{"package":null,"item":["Options","Applicative","Help","Chunk"]},"declarations":[{"children":[{"comments":null,"title":"Chunk","info":{"arguments":[{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"annotation":[],"tag":"TypeVar","contents":"a"}]}}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"chunkNewtype","info":{"declType":"instance","dependencies":[],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Newtype"],"Newtype"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Help","Chunk"],"Chunk"]},{"annotation":[],"tag":"TypeVar","contents":"a"}]}]},{"annotation":[],"tag":"TypeWildcard","contents":null}]}},"sourceSpan":{"start":[35,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Help/Chunk.purs","end":[35,52]}},{"comments":null,"title":"chunkGeneric","info":{"declType":"instance","dependencies":[],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Generic","Rep"],"Generic"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Help","Chunk"],"Chunk"]},{"annotation":[],"tag":"TypeVar","contents":"a"}]}]},{"annotation":[],"tag":"TypeWildcard","contents":null}]}},"sourceSpan":{"start":[36,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Help/Chunk.purs","end":[36,52]}},{"comments":null,"title":"chunkShow","info":{"declType":"instance","dependencies":[{"constraintAnn":[],"constraintClass":[["Data","Show"],"Show"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"a"}],"constraintKindArgs":[],"constraintData":null}],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Show"],"Show"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Help","Chunk"],"Chunk"]},{"annotation":[],"tag":"TypeVar","contents":"a"}]}]}},"sourceSpan":{"start":[37,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Help/Chunk.purs","end":[37,72]}},{"comments":null,"title":"chunkEq","info":{"declType":"instance","dependencies":[{"constraintAnn":[],"constraintClass":[["Data","Eq"],"Eq"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"a"}],"constraintKindArgs":[],"constraintData":null}],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Eq"],"Eq"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Help","Chunk"],"Chunk"]},{"annotation":[],"tag":"TypeVar","contents":"a"}]}]}},"sourceSpan":{"start":[38,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Help/Chunk.purs","end":[38,56]}},{"comments":null,"title":"chunkOrd","info":{"declType":"instance","dependencies":[{"constraintAnn":[],"constraintClass":[["Data","Ord"],"Ord"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"a"}],"constraintKindArgs":[],"constraintData":null}],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Ord"],"Ord"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Help","Chunk"],"Chunk"]},{"annotation":[],"tag":"TypeVar","contents":"a"}]}]}},"sourceSpan":{"start":[39,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Help/Chunk.purs","end":[39,59]}},{"comments":null,"title":"chunkFunctor","info":{"declType":"instance","dependencies":[],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Functor"],"Functor"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Help","Chunk"],"Chunk"]}]}},"sourceSpan":{"start":[40,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Help/Chunk.purs","end":[40,54]}},{"comments":null,"title":"chunkApply","info":{"declType":"instance","dependencies":[],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Control","Apply"],"Apply"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Help","Chunk"],"Chunk"]}]}},"sourceSpan":{"start":[41,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Help/Chunk.purs","end":[41,50]}},{"comments":null,"title":"chunkApplicative","info":{"declType":"instance","dependencies":[],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Control","Applicative"],"Applicative"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Help","Chunk"],"Chunk"]}]}},"sourceSpan":{"start":[42,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Help/Chunk.purs","end":[42,62]}},{"comments":null,"title":"chunkAlt","info":{"declType":"instance","dependencies":[],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Control","Alt"],"Alt"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Help","Chunk"],"Chunk"]}]}},"sourceSpan":{"start":[43,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Help/Chunk.purs","end":[43,46]}},{"comments":null,"title":"chunkPlus","info":{"declType":"instance","dependencies":[],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Control","Plus"],"Plus"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Help","Chunk"],"Chunk"]}]}},"sourceSpan":{"start":[44,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Help/Chunk.purs","end":[44,48]}},{"comments":null,"title":"chunkAlternative","info":{"declType":"instance","dependencies":[],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Control","Alternative"],"Alternative"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Help","Chunk"],"Chunk"]}]}},"sourceSpan":{"start":[45,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Help/Chunk.purs","end":[45,62]}},{"comments":null,"title":"chunkBind","info":{"declType":"instance","dependencies":[],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Control","Bind"],"Bind"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Help","Chunk"],"Chunk"]}]}},"sourceSpan":{"start":[46,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Help/Chunk.purs","end":[46,48]}},{"comments":null,"title":"chunkMonad","info":{"declType":"instance","dependencies":[],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Control","Monad"],"Monad"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Help","Chunk"],"Chunk"]}]}},"sourceSpan":{"start":[47,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Help/Chunk.purs","end":[47,50]}},{"comments":null,"title":"chunkMonadZero","info":{"declType":"instance","dependencies":[],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Control","MonadZero"],"MonadZero"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Help","Chunk"],"Chunk"]}]}},"sourceSpan":{"start":[48,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Help/Chunk.purs","end":[48,58]}},{"comments":null,"title":"chunkSemigroup","info":{"declType":"instance","dependencies":[{"constraintAnn":[],"constraintClass":[["Data","Semigroup"],"Semigroup"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"a"}],"constraintKindArgs":[],"constraintData":null}],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Semigroup"],"Semigroup"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Help","Chunk"],"Chunk"]},{"annotation":[],"tag":"TypeVar","contents":"a"}]}]}},"sourceSpan":{"start":[50,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Help/Chunk.purs","end":[51,26]}},{"comments":null,"title":"chunkMonoid","info":{"declType":"instance","dependencies":[{"constraintAnn":[],"constraintClass":[["Data","Semigroup"],"Semigroup"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"a"}],"constraintKindArgs":[],"constraintData":null}],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Monoid"],"Monoid"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Help","Chunk"],"Chunk"]},{"annotation":[],"tag":"TypeVar","contents":"a"}]}]}},"sourceSpan":{"start":[53,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Help/Chunk.purs","end":[54,25]}}],"comments":"The free monoid on a semigroup 'a'.\n","title":"Chunk","info":{"declType":"data","dataDeclType":"newtype","typeArguments":[["a",null]]},"sourceSpan":{"start":[34,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Help/Chunk.purs","end":[34,34]}},{"children":[],"comments":"Concatenate 'Chunk's vertically separated by empty lines.\n","title":"vsepChunks","info":{"declType":"value","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Array"]},{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Help","Chunk"],"Chunk"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]}]}}]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Help","Chunk"],"Chunk"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]}]}]}},"sourceSpan":{"start":[111,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Help/Chunk.purs","end":[111,45]}},{"children":[],"comments":"Concatenate 'Chunk's vertically.\n","title":"vcatChunks","info":{"declType":"value","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Array"]},{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Help","Chunk"],"Chunk"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]}]}}]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Help","Chunk"],"Chunk"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]}]}]}},"sourceSpan":{"start":[107,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Help/Chunk.purs","end":[107,45]}},{"children":[],"comments":"Display pairs of strings in a table.\n","title":"tabulate","info":{"declType":"value","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Array"]},{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Tuple"],"Tuple"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]}]}}]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Help","Chunk"],"Chunk"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]}]}]}},"sourceSpan":{"start":[144,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Help/Chunk.purs","end":[144,47]}},{"children":[],"comments":"Convert a 'String' into a 'Chunk'.  This satisfies:\n","title":"stringChunk","info":{"declType":"value","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Help","Chunk"],"Chunk"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]}]}]}},"sourceSpan":{"start":[123,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Help/Chunk.purs","end":[123,35]}},{"children":[],"comments":"Convert a paragraph into a 'Chunk'.  The resulting chunk is composed by the\n","title":"paragraph","info":{"declType":"value","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Help","Chunk"],"Chunk"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]}]}]}},"sourceSpan":{"start":[134,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Help/Chunk.purs","end":[134,33]}},{"children":[],"comments":"Concatenate a list into a Chunk.  'listToChunk' satisfies:\n","title":"listToChunk","info":{"declType":"value","type":{"annotation":[],"tag":"ForAll","contents":["a",{"annotation":[],"tag":"ConstrainedType","contents":[{"constraintAnn":[],"constraintClass":[["Data","Monoid"],"Monoid"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"a"}],"constraintKindArgs":[],"constraintData":null},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Array"]},{"annotation":[],"tag":"TypeVar","contents":"a"}]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Help","Chunk"],"Chunk"]},{"annotation":[],"tag":"TypeVar","contents":"a"}]}]}]},null]}},"sourceSpan":{"start":[69,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Help/Chunk.purs","end":[69,56]}},{"children":[],"comments":"Whether a 'Chunk' is empty.  Note that something like 'pure mempty' is not\n","title":"isEmpty","info":{"declType":"value","type":{"annotation":[],"tag":"ForAll","contents":["a",{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Help","Chunk"],"Chunk"]},{"annotation":[],"tag":"TypeVar","contents":"a"}]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]},null]}},"sourceSpan":{"start":[116,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Help/Chunk.purs","end":[116,40]}},{"children":[],"comments":"Part of a constrained comonad instance.\n","title":"extractChunk","info":{"declType":"value","type":{"annotation":[],"tag":"ForAll","contents":["a",{"annotation":[],"tag":"ConstrainedType","contents":[{"constraintAnn":[],"constraintClass":[["Data","Monoid"],"Monoid"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"a"}],"constraintKindArgs":[],"constraintData":null},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Help","Chunk"],"Chunk"]},{"annotation":[],"tag":"TypeVar","contents":"a"}]}]},{"annotation":[],"tag":"TypeVar","contents":"a"}]}]},null]}},"sourceSpan":{"start":[80,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Help/Chunk.purs","end":[80,51]}},{"children":[],"comments":"Given a semigroup structure on 'a', return a monoid structure on 'Chunk a'.\n","title":"chunked","info":{"declType":"value","type":{"annotation":[],"tag":"ForAll","contents":["a",{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeVar","contents":"a"}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeVar","contents":"a"}]},{"annotation":[],"tag":"TypeVar","contents":"a"}]}]}}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Help","Chunk"],"Chunk"]},{"annotation":[],"tag":"TypeVar","contents":"a"}]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Help","Chunk"],"Chunk"]},{"annotation":[],"tag":"TypeVar","contents":"a"}]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Help","Chunk"],"Chunk"]},{"annotation":[],"tag":"TypeVar","contents":"a"}]}]}]}]},null]}},"sourceSpan":{"start":[59,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Help/Chunk.purs","end":[60,41]}},{"children":[],"comments":"Concatenate two 'Chunk's with a softline in between.  This is exactly like\n","title":"chunkBesideOrBelow","info":{"declType":"value","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Help","Chunk"],"Chunk"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]}]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Help","Chunk"],"Chunk"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]}]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Help","Chunk"],"Chunk"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]}]}]}]}},"sourceSpan":{"start":[101,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Help/Chunk.purs","end":[101,58]}},{"children":[],"comments":"Concatenate two 'Chunk's with a space in between.  If one is empty, this\n","title":"chunkBeside","info":{"declType":"value","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Help","Chunk"],"Chunk"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]}]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Help","Chunk"],"Chunk"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]}]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Help","Chunk"],"Chunk"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]}]}]}]}},"sourceSpan":{"start":[91,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Help/Chunk.purs","end":[91,51]}},{"children":[],"comments":null,"title":"(<</>>)","info":{"declType":"alias","alias":[["Options","Applicative","Help","Chunk"],{"Right":{"Left":{"Ident":"chunkBesideOrBelow"}}}],"fixity":{"associativity":"infixr","precedence":6}},"sourceSpan":{"start":[104,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Help/Chunk.purs","end":[104,37]}},{"children":[],"comments":null,"title":"(<<+>>)","info":{"declType":"alias","alias":[["Options","Applicative","Help","Chunk"],{"Right":{"Left":{"Ident":"chunkBeside"}}}],"fixity":{"associativity":"infixr","precedence":6}},"sourceSpan":{"start":[93,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Help/Chunk.purs","end":[93,30]}}]},{"moduleName":{"package":null,"item":["Options","Applicative","Help","Core"]},"declarations":[{"children":[],"comments":null,"title":"usageHelp","info":{"declType":"value","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Help","Chunk"],"Chunk"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]}]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Help","Types"],"ParserHelp"]}]}},"sourceSpan":{"start":[158,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Help/Core.purs","end":[158,37]}},{"children":[],"comments":null,"title":"suggestionsHelp","info":{"declType":"value","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Help","Chunk"],"Chunk"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]}]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Help","Types"],"ParserHelp"]}]}},"sourceSpan":{"start":[155,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Help/Core.purs","end":[155,43]}},{"children":[],"comments":"Generate option summary.\n","title":"parserUsage","info":{"declType":"value","type":{"annotation":[],"tag":"ForAll","contents":["a",{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Types"],"ParserPrefs"]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Types"],"Parser"]},{"annotation":[],"tag":"TypeVar","contents":"a"}]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]}]}]}]},null]}},"sourceSpan":{"start":[186,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Help/Core.purs","end":[186,66]}},{"children":[],"comments":"Generate the help text for a program.\n","title":"parserHelp","info":{"declType":"value","type":{"annotation":[],"tag":"ForAll","contents":["a",{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Types"],"ParserPrefs"]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Types"],"Parser"]},{"annotation":[],"tag":"TypeVar","contents":"a"}]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Help","Types"],"ParserHelp"]}]}]},null]}},"sourceSpan":{"start":[168,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Help/Core.purs","end":[168,62]}},{"children":[],"comments":"Generate a brief help text for a parser, only including mandatory\n","title":"missingDesc","info":{"declType":"value","type":{"annotation":[],"tag":"ForAll","contents":["a",{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Types"],"ParserPrefs"]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Types"],"Parser"]},{"annotation":[],"tag":"TypeVar","contents":"a"}]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Help","Chunk"],"Chunk"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]}]}]}]},null]}},"sourceSpan":{"start":[102,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Help/Core.purs","end":[102,62]}},{"children":[],"comments":null,"title":"headerHelp","info":{"declType":"value","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Help","Chunk"],"Chunk"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]}]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Help","Types"],"ParserHelp"]}]}},"sourceSpan":{"start":[152,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Help/Core.purs","end":[152,38]}},{"children":[],"comments":"Generate a full help text for a parser.\n","title":"fullDesc","info":{"declType":"value","type":{"annotation":[],"tag":"ForAll","contents":["a",{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Types"],"ParserPrefs"]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Types"],"Parser"]},{"annotation":[],"tag":"TypeVar","contents":"a"}]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Help","Chunk"],"Chunk"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]}]}]}]},null]}},"sourceSpan":{"start":[130,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Help/Core.purs","end":[130,59]}},{"children":[],"comments":null,"title":"footerHelp","info":{"declType":"value","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Help","Chunk"],"Chunk"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]}]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Help","Types"],"ParserHelp"]}]}},"sourceSpan":{"start":[164,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Help/Core.purs","end":[164,38]}},{"children":[],"comments":null,"title":"fold_tree","info":{"declType":"value","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Types"],"OptTree"]},{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Help","Chunk"],"Chunk"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]}]}}]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Help","Chunk"],"Chunk"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]}]}]}},"sourceSpan":{"start":[116,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Help/Core.purs","end":[116,46]}},{"children":[],"comments":null,"title":"errorHelp","info":{"declType":"value","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Help","Chunk"],"Chunk"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]}]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Help","Types"],"ParserHelp"]}]}},"sourceSpan":{"start":[149,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Help/Core.purs","end":[149,37]}},{"children":[],"comments":"Generate descriptions for commands.\n","title":"cmdDesc","info":{"declType":"value","type":{"annotation":[],"tag":"ForAll","contents":["a",{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Types"],"Parser"]},{"annotation":[],"tag":"TypeVar","contents":"a"}]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Array"]},{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Tuple"],"Tuple"]},{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}}]},{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Help","Chunk"],"Chunk"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]}]}}]}}]}]},null]}},"sourceSpan":{"start":[83,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Help/Core.purs","end":[83,74]}},{"children":[],"comments":"Generate a brief help text for a parser.\n","title":"briefDesc","info":{"declType":"value","type":{"annotation":[],"tag":"ForAll","contents":["a",{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Types"],"ParserPrefs"]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Types"],"Parser"]},{"annotation":[],"tag":"TypeVar","contents":"a"}]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Help","Chunk"],"Chunk"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]}]}]}]},null]}},"sourceSpan":{"start":[97,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Help/Core.purs","end":[97,60]}},{"children":[],"comments":null,"title":"bodyHelp","info":{"declType":"value","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Help","Chunk"],"Chunk"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]}]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Help","Types"],"ParserHelp"]}]}},"sourceSpan":{"start":[161,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Help/Core.purs","end":[161,36]}}]},{"moduleName":{"package":null,"item":["Options","Applicative","Help","Levenshtein"]},"declarations":[{"children":[],"comments":null,"title":"editDistance","info":{"declType":"value","type":{"annotation":[],"tag":"ForAll","contents":["a",{"annotation":[],"tag":"ConstrainedType","contents":[{"constraintAnn":[],"constraintClass":[["Data","Eq"],"Eq"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"a"}],"constraintKindArgs":[],"constraintData":null},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Array"]},{"annotation":[],"tag":"TypeVar","contents":"a"}]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Array"]},{"annotation":[],"tag":"TypeVar","contents":"a"}]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]}]}]},null]}},"sourceSpan":{"start":[28,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Help/Levenshtein.purs","end":[28,60]}}]},{"moduleName":{"package":null,"item":["Options","Applicative","Help","Pretty"]},"declarations":[{"children":[{"comments":null,"title":"SFail","info":{"arguments":[],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"SEmpty","info":{"arguments":[],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"SChar","info":{"arguments":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Char"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"SimpleDoc"]}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"SText","info":{"arguments":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Int"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"String"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"SimpleDoc"]}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"SLine","info":{"arguments":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Int"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"SimpleDoc"]}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"simpleDocEq","info":{"declType":"instance","dependencies":[],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Eq"],"Eq"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"SimpleDoc"]}]}},"sourceSpan":{"start":[607,1],"name":"/home/srghma/projects/purescript-optparse/src/Text/PrettyPrint/Leijen.purs","end":[607,44]}},{"comments":null,"title":"simpleDocOrd","info":{"declType":"instance","dependencies":[],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Ord"],"Ord"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"SimpleDoc"]}]}},"sourceSpan":{"start":[608,1],"name":"/home/srghma/projects/purescript-optparse/src/Text/PrettyPrint/Leijen.purs","end":[608,46]}},{"comments":null,"title":"genericSimpleDoc","info":{"declType":"instance","dependencies":[],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Generic","Rep"],"Generic"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"SimpleDoc"]}]},{"annotation":[],"tag":"TypeWildcard","contents":null}]}},"sourceSpan":{"start":[609,1],"name":"/home/srghma/projects/purescript-optparse/src/Text/PrettyPrint/Leijen.purs","end":[609,56]}},{"comments":null,"title":"showSimpleDoc","info":{"declType":"instance","dependencies":[],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Show"],"Show"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"SimpleDoc"]}]}},"sourceSpan":{"start":[610,1],"name":"/home/srghma/projects/purescript-optparse/src/Text/PrettyPrint/Leijen.purs","end":[610,70]}}],"comments":"The data type @SimpleDoc@ represents rendered documents and is\nused by the display functions.\n\nWhereas values of the data type 'Doc' represent non-empty sets of possible\nrenderings of a document, values of the data type @SimpleDoc@ represent\nsingle renderings of a document.\n\nThe @Int@ in @SText@ contains the length of the string. The @Int@\nin @SLine@ contains the indentation for that line. The library\nprovides two default display functions 'displayS' and\n'displayIO'. You can provide your own display function by writing a\nfunction from a @SimpleDoc@ to your own output format.\n","title":"SimpleDoc","info":{"declType":"data","dataDeclType":"data","typeArguments":[]},"sourceSpan":{"start":[587,1],"name":"/home/srghma/projects/purescript-optparse/src/Text/PrettyPrint/Leijen.purs","end":[591,38]}},{"children":[{"comments":null,"title":"Nil","info":{"arguments":[],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"Cons","info":{"arguments":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Int"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Docs"]}],"declType":"dataConstructor"},"sourceSpan":null}],"comments":"list of indentation/document pairs; saves an indirection over [(Int,Doc)]\n","title":"Docs","info":{"declType":"data","dataDeclType":"data","typeArguments":[]},"sourceSpan":{"start":[717,1],"name":"/home/srghma/projects/purescript-optparse/src/Text/PrettyPrint/Leijen.purs","end":[718,32]}},{"children":[{"comments":null,"title":"Fail","info":{"arguments":[],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"Empty","info":{"arguments":[],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"Char","info":{"arguments":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Char"]}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"Text","info":{"arguments":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Int"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"String"]}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"Line","info":{"arguments":[],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"FlatAlt","info":{"arguments":[{"annotation":[],"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"Cat","info":{"arguments":[{"annotation":[],"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"Nest","info":{"arguments":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Int"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"Union","info":{"arguments":[{"annotation":[],"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"Column","info":{"arguments":[{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]}]}}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"Columns","info":{"arguments":[{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]}]}}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"Nesting","info":{"arguments":[{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]}]}}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"docSemigroup","info":{"declType":"instance","dependencies":[],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Semigroup"],"Semigroup"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]}]}},"sourceSpan":{"start":[612,1],"name":"/home/srghma/projects/purescript-optparse/src/Text/PrettyPrint/Leijen.purs","end":[613,18]}},{"comments":null,"title":"docMonoid","info":{"declType":"instance","dependencies":[],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Monoid"],"Monoid"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]}]}},"sourceSpan":{"start":[614,1],"name":"/home/srghma/projects/purescript-optparse/src/Text/PrettyPrint/Leijen.purs","end":[615,17]}},{"comments":null,"title":"docShow","info":{"declType":"instance","dependencies":[],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Show"],"Show"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]}]}},"sourceSpan":{"start":[900,1],"name":"/home/srghma/projects/purescript-optparse/src/Text/PrettyPrint/Leijen.purs","end":[901,42]}}],"comments":"The abstract data type @Doc@ represents pretty documents.\n\nMore specifically, a value of type @Doc@ represents a non-empty set of\npossible renderings of a document.  The rendering functions select one of\nthese possibilities.\n\n@Doc@ is an instance of the 'Show' class. @(show doc)@ pretty\nprints document @doc@ with a page width of 80 characters and a\nribbon width of 32 characters.\n\n> show (text \"hello\" <$> text \"world\")\n\nWhich would return the string \\\"hello\\\\nworld\\\", i.e.\n\n@\nhello\nworld\n@\n","title":"Doc","info":{"declType":"data","dataDeclType":"data","typeArguments":[]},"sourceSpan":{"start":[561,1],"name":"/home/srghma/projects/purescript-optparse/src/Text/PrettyPrint/Leijen.purs","end":[573,39]}},{"children":[],"comments":null,"title":"width","info":{"declType":"value","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]}]}}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]}]}]}},"sourceSpan":{"start":[471,1],"name":"/home/srghma/projects/purescript-optparse/src/Text/PrettyPrint/Leijen.purs","end":[471,36]}},{"children":[],"comments":"The document @(vsep xs)@ concatenates all documents @xs@\nvertically with @(\\<$\\>)@. If a 'group' undoes the line breaks\ninserted by @vsep@, all documents are separated with a space.\n\n> someText = map text (words (\"text to lay out\"))\n>\n> test     = text \"some\" <+> vsep someText\n\nThis is layed out as:\n\n@\nsome text\nto\nlay\nout\n@\n\nThe 'align' combinator can be used to align the documents under\ntheir first element\n\n> test     = text \"some\" <+> align (vsep someText)\n\nWhich is printed as:\n\n@\nsome text\n     to\n     lay\n     out\n@\n","title":"vsep","info":{"declType":"value","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Array"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]}]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]}]}},"sourceSpan":{"start":[169,1],"name":"/home/srghma/projects/purescript-optparse/src/Text/PrettyPrint/Leijen.purs","end":[169,25]}},{"children":[],"comments":"The document @(vcat xs)@ concatenates all documents @xs@\nvertically with @(\\<$$\\>)@. If a 'group' undoes the line breaks\ninserted by @vcat@, all documents are directly concatenated.\n","title":"vcat","info":{"declType":"value","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Array"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]}]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]}]}},"sourceSpan":{"start":[196,1],"name":"/home/srghma/projects/purescript-optparse/src/Text/PrettyPrint/Leijen.purs","end":[196,25]}},{"children":[],"comments":"The document @(tupled xs)@ comma separates the documents @xs@ and\nencloses them in parenthesis. The documents are rendered\nhorizontally if that fits the page. Otherwise they are aligned\nvertically. All comma separators are put in front of the elements.\n","title":"tupled","info":{"declType":"value","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Array"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]}]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]}]}},"sourceSpan":{"start":[38,1],"name":"/home/srghma/projects/purescript-optparse/src/Text/PrettyPrint/Leijen.purs","end":[38,27]}},{"children":[],"comments":"The document @(text s)@ contains the literal string @s@. The\nstring shouldn't contain any newline (@'\\n'@) characters. If the\nstring contains newline characters, the function 'string' should be\nused.\n","title":"text","info":{"declType":"value","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]}]}},"sourceSpan":{"start":[634,1],"name":"/home/srghma/projects/purescript-optparse/src/Text/PrettyPrint/Leijen.purs","end":[634,22]}},{"children":[],"comments":"The document @(string s)@ concatenates all characters in @s@\nusing @line@ for newline characters and @char@ for all other\ncharacters. It is used instead of 'text' whenever the text contains\nnewline characters.\n","title":"string","info":{"declType":"value","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]}]}},"sourceSpan":{"start":[348,1],"name":"/home/srghma/projects/purescript-optparse/src/Text/PrettyPrint/Leijen.purs","end":[348,24]}},{"children":[],"comments":"Document @(squotes x)@ encloses document @x@ with single quotes\n\\\"'\\\".\n","title":"squotes","info":{"declType":"value","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]}]}},"sourceSpan":{"start":[248,1],"name":"/home/srghma/projects/purescript-optparse/src/Text/PrettyPrint/Leijen.purs","end":[248,22]}},{"children":[],"comments":"The document @squote@ contains a single quote, \\\"'\\\".\n","title":"squote","info":{"declType":"value","type":{"annotation":[],"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]}},"sourceSpan":{"start":[309,1],"name":"/home/srghma/projects/purescript-optparse/src/Text/PrettyPrint/Leijen.purs","end":[309,14]}},{"children":[],"comments":null,"title":"spaces","info":{"declType":"value","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}},"sourceSpan":{"start":[908,1],"name":"/home/srghma/projects/purescript-optparse/src/Text/PrettyPrint/Leijen.purs","end":[908,24]}},{"children":[],"comments":"The document @space@ contains a single space, \\\" \\\".\n\n> x <+> y   = x <> space <> y\n","title":"space","info":{"declType":"value","type":{"annotation":[],"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]}},"sourceSpan":{"start":[326,1],"name":"/home/srghma/projects/purescript-optparse/src/Text/PrettyPrint/Leijen.purs","end":[326,13]}},{"children":[],"comments":"The document @softline@ behaves like 'space' if the resulting\noutput fits the page, otherwise it behaves like 'line'.\n\n> softline = group line\n","title":"softline","info":{"declType":"value","type":{"annotation":[],"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]}},"sourceSpan":{"start":[236,1],"name":"/home/srghma/projects/purescript-optparse/src/Text/PrettyPrint/Leijen.purs","end":[236,16]}},{"children":[],"comments":"The document @softbreak@ behaves like 'empty' if the resulting\noutput fits the page, otherwise it behaves like 'line'.\n\n> softbreak  = group linebreak\n","title":"softbreak","info":{"declType":"value","type":{"annotation":[],"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]}},"sourceSpan":{"start":[243,1],"name":"/home/srghma/projects/purescript-optparse/src/Text/PrettyPrint/Leijen.purs","end":[243,17]}},{"children":[],"comments":"The document @(sep xs)@ concatenates all documents @xs@ either\nhorizontally with @(\\<+\\>)@, if it fits the page, or vertically with\n@(\\<$\\>)@.\n\n> sep xs  = group (vsep xs)\n","title":"sep","info":{"declType":"value","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Array"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]}]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]}]}},"sourceSpan":{"start":[118,1],"name":"/home/srghma/projects/purescript-optparse/src/Text/PrettyPrint/Leijen.purs","end":[118,24]}},{"children":[],"comments":"The document @(semiBraces xs)@ separates the documents @xs@ with\nsemicolons and encloses them in braces. The documents are rendered\nhorizontally if that fits the page. Otherwise they are aligned\nvertically. All semicolons are put in front of the elements.\n","title":"semiBraces","info":{"declType":"value","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Array"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]}]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]}]}},"sourceSpan":{"start":[45,1],"name":"/home/srghma/projects/purescript-optparse/src/Text/PrettyPrint/Leijen.purs","end":[45,31]}},{"children":[],"comments":"The document @semi@ contains a semicolon, \\\";\\\".\n","title":"semi","info":{"declType":"value","type":{"annotation":[],"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]}},"sourceSpan":{"start":[315,1],"name":"/home/srghma/projects/purescript-optparse/src/Text/PrettyPrint/Leijen.purs","end":[315,12]}},{"children":[],"comments":"The document @rparen@ contains a right parenthesis, \\\")\\\".\n","title":"rparen","info":{"declType":"value","type":{"annotation":[],"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]}},"sourceSpan":{"start":[287,1],"name":"/home/srghma/projects/purescript-optparse/src/Text/PrettyPrint/Leijen.purs","end":[287,14]}},{"children":[],"comments":"A slightly smarter rendering algorithm with more lookahead. It provides\nprovide earlier breaking on deeply nested structures\nFor example, consider this python-ish pseudocode:\n@fun(fun(fun(fun(fun([abcdefg, abcdefg])))))@\nIf we put a softbreak (+ nesting 2) after each open parenthesis, and align\nthe elements of the list to match the opening brackets, this will render with\n@renderPretty@ and a page width of 20 as:\n@\nfun(fun(fun(fun(fun([\n                    | abcdef,\n                    | abcdef,\n                    ]\n  )))))             |\n@\nWhere the 20c. boundary has been marked with |.\nBecause @renderPretty@ only uses one-line lookahead, it sees that the first\nline fits, and is stuck putting the second and third lines after the 20-c\nmark. In contrast, @renderSmart@ will continue to check that the potential\ndocument up to the end of the indentation level. Thus, it will format the\ndocument as:\n\n@\nfun(                |\n  fun(              |\n    fun(            |\n      fun(          |\n        fun([       |\n              abcdef,\n              abcdef,\n            ]       |\n  )))))             |\n@\nWhich fits within the 20c. boundary.\n","title":"renderSmart","info":{"declType":"value","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Number"]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"SimpleDoc"]}]}]}]}},"sourceSpan":{"start":[763,1],"name":"/home/srghma/projects/purescript-optparse/src/Text/PrettyPrint/Leijen.purs","end":[763,49]}},{"children":[],"comments":"This is the default pretty printer which is used by 'show',\n'putDoc' and 'hPutDoc'. @(renderPretty ribbonfrac width x)@ renders\ndocument @x@ with a page width of @width@ and a ribbon width of\n@(ribbonfrac * width)@ characters. The ribbon width is the maximal\namount of non-indentation characters on a line. The parameter\n@ribbonfrac@ should be between @0.0@ and @1.0@. If it is lower or\nhigher, the ribbon width will be 0 or @width@ respectively.\n","title":"renderPretty","info":{"declType":"value","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Number"]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"SimpleDoc"]}]}]}]}},"sourceSpan":{"start":[727,1],"name":"/home/srghma/projects/purescript-optparse/src/Text/PrettyPrint/Leijen.purs","end":[727,50]}},{"children":[],"comments":null,"title":"renderFits","info":{"declType":"value","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"LazySimpleDoc"]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}]}]}]}}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Number"]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"SimpleDoc"]}]}]}]}]}},"sourceSpan":{"start":[766,1],"name":"/home/srghma/projects/purescript-optparse/src/Text/PrettyPrint/Leijen.purs","end":[767,48]}},{"children":[],"comments":"@(renderCompact x)@ renders document @x@ without adding any\nindentation. Since no \\'pretty\\' printing is involved, this\nrenderer is very fast. The resulting output contains fewer\ncharacters than a pretty printed version and can be used for output\nthat is read by other programs.\n\nThis rendering function does not add any colorisation information.\n","title":"renderCompact","info":{"declType":"value","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"SimpleDoc"]}]}},"sourceSpan":{"start":[858,1],"name":"/home/srghma/projects/purescript-optparse/src/Text/PrettyPrint/Leijen.purs","end":[858,34]}},{"children":[],"comments":"The document @rbracket@ contains a right square bracket, \\\"]\\\".\n","title":"rbracket","info":{"declType":"value","type":{"annotation":[],"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]}},"sourceSpan":{"start":[305,1],"name":"/home/srghma/projects/purescript-optparse/src/Text/PrettyPrint/Leijen.purs","end":[305,16]}},{"children":[],"comments":"The document @rbrace@ contains a right brace, \\\"}\\\".\n","title":"rbrace","info":{"declType":"value","type":{"annotation":[],"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]}},"sourceSpan":{"start":[299,1],"name":"/home/srghma/projects/purescript-optparse/src/Text/PrettyPrint/Leijen.purs","end":[299,14]}},{"children":[],"comments":"The document @rangle@ contains a right angle, \\\">\\\".\n","title":"rangle","info":{"declType":"value","type":{"annotation":[],"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]}},"sourceSpan":{"start":[293,1],"name":"/home/srghma/projects/purescript-optparse/src/Text/PrettyPrint/Leijen.purs","end":[293,14]}},{"children":[],"comments":"@(punctuate p xs)@ concatenates all documents in @xs@ with\ndocument @p@ except for the last document.\n\n> someText = map text [\"words\",\"in\",\"a\",\"tuple\"]\n> test     = parens (align (cat (punctuate comma someText)))\n\nThis is layed out on a page width of 20 as:\n\n@\n(words,in,a,tuple)\n@\n\nBut when the page width is 15, it is layed out as:\n\n@\n(words,\n in,\n a,\n tuple)\n@\n\n(If you want put the commas in front of their elements instead of\nat the end, you should use 'tupled' or, in general, 'encloseSep'.)\n","title":"punctuate","info":{"declType":"value","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Array"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]}]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Array"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]}]}]}]}},"sourceSpan":{"start":[104,1],"name":"/home/srghma/projects/purescript-optparse/src/Text/PrettyPrint/Leijen.purs","end":[104,43]}},{"children":[],"comments":"Document @(parens x)@ encloses document @x@ in parenthesis, \\\"(\\\"\nand \\\")\\\".\n","title":"parens","info":{"declType":"value","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]}]}},"sourceSpan":{"start":[263,1],"name":"/home/srghma/projects/purescript-optparse/src/Text/PrettyPrint/Leijen.purs","end":[263,21]}},{"children":[],"comments":"The document @(number f)@ shows the literal number @f@ using 'text'.\n","title":"number","info":{"declType":"value","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Number"]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]}]}},"sourceSpan":{"start":[360,1],"name":"/home/srghma/projects/purescript-optparse/src/Text/PrettyPrint/Leijen.purs","end":[360,24]}},{"children":[],"comments":null,"title":"nesting","info":{"declType":"value","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]}]}}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]}]}},"sourceSpan":{"start":[677,1],"name":"/home/srghma/projects/purescript-optparse/src/Text/PrettyPrint/Leijen.purs","end":[677,31]}},{"children":[],"comments":"The document @(nest i x)@ renders document @x@ with the current\nindentation level increased by i (See also 'hang', 'align' and\n'indent').\n\n> nest 2 (text \"hello\" <$> text \"world\") <$> text \"!\"\n\noutputs as:\n\n@\nhello\n  world\n!\n@\n","title":"nest","info":{"declType":"value","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]}]}]}},"sourceSpan":{"start":[671,1],"name":"/home/srghma/projects/purescript-optparse/src/Text/PrettyPrint/Leijen.purs","end":[671,26]}},{"children":[],"comments":"The document @lparen@ contains a left parenthesis, \\\"(\\\".\n","title":"lparen","info":{"declType":"value","type":{"annotation":[],"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]}},"sourceSpan":{"start":[284,1],"name":"/home/srghma/projects/purescript-optparse/src/Text/PrettyPrint/Leijen.purs","end":[284,14]}},{"children":[],"comments":"The document @(list xs)@ comma separates the documents @xs@ and\nencloses them in square brackets. The documents are rendered\nhorizontally if that fits the page. Otherwise they are aligned\nvertically. All comma separators are put in front of the elements.\n","title":"list","info":{"declType":"value","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Array"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]}]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]}]}},"sourceSpan":{"start":[31,1],"name":"/home/srghma/projects/purescript-optparse/src/Text/PrettyPrint/Leijen.purs","end":[31,25]}},{"children":[],"comments":"The @linebreak@ document advances to the next line and indents to\nthe current nesting level. Document @linebreak@ behaves like\n'empty' if the line break is undone by 'group'.\n","title":"linebreak","info":{"declType":"value","type":{"annotation":[],"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]}},"sourceSpan":{"start":[647,1],"name":"/home/srghma/projects/purescript-optparse/src/Text/PrettyPrint/Leijen.purs","end":[647,17]}},{"children":[],"comments":"The @line@ document advances to the next line and indents to the\ncurrent nesting level. Document @line@ behaves like @(text \\\" \\\")@\nif the line break is undone by 'group'.\n","title":"line","info":{"declType":"value","type":{"annotation":[],"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]}},"sourceSpan":{"start":[641,1],"name":"/home/srghma/projects/purescript-optparse/src/Text/PrettyPrint/Leijen.purs","end":[641,12]}},{"children":[],"comments":"The document @lbracket@ contains a left square bracket, \\\"[\\\".\n","title":"lbracket","info":{"declType":"value","type":{"annotation":[],"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]}},"sourceSpan":{"start":[302,1],"name":"/home/srghma/projects/purescript-optparse/src/Text/PrettyPrint/Leijen.purs","end":[302,16]}},{"children":[],"comments":"The document @lbrace@ contains a left brace, \\\"{\\\".\n","title":"lbrace","info":{"declType":"value","type":{"annotation":[],"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]}},"sourceSpan":{"start":[296,1],"name":"/home/srghma/projects/purescript-optparse/src/Text/PrettyPrint/Leijen.purs","end":[296,14]}},{"children":[],"comments":"The document @langle@ contains a left angle, \\\"\\<\\\".\n","title":"langle","info":{"declType":"value","type":{"annotation":[],"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]}},"sourceSpan":{"start":[290,1],"name":"/home/srghma/projects/purescript-optparse/src/Text/PrettyPrint/Leijen.purs","end":[290,14]}},{"children":[],"comments":"The document @(int i)@ shows the literal integer @i@ using 'text'.\n","title":"int","info":{"declType":"value","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]}]}},"sourceSpan":{"start":[356,1],"name":"/home/srghma/projects/purescript-optparse/src/Text/PrettyPrint/Leijen.purs","end":[356,18]}},{"children":[],"comments":null,"title":"indentation","info":{"declType":"value","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}},"sourceSpan":{"start":[912,1],"name":"/home/srghma/projects/purescript-optparse/src/Text/PrettyPrint/Leijen.purs","end":[912,29]}},{"children":[],"comments":"The document @(indent i x)@ indents document @x@ with @i@ spaces.\n\n> test  = indent 4 (fillSep (map text\n>         (words \"the indent combinator indents these words !\")))\n\nWhich lays out with a page width of 20 as:\n\n@\n    the indent\n    combinator\n    indents these\n    words !\n@\n","title":"indent","info":{"declType":"value","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]}]}]}},"sourceSpan":{"start":[491,1],"name":"/home/srghma/projects/purescript-optparse/src/Text/PrettyPrint/Leijen.purs","end":[491,28]}},{"children":[],"comments":"The document @(hsep xs)@ concatenates all documents @xs@\nhorizontally with @(\\<+\\>)@.\n","title":"hsep","info":{"declType":"value","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Array"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]}]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]}]}},"sourceSpan":{"start":[136,1],"name":"/home/srghma/projects/purescript-optparse/src/Text/PrettyPrint/Leijen.purs","end":[136,25]}},{"children":[],"comments":"The document @(hcat xs)@ concatenates all documents @xs@\nhorizontally with @(\\<\\>)@.\n","title":"hcat","info":{"declType":"value","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Array"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]}]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]}]}},"sourceSpan":{"start":[190,1],"name":"/home/srghma/projects/purescript-optparse/src/Text/PrettyPrint/Leijen.purs","end":[190,25]}},{"children":[],"comments":"A linebreak that will never be flattened; it is guaranteed to render\nas a newline.\n","title":"hardline","info":{"declType":"value","type":{"annotation":[],"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]}},"sourceSpan":{"start":[652,1],"name":"/home/srghma/projects/purescript-optparse/src/Text/PrettyPrint/Leijen.purs","end":[652,16]}},{"children":[],"comments":"The hang combinator implements hanging indentation. The document\n@(hang i x)@ renders document @x@ with a nesting level set to the\ncurrent column plus @i@. The following example uses hanging\nindentation for some text:\n\n> test  = hang 4 (fillSep (map text\n>         (words \"the hang combinator indents these words !\")))\n\nWhich lays out on a page with a width of 20 characters as:\n\n@\nthe hang combinator\n    indents these\n    words !\n@\n\nThe @hang@ combinator is implemented as:\n\n> hang i x  = align (nest i x)\n","title":"hang","info":{"declType":"value","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]}]}]}},"sourceSpan":{"start":[513,1],"name":"/home/srghma/projects/purescript-optparse/src/Text/PrettyPrint/Leijen.purs","end":[513,26]}},{"children":[],"comments":"The @group@ combinator is used to specify alternative\nlayouts. The document @(group x)@ undoes all line breaks in\ndocument @x@. The resulting line is added to the current line if\nthat fits the page. Otherwise, the document @x@ is rendered without\nany changes.\n","title":"group","info":{"declType":"value","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]}]}},"sourceSpan":{"start":[688,1],"name":"/home/srghma/projects/purescript-optparse/src/Text/PrettyPrint/Leijen.purs","end":[688,20]}},{"children":[],"comments":null,"title":"flatten","info":{"declType":"value","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]}]}},"sourceSpan":{"start":[696,1],"name":"/home/srghma/projects/purescript-optparse/src/Text/PrettyPrint/Leijen.purs","end":[696,22]}},{"children":[],"comments":"A document that is normally rendered as the first argument, but\nwhen flattened, is rendered as the second document.\n","title":"flatAlt","info":{"declType":"value","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]}]}]}},"sourceSpan":{"start":[693,1],"name":"/home/srghma/projects/purescript-optparse/src/Text/PrettyPrint/Leijen.purs","end":[693,29]}},{"children":[],"comments":"@fitsR@ has a little more lookahead: assuming that nesting roughly\ncorresponds to syntactic depth, @fitsR@ checks that not only the current line\nfits, but the entire syntactic structure being formatted at this level of\nindentation fits. If we were to remove the second case for @SLine@, we would\ncheck that not only the current structure fits, but also the rest of the\ndocument, which would be slightly more intelligent but would have exponential\nruntime (and is prohibitively expensive in practice).\np = pagewidth\nm = minimum nesting level to fit in\nw = the width in which to fit the first line\n","title":"fitsR","info":{"declType":"value","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"LazySimpleDoc"]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}]}]}]}},"sourceSpan":{"start":[837,1],"name":"/home/srghma/projects/purescript-optparse/src/Text/PrettyPrint/Leijen.purs","end":[837,55]}},{"children":[],"comments":"@fits1@ does 1 line lookahead.\n","title":"fits1","info":{"declType":"value","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"LazySimpleDoc"]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}]}]}]}},"sourceSpan":{"start":[819,1],"name":"/home/srghma/projects/purescript-optparse/src/Text/PrettyPrint/Leijen.purs","end":[819,55]}},{"children":[],"comments":"The document @(fillSep xs)@ concatenates documents @xs@\nhorizontally with @(\\<+\\>)@ as long as its fits the page, than\ninserts a @line@ and continues doing that for all documents in\n@xs@.\n\n> fillSep xs  = foldr (</>) empty xs\n","title":"fillSep","info":{"declType":"value","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Array"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]}]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]}]}},"sourceSpan":{"start":[131,1],"name":"/home/srghma/projects/purescript-optparse/src/Text/PrettyPrint/Leijen.purs","end":[131,28]}},{"children":[],"comments":"The document @(fillCat xs)@ concatenates documents @xs@\nhorizontally with @(\\<\\>)@ as long as its fits the page, than inserts\na @linebreak@ and continues doing that for all documents in @xs@.\n\n> fillCat xs  = foldr1 (<//>) empty\n","title":"fillCat","info":{"declType":"value","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Array"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]}]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]}]}},"sourceSpan":{"start":[185,1],"name":"/home/srghma/projects/purescript-optparse/src/Text/PrettyPrint/Leijen.purs","end":[185,28]}},{"children":[],"comments":"The document @(fillBreak i x)@ first renders document @x@. It\nthan appends @space@s until the width is equal to @i@. If the\nwidth of @x@ is already larger than @i@, the nesting level is\nincreased by @i@ and a @line@ is appended. When we redefine @ptype@\nin the previous example to use @fillBreak@, we get a useful\nvariation of the previous output:\n\n> ptype (name,tp)\n>        = fillBreak 6 (text name) <+> text \"::\" <+> text tp\n\nThe output will now be:\n\n@\nlet empty  :: Doc\n    nest   :: Int -> Doc -> Doc\n    linebreak\n           :: Doc\n@\n","title":"fillBreak","info":{"declType":"value","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]}]}]}},"sourceSpan":{"start":[439,1],"name":"/home/srghma/projects/purescript-optparse/src/Text/PrettyPrint/Leijen.purs","end":[439,31]}},{"children":[],"comments":"The document @(fill i x)@ renders document @x@. It than appends\n@space@s until the width is equal to @i@. If the width of @x@ is\nalready larger, nothing is appended. This combinator is quite\nuseful in practice to output a list of bindings. The following\nexample demonstrates this.\n\n> types  = [(\"empty\",\"Doc\")\n>          ,(\"nest\",\"Int -> Doc -> Doc\")\n>          ,(\"linebreak\",\"Doc\")]\n>\n> ptype (name,tp)\n>        = fill 6 (text name) <+> text \"::\" <+> text tp\n>\n> test   = text \"let\" <+> align (vcat (map ptype types))\n\nWhich is layed out as:\n\n@\nlet empty  :: Doc\n    nest   :: Int -> Doc -> Doc\n    linebreak :: Doc\n@\n","title":"fill","info":{"declType":"value","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]}]}]}},"sourceSpan":{"start":[466,1],"name":"/home/srghma/projects/purescript-optparse/src/Text/PrettyPrint/Leijen.purs","end":[466,26]}},{"children":[],"comments":"The document @equals@ contains an equal sign, \\\"=\\\".\n","title":"equals","info":{"declType":"value","type":{"annotation":[],"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]}},"sourceSpan":{"start":[335,1],"name":"/home/srghma/projects/purescript-optparse/src/Text/PrettyPrint/Leijen.purs","end":[335,14]}},{"children":[],"comments":"The document @(encloseSep l r sep xs)@ concatenates the documents\n@xs@ separated by @sep@ and encloses the resulting document by @l@\nand @r@. The documents are rendered horizontally if that fits the\npage. Otherwise they are aligned vertically. All separators are put\nin front of the elements. For example, the combinator 'list' can be\ndefined with @encloseSep@:\n\n> list xs = encloseSep lbracket rbracket comma xs\n> test    = text \"list\" <+> (list (map int [10,200,3000]))\n\nWhich is layed out with a page width of 20 as:\n\n@\nlist [10,200,3000]\n@\n\nBut when the page width is 15, it is layed out as:\n\n@\nlist [10\n     ,200\n     ,3000]\n@\n","title":"encloseSep","info":{"declType":"value","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Array"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]}]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]}]}]}]}]}},"sourceSpan":{"start":[71,1],"name":"/home/srghma/projects/purescript-optparse/src/Text/PrettyPrint/Leijen.purs","end":[71,52]}},{"children":[],"comments":"The document @(enclose l r x)@ encloses document @x@ between\ndocuments @l@ and @r@ using @(\\<\\>)@.\n\n> enclose l r x   = l <> x <> r\n","title":"enclose","info":{"declType":"value","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]}]}]}]}},"sourceSpan":{"start":[280,1],"name":"/home/srghma/projects/purescript-optparse/src/Text/PrettyPrint/Leijen.purs","end":[280,36]}},{"children":[],"comments":"The empty document is, indeed, empty. Although @empty@ has no\ncontent, it does have a \\'height\\' of 1 and behaves exactly like\n@(text \\\"\\\")@ (and is therefore not a unit of @\\<$\\>@).\n","title":"empty","info":{"declType":"value","type":{"annotation":[],"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]}},"sourceSpan":{"start":[620,1],"name":"/home/srghma/projects/purescript-optparse/src/Text/PrettyPrint/Leijen.purs","end":[620,13]}},{"children":[],"comments":"Document @(dquotes x)@ encloses document @x@ with double quotes\n'\\\"'.\n","title":"dquotes","info":{"declType":"value","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]}]}},"sourceSpan":{"start":[253,1],"name":"/home/srghma/projects/purescript-optparse/src/Text/PrettyPrint/Leijen.purs","end":[253,22]}},{"children":[],"comments":"The document @dquote@ contains a double quote, '\\\"'.\n","title":"dquote","info":{"declType":"value","type":{"annotation":[],"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]}},"sourceSpan":{"start":[312,1],"name":"/home/srghma/projects/purescript-optparse/src/Text/PrettyPrint/Leijen.purs","end":[312,14]}},{"children":[],"comments":"The document @dot@ contains a single dot, \\\".\\\".\n","title":"dot","info":{"declType":"value","type":{"annotation":[],"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]}},"sourceSpan":{"start":[329,1],"name":"/home/srghma/projects/purescript-optparse/src/Text/PrettyPrint/Leijen.purs","end":[329,11]}},{"children":[],"comments":"@(displayS simpleDoc)@ takes the output @simpleDoc@ from a\nrendering function and transforms it to a 'ShowS' type (for use in\nthe 'Show' class).\n\n> showWidth :: Int -> Doc -> String\n> showWidth w x   = displayS (renderPretty 0.4 w x) \"\"\n\nANSI color information will be discarded by this function unless\nyou are running on a Unix-like operating system. This is due to\na technical limitation in Windows ANSI support.\n","title":"displayS","info":{"declType":"value","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"SimpleDoc"]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}},"sourceSpan":{"start":[893,1],"name":"/home/srghma/projects/purescript-optparse/src/Text/PrettyPrint/Leijen.purs","end":[893,32]}},{"children":[],"comments":"The document @comma@ contains a comma, \\\",\\\".\n","title":"comma","info":{"declType":"value","type":{"annotation":[],"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]}},"sourceSpan":{"start":[321,1],"name":"/home/srghma/projects/purescript-optparse/src/Text/PrettyPrint/Leijen.purs","end":[321,13]}},{"children":[],"comments":null,"title":"column","info":{"declType":"value","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]}]}}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]}]}},"sourceSpan":{"start":[674,1],"name":"/home/srghma/projects/purescript-optparse/src/Text/PrettyPrint/Leijen.purs","end":[674,30]}},{"children":[],"comments":"The document @colon@ contains a colon, \\\":\\\".\n","title":"colon","info":{"declType":"value","type":{"annotation":[],"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]}},"sourceSpan":{"start":[318,1],"name":"/home/srghma/projects/purescript-optparse/src/Text/PrettyPrint/Leijen.purs","end":[318,13]}},{"children":[],"comments":"The document @(char c)@ contains the literal character @c@. The\ncharacter shouldn't be a newline (@'\\n'@), the function 'line'\nshould be used for line breaks.\n","title":"char","info":{"declType":"value","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Char"]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]}]}},"sourceSpan":{"start":[626,1],"name":"/home/srghma/projects/purescript-optparse/src/Text/PrettyPrint/Leijen.purs","end":[626,20]}},{"children":[],"comments":"The document @(cat xs)@ concatenates all documents @xs@ either\nhorizontally with @(\\<\\>)@, if it fits the page, or vertically with\n@(\\<$$\\>)@.\n\n> cat xs  = group (vcat xs)\n","title":"cat","info":{"declType":"value","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Array"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]}]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]}]}},"sourceSpan":{"start":[177,1],"name":"/home/srghma/projects/purescript-optparse/src/Text/PrettyPrint/Leijen.purs","end":[177,24]}},{"children":[],"comments":"Document @(brackets x)@ encloses document @x@ in square brackets,\n\\\"[\\\" and \\\"]\\\".\n","title":"brackets","info":{"declType":"value","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]}]}},"sourceSpan":{"start":[273,1],"name":"/home/srghma/projects/purescript-optparse/src/Text/PrettyPrint/Leijen.purs","end":[273,23]}},{"children":[],"comments":"Document @(braces x)@ encloses document @x@ in braces, \\\"{\\\" and\n\\\"}\\\".\n","title":"braces","info":{"declType":"value","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]}]}},"sourceSpan":{"start":[258,1],"name":"/home/srghma/projects/purescript-optparse/src/Text/PrettyPrint/Leijen.purs","end":[258,21]}},{"children":[],"comments":"The document @(bool b)@ shows the literal bool @b@ using 'text'.\n","title":"bool","info":{"declType":"value","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]}]}},"sourceSpan":{"start":[352,1],"name":"/home/srghma/projects/purescript-optparse/src/Text/PrettyPrint/Leijen.purs","end":[352,23]}},{"children":[],"comments":null,"title":"beside","info":{"declType":"value","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]}]}]}},"sourceSpan":{"start":[655,1],"name":"/home/srghma/projects/purescript-optparse/src/Text/PrettyPrint/Leijen.purs","end":[655,28]}},{"children":[],"comments":"The document @backslash@ contains a back slash, \\\"\\\\\\\".\n","title":"backslash","info":{"declType":"value","type":{"annotation":[],"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]}},"sourceSpan":{"start":[332,1],"name":"/home/srghma/projects/purescript-optparse/src/Text/PrettyPrint/Leijen.purs","end":[332,17]}},{"children":[],"comments":"The document @(x \\<+\\> y)@ concatenates document @x@ and @y@ with a\n@space@ in between.  (infixr 6)\n","title":"appendWithSpace","info":{"declType":"value","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]}]}]}},"sourceSpan":{"start":[201,1],"name":"/home/srghma/projects/purescript-optparse/src/Text/PrettyPrint/Leijen.purs","end":[201,37]}},{"children":[],"comments":"The document @(x \\<\\/\\> y)@ concatenates document @x@ and @y@ with a\n'softline' in between. This effectively puts @x@ and @y@ either\nnext to each other (with a @space@ in between) or underneath each\nother. (infixr 5)\n","title":"appendWithSoftline","info":{"declType":"value","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]}]}]}},"sourceSpan":{"start":[209,1],"name":"/home/srghma/projects/purescript-optparse/src/Text/PrettyPrint/Leijen.purs","end":[209,40]}},{"children":[],"comments":"The document @(x \\<\\/\\/\\> y)@ concatenates document @x@ and @y@ with\na 'softbreak' in between. This effectively puts @x@ and @y@ either\nright next to each other or underneath each other. (infixr 5)\n","title":"appendWithSoftbreak","info":{"declType":"value","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]}]}]}},"sourceSpan":{"start":[216,1],"name":"/home/srghma/projects/purescript-optparse/src/Text/PrettyPrint/Leijen.purs","end":[216,41]}},{"children":[],"comments":"The document @(x \\<$$\\> y)@ concatenates document @x@ and @y@ with\na @linebreak@ in between. (infixr 5)\n","title":"appendWithLinebreak","info":{"declType":"value","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]}]}]}},"sourceSpan":{"start":[228,1],"name":"/home/srghma/projects/purescript-optparse/src/Text/PrettyPrint/Leijen.purs","end":[228,41]}},{"children":[],"comments":"The document @(x \\<$\\> y)@ concatenates document @x@ and @y@ with a\n'line' in between. (infixr 5)\n","title":"appendWithLine","info":{"declType":"value","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]}]}]}},"sourceSpan":{"start":[222,1],"name":"/home/srghma/projects/purescript-optparse/src/Text/PrettyPrint/Leijen.purs","end":[222,36]}},{"children":[],"comments":"Document @(angles x)@ encloses document @x@ in angles, \\\"\\<\\\" and\n\\\"\\>\\\".\n","title":"angles","info":{"declType":"value","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]}]}},"sourceSpan":{"start":[268,1],"name":"/home/srghma/projects/purescript-optparse/src/Text/PrettyPrint/Leijen.purs","end":[268,21]}},{"children":[],"comments":"The document @(align x)@ renders document @x@ with the nesting\nlevel set to the current column. It is used for example to\nimplement 'hang'.\n\nAs an example, we will put a document right above another one,\nregardless of the current nesting level:\n\n> x $$ y  = align (x <$> y)\n\n> test    = text \"hi\" <+> (text \"nice\" $$ text \"world\")\n\nwhich will be layed out as:\n\n@\nhi nice\n   world\n@\n","title":"align","info":{"declType":"value","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]}]}},"sourceSpan":{"start":[533,1],"name":"/home/srghma/projects/purescript-optparse/src/Text/PrettyPrint/Leijen.purs","end":[533,20]}},{"children":[],"comments":null,"title":"(</>)","info":{"declType":"alias","alias":[["Text","PrettyPrint","Leijen"],{"Right":{"Left":{"Ident":"appendWithSoftline"}}}],"fixity":{"associativity":"infixr","precedence":5}},"sourceSpan":{"start":[211,1],"name":"/home/srghma/projects/purescript-optparse/src/Text/PrettyPrint/Leijen.purs","end":[211,35]}},{"children":[],"comments":null,"title":"(<//>)","info":{"declType":"alias","alias":[["Text","PrettyPrint","Leijen"],{"Right":{"Left":{"Ident":"appendWithSoftbreak"}}}],"fixity":{"associativity":"infixr","precedence":5}},"sourceSpan":{"start":[218,1],"name":"/home/srghma/projects/purescript-optparse/src/Text/PrettyPrint/Leijen.purs","end":[218,37]}},{"children":[],"comments":null,"title":"(<+>)","info":{"declType":"alias","alias":[["Text","PrettyPrint","Leijen"],{"Right":{"Left":{"Ident":"appendWithSpace"}}}],"fixity":{"associativity":"infixr","precedence":6}},"sourceSpan":{"start":[203,1],"name":"/home/srghma/projects/purescript-optparse/src/Text/PrettyPrint/Leijen.purs","end":[203,32]}},{"children":[],"comments":null,"title":"(<$$>)","info":{"declType":"alias","alias":[["Text","PrettyPrint","Leijen"],{"Right":{"Left":{"Ident":"appendWithLinebreak"}}}],"fixity":{"associativity":"infixr","precedence":5}},"sourceSpan":{"start":[230,1],"name":"/home/srghma/projects/purescript-optparse/src/Text/PrettyPrint/Leijen.purs","end":[230,37]}},{"children":[],"comments":null,"title":"(.$.)","info":{"declType":"alias","alias":[["Text","PrettyPrint","Leijen"],{"Right":{"Left":{"Ident":"appendWithLine"}}}],"fixity":{"associativity":"infixr","precedence":5}},"sourceSpan":{"start":[11,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Help/Pretty.purs","end":[11,34]}}]},{"moduleName":{"package":null,"item":["Options","Applicative","Help","Types"]},"declarations":[{"children":[{"comments":null,"title":"ParserHelp","info":{"arguments":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"annotation":[],"tag":"RCons","contents":["helpError",{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Help","Chunk"],"Chunk"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]}]},{"annotation":[],"tag":"RCons","contents":["helpSuggestions",{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Help","Chunk"],"Chunk"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]}]},{"annotation":[],"tag":"RCons","contents":["helpHeader",{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Help","Chunk"],"Chunk"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]}]},{"annotation":[],"tag":"RCons","contents":["helpUsage",{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Help","Chunk"],"Chunk"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]}]},{"annotation":[],"tag":"RCons","contents":["helpBody",{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Help","Chunk"],"Chunk"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]}]},{"annotation":[],"tag":"RCons","contents":["helpFooter",{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Help","Chunk"],"Chunk"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]}]},{"annotation":[],"tag":"REmpty"}]}]}]}]}]}]}]}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"newtypeParserHelp","info":{"declType":"instance","dependencies":[],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Newtype"],"Newtype"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Help","Types"],"ParserHelp"]}]},{"annotation":[],"tag":"TypeWildcard","contents":null}]}},"sourceSpan":{"start":[20,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Help/Types.purs","end":[20,58]}},{"comments":null,"title":"parserHelpShow","info":{"declType":"instance","dependencies":[],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Show"],"Show"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Help","Types"],"ParserHelp"]}]}},"sourceSpan":{"start":[21,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Help/Types.purs","end":[22,32]}},{"comments":null,"title":"parserHelpSemigroup","info":{"declType":"instance","dependencies":[],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Semigroup"],"Semigroup"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Help","Types"],"ParserHelp"]}]}},"sourceSpan":{"start":[23,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Help/Types.purs","end":[23,68]}},{"comments":null,"title":"parserHelpMonoid","info":{"declType":"instance","dependencies":[],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Monoid"],"Monoid"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Help","Types"],"ParserHelp"]}]}},"sourceSpan":{"start":[24,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Help/Types.purs","end":[24,62]}}],"comments":null,"title":"ParserHelp","info":{"declType":"data","dataDeclType":"newtype","typeArguments":[]},"sourceSpan":{"start":[12,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Help/Types.purs","end":[19,4]}},{"children":[],"comments":"Convert a help text to 'String'.\n","title":"renderHelp","info":{"declType":"value","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Help","Types"],"ParserHelp"]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}]}},"sourceSpan":{"start":[37,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Help/Types.purs","end":[37,42]}}]}],"name":"Options.Applicative.Help","comments":"This is an empty module which re-exports\nthe help text system for optparse.\n","declarations":[]},{"reExports":[],"name":"Options.Applicative.Help.Chunk","comments":null,"declarations":[{"children":[{"comments":null,"title":"Chunk","info":{"arguments":[{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"annotation":[],"tag":"TypeVar","contents":"a"}]}}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"chunkNewtype","info":{"declType":"instance","dependencies":[],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Newtype"],"Newtype"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Help","Chunk"],"Chunk"]},{"annotation":[],"tag":"TypeVar","contents":"a"}]}]},{"annotation":[],"tag":"TypeWildcard","contents":null}]}},"sourceSpan":{"start":[35,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Help/Chunk.purs","end":[35,52]}},{"comments":null,"title":"chunkGeneric","info":{"declType":"instance","dependencies":[],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Generic","Rep"],"Generic"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Help","Chunk"],"Chunk"]},{"annotation":[],"tag":"TypeVar","contents":"a"}]}]},{"annotation":[],"tag":"TypeWildcard","contents":null}]}},"sourceSpan":{"start":[36,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Help/Chunk.purs","end":[36,52]}},{"comments":null,"title":"chunkShow","info":{"declType":"instance","dependencies":[{"constraintAnn":[],"constraintClass":[["Data","Show"],"Show"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"a"}],"constraintKindArgs":[],"constraintData":null}],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Show"],"Show"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Help","Chunk"],"Chunk"]},{"annotation":[],"tag":"TypeVar","contents":"a"}]}]}},"sourceSpan":{"start":[37,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Help/Chunk.purs","end":[37,72]}},{"comments":null,"title":"chunkEq","info":{"declType":"instance","dependencies":[{"constraintAnn":[],"constraintClass":[["Data","Eq"],"Eq"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"a"}],"constraintKindArgs":[],"constraintData":null}],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Eq"],"Eq"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Help","Chunk"],"Chunk"]},{"annotation":[],"tag":"TypeVar","contents":"a"}]}]}},"sourceSpan":{"start":[38,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Help/Chunk.purs","end":[38,56]}},{"comments":null,"title":"chunkOrd","info":{"declType":"instance","dependencies":[{"constraintAnn":[],"constraintClass":[["Data","Ord"],"Ord"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"a"}],"constraintKindArgs":[],"constraintData":null}],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Ord"],"Ord"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Help","Chunk"],"Chunk"]},{"annotation":[],"tag":"TypeVar","contents":"a"}]}]}},"sourceSpan":{"start":[39,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Help/Chunk.purs","end":[39,59]}},{"comments":null,"title":"chunkFunctor","info":{"declType":"instance","dependencies":[],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Functor"],"Functor"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Help","Chunk"],"Chunk"]}]}},"sourceSpan":{"start":[40,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Help/Chunk.purs","end":[40,54]}},{"comments":null,"title":"chunkApply","info":{"declType":"instance","dependencies":[],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Control","Apply"],"Apply"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Help","Chunk"],"Chunk"]}]}},"sourceSpan":{"start":[41,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Help/Chunk.purs","end":[41,50]}},{"comments":null,"title":"chunkApplicative","info":{"declType":"instance","dependencies":[],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Control","Applicative"],"Applicative"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Help","Chunk"],"Chunk"]}]}},"sourceSpan":{"start":[42,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Help/Chunk.purs","end":[42,62]}},{"comments":null,"title":"chunkAlt","info":{"declType":"instance","dependencies":[],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Control","Alt"],"Alt"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Help","Chunk"],"Chunk"]}]}},"sourceSpan":{"start":[43,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Help/Chunk.purs","end":[43,46]}},{"comments":null,"title":"chunkPlus","info":{"declType":"instance","dependencies":[],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Control","Plus"],"Plus"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Help","Chunk"],"Chunk"]}]}},"sourceSpan":{"start":[44,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Help/Chunk.purs","end":[44,48]}},{"comments":null,"title":"chunkAlternative","info":{"declType":"instance","dependencies":[],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Control","Alternative"],"Alternative"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Help","Chunk"],"Chunk"]}]}},"sourceSpan":{"start":[45,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Help/Chunk.purs","end":[45,62]}},{"comments":null,"title":"chunkBind","info":{"declType":"instance","dependencies":[],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Control","Bind"],"Bind"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Help","Chunk"],"Chunk"]}]}},"sourceSpan":{"start":[46,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Help/Chunk.purs","end":[46,48]}},{"comments":null,"title":"chunkMonad","info":{"declType":"instance","dependencies":[],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Control","Monad"],"Monad"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Help","Chunk"],"Chunk"]}]}},"sourceSpan":{"start":[47,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Help/Chunk.purs","end":[47,50]}},{"comments":null,"title":"chunkMonadZero","info":{"declType":"instance","dependencies":[],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Control","MonadZero"],"MonadZero"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Help","Chunk"],"Chunk"]}]}},"sourceSpan":{"start":[48,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Help/Chunk.purs","end":[48,58]}},{"comments":null,"title":"chunkSemigroup","info":{"declType":"instance","dependencies":[{"constraintAnn":[],"constraintClass":[["Data","Semigroup"],"Semigroup"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"a"}],"constraintKindArgs":[],"constraintData":null}],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Semigroup"],"Semigroup"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Help","Chunk"],"Chunk"]},{"annotation":[],"tag":"TypeVar","contents":"a"}]}]}},"sourceSpan":{"start":[50,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Help/Chunk.purs","end":[51,26]}},{"comments":null,"title":"chunkMonoid","info":{"declType":"instance","dependencies":[{"constraintAnn":[],"constraintClass":[["Data","Semigroup"],"Semigroup"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"a"}],"constraintKindArgs":[],"constraintData":null}],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Monoid"],"Monoid"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Help","Chunk"],"Chunk"]},{"annotation":[],"tag":"TypeVar","contents":"a"}]}]}},"sourceSpan":{"start":[53,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Help/Chunk.purs","end":[54,25]}}],"comments":"The free monoid on a semigroup 'a'.\n","title":"Chunk","info":{"declType":"data","dataDeclType":"newtype","typeArguments":[["a",null]]},"sourceSpan":{"start":[34,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Help/Chunk.purs","end":[34,34]}},{"children":[],"comments":"Given a semigroup structure on 'a', return a monoid structure on 'Chunk a'.\n","title":"chunked","info":{"declType":"value","type":{"annotation":[],"tag":"ForAll","contents":["a",{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeVar","contents":"a"}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeVar","contents":"a"}]},{"annotation":[],"tag":"TypeVar","contents":"a"}]}]}}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Help","Chunk"],"Chunk"]},{"annotation":[],"tag":"TypeVar","contents":"a"}]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Help","Chunk"],"Chunk"]},{"annotation":[],"tag":"TypeVar","contents":"a"}]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Help","Chunk"],"Chunk"]},{"annotation":[],"tag":"TypeVar","contents":"a"}]}]}]}]},null]}},"sourceSpan":{"start":[59,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Help/Chunk.purs","end":[60,41]}},{"children":[],"comments":"Concatenate a list into a Chunk.  'listToChunk' satisfies:\n","title":"listToChunk","info":{"declType":"value","type":{"annotation":[],"tag":"ForAll","contents":["a",{"annotation":[],"tag":"ConstrainedType","contents":[{"constraintAnn":[],"constraintClass":[["Data","Monoid"],"Monoid"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"a"}],"constraintKindArgs":[],"constraintData":null},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Array"]},{"annotation":[],"tag":"TypeVar","contents":"a"}]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Help","Chunk"],"Chunk"]},{"annotation":[],"tag":"TypeVar","contents":"a"}]}]}]},null]}},"sourceSpan":{"start":[69,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Help/Chunk.purs","end":[69,56]}},{"children":[],"comments":null,"title":"(<<+>>)","info":{"declType":"alias","alias":[["Options","Applicative","Help","Chunk"],{"Right":{"Left":{"Ident":"chunkBeside"}}}],"fixity":{"associativity":"infixr","precedence":6}},"sourceSpan":{"start":[93,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Help/Chunk.purs","end":[93,30]}},{"children":[],"comments":"Concatenate two 'Chunk's with a space in between.  If one is empty, this\n","title":"chunkBeside","info":{"declType":"value","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Help","Chunk"],"Chunk"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]}]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Help","Chunk"],"Chunk"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]}]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Help","Chunk"],"Chunk"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]}]}]}]}},"sourceSpan":{"start":[91,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Help/Chunk.purs","end":[91,51]}},{"children":[],"comments":null,"title":"(<</>>)","info":{"declType":"alias","alias":[["Options","Applicative","Help","Chunk"],{"Right":{"Left":{"Ident":"chunkBesideOrBelow"}}}],"fixity":{"associativity":"infixr","precedence":6}},"sourceSpan":{"start":[104,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Help/Chunk.purs","end":[104,37]}},{"children":[],"comments":"Concatenate two 'Chunk's with a softline in between.  This is exactly like\n","title":"chunkBesideOrBelow","info":{"declType":"value","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Help","Chunk"],"Chunk"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]}]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Help","Chunk"],"Chunk"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]}]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Help","Chunk"],"Chunk"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]}]}]}]}},"sourceSpan":{"start":[101,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Help/Chunk.purs","end":[101,58]}},{"children":[],"comments":"Concatenate 'Chunk's vertically.\n","title":"vcatChunks","info":{"declType":"value","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Array"]},{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Help","Chunk"],"Chunk"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]}]}}]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Help","Chunk"],"Chunk"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]}]}]}},"sourceSpan":{"start":[107,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Help/Chunk.purs","end":[107,45]}},{"children":[],"comments":"Concatenate 'Chunk's vertically separated by empty lines.\n","title":"vsepChunks","info":{"declType":"value","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Array"]},{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Help","Chunk"],"Chunk"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]}]}}]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Help","Chunk"],"Chunk"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]}]}]}},"sourceSpan":{"start":[111,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Help/Chunk.purs","end":[111,45]}},{"children":[],"comments":"Whether a 'Chunk' is empty.  Note that something like 'pure mempty' is not\n","title":"isEmpty","info":{"declType":"value","type":{"annotation":[],"tag":"ForAll","contents":["a",{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Help","Chunk"],"Chunk"]},{"annotation":[],"tag":"TypeVar","contents":"a"}]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]},null]}},"sourceSpan":{"start":[116,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Help/Chunk.purs","end":[116,40]}},{"children":[],"comments":"Convert a 'String' into a 'Chunk'.  This satisfies:\n","title":"stringChunk","info":{"declType":"value","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Help","Chunk"],"Chunk"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]}]}]}},"sourceSpan":{"start":[123,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Help/Chunk.purs","end":[123,35]}},{"children":[],"comments":"Convert a paragraph into a 'Chunk'.  The resulting chunk is composed by the\n","title":"paragraph","info":{"declType":"value","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Help","Chunk"],"Chunk"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]}]}]}},"sourceSpan":{"start":[134,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Help/Chunk.purs","end":[134,33]}},{"children":[],"comments":"Part of a constrained comonad instance.\n","title":"extractChunk","info":{"declType":"value","type":{"annotation":[],"tag":"ForAll","contents":["a",{"annotation":[],"tag":"ConstrainedType","contents":[{"constraintAnn":[],"constraintClass":[["Data","Monoid"],"Monoid"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"a"}],"constraintKindArgs":[],"constraintData":null},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Help","Chunk"],"Chunk"]},{"annotation":[],"tag":"TypeVar","contents":"a"}]}]},{"annotation":[],"tag":"TypeVar","contents":"a"}]}]},null]}},"sourceSpan":{"start":[80,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Help/Chunk.purs","end":[80,51]}},{"children":[],"comments":"Display pairs of strings in a table.\n","title":"tabulate","info":{"declType":"value","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Array"]},{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Tuple"],"Tuple"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]}]}}]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Help","Chunk"],"Chunk"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]}]}]}},"sourceSpan":{"start":[144,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Help/Chunk.purs","end":[144,47]}}]},{"reExports":[{"moduleName":{"package":null,"item":["Options","Applicative","Types"]},"declarations":[{"children":[{"comments":null,"title":"ParserHelp","info":{"arguments":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"annotation":[],"tag":"RCons","contents":["helpError",{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Help","Chunk"],"Chunk"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]}]},{"annotation":[],"tag":"RCons","contents":["helpSuggestions",{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Help","Chunk"],"Chunk"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]}]},{"annotation":[],"tag":"RCons","contents":["helpHeader",{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Help","Chunk"],"Chunk"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]}]},{"annotation":[],"tag":"RCons","contents":["helpUsage",{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Help","Chunk"],"Chunk"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]}]},{"annotation":[],"tag":"RCons","contents":["helpBody",{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Help","Chunk"],"Chunk"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]}]},{"annotation":[],"tag":"RCons","contents":["helpFooter",{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Help","Chunk"],"Chunk"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]}]},{"annotation":[],"tag":"REmpty"}]}]}]}]}]}]}]}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"newtypeParserHelp","info":{"declType":"instance","dependencies":[],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Newtype"],"Newtype"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Help","Types"],"ParserHelp"]}]},{"annotation":[],"tag":"TypeWildcard","contents":null}]}},"sourceSpan":{"start":[20,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Help/Types.purs","end":[20,58]}},{"comments":null,"title":"parserHelpShow","info":{"declType":"instance","dependencies":[],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Show"],"Show"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Help","Types"],"ParserHelp"]}]}},"sourceSpan":{"start":[21,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Help/Types.purs","end":[22,32]}},{"comments":null,"title":"parserHelpSemigroup","info":{"declType":"instance","dependencies":[],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Semigroup"],"Semigroup"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Help","Types"],"ParserHelp"]}]}},"sourceSpan":{"start":[23,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Help/Types.purs","end":[23,68]}},{"comments":null,"title":"parserHelpMonoid","info":{"declType":"instance","dependencies":[],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Monoid"],"Monoid"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Help","Types"],"ParserHelp"]}]}},"sourceSpan":{"start":[24,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Help/Types.purs","end":[24,62]}}],"comments":null,"title":"ParserHelp","info":{"declType":"data","dataDeclType":"newtype","typeArguments":[]},"sourceSpan":{"start":[12,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Help/Types.purs","end":[19,4]}}]}],"name":"Options.Applicative.Help.Core","comments":null,"declarations":[{"children":[],"comments":"Generate descriptions for commands.\n","title":"cmdDesc","info":{"declType":"value","type":{"annotation":[],"tag":"ForAll","contents":["a",{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Types"],"Parser"]},{"annotation":[],"tag":"TypeVar","contents":"a"}]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Array"]},{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Tuple"],"Tuple"]},{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}}]},{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Help","Chunk"],"Chunk"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]}]}}]}}]}]},null]}},"sourceSpan":{"start":[83,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Help/Core.purs","end":[83,74]}},{"children":[],"comments":"Generate a brief help text for a parser.\n","title":"briefDesc","info":{"declType":"value","type":{"annotation":[],"tag":"ForAll","contents":["a",{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Types"],"ParserPrefs"]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Types"],"Parser"]},{"annotation":[],"tag":"TypeVar","contents":"a"}]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Help","Chunk"],"Chunk"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]}]}]}]},null]}},"sourceSpan":{"start":[97,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Help/Core.purs","end":[97,60]}},{"children":[],"comments":"Generate a brief help text for a parser, only including mandatory\n","title":"missingDesc","info":{"declType":"value","type":{"annotation":[],"tag":"ForAll","contents":["a",{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Types"],"ParserPrefs"]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Types"],"Parser"]},{"annotation":[],"tag":"TypeVar","contents":"a"}]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Help","Chunk"],"Chunk"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]}]}]}]},null]}},"sourceSpan":{"start":[102,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Help/Core.purs","end":[102,62]}},{"children":[],"comments":null,"title":"fold_tree","info":{"declType":"value","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Types"],"OptTree"]},{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Help","Chunk"],"Chunk"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]}]}}]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Help","Chunk"],"Chunk"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]}]}]}},"sourceSpan":{"start":[116,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Help/Core.purs","end":[116,46]}},{"children":[],"comments":"Generate a full help text for a parser.\n","title":"fullDesc","info":{"declType":"value","type":{"annotation":[],"tag":"ForAll","contents":["a",{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Types"],"ParserPrefs"]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Types"],"Parser"]},{"annotation":[],"tag":"TypeVar","contents":"a"}]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Help","Chunk"],"Chunk"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]}]}]}]},null]}},"sourceSpan":{"start":[130,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Help/Core.purs","end":[130,59]}},{"children":[],"comments":null,"title":"errorHelp","info":{"declType":"value","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Help","Chunk"],"Chunk"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]}]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Help","Types"],"ParserHelp"]}]}},"sourceSpan":{"start":[149,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Help/Core.purs","end":[149,37]}},{"children":[],"comments":null,"title":"headerHelp","info":{"declType":"value","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Help","Chunk"],"Chunk"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]}]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Help","Types"],"ParserHelp"]}]}},"sourceSpan":{"start":[152,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Help/Core.purs","end":[152,38]}},{"children":[],"comments":null,"title":"suggestionsHelp","info":{"declType":"value","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Help","Chunk"],"Chunk"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]}]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Help","Types"],"ParserHelp"]}]}},"sourceSpan":{"start":[155,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Help/Core.purs","end":[155,43]}},{"children":[],"comments":null,"title":"usageHelp","info":{"declType":"value","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Help","Chunk"],"Chunk"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]}]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Help","Types"],"ParserHelp"]}]}},"sourceSpan":{"start":[158,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Help/Core.purs","end":[158,37]}},{"children":[],"comments":null,"title":"bodyHelp","info":{"declType":"value","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Help","Chunk"],"Chunk"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]}]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Help","Types"],"ParserHelp"]}]}},"sourceSpan":{"start":[161,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Help/Core.purs","end":[161,36]}},{"children":[],"comments":null,"title":"footerHelp","info":{"declType":"value","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Help","Chunk"],"Chunk"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]}]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Help","Types"],"ParserHelp"]}]}},"sourceSpan":{"start":[164,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Help/Core.purs","end":[164,38]}},{"children":[],"comments":"Generate the help text for a program.\n","title":"parserHelp","info":{"declType":"value","type":{"annotation":[],"tag":"ForAll","contents":["a",{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Types"],"ParserPrefs"]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Types"],"Parser"]},{"annotation":[],"tag":"TypeVar","contents":"a"}]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Help","Types"],"ParserHelp"]}]}]},null]}},"sourceSpan":{"start":[168,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Help/Core.purs","end":[168,62]}},{"children":[],"comments":"Generate option summary.\n","title":"parserUsage","info":{"declType":"value","type":{"annotation":[],"tag":"ForAll","contents":["a",{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Types"],"ParserPrefs"]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Types"],"Parser"]},{"annotation":[],"tag":"TypeVar","contents":"a"}]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]}]}]}]},null]}},"sourceSpan":{"start":[186,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Help/Core.purs","end":[186,66]}}]},{"reExports":[],"name":"Options.Applicative.Help.Levenshtein","comments":null,"declarations":[{"children":[],"comments":null,"title":"editDistance","info":{"declType":"value","type":{"annotation":[],"tag":"ForAll","contents":["a",{"annotation":[],"tag":"ConstrainedType","contents":[{"constraintAnn":[],"constraintClass":[["Data","Eq"],"Eq"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"a"}],"constraintKindArgs":[],"constraintData":null},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Array"]},{"annotation":[],"tag":"TypeVar","contents":"a"}]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Array"]},{"annotation":[],"tag":"TypeVar","contents":"a"}]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]}]}]},null]}},"sourceSpan":{"start":[28,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Help/Levenshtein.purs","end":[28,60]}}]},{"reExports":[{"moduleName":{"package":null,"item":["Text","PrettyPrint","Leijen"]},"declarations":[{"children":[{"comments":null,"title":"SFail","info":{"arguments":[],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"SEmpty","info":{"arguments":[],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"SChar","info":{"arguments":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Char"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"SimpleDoc"]}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"SText","info":{"arguments":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Int"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"String"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"SimpleDoc"]}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"SLine","info":{"arguments":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Int"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"SimpleDoc"]}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"simpleDocEq","info":{"declType":"instance","dependencies":[],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Eq"],"Eq"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"SimpleDoc"]}]}},"sourceSpan":{"start":[607,1],"name":"/home/srghma/projects/purescript-optparse/src/Text/PrettyPrint/Leijen.purs","end":[607,44]}},{"comments":null,"title":"simpleDocOrd","info":{"declType":"instance","dependencies":[],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Ord"],"Ord"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"SimpleDoc"]}]}},"sourceSpan":{"start":[608,1],"name":"/home/srghma/projects/purescript-optparse/src/Text/PrettyPrint/Leijen.purs","end":[608,46]}},{"comments":null,"title":"genericSimpleDoc","info":{"declType":"instance","dependencies":[],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Generic","Rep"],"Generic"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"SimpleDoc"]}]},{"annotation":[],"tag":"TypeWildcard","contents":null}]}},"sourceSpan":{"start":[609,1],"name":"/home/srghma/projects/purescript-optparse/src/Text/PrettyPrint/Leijen.purs","end":[609,56]}},{"comments":null,"title":"showSimpleDoc","info":{"declType":"instance","dependencies":[],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Show"],"Show"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"SimpleDoc"]}]}},"sourceSpan":{"start":[610,1],"name":"/home/srghma/projects/purescript-optparse/src/Text/PrettyPrint/Leijen.purs","end":[610,70]}}],"comments":"The data type @SimpleDoc@ represents rendered documents and is\nused by the display functions.\n\nWhereas values of the data type 'Doc' represent non-empty sets of possible\nrenderings of a document, values of the data type @SimpleDoc@ represent\nsingle renderings of a document.\n\nThe @Int@ in @SText@ contains the length of the string. The @Int@\nin @SLine@ contains the indentation for that line. The library\nprovides two default display functions 'displayS' and\n'displayIO'. You can provide your own display function by writing a\nfunction from a @SimpleDoc@ to your own output format.\n","title":"SimpleDoc","info":{"declType":"data","dataDeclType":"data","typeArguments":[]},"sourceSpan":{"start":[587,1],"name":"/home/srghma/projects/purescript-optparse/src/Text/PrettyPrint/Leijen.purs","end":[591,38]}},{"children":[{"comments":null,"title":"SFail'","info":{"arguments":[],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"SEmpty'","info":{"arguments":[],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"SChar'","info":{"arguments":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Char"]},{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Lazy"],"Lazy"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"LazySimpleDoc"]}]}}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"SText'","info":{"arguments":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Int"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"String"]},{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Lazy"],"Lazy"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"LazySimpleDoc"]}]}}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"SLine'","info":{"arguments":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Int"]},{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Lazy"],"Lazy"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"LazySimpleDoc"]}]}}],"declType":"dataConstructor"},"sourceSpan":null}],"comments":null,"title":"LazySimpleDoc","info":{"declType":"data","dataDeclType":"data","typeArguments":[]},"sourceSpan":{"start":[593,1],"name":"/home/srghma/projects/purescript-optparse/src/Text/PrettyPrint/Leijen.purs","end":[597,53]}},{"children":[{"comments":null,"title":"Nil","info":{"arguments":[],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"Cons","info":{"arguments":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Int"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Docs"]}],"declType":"dataConstructor"},"sourceSpan":null}],"comments":"list of indentation/document pairs; saves an indirection over [(Int,Doc)]\n","title":"Docs","info":{"declType":"data","dataDeclType":"data","typeArguments":[]},"sourceSpan":{"start":[717,1],"name":"/home/srghma/projects/purescript-optparse/src/Text/PrettyPrint/Leijen.purs","end":[718,32]}},{"children":[{"comments":null,"title":"Fail","info":{"arguments":[],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"Empty","info":{"arguments":[],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"Char","info":{"arguments":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Char"]}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"Text","info":{"arguments":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Int"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"String"]}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"Line","info":{"arguments":[],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"FlatAlt","info":{"arguments":[{"annotation":[],"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"Cat","info":{"arguments":[{"annotation":[],"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"Nest","info":{"arguments":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Int"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"Union","info":{"arguments":[{"annotation":[],"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"Column","info":{"arguments":[{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]}]}}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"Columns","info":{"arguments":[{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]}]}}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"Nesting","info":{"arguments":[{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]}]}}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"docSemigroup","info":{"declType":"instance","dependencies":[],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Semigroup"],"Semigroup"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]}]}},"sourceSpan":{"start":[612,1],"name":"/home/srghma/projects/purescript-optparse/src/Text/PrettyPrint/Leijen.purs","end":[613,18]}},{"comments":null,"title":"docMonoid","info":{"declType":"instance","dependencies":[],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Monoid"],"Monoid"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]}]}},"sourceSpan":{"start":[614,1],"name":"/home/srghma/projects/purescript-optparse/src/Text/PrettyPrint/Leijen.purs","end":[615,17]}},{"comments":null,"title":"docShow","info":{"declType":"instance","dependencies":[],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Show"],"Show"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]}]}},"sourceSpan":{"start":[900,1],"name":"/home/srghma/projects/purescript-optparse/src/Text/PrettyPrint/Leijen.purs","end":[901,42]}}],"comments":"The abstract data type @Doc@ represents pretty documents.\n\nMore specifically, a value of type @Doc@ represents a non-empty set of\npossible renderings of a document.  The rendering functions select one of\nthese possibilities.\n\n@Doc@ is an instance of the 'Show' class. @(show doc)@ pretty\nprints document @doc@ with a page width of 80 characters and a\nribbon width of 32 characters.\n\n> show (text \"hello\" <$> text \"world\")\n\nWhich would return the string \\\"hello\\\\nworld\\\", i.e.\n\n@\nhello\nworld\n@\n","title":"Doc","info":{"declType":"data","dataDeclType":"data","typeArguments":[]},"sourceSpan":{"start":[561,1],"name":"/home/srghma/projects/purescript-optparse/src/Text/PrettyPrint/Leijen.purs","end":[573,39]}},{"children":[],"comments":null,"title":"width","info":{"declType":"value","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]}]}}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]}]}]}},"sourceSpan":{"start":[471,1],"name":"/home/srghma/projects/purescript-optparse/src/Text/PrettyPrint/Leijen.purs","end":[471,36]}},{"children":[],"comments":"The document @(vsep xs)@ concatenates all documents @xs@\nvertically with @(\\<$\\>)@. If a 'group' undoes the line breaks\ninserted by @vsep@, all documents are separated with a space.\n\n> someText = map text (words (\"text to lay out\"))\n>\n> test     = text \"some\" <+> vsep someText\n\nThis is layed out as:\n\n@\nsome text\nto\nlay\nout\n@\n\nThe 'align' combinator can be used to align the documents under\ntheir first element\n\n> test     = text \"some\" <+> align (vsep someText)\n\nWhich is printed as:\n\n@\nsome text\n     to\n     lay\n     out\n@\n","title":"vsep","info":{"declType":"value","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Array"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]}]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]}]}},"sourceSpan":{"start":[169,1],"name":"/home/srghma/projects/purescript-optparse/src/Text/PrettyPrint/Leijen.purs","end":[169,25]}},{"children":[],"comments":"The document @(vcat xs)@ concatenates all documents @xs@\nvertically with @(\\<$$\\>)@. If a 'group' undoes the line breaks\ninserted by @vcat@, all documents are directly concatenated.\n","title":"vcat","info":{"declType":"value","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Array"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]}]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]}]}},"sourceSpan":{"start":[196,1],"name":"/home/srghma/projects/purescript-optparse/src/Text/PrettyPrint/Leijen.purs","end":[196,25]}},{"children":[],"comments":"The document @(tupled xs)@ comma separates the documents @xs@ and\nencloses them in parenthesis. The documents are rendered\nhorizontally if that fits the page. Otherwise they are aligned\nvertically. All comma separators are put in front of the elements.\n","title":"tupled","info":{"declType":"value","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Array"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]}]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]}]}},"sourceSpan":{"start":[38,1],"name":"/home/srghma/projects/purescript-optparse/src/Text/PrettyPrint/Leijen.purs","end":[38,27]}},{"children":[],"comments":"The document @(text s)@ contains the literal string @s@. The\nstring shouldn't contain any newline (@'\\n'@) characters. If the\nstring contains newline characters, the function 'string' should be\nused.\n","title":"text","info":{"declType":"value","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]}]}},"sourceSpan":{"start":[634,1],"name":"/home/srghma/projects/purescript-optparse/src/Text/PrettyPrint/Leijen.purs","end":[634,22]}},{"children":[],"comments":"The document @(string s)@ concatenates all characters in @s@\nusing @line@ for newline characters and @char@ for all other\ncharacters. It is used instead of 'text' whenever the text contains\nnewline characters.\n","title":"string","info":{"declType":"value","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]}]}},"sourceSpan":{"start":[348,1],"name":"/home/srghma/projects/purescript-optparse/src/Text/PrettyPrint/Leijen.purs","end":[348,24]}},{"children":[],"comments":"Document @(squotes x)@ encloses document @x@ with single quotes\n\\\"'\\\".\n","title":"squotes","info":{"declType":"value","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]}]}},"sourceSpan":{"start":[248,1],"name":"/home/srghma/projects/purescript-optparse/src/Text/PrettyPrint/Leijen.purs","end":[248,22]}},{"children":[],"comments":"The document @squote@ contains a single quote, \\\"'\\\".\n","title":"squote","info":{"declType":"value","type":{"annotation":[],"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]}},"sourceSpan":{"start":[309,1],"name":"/home/srghma/projects/purescript-optparse/src/Text/PrettyPrint/Leijen.purs","end":[309,14]}},{"children":[],"comments":null,"title":"spaces","info":{"declType":"value","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}},"sourceSpan":{"start":[908,1],"name":"/home/srghma/projects/purescript-optparse/src/Text/PrettyPrint/Leijen.purs","end":[908,24]}},{"children":[],"comments":"The document @space@ contains a single space, \\\" \\\".\n\n> x <+> y   = x <> space <> y\n","title":"space","info":{"declType":"value","type":{"annotation":[],"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]}},"sourceSpan":{"start":[326,1],"name":"/home/srghma/projects/purescript-optparse/src/Text/PrettyPrint/Leijen.purs","end":[326,13]}},{"children":[],"comments":"The document @softline@ behaves like 'space' if the resulting\noutput fits the page, otherwise it behaves like 'line'.\n\n> softline = group line\n","title":"softline","info":{"declType":"value","type":{"annotation":[],"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]}},"sourceSpan":{"start":[236,1],"name":"/home/srghma/projects/purescript-optparse/src/Text/PrettyPrint/Leijen.purs","end":[236,16]}},{"children":[],"comments":"The document @softbreak@ behaves like 'empty' if the resulting\noutput fits the page, otherwise it behaves like 'line'.\n\n> softbreak  = group linebreak\n","title":"softbreak","info":{"declType":"value","type":{"annotation":[],"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]}},"sourceSpan":{"start":[243,1],"name":"/home/srghma/projects/purescript-optparse/src/Text/PrettyPrint/Leijen.purs","end":[243,17]}},{"children":[],"comments":"The document @(sep xs)@ concatenates all documents @xs@ either\nhorizontally with @(\\<+\\>)@, if it fits the page, or vertically with\n@(\\<$\\>)@.\n\n> sep xs  = group (vsep xs)\n","title":"sep","info":{"declType":"value","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Array"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]}]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]}]}},"sourceSpan":{"start":[118,1],"name":"/home/srghma/projects/purescript-optparse/src/Text/PrettyPrint/Leijen.purs","end":[118,24]}},{"children":[],"comments":"The document @(semiBraces xs)@ separates the documents @xs@ with\nsemicolons and encloses them in braces. The documents are rendered\nhorizontally if that fits the page. Otherwise they are aligned\nvertically. All semicolons are put in front of the elements.\n","title":"semiBraces","info":{"declType":"value","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Array"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]}]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]}]}},"sourceSpan":{"start":[45,1],"name":"/home/srghma/projects/purescript-optparse/src/Text/PrettyPrint/Leijen.purs","end":[45,31]}},{"children":[],"comments":"The document @semi@ contains a semicolon, \\\";\\\".\n","title":"semi","info":{"declType":"value","type":{"annotation":[],"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]}},"sourceSpan":{"start":[315,1],"name":"/home/srghma/projects/purescript-optparse/src/Text/PrettyPrint/Leijen.purs","end":[315,12]}},{"children":[],"comments":"The document @rparen@ contains a right parenthesis, \\\")\\\".\n","title":"rparen","info":{"declType":"value","type":{"annotation":[],"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]}},"sourceSpan":{"start":[287,1],"name":"/home/srghma/projects/purescript-optparse/src/Text/PrettyPrint/Leijen.purs","end":[287,14]}},{"children":[],"comments":"A slightly smarter rendering algorithm with more lookahead. It provides\nprovide earlier breaking on deeply nested structures\nFor example, consider this python-ish pseudocode:\n@fun(fun(fun(fun(fun([abcdefg, abcdefg])))))@\nIf we put a softbreak (+ nesting 2) after each open parenthesis, and align\nthe elements of the list to match the opening brackets, this will render with\n@renderPretty@ and a page width of 20 as:\n@\nfun(fun(fun(fun(fun([\n                    | abcdef,\n                    | abcdef,\n                    ]\n  )))))             |\n@\nWhere the 20c. boundary has been marked with |.\nBecause @renderPretty@ only uses one-line lookahead, it sees that the first\nline fits, and is stuck putting the second and third lines after the 20-c\nmark. In contrast, @renderSmart@ will continue to check that the potential\ndocument up to the end of the indentation level. Thus, it will format the\ndocument as:\n\n@\nfun(                |\n  fun(              |\n    fun(            |\n      fun(          |\n        fun([       |\n              abcdef,\n              abcdef,\n            ]       |\n  )))))             |\n@\nWhich fits within the 20c. boundary.\n","title":"renderSmart","info":{"declType":"value","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Number"]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"SimpleDoc"]}]}]}]}},"sourceSpan":{"start":[763,1],"name":"/home/srghma/projects/purescript-optparse/src/Text/PrettyPrint/Leijen.purs","end":[763,49]}},{"children":[],"comments":"This is the default pretty printer which is used by 'show',\n'putDoc' and 'hPutDoc'. @(renderPretty ribbonfrac width x)@ renders\ndocument @x@ with a page width of @width@ and a ribbon width of\n@(ribbonfrac * width)@ characters. The ribbon width is the maximal\namount of non-indentation characters on a line. The parameter\n@ribbonfrac@ should be between @0.0@ and @1.0@. If it is lower or\nhigher, the ribbon width will be 0 or @width@ respectively.\n","title":"renderPretty","info":{"declType":"value","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Number"]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"SimpleDoc"]}]}]}]}},"sourceSpan":{"start":[727,1],"name":"/home/srghma/projects/purescript-optparse/src/Text/PrettyPrint/Leijen.purs","end":[727,50]}},{"children":[],"comments":null,"title":"renderFits","info":{"declType":"value","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"LazySimpleDoc"]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}]}]}]}}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Number"]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"SimpleDoc"]}]}]}]}]}},"sourceSpan":{"start":[766,1],"name":"/home/srghma/projects/purescript-optparse/src/Text/PrettyPrint/Leijen.purs","end":[767,48]}},{"children":[],"comments":"@(renderCompact x)@ renders document @x@ without adding any\nindentation. Since no \\'pretty\\' printing is involved, this\nrenderer is very fast. The resulting output contains fewer\ncharacters than a pretty printed version and can be used for output\nthat is read by other programs.\n\nThis rendering function does not add any colorisation information.\n","title":"renderCompact","info":{"declType":"value","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"SimpleDoc"]}]}},"sourceSpan":{"start":[858,1],"name":"/home/srghma/projects/purescript-optparse/src/Text/PrettyPrint/Leijen.purs","end":[858,34]}},{"children":[],"comments":"The document @rbracket@ contains a right square bracket, \\\"]\\\".\n","title":"rbracket","info":{"declType":"value","type":{"annotation":[],"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]}},"sourceSpan":{"start":[305,1],"name":"/home/srghma/projects/purescript-optparse/src/Text/PrettyPrint/Leijen.purs","end":[305,16]}},{"children":[],"comments":"The document @rbrace@ contains a right brace, \\\"}\\\".\n","title":"rbrace","info":{"declType":"value","type":{"annotation":[],"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]}},"sourceSpan":{"start":[299,1],"name":"/home/srghma/projects/purescript-optparse/src/Text/PrettyPrint/Leijen.purs","end":[299,14]}},{"children":[],"comments":"The document @rangle@ contains a right angle, \\\">\\\".\n","title":"rangle","info":{"declType":"value","type":{"annotation":[],"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]}},"sourceSpan":{"start":[293,1],"name":"/home/srghma/projects/purescript-optparse/src/Text/PrettyPrint/Leijen.purs","end":[293,14]}},{"children":[],"comments":"@(punctuate p xs)@ concatenates all documents in @xs@ with\ndocument @p@ except for the last document.\n\n> someText = map text [\"words\",\"in\",\"a\",\"tuple\"]\n> test     = parens (align (cat (punctuate comma someText)))\n\nThis is layed out on a page width of 20 as:\n\n@\n(words,in,a,tuple)\n@\n\nBut when the page width is 15, it is layed out as:\n\n@\n(words,\n in,\n a,\n tuple)\n@\n\n(If you want put the commas in front of their elements instead of\nat the end, you should use 'tupled' or, in general, 'encloseSep'.)\n","title":"punctuate","info":{"declType":"value","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Array"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]}]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Array"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]}]}]}]}},"sourceSpan":{"start":[104,1],"name":"/home/srghma/projects/purescript-optparse/src/Text/PrettyPrint/Leijen.purs","end":[104,43]}},{"children":[],"comments":"Document @(parens x)@ encloses document @x@ in parenthesis, \\\"(\\\"\nand \\\")\\\".\n","title":"parens","info":{"declType":"value","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]}]}},"sourceSpan":{"start":[263,1],"name":"/home/srghma/projects/purescript-optparse/src/Text/PrettyPrint/Leijen.purs","end":[263,21]}},{"children":[],"comments":"The document @(number f)@ shows the literal number @f@ using 'text'.\n","title":"number","info":{"declType":"value","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Number"]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]}]}},"sourceSpan":{"start":[360,1],"name":"/home/srghma/projects/purescript-optparse/src/Text/PrettyPrint/Leijen.purs","end":[360,24]}},{"children":[],"comments":null,"title":"nesting","info":{"declType":"value","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]}]}}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]}]}},"sourceSpan":{"start":[677,1],"name":"/home/srghma/projects/purescript-optparse/src/Text/PrettyPrint/Leijen.purs","end":[677,31]}},{"children":[],"comments":"The document @(nest i x)@ renders document @x@ with the current\nindentation level increased by i (See also 'hang', 'align' and\n'indent').\n\n> nest 2 (text \"hello\" <$> text \"world\") <$> text \"!\"\n\noutputs as:\n\n@\nhello\n  world\n!\n@\n","title":"nest","info":{"declType":"value","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]}]}]}},"sourceSpan":{"start":[671,1],"name":"/home/srghma/projects/purescript-optparse/src/Text/PrettyPrint/Leijen.purs","end":[671,26]}},{"children":[],"comments":"The document @lparen@ contains a left parenthesis, \\\"(\\\".\n","title":"lparen","info":{"declType":"value","type":{"annotation":[],"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]}},"sourceSpan":{"start":[284,1],"name":"/home/srghma/projects/purescript-optparse/src/Text/PrettyPrint/Leijen.purs","end":[284,14]}},{"children":[],"comments":"The document @(list xs)@ comma separates the documents @xs@ and\nencloses them in square brackets. The documents are rendered\nhorizontally if that fits the page. Otherwise they are aligned\nvertically. All comma separators are put in front of the elements.\n","title":"list","info":{"declType":"value","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Array"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]}]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]}]}},"sourceSpan":{"start":[31,1],"name":"/home/srghma/projects/purescript-optparse/src/Text/PrettyPrint/Leijen.purs","end":[31,25]}},{"children":[],"comments":"The @linebreak@ document advances to the next line and indents to\nthe current nesting level. Document @linebreak@ behaves like\n'empty' if the line break is undone by 'group'.\n","title":"linebreak","info":{"declType":"value","type":{"annotation":[],"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]}},"sourceSpan":{"start":[647,1],"name":"/home/srghma/projects/purescript-optparse/src/Text/PrettyPrint/Leijen.purs","end":[647,17]}},{"children":[],"comments":"The @line@ document advances to the next line and indents to the\ncurrent nesting level. Document @line@ behaves like @(text \\\" \\\")@\nif the line break is undone by 'group'.\n","title":"line","info":{"declType":"value","type":{"annotation":[],"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]}},"sourceSpan":{"start":[641,1],"name":"/home/srghma/projects/purescript-optparse/src/Text/PrettyPrint/Leijen.purs","end":[641,12]}},{"children":[],"comments":"The document @lbracket@ contains a left square bracket, \\\"[\\\".\n","title":"lbracket","info":{"declType":"value","type":{"annotation":[],"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]}},"sourceSpan":{"start":[302,1],"name":"/home/srghma/projects/purescript-optparse/src/Text/PrettyPrint/Leijen.purs","end":[302,16]}},{"children":[],"comments":"The document @lbrace@ contains a left brace, \\\"{\\\".\n","title":"lbrace","info":{"declType":"value","type":{"annotation":[],"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]}},"sourceSpan":{"start":[296,1],"name":"/home/srghma/projects/purescript-optparse/src/Text/PrettyPrint/Leijen.purs","end":[296,14]}},{"children":[],"comments":"The document @langle@ contains a left angle, \\\"\\<\\\".\n","title":"langle","info":{"declType":"value","type":{"annotation":[],"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]}},"sourceSpan":{"start":[290,1],"name":"/home/srghma/projects/purescript-optparse/src/Text/PrettyPrint/Leijen.purs","end":[290,14]}},{"children":[],"comments":"The document @(int i)@ shows the literal integer @i@ using 'text'.\n","title":"int","info":{"declType":"value","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]}]}},"sourceSpan":{"start":[356,1],"name":"/home/srghma/projects/purescript-optparse/src/Text/PrettyPrint/Leijen.purs","end":[356,18]}},{"children":[],"comments":null,"title":"indentation","info":{"declType":"value","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}},"sourceSpan":{"start":[912,1],"name":"/home/srghma/projects/purescript-optparse/src/Text/PrettyPrint/Leijen.purs","end":[912,29]}},{"children":[],"comments":"The document @(indent i x)@ indents document @x@ with @i@ spaces.\n\n> test  = indent 4 (fillSep (map text\n>         (words \"the indent combinator indents these words !\")))\n\nWhich lays out with a page width of 20 as:\n\n@\n    the indent\n    combinator\n    indents these\n    words !\n@\n","title":"indent","info":{"declType":"value","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]}]}]}},"sourceSpan":{"start":[491,1],"name":"/home/srghma/projects/purescript-optparse/src/Text/PrettyPrint/Leijen.purs","end":[491,28]}},{"children":[],"comments":"The document @(hsep xs)@ concatenates all documents @xs@\nhorizontally with @(\\<+\\>)@.\n","title":"hsep","info":{"declType":"value","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Array"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]}]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]}]}},"sourceSpan":{"start":[136,1],"name":"/home/srghma/projects/purescript-optparse/src/Text/PrettyPrint/Leijen.purs","end":[136,25]}},{"children":[],"comments":"The document @(hcat xs)@ concatenates all documents @xs@\nhorizontally with @(\\<\\>)@.\n","title":"hcat","info":{"declType":"value","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Array"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]}]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]}]}},"sourceSpan":{"start":[190,1],"name":"/home/srghma/projects/purescript-optparse/src/Text/PrettyPrint/Leijen.purs","end":[190,25]}},{"children":[],"comments":"A linebreak that will never be flattened; it is guaranteed to render\nas a newline.\n","title":"hardline","info":{"declType":"value","type":{"annotation":[],"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]}},"sourceSpan":{"start":[652,1],"name":"/home/srghma/projects/purescript-optparse/src/Text/PrettyPrint/Leijen.purs","end":[652,16]}},{"children":[],"comments":"The hang combinator implements hanging indentation. The document\n@(hang i x)@ renders document @x@ with a nesting level set to the\ncurrent column plus @i@. The following example uses hanging\nindentation for some text:\n\n> test  = hang 4 (fillSep (map text\n>         (words \"the hang combinator indents these words !\")))\n\nWhich lays out on a page with a width of 20 characters as:\n\n@\nthe hang combinator\n    indents these\n    words !\n@\n\nThe @hang@ combinator is implemented as:\n\n> hang i x  = align (nest i x)\n","title":"hang","info":{"declType":"value","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]}]}]}},"sourceSpan":{"start":[513,1],"name":"/home/srghma/projects/purescript-optparse/src/Text/PrettyPrint/Leijen.purs","end":[513,26]}},{"children":[],"comments":"The @group@ combinator is used to specify alternative\nlayouts. The document @(group x)@ undoes all line breaks in\ndocument @x@. The resulting line is added to the current line if\nthat fits the page. Otherwise, the document @x@ is rendered without\nany changes.\n","title":"group","info":{"declType":"value","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]}]}},"sourceSpan":{"start":[688,1],"name":"/home/srghma/projects/purescript-optparse/src/Text/PrettyPrint/Leijen.purs","end":[688,20]}},{"children":[],"comments":null,"title":"forceSimpleDoc","info":{"declType":"value","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"LazySimpleDoc"]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"SimpleDoc"]}]}},"sourceSpan":{"start":[599,1],"name":"/home/srghma/projects/purescript-optparse/src/Text/PrettyPrint/Leijen.purs","end":[599,45]}},{"children":[],"comments":null,"title":"foldr1","info":{"declType":"value","type":{"annotation":[],"tag":"ForAll","contents":["a",{"annotation":[],"tag":"ConstrainedType","contents":[{"constraintAnn":[],"constraintClass":[["Data","Monoid"],"Monoid"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"a"}],"constraintKindArgs":[],"constraintData":null},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeVar","contents":"a"}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeVar","contents":"a"}]},{"annotation":[],"tag":"TypeVar","contents":"a"}]}]}}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Array"]},{"annotation":[],"tag":"TypeVar","contents":"a"}]}]},{"annotation":[],"tag":"TypeVar","contents":"a"}]}]}]},null]}},"sourceSpan":{"start":[121,1],"name":"/home/srghma/projects/purescript-optparse/src/Text/PrettyPrint/Leijen.purs","end":[121,62]}},{"children":[],"comments":null,"title":"flatten","info":{"declType":"value","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]}]}},"sourceSpan":{"start":[696,1],"name":"/home/srghma/projects/purescript-optparse/src/Text/PrettyPrint/Leijen.purs","end":[696,22]}},{"children":[],"comments":"A document that is normally rendered as the first argument, but\nwhen flattened, is rendered as the second document.\n","title":"flatAlt","info":{"declType":"value","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]}]}]}},"sourceSpan":{"start":[693,1],"name":"/home/srghma/projects/purescript-optparse/src/Text/PrettyPrint/Leijen.purs","end":[693,29]}},{"children":[],"comments":"@fitsR@ has a little more lookahead: assuming that nesting roughly\ncorresponds to syntactic depth, @fitsR@ checks that not only the current line\nfits, but the entire syntactic structure being formatted at this level of\nindentation fits. If we were to remove the second case for @SLine@, we would\ncheck that not only the current structure fits, but also the rest of the\ndocument, which would be slightly more intelligent but would have exponential\nruntime (and is prohibitively expensive in practice).\np = pagewidth\nm = minimum nesting level to fit in\nw = the width in which to fit the first line\n","title":"fitsR","info":{"declType":"value","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"LazySimpleDoc"]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}]}]}]}},"sourceSpan":{"start":[837,1],"name":"/home/srghma/projects/purescript-optparse/src/Text/PrettyPrint/Leijen.purs","end":[837,55]}},{"children":[],"comments":"@fits1@ does 1 line lookahead.\n","title":"fits1","info":{"declType":"value","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"LazySimpleDoc"]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}]}]}]}},"sourceSpan":{"start":[819,1],"name":"/home/srghma/projects/purescript-optparse/src/Text/PrettyPrint/Leijen.purs","end":[819,55]}},{"children":[],"comments":"The document @(fillSep xs)@ concatenates documents @xs@\nhorizontally with @(\\<+\\>)@ as long as its fits the page, than\ninserts a @line@ and continues doing that for all documents in\n@xs@.\n\n> fillSep xs  = foldr (</>) empty xs\n","title":"fillSep","info":{"declType":"value","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Array"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]}]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]}]}},"sourceSpan":{"start":[131,1],"name":"/home/srghma/projects/purescript-optparse/src/Text/PrettyPrint/Leijen.purs","end":[131,28]}},{"children":[],"comments":"The document @(fillCat xs)@ concatenates documents @xs@\nhorizontally with @(\\<\\>)@ as long as its fits the page, than inserts\na @linebreak@ and continues doing that for all documents in @xs@.\n\n> fillCat xs  = foldr1 (<//>) empty\n","title":"fillCat","info":{"declType":"value","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Array"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]}]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]}]}},"sourceSpan":{"start":[185,1],"name":"/home/srghma/projects/purescript-optparse/src/Text/PrettyPrint/Leijen.purs","end":[185,28]}},{"children":[],"comments":"The document @(fillBreak i x)@ first renders document @x@. It\nthan appends @space@s until the width is equal to @i@. If the\nwidth of @x@ is already larger than @i@, the nesting level is\nincreased by @i@ and a @line@ is appended. When we redefine @ptype@\nin the previous example to use @fillBreak@, we get a useful\nvariation of the previous output:\n\n> ptype (name,tp)\n>        = fillBreak 6 (text name) <+> text \"::\" <+> text tp\n\nThe output will now be:\n\n@\nlet empty  :: Doc\n    nest   :: Int -> Doc -> Doc\n    linebreak\n           :: Doc\n@\n","title":"fillBreak","info":{"declType":"value","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]}]}]}},"sourceSpan":{"start":[439,1],"name":"/home/srghma/projects/purescript-optparse/src/Text/PrettyPrint/Leijen.purs","end":[439,31]}},{"children":[],"comments":"The document @(fill i x)@ renders document @x@. It than appends\n@space@s until the width is equal to @i@. If the width of @x@ is\nalready larger, nothing is appended. This combinator is quite\nuseful in practice to output a list of bindings. The following\nexample demonstrates this.\n\n> types  = [(\"empty\",\"Doc\")\n>          ,(\"nest\",\"Int -> Doc -> Doc\")\n>          ,(\"linebreak\",\"Doc\")]\n>\n> ptype (name,tp)\n>        = fill 6 (text name) <+> text \"::\" <+> text tp\n>\n> test   = text \"let\" <+> align (vcat (map ptype types))\n\nWhich is layed out as:\n\n@\nlet empty  :: Doc\n    nest   :: Int -> Doc -> Doc\n    linebreak :: Doc\n@\n","title":"fill","info":{"declType":"value","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]}]}]}},"sourceSpan":{"start":[466,1],"name":"/home/srghma/projects/purescript-optparse/src/Text/PrettyPrint/Leijen.purs","end":[466,26]}},{"children":[],"comments":"The document @equals@ contains an equal sign, \\\"=\\\".\n","title":"equals","info":{"declType":"value","type":{"annotation":[],"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]}},"sourceSpan":{"start":[335,1],"name":"/home/srghma/projects/purescript-optparse/src/Text/PrettyPrint/Leijen.purs","end":[335,14]}},{"children":[],"comments":"The document @(encloseSep l r sep xs)@ concatenates the documents\n@xs@ separated by @sep@ and encloses the resulting document by @l@\nand @r@. The documents are rendered horizontally if that fits the\npage. Otherwise they are aligned vertically. All separators are put\nin front of the elements. For example, the combinator 'list' can be\ndefined with @encloseSep@:\n\n> list xs = encloseSep lbracket rbracket comma xs\n> test    = text \"list\" <+> (list (map int [10,200,3000]))\n\nWhich is layed out with a page width of 20 as:\n\n@\nlist [10,200,3000]\n@\n\nBut when the page width is 15, it is layed out as:\n\n@\nlist [10\n     ,200\n     ,3000]\n@\n","title":"encloseSep","info":{"declType":"value","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Array"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]}]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]}]}]}]}]}},"sourceSpan":{"start":[71,1],"name":"/home/srghma/projects/purescript-optparse/src/Text/PrettyPrint/Leijen.purs","end":[71,52]}},{"children":[],"comments":"The document @(enclose l r x)@ encloses document @x@ between\ndocuments @l@ and @r@ using @(\\<\\>)@.\n\n> enclose l r x   = l <> x <> r\n","title":"enclose","info":{"declType":"value","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]}]}]}]}},"sourceSpan":{"start":[280,1],"name":"/home/srghma/projects/purescript-optparse/src/Text/PrettyPrint/Leijen.purs","end":[280,36]}},{"children":[],"comments":"The empty document is, indeed, empty. Although @empty@ has no\ncontent, it does have a \\'height\\' of 1 and behaves exactly like\n@(text \\\"\\\")@ (and is therefore not a unit of @\\<$\\>@).\n","title":"empty","info":{"declType":"value","type":{"annotation":[],"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]}},"sourceSpan":{"start":[620,1],"name":"/home/srghma/projects/purescript-optparse/src/Text/PrettyPrint/Leijen.purs","end":[620,13]}},{"children":[],"comments":"Document @(dquotes x)@ encloses document @x@ with double quotes\n'\\\"'.\n","title":"dquotes","info":{"declType":"value","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]}]}},"sourceSpan":{"start":[253,1],"name":"/home/srghma/projects/purescript-optparse/src/Text/PrettyPrint/Leijen.purs","end":[253,22]}},{"children":[],"comments":"The document @dquote@ contains a double quote, '\\\"'.\n","title":"dquote","info":{"declType":"value","type":{"annotation":[],"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]}},"sourceSpan":{"start":[312,1],"name":"/home/srghma/projects/purescript-optparse/src/Text/PrettyPrint/Leijen.purs","end":[312,14]}},{"children":[],"comments":"The document @dot@ contains a single dot, \\\".\\\".\n","title":"dot","info":{"declType":"value","type":{"annotation":[],"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]}},"sourceSpan":{"start":[329,1],"name":"/home/srghma/projects/purescript-optparse/src/Text/PrettyPrint/Leijen.purs","end":[329,11]}},{"children":[],"comments":"@(displayS simpleDoc)@ takes the output @simpleDoc@ from a\nrendering function and transforms it to a 'ShowS' type (for use in\nthe 'Show' class).\n\n> showWidth :: Int -> Doc -> String\n> showWidth w x   = displayS (renderPretty 0.4 w x) \"\"\n\nANSI color information will be discarded by this function unless\nyou are running on a Unix-like operating system. This is due to\na technical limitation in Windows ANSI support.\n","title":"displayS","info":{"declType":"value","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"SimpleDoc"]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}},"sourceSpan":{"start":[893,1],"name":"/home/srghma/projects/purescript-optparse/src/Text/PrettyPrint/Leijen.purs","end":[893,32]}},{"children":[],"comments":"The document @comma@ contains a comma, \\\",\\\".\n","title":"comma","info":{"declType":"value","type":{"annotation":[],"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]}},"sourceSpan":{"start":[321,1],"name":"/home/srghma/projects/purescript-optparse/src/Text/PrettyPrint/Leijen.purs","end":[321,13]}},{"children":[],"comments":null,"title":"column","info":{"declType":"value","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]}]}}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]}]}},"sourceSpan":{"start":[674,1],"name":"/home/srghma/projects/purescript-optparse/src/Text/PrettyPrint/Leijen.purs","end":[674,30]}},{"children":[],"comments":"The document @colon@ contains a colon, \\\":\\\".\n","title":"colon","info":{"declType":"value","type":{"annotation":[],"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]}},"sourceSpan":{"start":[318,1],"name":"/home/srghma/projects/purescript-optparse/src/Text/PrettyPrint/Leijen.purs","end":[318,13]}},{"children":[],"comments":"The document @(char c)@ contains the literal character @c@. The\ncharacter shouldn't be a newline (@'\\n'@), the function 'line'\nshould be used for line breaks.\n","title":"char","info":{"declType":"value","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Char"]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]}]}},"sourceSpan":{"start":[626,1],"name":"/home/srghma/projects/purescript-optparse/src/Text/PrettyPrint/Leijen.purs","end":[626,20]}},{"children":[],"comments":"The document @(cat xs)@ concatenates all documents @xs@ either\nhorizontally with @(\\<\\>)@, if it fits the page, or vertically with\n@(\\<$$\\>)@.\n\n> cat xs  = group (vcat xs)\n","title":"cat","info":{"declType":"value","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Array"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]}]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]}]}},"sourceSpan":{"start":[177,1],"name":"/home/srghma/projects/purescript-optparse/src/Text/PrettyPrint/Leijen.purs","end":[177,24]}},{"children":[],"comments":"Document @(brackets x)@ encloses document @x@ in square brackets,\n\\\"[\\\" and \\\"]\\\".\n","title":"brackets","info":{"declType":"value","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]}]}},"sourceSpan":{"start":[273,1],"name":"/home/srghma/projects/purescript-optparse/src/Text/PrettyPrint/Leijen.purs","end":[273,23]}},{"children":[],"comments":"Document @(braces x)@ encloses document @x@ in braces, \\\"{\\\" and\n\\\"}\\\".\n","title":"braces","info":{"declType":"value","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]}]}},"sourceSpan":{"start":[258,1],"name":"/home/srghma/projects/purescript-optparse/src/Text/PrettyPrint/Leijen.purs","end":[258,21]}},{"children":[],"comments":"The document @(bool b)@ shows the literal bool @b@ using 'text'.\n","title":"bool","info":{"declType":"value","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]}]}},"sourceSpan":{"start":[352,1],"name":"/home/srghma/projects/purescript-optparse/src/Text/PrettyPrint/Leijen.purs","end":[352,23]}},{"children":[],"comments":null,"title":"beside","info":{"declType":"value","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]}]}]}},"sourceSpan":{"start":[655,1],"name":"/home/srghma/projects/purescript-optparse/src/Text/PrettyPrint/Leijen.purs","end":[655,28]}},{"children":[],"comments":"The document @backslash@ contains a back slash, \\\"\\\\\\\".\n","title":"backslash","info":{"declType":"value","type":{"annotation":[],"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]}},"sourceSpan":{"start":[332,1],"name":"/home/srghma/projects/purescript-optparse/src/Text/PrettyPrint/Leijen.purs","end":[332,17]}},{"children":[],"comments":"The document @(x \\<+\\> y)@ concatenates document @x@ and @y@ with a\n@space@ in between.  (infixr 6)\n","title":"appendWithSpace","info":{"declType":"value","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]}]}]}},"sourceSpan":{"start":[201,1],"name":"/home/srghma/projects/purescript-optparse/src/Text/PrettyPrint/Leijen.purs","end":[201,37]}},{"children":[],"comments":"The document @(x \\<\\/\\> y)@ concatenates document @x@ and @y@ with a\n'softline' in between. This effectively puts @x@ and @y@ either\nnext to each other (with a @space@ in between) or underneath each\nother. (infixr 5)\n","title":"appendWithSoftline","info":{"declType":"value","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]}]}]}},"sourceSpan":{"start":[209,1],"name":"/home/srghma/projects/purescript-optparse/src/Text/PrettyPrint/Leijen.purs","end":[209,40]}},{"children":[],"comments":"The document @(x \\<\\/\\/\\> y)@ concatenates document @x@ and @y@ with\na 'softbreak' in between. This effectively puts @x@ and @y@ either\nright next to each other or underneath each other. (infixr 5)\n","title":"appendWithSoftbreak","info":{"declType":"value","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]}]}]}},"sourceSpan":{"start":[216,1],"name":"/home/srghma/projects/purescript-optparse/src/Text/PrettyPrint/Leijen.purs","end":[216,41]}},{"children":[],"comments":"The document @(x \\<$$\\> y)@ concatenates document @x@ and @y@ with\na @linebreak@ in between. (infixr 5)\n","title":"appendWithLinebreak","info":{"declType":"value","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]}]}]}},"sourceSpan":{"start":[228,1],"name":"/home/srghma/projects/purescript-optparse/src/Text/PrettyPrint/Leijen.purs","end":[228,41]}},{"children":[],"comments":"The document @(x \\<$\\> y)@ concatenates document @x@ and @y@ with a\n'line' in between. (infixr 5)\n","title":"appendWithLine","info":{"declType":"value","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]}]}]}},"sourceSpan":{"start":[222,1],"name":"/home/srghma/projects/purescript-optparse/src/Text/PrettyPrint/Leijen.purs","end":[222,36]}},{"children":[],"comments":"Document @(angles x)@ encloses document @x@ in angles, \\\"\\<\\\" and\n\\\"\\>\\\".\n","title":"angles","info":{"declType":"value","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]}]}},"sourceSpan":{"start":[268,1],"name":"/home/srghma/projects/purescript-optparse/src/Text/PrettyPrint/Leijen.purs","end":[268,21]}},{"children":[],"comments":"The document @(align x)@ renders document @x@ with the nesting\nlevel set to the current column. It is used for example to\nimplement 'hang'.\n\nAs an example, we will put a document right above another one,\nregardless of the current nesting level:\n\n> x $$ y  = align (x <$> y)\n\n> test    = text \"hi\" <+> (text \"nice\" $$ text \"world\")\n\nwhich will be layed out as:\n\n@\nhi nice\n   world\n@\n","title":"align","info":{"declType":"value","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]}]}},"sourceSpan":{"start":[533,1],"name":"/home/srghma/projects/purescript-optparse/src/Text/PrettyPrint/Leijen.purs","end":[533,20]}},{"children":[],"comments":null,"title":"(</>)","info":{"declType":"alias","alias":[["Text","PrettyPrint","Leijen"],{"Right":{"Left":{"Ident":"appendWithSoftline"}}}],"fixity":{"associativity":"infixr","precedence":5}},"sourceSpan":{"start":[211,1],"name":"/home/srghma/projects/purescript-optparse/src/Text/PrettyPrint/Leijen.purs","end":[211,35]}},{"children":[],"comments":null,"title":"(<//>)","info":{"declType":"alias","alias":[["Text","PrettyPrint","Leijen"],{"Right":{"Left":{"Ident":"appendWithSoftbreak"}}}],"fixity":{"associativity":"infixr","precedence":5}},"sourceSpan":{"start":[218,1],"name":"/home/srghma/projects/purescript-optparse/src/Text/PrettyPrint/Leijen.purs","end":[218,37]}},{"children":[],"comments":null,"title":"(<+>)","info":{"declType":"alias","alias":[["Text","PrettyPrint","Leijen"],{"Right":{"Left":{"Ident":"appendWithSpace"}}}],"fixity":{"associativity":"infixr","precedence":6}},"sourceSpan":{"start":[203,1],"name":"/home/srghma/projects/purescript-optparse/src/Text/PrettyPrint/Leijen.purs","end":[203,32]}},{"children":[],"comments":null,"title":"(<$$>)","info":{"declType":"alias","alias":[["Text","PrettyPrint","Leijen"],{"Right":{"Left":{"Ident":"appendWithLinebreak"}}}],"fixity":{"associativity":"infixr","precedence":5}},"sourceSpan":{"start":[230,1],"name":"/home/srghma/projects/purescript-optparse/src/Text/PrettyPrint/Leijen.purs","end":[230,37]}}]}],"name":"Options.Applicative.Help.Pretty","comments":null,"declarations":[{"children":[],"comments":null,"title":"(.$.)","info":{"declType":"alias","alias":[["Text","PrettyPrint","Leijen"],{"Right":{"Left":{"Ident":"appendWithLine"}}}],"fixity":{"associativity":"infixr","precedence":5}},"sourceSpan":{"start":[11,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Help/Pretty.purs","end":[11,34]}}]},{"reExports":[],"name":"Options.Applicative.Help.Types","comments":null,"declarations":[{"children":[{"comments":null,"title":"ParserHelp","info":{"arguments":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"annotation":[],"tag":"RCons","contents":["helpError",{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Help","Chunk"],"Chunk"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]}]},{"annotation":[],"tag":"RCons","contents":["helpSuggestions",{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Help","Chunk"],"Chunk"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]}]},{"annotation":[],"tag":"RCons","contents":["helpHeader",{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Help","Chunk"],"Chunk"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]}]},{"annotation":[],"tag":"RCons","contents":["helpUsage",{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Help","Chunk"],"Chunk"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]}]},{"annotation":[],"tag":"RCons","contents":["helpBody",{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Help","Chunk"],"Chunk"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]}]},{"annotation":[],"tag":"RCons","contents":["helpFooter",{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Help","Chunk"],"Chunk"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]}]},{"annotation":[],"tag":"REmpty"}]}]}]}]}]}]}]}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"newtypeParserHelp","info":{"declType":"instance","dependencies":[],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Newtype"],"Newtype"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Help","Types"],"ParserHelp"]}]},{"annotation":[],"tag":"TypeWildcard","contents":null}]}},"sourceSpan":{"start":[20,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Help/Types.purs","end":[20,58]}},{"comments":null,"title":"parserHelpShow","info":{"declType":"instance","dependencies":[],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Show"],"Show"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Help","Types"],"ParserHelp"]}]}},"sourceSpan":{"start":[21,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Help/Types.purs","end":[22,32]}},{"comments":null,"title":"parserHelpSemigroup","info":{"declType":"instance","dependencies":[],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Semigroup"],"Semigroup"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Help","Types"],"ParserHelp"]}]}},"sourceSpan":{"start":[23,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Help/Types.purs","end":[23,68]}},{"comments":null,"title":"parserHelpMonoid","info":{"declType":"instance","dependencies":[],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Monoid"],"Monoid"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Help","Types"],"ParserHelp"]}]}},"sourceSpan":{"start":[24,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Help/Types.purs","end":[24,62]}}],"comments":null,"title":"ParserHelp","info":{"declType":"data","dataDeclType":"newtype","typeArguments":[]},"sourceSpan":{"start":[12,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Help/Types.purs","end":[19,4]}},{"children":[],"comments":"Convert a help text to 'String'.\n","title":"renderHelp","info":{"declType":"value","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Help","Types"],"ParserHelp"]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}]}},"sourceSpan":{"start":[37,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Help/Types.purs","end":[37,42]}}]},{"reExports":[{"moduleName":{"package":null,"item":["Options","Applicative","Types"]},"declarations":[{"children":[{"comments":null,"title":"ErrorMsg","info":{"arguments":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"String"]}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"InfoMsg","info":{"arguments":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"String"]}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"ShowHelpText","info":{"arguments":[],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"MissingError","info":{"arguments":[{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Types"],"IsCmdStart"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Types"],"SomeParser"]}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"ExpectsArgError","info":{"arguments":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"String"]}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"UnexpectedError","info":{"arguments":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"String"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Types"],"SomeParser"]}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"parseErrorSemigroup","info":{"declType":"instance","dependencies":[],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Semigroup"],"Semigroup"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Types"],"ParseError"]}]}},"sourceSpan":{"start":[85,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Types.purs","end":[86,17]}}],"comments":null,"title":"ParseError","info":{"declType":"data","dataDeclType":"data","typeArguments":[]},"sourceSpan":{"start":[73,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Types.purs","end":[79,38]}}]}],"name":"Options.Applicative.Internal","comments":null,"declarations":[{"children":[{"comments":null,"title":"pFunctor","info":{"declType":"instance","dependencies":[],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Functor"],"Functor"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Internal"],"P"]}]}},"sourceSpan":{"start":[67,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Internal.purs","end":[68,28]}},{"comments":null,"title":"pApply","info":{"declType":"instance","dependencies":[],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Control","Apply"],"Apply"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Internal"],"P"]}]}},"sourceSpan":{"start":[70,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Internal.purs","end":[71,34]}},{"comments":null,"title":"pApplicative","info":{"declType":"instance","dependencies":[],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Control","Applicative"],"Applicative"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Internal"],"P"]}]}},"sourceSpan":{"start":[72,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Internal.purs","end":[73,22]}},{"comments":null,"title":"pAlt","info":{"declType":"instance","dependencies":[],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Control","Alt"],"Alt"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Internal"],"P"]}]}},"sourceSpan":{"start":[75,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Internal.purs","end":[76,34]}},{"comments":null,"title":"pBind","info":{"declType":"instance","dependencies":[],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Control","Bind"],"Bind"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Internal"],"P"]}]}},"sourceSpan":{"start":[78,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Internal.purs","end":[79,54]}},{"comments":null,"title":"pMonad","info":{"declType":"instance","dependencies":[],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Control","Monad"],"Monad"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Internal"],"P"]}]}},"sourceSpan":{"start":[81,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Internal.purs","end":[81,27]}},{"comments":null,"title":"pMonadP","info":{"declType":"instance","dependencies":[],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Internal"],"MonadP"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Internal"],"P"]}]}},"sourceSpan":{"start":[88,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Internal.purs","end":[95,28]}}],"comments":null,"title":"P","info":{"declType":"data","dataDeclType":"newtype","typeArguments":[["a",null]]},"sourceSpan":{"start":[65,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Internal.purs","end":[65,85]}},{"children":[{"comments":null,"title":"enterContext","info":{"declType":"typeClassMember","type":{"annotation":[],"tag":"ForAll","contents":["a",{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Types"],"ParserInfo"]},{"annotation":[],"tag":"TypeVar","contents":"a"}]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeVar","contents":"m"},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]}]},null]}},"sourceSpan":{"start":[57,3],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Internal.purs","end":[57,61]}},{"comments":null,"title":"exitContext","info":{"declType":"typeClassMember","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeVar","contents":"m"},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}},"sourceSpan":{"start":[58,3],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Internal.purs","end":[58,24]}},{"comments":null,"title":"getPrefs","info":{"declType":"typeClassMember","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeVar","contents":"m"},{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Types"],"ParserPrefs"]}]}},"sourceSpan":{"start":[59,3],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Internal.purs","end":[59,28]}},{"comments":null,"title":"missingArgP","info":{"declType":"typeClassMember","type":{"annotation":[],"tag":"ForAll","contents":["a",{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Types"],"ParseError"]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Types"],"Completer"]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeVar","contents":"m"},{"annotation":[],"tag":"TypeVar","contents":"a"}]}]}]},null]}},"sourceSpan":{"start":[61,3],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Internal.purs","end":[61,58]}},{"comments":null,"title":"errorP","info":{"declType":"typeClassMember","type":{"annotation":[],"tag":"ForAll","contents":["a",{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Types"],"ParseError"]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeVar","contents":"m"},{"annotation":[],"tag":"TypeVar","contents":"a"}]}]},null]}},"sourceSpan":{"start":[62,3],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Internal.purs","end":[62,40]}},{"comments":null,"title":"exitP","info":{"declType":"typeClassMember","type":{"annotation":[],"tag":"ForAll","contents":["a",{"annotation":[],"tag":"ForAll","contents":["b",{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Types"],"IsCmdStart"]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Types"],"ArgPolicy"]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Types"],"Parser"]},{"annotation":[],"tag":"TypeVar","contents":"b"}]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"annotation":[],"tag":"TypeVar","contents":"a"}]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeVar","contents":"m"},{"annotation":[],"tag":"TypeVar","contents":"a"}]}]}]}]}]},null]},null]}},"sourceSpan":{"start":[63,3],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Internal.purs","end":[63,77]}},{"comments":null,"title":"pMonadP","info":{"declType":"instance","dependencies":[],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Internal"],"MonadP"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Internal"],"P"]}]}},"sourceSpan":{"start":[88,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Internal.purs","end":[95,28]}},{"comments":null,"title":"completionMonadP","info":{"declType":"instance","dependencies":[],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Internal"],"MonadP"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Internal"],"Completion"]}]}},"sourceSpan":{"start":[160,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Internal.purs","end":[167,37]}}],"comments":null,"title":"MonadP","info":{"fundeps":[],"arguments":[["m",{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Type"]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Type"]}]}]],"declType":"typeClass","superclasses":[{"constraintAnn":[],"constraintClass":[["Control","Monad"],"Monad"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"m"}],"constraintKindArgs":[],"constraintData":null},{"constraintAnn":[],"constraintClass":[["Control","Alt"],"Alt"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"m"}],"constraintKindArgs":[],"constraintData":null}]},"sourceSpan":{"start":[56,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Internal.purs","end":[63,77]}},{"children":[],"comments":null,"title":"hoistMaybe","info":{"declType":"value","type":{"annotation":[],"tag":"ForAll","contents":["a",{"annotation":[],"tag":"ForAll","contents":["m",{"annotation":[],"tag":"ConstrainedType","contents":[{"constraintAnn":[],"constraintClass":[["Options","Applicative","Internal"],"MonadP"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"m"}],"constraintKindArgs":[],"constraintData":null},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Types"],"ParseError"]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"annotation":[],"tag":"TypeVar","contents":"a"}]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeVar","contents":"m"},{"annotation":[],"tag":"TypeVar","contents":"a"}]}]}]}]},null]},null]}},"sourceSpan":{"start":[97,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Internal.purs","end":[97,67]}},{"children":[],"comments":null,"title":"hoistEither","info":{"declType":"value","type":{"annotation":[],"tag":"ForAll","contents":["a",{"annotation":[],"tag":"ForAll","contents":["m",{"annotation":[],"tag":"ConstrainedType","contents":[{"constraintAnn":[],"constraintClass":[["Options","Applicative","Internal"],"MonadP"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"m"}],"constraintKindArgs":[],"constraintData":null},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Either"],"Either"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Types"],"ParseError"]}]},{"annotation":[],"tag":"TypeVar","contents":"a"}]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeVar","contents":"m"},{"annotation":[],"tag":"TypeVar","contents":"a"}]}]}]},null]},null]}},"sourceSpan":{"start":[100,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Internal.purs","end":[100,66]}},{"children":[],"comments":null,"title":"runReadM","info":{"declType":"value","type":{"annotation":[],"tag":"ForAll","contents":["a",{"annotation":[],"tag":"ForAll","contents":["m",{"annotation":[],"tag":"ConstrainedType","contents":[{"constraintAnn":[],"constraintClass":[["Options","Applicative","Internal"],"MonadP"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"m"}],"constraintKindArgs":[],"constraintData":null},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Types"],"ReadM"]},{"annotation":[],"tag":"TypeVar","contents":"a"}]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeVar","contents":"m"},{"annotation":[],"tag":"TypeVar","contents":"a"}]}]}]}]},null]},null]}},"sourceSpan":{"start":[110,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Internal.purs","end":[110,61]}},{"children":[],"comments":null,"title":"withReadM","info":{"declType":"value","type":{"annotation":[],"tag":"ForAll","contents":["a",{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Types"],"ReadM"]},{"annotation":[],"tag":"TypeVar","contents":"a"}]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Types"],"ReadM"]},{"annotation":[],"tag":"TypeVar","contents":"a"}]}]}]},null]}},"sourceSpan":{"start":[113,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Internal.purs","end":[113,64]}},{"children":[],"comments":null,"title":"runP","info":{"declType":"value","type":{"annotation":[],"tag":"ForAll","contents":["a",{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Internal"],"P"]},{"annotation":[],"tag":"TypeVar","contents":"a"}]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Types"],"ParserPrefs"]}]},{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Tuple"],"Tuple"]},{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Either"],"Either"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Types"],"ParseError"]}]},{"annotation":[],"tag":"TypeVar","contents":"a"}]}}]},{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Array"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Types"],"Context"]}]}}]}}]}]},null]}},"sourceSpan":{"start":[103,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Internal.purs","end":[103,86]}},{"children":[{"comments":null,"title":"completionFunctor","info":{"declType":"instance","dependencies":[],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Functor"],"Functor"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Internal"],"Completion"]}]}},"sourceSpan":{"start":[144,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Internal.purs","end":[145,46]}},{"comments":null,"title":"completionApply","info":{"declType":"instance","dependencies":[],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Control","Apply"],"Apply"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Internal"],"Completion"]}]}},"sourceSpan":{"start":[147,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Internal.purs","end":[148,61]}},{"comments":null,"title":"completionApplicative","info":{"declType":"instance","dependencies":[],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Control","Applicative"],"Applicative"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Internal"],"Completion"]}]}},"sourceSpan":{"start":[149,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Internal.purs","end":[150,31]}},{"comments":null,"title":"completionAlt","info":{"declType":"instance","dependencies":[],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Control","Alt"],"Alt"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Internal"],"Completion"]}]}},"sourceSpan":{"start":[152,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Internal.purs","end":[153,61]}},{"comments":null,"title":"completionBind","info":{"declType":"instance","dependencies":[],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Control","Bind"],"Bind"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Internal"],"Completion"]}]}},"sourceSpan":{"start":[155,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Internal.purs","end":[156,81]}},{"comments":null,"title":"completionMonad","info":{"declType":"instance","dependencies":[],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Control","Monad"],"Monad"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Internal"],"Completion"]}]}},"sourceSpan":{"start":[158,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Internal.purs","end":[158,45]}},{"comments":null,"title":"completionMonadP","info":{"declType":"instance","dependencies":[],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Internal"],"MonadP"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Internal"],"Completion"]}]}},"sourceSpan":{"start":[160,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Internal.purs","end":[167,37]}}],"comments":null,"title":"Completion","info":{"declType":"data","dataDeclType":"newtype","typeArguments":[["a",null]]},"sourceSpan":{"start":[141,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Internal.purs","end":[142,70]}},{"children":[],"comments":null,"title":"runCompletion","info":{"declType":"value","type":{"annotation":[],"tag":"ForAll","contents":["r",{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Internal"],"Completion"]},{"annotation":[],"tag":"TypeVar","contents":"r"}]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Types"],"ParserPrefs"]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Either"],"Either"]},{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Tuple"],"Tuple"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Types"],"SomeParser"]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Types"],"ArgPolicy"]}]}}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Types"],"Completer"]}]}}]}]}]},null]}},"sourceSpan":{"start":[169,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Internal.purs","end":[169,112]}},{"children":[],"comments":null,"title":"contextNames","info":{"declType":"value","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Array"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Types"],"Context"]}]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Array"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}]}},"sourceSpan":{"start":[83,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Internal.purs","end":[83,46]}},{"children":[{"comments":null,"title":"listTFunctor","info":{"declType":"instance","dependencies":[{"constraintAnn":[],"constraintClass":[["Control","Monad"],"Monad"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"m"}],"constraintKindArgs":[],"constraintData":null}],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Functor"],"Functor"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Internal"],"ListT"]},{"annotation":[],"tag":"TypeVar","contents":"m"}]}]}},"sourceSpan":{"start":[204,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Internal.purs","end":[207,23]}},{"comments":null,"title":"listTApply","info":{"declType":"instance","dependencies":[{"constraintAnn":[],"constraintClass":[["Control","Monad"],"Monad"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"m"}],"constraintKindArgs":[],"constraintData":null}],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Control","Apply"],"Apply"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Internal"],"ListT"]},{"annotation":[],"tag":"TypeVar","contents":"m"}]}]}},"sourceSpan":{"start":[209,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Internal.purs","end":[210,13]}},{"comments":null,"title":"listTApplicative","info":{"declType":"instance","dependencies":[{"constraintAnn":[],"constraintClass":[["Control","Monad"],"Monad"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"m"}],"constraintKindArgs":[],"constraintData":null}],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Control","Applicative"],"Applicative"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Internal"],"ListT"]},{"annotation":[],"tag":"TypeVar","contents":"m"}]}]}},"sourceSpan":{"start":[212,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Internal.purs","end":[213,28]}},{"comments":null,"title":"listTBind","info":{"declType":"instance","dependencies":[{"constraintAnn":[],"constraintClass":[["Control","Monad"],"Monad"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"m"}],"constraintKindArgs":[],"constraintData":null}],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Control","Bind"],"Bind"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Internal"],"ListT"]},{"annotation":[],"tag":"TypeVar","contents":"m"}]}]}},"sourceSpan":{"start":[215,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Internal.purs","end":[220,53]}},{"comments":null,"title":"listTMonad","info":{"declType":"instance","dependencies":[{"constraintAnn":[],"constraintClass":[["Control","Monad"],"Monad"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"m"}],"constraintKindArgs":[],"constraintData":null}],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Control","Monad"],"Monad"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Internal"],"ListT"]},{"annotation":[],"tag":"TypeVar","contents":"m"}]}]}},"sourceSpan":{"start":[222,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Internal.purs","end":[222,50]}},{"comments":null,"title":"listTAlt","info":{"declType":"instance","dependencies":[{"constraintAnn":[],"constraintClass":[["Control","Monad"],"Monad"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"m"}],"constraintKindArgs":[],"constraintData":null}],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Control","Alt"],"Alt"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Internal"],"ListT"]},{"annotation":[],"tag":"TypeVar","contents":"m"}]}]}},"sourceSpan":{"start":[224,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Internal.purs","end":[229,49]}},{"comments":null,"title":"listTPlus","info":{"declType":"instance","dependencies":[{"constraintAnn":[],"constraintClass":[["Control","Monad"],"Monad"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"m"}],"constraintKindArgs":[],"constraintData":null}],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Control","Plus"],"Plus"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Internal"],"ListT"]},{"annotation":[],"tag":"TypeVar","contents":"m"}]}]}},"sourceSpan":{"start":[230,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Internal.purs","end":[231,28]}},{"comments":null,"title":"listTAlternative","info":{"declType":"instance","dependencies":[{"constraintAnn":[],"constraintClass":[["Control","Monad"],"Monad"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"m"}],"constraintKindArgs":[],"constraintData":null}],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Control","Alternative"],"Alternative"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Internal"],"ListT"]},{"annotation":[],"tag":"TypeVar","contents":"m"}]}]}},"sourceSpan":{"start":[232,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Internal.purs","end":[232,62]}},{"comments":null,"title":"listTMonadTrans","info":{"declType":"instance","dependencies":[],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Control","Monad","Trans","Class"],"MonadTrans"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Internal"],"ListT"]}]}},"sourceSpan":{"start":[234,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Internal.purs","end":[235,44]}},{"comments":"instance listTMonadZero :: Monad m => MonadZero (ListT m)\n","title":"listTMonadPlus","info":{"declType":"instance","dependencies":[{"constraintAnn":[],"constraintClass":[["Control","Monad"],"Monad"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"m"}],"constraintKindArgs":[],"constraintData":null}],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Control","MonadPlus"],"MonadPlus"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Internal"],"ListT"]},{"annotation":[],"tag":"TypeVar","contents":"m"}]}]}},"sourceSpan":{"start":[238,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Internal.purs","end":[238,58]}}],"comments":null,"title":"ListT","info":{"declType":"data","dataDeclType":"newtype","typeArguments":[["m",null],["a",null]]},"sourceSpan":{"start":[177,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Internal.purs","end":[177,52]}},{"children":[],"comments":null,"title":"takeListT","info":{"declType":"value","type":{"annotation":[],"tag":"ForAll","contents":["m",{"annotation":[],"tag":"ForAll","contents":["a",{"annotation":[],"tag":"ConstrainedType","contents":[{"constraintAnn":[],"constraintClass":[["Control","Monad"],"Monad"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"m"}],"constraintKindArgs":[],"constraintData":null},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Internal"],"ListT"]},{"annotation":[],"tag":"TypeVar","contents":"m"}]},{"annotation":[],"tag":"TypeVar","contents":"a"}]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Internal"],"ListT"]},{"annotation":[],"tag":"TypeVar","contents":"m"}]},{"annotation":[],"tag":"TypeVar","contents":"a"}]}]}]}]},null]},null]}},"sourceSpan":{"start":[193,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Internal.purs","end":[193,66]}},{"children":[],"comments":null,"title":"runListT","info":{"declType":"value","type":{"annotation":[],"tag":"ForAll","contents":["a",{"annotation":[],"tag":"ForAll","contents":["m",{"annotation":[],"tag":"ConstrainedType","contents":[{"constraintAnn":[],"constraintClass":[["Control","Monad"],"Monad"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"m"}],"constraintKindArgs":[],"constraintData":null},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Internal"],"ListT"]},{"annotation":[],"tag":"TypeVar","contents":"m"}]},{"annotation":[],"tag":"TypeVar","contents":"a"}]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeVar","contents":"m"},{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","List","Types"],"List"]},{"annotation":[],"tag":"TypeVar","contents":"a"}]}}]}]}]},null]},null]}},"sourceSpan":{"start":[197,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Internal.purs","end":[197,58]}},{"children":[{"comments":null,"title":"nondetTFunctor","info":{"declType":"instance","dependencies":[{"constraintAnn":[],"constraintClass":[["Control","Monad"],"Monad"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"m"}],"constraintKindArgs":[],"constraintData":null}],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Functor"],"Functor"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Internal"],"NondetT"]},{"annotation":[],"tag":"TypeVar","contents":"m"}]}]}},"sourceSpan":{"start":[247,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Internal.purs","end":[248,43]}},{"comments":null,"title":"nondetTApply","info":{"declType":"instance","dependencies":[{"constraintAnn":[],"constraintClass":[["Control","Monad"],"Monad"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"m"}],"constraintKindArgs":[],"constraintData":null}],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Control","Apply"],"Apply"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Internal"],"NondetT"]},{"annotation":[],"tag":"TypeVar","contents":"m"}]}]}},"sourceSpan":{"start":[250,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Internal.purs","end":[251,56]}},{"comments":null,"title":"nondetTApplicative","info":{"declType":"instance","dependencies":[{"constraintAnn":[],"constraintClass":[["Control","Monad"],"Monad"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"m"}],"constraintKindArgs":[],"constraintData":null}],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Control","Applicative"],"Applicative"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Internal"],"NondetT"]},{"annotation":[],"tag":"TypeVar","contents":"m"}]}]}},"sourceSpan":{"start":[252,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Internal.purs","end":[253,26]}},{"comments":null,"title":"nondetTBind","info":{"declType":"instance","dependencies":[{"constraintAnn":[],"constraintClass":[["Control","Monad"],"Monad"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"m"}],"constraintKindArgs":[],"constraintData":null}],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Control","Bind"],"Bind"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Internal"],"NondetT"]},{"annotation":[],"tag":"TypeVar","contents":"m"}]}]}},"sourceSpan":{"start":[255,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Internal.purs","end":[256,58]}},{"comments":null,"title":"nondetTMonad","info":{"declType":"instance","dependencies":[{"constraintAnn":[],"constraintClass":[["Control","Monad"],"Monad"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"m"}],"constraintKindArgs":[],"constraintData":null}],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Control","Monad"],"Monad"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Internal"],"NondetT"]},{"annotation":[],"tag":"TypeVar","contents":"m"}]}]}},"sourceSpan":{"start":[257,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Internal.purs","end":[257,54]}},{"comments":"instance nondetTMonadZero :: Monad m => MonadZero (NondetT m)\n","title":"nondetTMonadPlus","info":{"declType":"instance","dependencies":[{"constraintAnn":[],"constraintClass":[["Control","Monad"],"Monad"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"m"}],"constraintKindArgs":[],"constraintData":null}],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Control","MonadPlus"],"MonadPlus"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Internal"],"NondetT"]},{"annotation":[],"tag":"TypeVar","contents":"m"}]}]}},"sourceSpan":{"start":[260,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Internal.purs","end":[260,62]}},{"comments":null,"title":"nondetTAlt","info":{"declType":"instance","dependencies":[{"constraintAnn":[],"constraintClass":[["Control","Monad"],"Monad"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"m"}],"constraintKindArgs":[],"constraintData":null}],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Control","Alt"],"Alt"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Internal"],"NondetT"]},{"annotation":[],"tag":"TypeVar","contents":"m"}]}]}},"sourceSpan":{"start":[262,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Internal.purs","end":[263,56]}},{"comments":null,"title":"nondetTPlus","info":{"declType":"instance","dependencies":[{"constraintAnn":[],"constraintClass":[["Control","Monad"],"Monad"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"m"}],"constraintKindArgs":[],"constraintData":null}],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Control","Plus"],"Plus"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Internal"],"NondetT"]},{"annotation":[],"tag":"TypeVar","contents":"m"}]}]}},"sourceSpan":{"start":[265,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Internal.purs","end":[266,24]}},{"comments":null,"title":"nondetTAlternative","info":{"declType":"instance","dependencies":[{"constraintAnn":[],"constraintClass":[["Control","Monad"],"Monad"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"m"}],"constraintKindArgs":[],"constraintData":null}],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Control","Alternative"],"Alternative"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Internal"],"NondetT"]},{"annotation":[],"tag":"TypeVar","contents":"m"}]}]}},"sourceSpan":{"start":[268,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Internal.purs","end":[268,66]}},{"comments":null,"title":"nondetTMonadTrans","info":{"declType":"instance","dependencies":[],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Control","Monad","Trans","Class"],"MonadTrans"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Internal"],"NondetT"]}]}},"sourceSpan":{"start":[270,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Internal.purs","end":[271,35]}}],"comments":null,"title":"NondetT","info":{"declType":"data","dataDeclType":"newtype","typeArguments":[["m",null],["a",null]]},"sourceSpan":{"start":[242,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Internal.purs","end":[242,59]}},{"children":[],"comments":null,"title":"cut","info":{"declType":"value","type":{"annotation":[],"tag":"ForAll","contents":["m",{"annotation":[],"tag":"ConstrainedType","contents":[{"constraintAnn":[],"constraintClass":[["Control","Monad"],"Monad"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"m"}],"constraintKindArgs":[],"constraintData":null},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Internal"],"NondetT"]},{"annotation":[],"tag":"TypeVar","contents":"m"}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]},null]}},"sourceSpan":{"start":[280,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Internal.purs","end":[280,43]}},{"children":[],"comments":null,"title":"(<!>)","info":{"declType":"alias","alias":[["Options","Applicative","Internal"],{"Right":{"Left":{"Ident":"nondetTAltOp"}}}],"fixity":{"associativity":"infixl","precedence":99}},"sourceSpan":{"start":[273,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Internal.purs","end":[273,30]}},{"children":[],"comments":null,"title":"nondetTAltOp","info":{"declType":"value","type":{"annotation":[],"tag":"ForAll","contents":["a",{"annotation":[],"tag":"ForAll","contents":["m",{"annotation":[],"tag":"ConstrainedType","contents":[{"constraintAnn":[],"constraintClass":[["Control","Monad"],"Monad"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"m"}],"constraintKindArgs":[],"constraintData":null},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Internal"],"NondetT"]},{"annotation":[],"tag":"TypeVar","contents":"m"}]},{"annotation":[],"tag":"TypeVar","contents":"a"}]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Internal"],"NondetT"]},{"annotation":[],"tag":"TypeVar","contents":"m"}]},{"annotation":[],"tag":"TypeVar","contents":"a"}]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Internal"],"NondetT"]},{"annotation":[],"tag":"TypeVar","contents":"m"}]},{"annotation":[],"tag":"TypeVar","contents":"a"}]}]}]}]},null]},null]}},"sourceSpan":{"start":[274,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Internal.purs","end":[274,81]}},{"children":[],"comments":null,"title":"disamb","info":{"declType":"value","type":{"annotation":[],"tag":"ForAll","contents":["m",{"annotation":[],"tag":"ForAll","contents":["a",{"annotation":[],"tag":"ConstrainedType","contents":[{"constraintAnn":[],"constraintClass":[["Control","Monad"],"Monad"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"m"}],"constraintKindArgs":[],"constraintData":null},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Internal"],"NondetT"]},{"annotation":[],"tag":"TypeVar","contents":"m"}]},{"annotation":[],"tag":"TypeVar","contents":"a"}]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeVar","contents":"m"},{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"annotation":[],"tag":"TypeVar","contents":"a"}]}}]}]}]}]},null]},null]}},"sourceSpan":{"start":[283,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Internal.purs","end":[283,71]}}]},{"reExports":[],"name":"Options.Applicative.Internal.Utils","comments":null,"declarations":[{"children":[],"comments":null,"title":"unLines","info":{"declType":"value","type":{"annotation":[],"tag":"ForAll","contents":["f",{"annotation":[],"tag":"ConstrainedType","contents":[{"constraintAnn":[],"constraintClass":[["Data","Foldable"],"Foldable"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"f"}],"constraintKindArgs":[],"constraintData":null},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeVar","contents":"f"},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}]},null]}},"sourceSpan":{"start":[24,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Internal/Utils.purs","end":[24,54]}},{"children":[],"comments":null,"title":"unWords","info":{"declType":"value","type":{"annotation":[],"tag":"ForAll","contents":["f",{"annotation":[],"tag":"ConstrainedType","contents":[{"constraintAnn":[],"constraintClass":[["Data","Foldable"],"Foldable"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"f"}],"constraintKindArgs":[],"constraintData":null},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeVar","contents":"f"},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}]},null]}},"sourceSpan":{"start":[27,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Internal/Utils.purs","end":[27,54]}},{"children":[],"comments":null,"title":"lines","info":{"declType":"value","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Array"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}]}},"sourceSpan":{"start":[30,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Internal/Utils.purs","end":[30,32]}},{"children":[],"comments":null,"title":"words","info":{"declType":"value","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Array"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}]}},"sourceSpan":{"start":[34,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Internal/Utils.purs","end":[34,32]}},{"children":[],"comments":null,"title":"whitespaceRegex","info":{"declType":"value","type":{"annotation":[],"tag":"TypeConstructor","contents":[["Data","String","Regex"],"Regex"]}},"sourceSpan":{"start":[38,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Internal/Utils.purs","end":[38,25]}},{"children":[],"comments":null,"title":"startsWith","info":{"declType":"value","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","String","Pattern"],"Pattern"]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}]}},"sourceSpan":{"start":[44,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Internal/Utils.purs","end":[44,50]}},{"children":[],"comments":null,"title":"apApplyFlipped","info":{"declType":"value","type":{"annotation":[],"tag":"ForAll","contents":["f",{"annotation":[],"tag":"ForAll","contents":["b",{"annotation":[],"tag":"ForAll","contents":["a",{"annotation":[],"tag":"ConstrainedType","contents":[{"constraintAnn":[],"constraintClass":[["Control","Apply"],"Apply"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"f"}],"constraintKindArgs":[],"constraintData":null},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeVar","contents":"f"},{"annotation":[],"tag":"TypeVar","contents":"a"}]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeVar","contents":"f"},{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeVar","contents":"a"}]},{"annotation":[],"tag":"TypeVar","contents":"b"}]}}]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeVar","contents":"f"},{"annotation":[],"tag":"TypeVar","contents":"b"}]}]}]}]},null]},null]},null]}},"sourceSpan":{"start":[49,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Internal/Utils.purs","end":[49,68]}},{"children":[],"comments":null,"title":"(<**>)","info":{"declType":"alias","alias":[["Options","Applicative","Internal","Utils"],{"Right":{"Left":{"Ident":"apApplyFlipped"}}}],"fixity":{"associativity":"infixl","precedence":4}},"sourceSpan":{"start":[47,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Internal/Utils.purs","end":[47,32]}}]},{"reExports":[{"moduleName":{"package":null,"item":["Options","Applicative","Help","Types"]},"declarations":[{"children":[{"comments":null,"title":"ParserHelp","info":{"arguments":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"annotation":[],"tag":"RCons","contents":["helpError",{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Help","Chunk"],"Chunk"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]}]},{"annotation":[],"tag":"RCons","contents":["helpSuggestions",{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Help","Chunk"],"Chunk"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]}]},{"annotation":[],"tag":"RCons","contents":["helpHeader",{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Help","Chunk"],"Chunk"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]}]},{"annotation":[],"tag":"RCons","contents":["helpUsage",{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Help","Chunk"],"Chunk"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]}]},{"annotation":[],"tag":"RCons","contents":["helpBody",{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Help","Chunk"],"Chunk"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]}]},{"annotation":[],"tag":"RCons","contents":["helpFooter",{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Help","Chunk"],"Chunk"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]}]},{"annotation":[],"tag":"REmpty"}]}]}]}]}]}]}]}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"newtypeParserHelp","info":{"declType":"instance","dependencies":[],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Newtype"],"Newtype"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Help","Types"],"ParserHelp"]}]},{"annotation":[],"tag":"TypeWildcard","contents":null}]}},"sourceSpan":{"start":[20,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Help/Types.purs","end":[20,58]}},{"comments":null,"title":"parserHelpShow","info":{"declType":"instance","dependencies":[],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Show"],"Show"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Help","Types"],"ParserHelp"]}]}},"sourceSpan":{"start":[21,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Help/Types.purs","end":[22,32]}},{"comments":null,"title":"parserHelpSemigroup","info":{"declType":"instance","dependencies":[],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Semigroup"],"Semigroup"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Help","Types"],"ParserHelp"]}]}},"sourceSpan":{"start":[23,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Help/Types.purs","end":[23,68]}},{"comments":null,"title":"parserHelpMonoid","info":{"declType":"instance","dependencies":[],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Monoid"],"Monoid"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Help","Types"],"ParserHelp"]}]}},"sourceSpan":{"start":[24,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Help/Types.purs","end":[24,62]}}],"comments":null,"title":"ParserHelp","info":{"declType":"data","dataDeclType":"newtype","typeArguments":[]},"sourceSpan":{"start":[12,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Help/Types.purs","end":[19,4]}}]}],"name":"Options.Applicative.Types","comments":null,"declarations":[{"children":[{"comments":null,"title":"ErrorMsg","info":{"arguments":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"String"]}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"InfoMsg","info":{"arguments":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"String"]}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"ShowHelpText","info":{"arguments":[],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"MissingError","info":{"arguments":[{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Types"],"IsCmdStart"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Types"],"SomeParser"]}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"ExpectsArgError","info":{"arguments":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"String"]}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"UnexpectedError","info":{"arguments":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"String"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Types"],"SomeParser"]}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"parseErrorSemigroup","info":{"declType":"instance","dependencies":[],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Semigroup"],"Semigroup"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Types"],"ParseError"]}]}},"sourceSpan":{"start":[85,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Types.purs","end":[86,17]}}],"comments":null,"title":"ParseError","info":{"declType":"data","dataDeclType":"data","typeArguments":[]},"sourceSpan":{"start":[73,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Types.purs","end":[79,38]}},{"children":[{"comments":null,"title":"ParserInfo","info":{"arguments":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"annotation":[],"tag":"RCons","contents":["infoParser",{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Types"],"Parser"]},{"annotation":[],"tag":"TypeVar","contents":"a"}]},{"annotation":[],"tag":"RCons","contents":["infoFullDesc",{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]},{"annotation":[],"tag":"RCons","contents":["infoProgDesc",{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Help","Chunk"],"Chunk"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]}]},{"annotation":[],"tag":"RCons","contents":["infoHeader",{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Help","Chunk"],"Chunk"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]}]},{"annotation":[],"tag":"RCons","contents":["infoFooter",{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Help","Chunk"],"Chunk"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]}]},{"annotation":[],"tag":"RCons","contents":["infoFailureCode",{"annotation":[],"tag":"TypeConstructor","contents":[["ExitCodes"],"ExitCode"]},{"annotation":[],"tag":"RCons","contents":["infoPolicy",{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Types"],"ArgPolicy"]},{"annotation":[],"tag":"REmpty"}]}]}]}]}]}]}]}]}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"parserInfoNewtype","info":{"declType":"instance","dependencies":[],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Newtype"],"Newtype"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Types"],"ParserInfo"]},{"annotation":[],"tag":"TypeVar","contents":"a"}]}]},{"annotation":[],"tag":"TypeWildcard","contents":null}]}},"sourceSpan":{"start":[109,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Types.purs","end":[109,62]}},{"comments":null,"title":"parserInfoFunctor","info":{"declType":"instance","dependencies":[],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Functor"],"Functor"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Types"],"ParserInfo"]}]}},"sourceSpan":{"start":[110,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Types.purs","end":[111,72]}}],"comments":"A 'ParserInfo' describes a command line program, used to generate a help\nscreen. Two help modes are supported: brief and full. In brief mode, only\nan option and argument summary is displayed, while in full mode each\navailable option and command, including hidden ones, is described.\n\nA basic 'ParserInfo' with default values for fields can be created using\nthe 'info' function.\n","title":"ParserInfo","info":{"declType":"data","dataDeclType":"newtype","typeArguments":[["a",null]]},"sourceSpan":{"start":[97,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Types.purs","end":[107,4]}},{"children":[{"comments":null,"title":"ParserPrefs","info":{"arguments":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"annotation":[],"tag":"RCons","contents":["prefMultiSuffix",{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"String"]},{"annotation":[],"tag":"RCons","contents":["prefDisambiguate",{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]},{"annotation":[],"tag":"RCons","contents":["prefShowHelpOnError",{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]},{"annotation":[],"tag":"RCons","contents":["prefShowHelpOnEmpty",{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]},{"annotation":[],"tag":"RCons","contents":["prefBacktrack",{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Types"],"Backtracking"]},{"annotation":[],"tag":"RCons","contents":["prefColumns",{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Int"]},{"annotation":[],"tag":"REmpty"}]}]}]}]}]}]}]}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"parserPrefsNewtype","info":{"declType":"instance","dependencies":[],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Newtype"],"Newtype"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Types"],"ParserPrefs"]}]},{"annotation":[],"tag":"TypeWildcard","contents":null}]}},"sourceSpan":{"start":[138,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Types.purs","end":[138,60]}},{"comments":null,"title":"parserPrefsEq","info":{"declType":"instance","dependencies":[],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Eq"],"Eq"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Types"],"ParserPrefs"]}]}},"sourceSpan":{"start":[139,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Types.purs","end":[139,48]}},{"comments":null,"title":"parserPrefsGeneric","info":{"declType":"instance","dependencies":[],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Generic","Rep"],"Generic"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Types"],"ParserPrefs"]}]},{"annotation":[],"tag":"TypeWildcard","contents":null}]}},"sourceSpan":{"start":[140,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Types.purs","end":[140,60]}},{"comments":null,"title":"parserPrefsShow","info":{"declType":"instance","dependencies":[],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Show"],"Show"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Types"],"ParserPrefs"]}]}},"sourceSpan":{"start":[141,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Types.purs","end":[141,70]}}],"comments":"Global preferences for a top-level 'Parser'.\nA 'ParserPrefs' contains general preferences for all command-line\noptions, and can be built with the 'prefs' function.\n","title":"ParserPrefs","info":{"declType":"data","dataDeclType":"newtype","typeArguments":[]},"sourceSpan":{"start":[125,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Types.purs","end":[137,4]}},{"children":[{"comments":null,"title":"Option","info":{"arguments":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"annotation":[],"tag":"RCons","contents":["optMain",{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Types"],"OptReader"]},{"annotation":[],"tag":"TypeVar","contents":"a"}]},{"annotation":[],"tag":"RCons","contents":["optProps",{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Types"],"OptProperties"]},{"annotation":[],"tag":"REmpty"}]}]}]}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"optionNewtype","info":{"declType":"instance","dependencies":[],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Newtype"],"Newtype"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Types"],"Option"]},{"annotation":[],"tag":"TypeVar","contents":"a"}]}]},{"annotation":[],"tag":"TypeWildcard","contents":null}]}},"sourceSpan":{"start":[187,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Types.purs","end":[187,54]}},{"comments":null,"title":"optionShow","info":{"declType":"instance","dependencies":[],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Show"],"Show"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Types"],"Option"]},{"annotation":[],"tag":"TypeVar","contents":"a"}]}]}},"sourceSpan":{"start":[194,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Types.purs","end":[195,97]}},{"comments":null,"title":"optionFunctor","info":{"declType":"instance","dependencies":[],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Functor"],"Functor"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Types"],"Option"]}]}},"sourceSpan":{"start":[197,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Types.purs","end":[198,58]}}],"comments":"A single option of a parser.\n","title":"Option","info":{"declType":"data","dataDeclType":"newtype","typeArguments":[["a",null]]},"sourceSpan":{"start":[183,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Types.purs","end":[186,4]}},{"children":[{"comments":null,"title":"OptShort","info":{"arguments":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Char"]}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"OptLong","info":{"arguments":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"String"]}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"optNameEq","info":{"declType":"instance","dependencies":[],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Eq"],"Eq"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Types"],"OptName"]}]}},"sourceSpan":{"start":[147,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Types.purs","end":[147,40]}},{"comments":null,"title":"optNameOrd","info":{"declType":"instance","dependencies":[],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Ord"],"Ord"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Types"],"OptName"]}]}},"sourceSpan":{"start":[148,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Types.purs","end":[148,42]}},{"comments":null,"title":"optNameGeneric","info":{"declType":"instance","dependencies":[],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Generic","Rep"],"Generic"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Types"],"OptName"]}]},{"annotation":[],"tag":"TypeWildcard","contents":null}]}},"sourceSpan":{"start":[149,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Types.purs","end":[149,52]}},{"comments":null,"title":"optNameShow","info":{"declType":"instance","dependencies":[],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Show"],"Show"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Types"],"OptName"]}]}},"sourceSpan":{"start":[150,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Types.purs","end":[150,62]}}],"comments":null,"title":"OptName","info":{"declType":"data","dataDeclType":"data","typeArguments":[]},"sourceSpan":{"start":[144,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Types.purs","end":[145,30]}},{"children":[{"comments":null,"title":"OptReader","info":{"arguments":[{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Array"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Types"],"OptName"]}]}},{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Types"],"CReader"]},{"annotation":[],"tag":"TypeVar","contents":"a"}]}},{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Types"],"ParseError"]}]}}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"FlagReader","info":{"arguments":[{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Array"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Types"],"OptName"]}]}},{"annotation":[],"tag":"TypeVar","contents":"a"}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"ArgReader","info":{"arguments":[{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Types"],"CReader"]},{"annotation":[],"tag":"TypeVar","contents":"a"}]}}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"CmdReader","info":{"arguments":[{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}},{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Array"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}},{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Types"],"ParserInfo"]},{"annotation":[],"tag":"TypeVar","contents":"a"}]}}]}]}}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"optReaderFunctor","info":{"declType":"instance","dependencies":[],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Functor"],"Functor"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Types"],"OptReader"]}]}},"sourceSpan":{"start":[264,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Types.purs","end":[268,68]}}],"comments":"An 'OptReader' defines whether an option matches an command line argument.\n","title":"OptReader","info":{"declType":"data","dataDeclType":"data","typeArguments":[["a",null]]},"sourceSpan":{"start":[254,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Types.purs","end":[261,77]}},{"children":[{"comments":null,"title":"OptProperties","info":{"arguments":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"annotation":[],"tag":"RCons","contents":["propVisibility",{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Types"],"OptVisibility"]},{"annotation":[],"tag":"RCons","contents":["propHelp",{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Help","Chunk"],"Chunk"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]}]},{"annotation":[],"tag":"RCons","contents":["propMetaVar",{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"String"]},{"annotation":[],"tag":"RCons","contents":["propShowDefault",{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"annotation":[],"tag":"RCons","contents":["propDescMod",{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]}]}}]},{"annotation":[],"tag":"REmpty"}]}]}]}]}]}]}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"optPropertiesNewtype","info":{"declType":"instance","dependencies":[],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Newtype"],"Newtype"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Types"],"OptProperties"]}]},{"annotation":[],"tag":"TypeWildcard","contents":null}]}},"sourceSpan":{"start":[172,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Types.purs","end":[172,64]}},{"comments":null,"title":"optPropertiesShow","info":{"declType":"instance","dependencies":[],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Show"],"Show"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Types"],"OptProperties"]}]}},"sourceSpan":{"start":[173,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Types.purs","end":[180,13]}}],"comments":"Specification for an individual parser option.\n","title":"OptProperties","info":{"declType":"data","dataDeclType":"newtype","typeArguments":[]},"sourceSpan":{"start":[165,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Types.purs","end":[171,4]}},{"children":[{"comments":null,"title":"Internal","info":{"arguments":[],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"Hidden","info":{"arguments":[],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"Visible","info":{"arguments":[],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"optVisibilityEq","info":{"declType":"instance","dependencies":[],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Eq"],"Eq"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Types"],"OptVisibility"]}]}},"sourceSpan":{"start":[159,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Types.purs","end":[159,52]}},{"comments":null,"title":"optVisibilityOrd","info":{"declType":"instance","dependencies":[],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Ord"],"Ord"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Types"],"OptVisibility"]}]}},"sourceSpan":{"start":[160,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Types.purs","end":[160,54]}},{"comments":null,"title":"optVisibilityGeneric","info":{"declType":"instance","dependencies":[],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Generic","Rep"],"Generic"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Types"],"OptVisibility"]}]},{"annotation":[],"tag":"TypeWildcard","contents":null}]}},"sourceSpan":{"start":[161,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Types.purs","end":[161,64]}},{"comments":null,"title":"optVisibilityShow","info":{"declType":"instance","dependencies":[],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Show"],"Show"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Types"],"OptVisibility"]}]}},"sourceSpan":{"start":[162,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Types.purs","end":[162,74]}}],"comments":"Visibility of an option in the help text.\n","title":"OptVisibility","info":{"declType":"data","dataDeclType":"data","typeArguments":[]},"sourceSpan":{"start":[154,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Types.purs","end":[157,12]}},{"children":[{"comments":null,"title":"Backtrack","info":{"arguments":[],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"NoBacktrack","info":{"arguments":[],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"SubparserInline","info":{"arguments":[],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"backtrackingEq","info":{"declType":"instance","dependencies":[],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Eq"],"Eq"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Types"],"Backtracking"]}]}},"sourceSpan":{"start":[118,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Types.purs","end":[118,50]}},{"comments":null,"title":"backtrackingGeneric","info":{"declType":"instance","dependencies":[],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Generic","Rep"],"Generic"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Types"],"Backtracking"]}]},{"annotation":[],"tag":"TypeWildcard","contents":null}]}},"sourceSpan":{"start":[119,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Types.purs","end":[119,62]}},{"comments":null,"title":"backtrackingShow","info":{"declType":"instance","dependencies":[],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Show"],"Show"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Types"],"Backtracking"]}]}},"sourceSpan":{"start":[120,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Types.purs","end":[120,72]}}],"comments":null,"title":"Backtracking","info":{"declType":"data","dataDeclType":"data","typeArguments":[]},"sourceSpan":{"start":[113,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Types.purs","end":[116,20]}},{"children":[{"comments":null,"title":"ReadM","info":{"arguments":[{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Control","Monad","Reader","Trans"],"ReaderT"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Control","Monad","Except"],"Except"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Types"],"ParseError"]}]}}]},{"annotation":[],"tag":"TypeVar","contents":"a"}]}}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"readMNewtype","info":{"declType":"instance","dependencies":[],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Newtype"],"Newtype"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Types"],"ReadM"]},{"annotation":[],"tag":"TypeVar","contents":"a"}]}]},{"annotation":[],"tag":"TypeWildcard","contents":null}]}},"sourceSpan":{"start":[212,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Types.purs","end":[212,52]}},{"comments":null,"title":"readMFunctor","info":{"declType":"instance","dependencies":[],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Functor"],"Functor"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Types"],"ReadM"]}]}},"sourceSpan":{"start":[213,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Types.purs","end":[214,36]}},{"comments":null,"title":"readMApply","info":{"declType":"instance","dependencies":[],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Control","Apply"],"Apply"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Types"],"ReadM"]}]}},"sourceSpan":{"start":[216,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Types.purs","end":[217,46]}},{"comments":null,"title":"readMApplicative","info":{"declType":"instance","dependencies":[],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Control","Applicative"],"Applicative"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Types"],"ReadM"]}]}},"sourceSpan":{"start":[219,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Types.purs","end":[220,24]}},{"comments":null,"title":"readMAlt","info":{"declType":"instance","dependencies":[],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Control","Alt"],"Alt"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Types"],"ReadM"]}]}},"sourceSpan":{"start":[222,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Types.purs","end":[223,44]}},{"comments":null,"title":"readMBind","info":{"declType":"instance","dependencies":[],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Control","Bind"],"Bind"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Types"],"ReadM"]}]}},"sourceSpan":{"start":[225,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Types.purs","end":[226,50]}},{"comments":null,"title":"readMMonad","info":{"declType":"instance","dependencies":[],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Control","Monad"],"Monad"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Types"],"ReadM"]}]}},"sourceSpan":{"start":[228,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Types.purs","end":[228,35]}},{"comments":null,"title":"readMMonadFail","info":{"declType":"instance","dependencies":[],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Control","Monad","Error","Class"],"MonadThrow"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Types"],"ReadM"]}]}},"sourceSpan":{"start":[230,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Types.purs","end":[231,27]}}],"comments":"A reader is used by the 'option' and 'argument' builders to parse\nthe data passed by the user on the command line into a data type.\n\nThe most common are 'str' which is used for 'String', there are\nreaders for `Int`, `Number`, `Boolean`.\n\nMore complex types can use the 'eitherReader' or 'maybeReader'\nfunctions to pattern match or use a more expressive parser like a\nmember of the 'Parsec' family.\nA newtype over 'ReaderT String Except', used by option readers.\n","title":"ReadM","info":{"declType":"data","dataDeclType":"newtype","typeArguments":[["a",null]]},"sourceSpan":{"start":[210,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Types.purs","end":[210,63]}},{"children":[],"comments":"Return the value being read.\n","title":"readerAsk","info":{"declType":"value","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Types"],"ReadM"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}},"sourceSpan":{"start":[234,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Types.purs","end":[234,26]}},{"children":[],"comments":"Abort option reader by exiting with a 'ParseError'.\n","title":"readerAbort","info":{"declType":"value","type":{"annotation":[],"tag":"ForAll","contents":["a",{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Types"],"ParseError"]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Types"],"ReadM"]},{"annotation":[],"tag":"TypeVar","contents":"a"}]}]},null]}},"sourceSpan":{"start":[238,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Types.purs","end":[238,47]}},{"children":[],"comments":"Abort option reader by exiting with an error message.\n","title":"readerError","info":{"declType":"value","type":{"annotation":[],"tag":"ForAll","contents":["a",{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Types"],"ReadM"]},{"annotation":[],"tag":"TypeVar","contents":"a"}]}]},null]}},"sourceSpan":{"start":[242,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Types.purs","end":[242,43]}},{"children":[{"comments":null,"title":"CReader","info":{"arguments":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"annotation":[],"tag":"RCons","contents":["crCompleter",{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Types"],"Completer"]},{"annotation":[],"tag":"RCons","contents":["crReader",{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Types"],"ReadM"]},{"annotation":[],"tag":"TypeVar","contents":"a"}]},{"annotation":[],"tag":"REmpty"}]}]}]}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"newtypeCReader","info":{"declType":"instance","dependencies":[],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Newtype"],"Newtype"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Types"],"CReader"]},{"annotation":[],"tag":"TypeVar","contents":"a"}]}]},{"annotation":[],"tag":"TypeWildcard","contents":null}]}},"sourceSpan":{"start":[249,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Types.purs","end":[249,56]}},{"comments":null,"title":"cReaderFunctor","info":{"declType":"instance","dependencies":[],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Functor"],"Functor"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Types"],"CReader"]}]}},"sourceSpan":{"start":[250,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Types.purs","end":[251,61]}}],"comments":null,"title":"CReader","info":{"declType":"data","dataDeclType":"newtype","typeArguments":[["a",null]]},"sourceSpan":{"start":[245,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Types.purs","end":[247,26]}},{"children":[{"comments":null,"title":"NilP","info":{"arguments":[{"annotation":[],"tag":"TypeVar","contents":"a"}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"OptP","info":{"arguments":[{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Types"],"Option"]},{"annotation":[],"tag":"TypeVar","contents":"a"}]}}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"MultP","info":{"arguments":[{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Exists"],"Exists"]},{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Types"],"MultPE"]},{"annotation":[],"tag":"TypeVar","contents":"a"}]}}]}}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"AltP","info":{"arguments":[{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Types"],"Parser"]},{"annotation":[],"tag":"TypeVar","contents":"a"}]}},{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Types"],"Parser"]},{"annotation":[],"tag":"TypeVar","contents":"a"}]}}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"BindP","info":{"arguments":[{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Control","Monad","Free"],"Free"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Types"],"Parser"]}]},{"annotation":[],"tag":"TypeVar","contents":"a"}]}}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"parserFunctor","info":{"declType":"instance","dependencies":[],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Functor"],"Functor"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Types"],"Parser"]}]}},"sourceSpan":{"start":[317,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Types.purs","end":[322,36]}},{"comments":null,"title":"parserApply","info":{"declType":"instance","dependencies":[],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Control","Apply"],"Apply"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Types"],"Parser"]}]}},"sourceSpan":{"start":[324,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Types.purs","end":[325,44]}},{"comments":null,"title":"parserApplicative","info":{"declType":"instance","dependencies":[],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Control","Applicative"],"Applicative"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Types"],"Parser"]}]}},"sourceSpan":{"start":[327,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Types.purs","end":[328,14]}},{"comments":null,"title":"parserAlt","info":{"declType":"instance","dependencies":[],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Control","Alt"],"Alt"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Types"],"Parser"]}]}},"sourceSpan":{"start":[330,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Types.purs","end":[331,13]}}],"comments":"\nA 'Parser' is the core type in optparse-applicative. A value of type\nParser a@ represents a specification for a set of options, which will\nyield a value of type a when the command line arguments are successfully\nparsed.\n\nThere are several types of primitive 'Parser'.\n\n* Flags: simple no-argument options. When a flag is encountered on the\ncommand line, its value is returned.\n\n* Options: options with an argument. An option can define a /reader/,\nwhich converts its argument from String to the desired value, or throws a\nparse error if the argument does not validate correctly.\n\n* Arguments: positional arguments, validated in the same way as option\narguments.\n\n* Commands. A command defines a completely independent sub-parser. When a\ncommand is encountered, the whole command line is passed to the\ncorresponding parser.\n\n** Parser builders\n\nEach parser builder takes an option modifier. A modifier can be created by\ncomposing the basic modifiers provided by here using the 'Monoid' operations\nmempty' and 'append', or their aliases 'idm' and '<>'.\n\nFor example:\n\n> out = strOption\n>     ( long \"output\"\n>    <> short 'o'\n>    <> metavar \"FILENAME\" )\n\ncreates a parser for an option called \\\"output\\\".\n","title":"Parser","info":{"declType":"data","dataDeclType":"data","typeArguments":[["a",null]]},"sourceSpan":{"start":[308,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Types.purs","end":[313,26]}},{"children":[{"comments":null,"title":"MultPE","info":{"arguments":[{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Types"],"Parser"]},{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeVar","contents":"x"}]},{"annotation":[],"tag":"TypeVar","contents":"a"}]}}]}},{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Types"],"Parser"]},{"annotation":[],"tag":"TypeVar","contents":"x"}]}}],"declType":"dataConstructor"},"sourceSpan":null}],"comments":null,"title":"MultPE","info":{"declType":"data","dataDeclType":"data","typeArguments":[["a",null],["x",null]]},"sourceSpan":{"start":[315,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Types.purs","end":[315,54]}},{"children":[{"comments":null,"title":"Completer","info":{"arguments":[{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Array"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}}]}]}}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"newtypeCompleter","info":{"declType":"instance","dependencies":[],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Newtype"],"Newtype"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Types"],"Completer"]}]},{"annotation":[],"tag":"TypeWildcard","contents":null}]}},"sourceSpan":{"start":[416,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Types.purs","end":[416,56]}},{"comments":null,"title":"completerSemigroup","info":{"declType":"instance","dependencies":[],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Semigroup"],"Semigroup"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Types"],"Completer"]}]}},"sourceSpan":{"start":[421,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Types.purs","end":[423,45]}},{"comments":null,"title":"completerMonoid","info":{"declType":"instance","dependencies":[],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Monoid"],"Monoid"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Types"],"Completer"]}]}},"sourceSpan":{"start":[425,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Types.purs","end":[426,37]}}],"comments":"optparse-applicative supplies a rich completion system for bash,\nzsh, and fish shells.\n\n'Completer' functions are used for option and argument to complete\ntheir values.\n\nUse the 'completer' builder to use these.\nThe 'action' and 'completeWith' builders are also provided for\nconvenience, to use 'bashCompleter' and 'listCompleter' as a 'Mod'.\n","title":"Completer","info":{"declType":"data","dataDeclType":"newtype","typeArguments":[]},"sourceSpan":{"start":[415,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Types.purs","end":[415,64]}},{"children":[],"comments":"Smart constructor for a 'Completer'\n","title":"mkCompleter","info":{"declType":"value","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Array"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}}]}]}}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Types"],"Completer"]}]}},"sourceSpan":{"start":[418,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Types.purs","end":[418,62]}},{"children":[{"comments":null,"title":"CompletionResult","info":{"arguments":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"annotation":[],"tag":"RCons","contents":["execCompletion",{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}]},{"annotation":[],"tag":"REmpty"}]}]}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"newtypeCompletionResult","info":{"declType":"instance","dependencies":[],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Newtype"],"Newtype"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Types"],"CompletionResult"]}]},{"annotation":[],"tag":"TypeWildcard","contents":null}]}},"sourceSpan":{"start":[431,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Types.purs","end":[431,70]}},{"comments":null,"title":"completionResultShow","info":{"declType":"instance","dependencies":[],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Show"],"Show"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Types"],"CompletionResult"]}]}},"sourceSpan":{"start":[432,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Types.purs","end":[433,43]}}],"comments":null,"title":"CompletionResult","info":{"declType":"data","dataDeclType":"newtype","typeArguments":[]},"sourceSpan":{"start":[428,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Types.purs","end":[429,48]}},{"children":[{"comments":null,"title":"ParserFailure","info":{"arguments":[{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Tuple","Nested"],"Tuple3"]},{"annotation":[],"tag":"TypeVar","contents":"h"}]},{"annotation":[],"tag":"TypeConstructor","contents":[["ExitCodes"],"ExitCode"]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]}]}}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"newtypeParserFailure","info":{"declType":"instance","dependencies":[],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Newtype"],"Newtype"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Types"],"ParserFailure"]},{"annotation":[],"tag":"TypeVar","contents":"h"}]}]},{"annotation":[],"tag":"TypeWildcard","contents":null}]}},"sourceSpan":{"start":[437,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Types.purs","end":[437,68]}},{"comments":null,"title":"parserFailureShow","info":{"declType":"instance","dependencies":[],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Show"],"Show"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Types"],"ParserFailure"]},{"annotation":[],"tag":"TypeVar","contents":"h"}]}]}},"sourceSpan":{"start":[439,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Types.purs","end":[440,40]}},{"comments":null,"title":"parserFailureFunctor","info":{"declType":"instance","dependencies":[],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Functor"],"Functor"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Types"],"ParserFailure"]}]}},"sourceSpan":{"start":[442,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Types.purs","end":[445,35]}}],"comments":null,"title":"ParserFailure","info":{"declType":"data","dataDeclType":"newtype","typeArguments":[["h",null]]},"sourceSpan":{"start":[435,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Types.purs","end":[435,74]}},{"children":[{"comments":null,"title":"Success","info":{"arguments":[{"annotation":[],"tag":"TypeVar","contents":"a"}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"Failure","info":{"arguments":[{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Types"],"ParserFailure"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Help","Types"],"ParserHelp"]}]}}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"CompletionInvoked","info":{"arguments":[{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Types"],"CompletionResult"]}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"parserResultGeneric","info":{"declType":"instance","dependencies":[],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Generic","Rep"],"Generic"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Types"],"ParserResult"]},{"annotation":[],"tag":"TypeVar","contents":"a"}]}]},{"annotation":[],"tag":"TypeWildcard","contents":null}]}},"sourceSpan":{"start":[452,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Types.purs","end":[452,66]}},{"comments":null,"title":"parserResultShow","info":{"declType":"instance","dependencies":[{"constraintAnn":[],"constraintClass":[["Data","Show"],"Show"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"a"}],"constraintKindArgs":[],"constraintData":null}],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Show"],"Show"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Types"],"ParserResult"]},{"annotation":[],"tag":"TypeVar","contents":"a"}]}]}},"sourceSpan":{"start":[453,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Types.purs","end":[453,86]}},{"comments":null,"title":"parserResultFunctor","info":{"declType":"instance","dependencies":[],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Functor"],"Functor"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Types"],"ParserResult"]}]}},"sourceSpan":{"start":[455,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Types.purs","end":[458,52]}},{"comments":null,"title":"parserResultApply","info":{"declType":"instance","dependencies":[],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Control","Apply"],"Apply"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Types"],"ParserResult"]}]}},"sourceSpan":{"start":[465,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Types.purs","end":[468,54]}},{"comments":null,"title":"parserResultApplicative","info":{"declType":"instance","dependencies":[],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Control","Applicative"],"Applicative"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Types"],"ParserResult"]}]}},"sourceSpan":{"start":[470,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Types.purs","end":[471,17]}},{"comments":null,"title":"parserResultBind","info":{"declType":"instance","dependencies":[],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Control","Bind"],"Bind"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Types"],"ParserResult"]}]}},"sourceSpan":{"start":[473,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Types.purs","end":[476,53]}},{"comments":null,"title":"parserResultMonad","info":{"declType":"instance","dependencies":[],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Control","Monad"],"Monad"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Types"],"ParserResult"]}]}},"sourceSpan":{"start":[478,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Types.purs","end":[478,49]}}],"comments":"Result of 'execParserPure'.\n","title":"ParserResult","info":{"declType":"data","dataDeclType":"data","typeArguments":[["a",null]]},"sourceSpan":{"start":[448,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Types.purs","end":[451,39]}},{"children":[],"comments":null,"title":"overFailure","info":{"declType":"value","type":{"annotation":[],"tag":"ForAll","contents":["a",{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Help","Types"],"ParserHelp"]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Help","Types"],"ParserHelp"]}]}}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Types"],"ParserResult"]},{"annotation":[],"tag":"TypeVar","contents":"a"}]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Types"],"ParserResult"]},{"annotation":[],"tag":"TypeVar","contents":"a"}]}]}]},null]}},"sourceSpan":{"start":[460,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Types.purs","end":[461,48]}},{"children":[],"comments":null,"title":"Args","info":{"arguments":[],"declType":"typeSynonym","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","List","Types"],"List"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}},"sourceSpan":{"start":[480,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Types.purs","end":[480,24]}},{"children":[{"comments":null,"title":"Intersperse","info":{"arguments":[],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"NoIntersperse","info":{"arguments":[],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"AllPositionals","info":{"arguments":[],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"ForwardOptions","info":{"arguments":[],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"argPolicyEq","info":{"declType":"instance","dependencies":[],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Eq"],"Eq"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Types"],"ArgPolicy"]}]}},"sourceSpan":{"start":[506,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Types.purs","end":[506,44]}},{"comments":null,"title":"argPolicyOrd","info":{"declType":"instance","dependencies":[],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Ord"],"Ord"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Types"],"ArgPolicy"]}]}},"sourceSpan":{"start":[507,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Types.purs","end":[507,46]}},{"comments":null,"title":"argPolicyGeneric","info":{"declType":"instance","dependencies":[],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Generic","Rep"],"Generic"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Types"],"ArgPolicy"]}]},{"annotation":[],"tag":"TypeWildcard","contents":null}]}},"sourceSpan":{"start":[508,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Types.purs","end":[508,56]}},{"comments":null,"title":"argPolicyShow","info":{"declType":"instance","dependencies":[],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Show"],"Show"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Types"],"ArgPolicy"]}]}},"sourceSpan":{"start":[509,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Types.purs","end":[509,66]}}],"comments":"Policy for how to handle options within the parse\n","title":"ArgPolicy","info":{"declType":"data","dataDeclType":"data","typeArguments":[]},"sourceSpan":{"start":[483,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Types.purs","end":[499,19]}},{"children":[{"comments":null,"title":"OptHelpInfo","info":{"arguments":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"annotation":[],"tag":"RCons","contents":["hinfoMulti",{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]},{"annotation":[],"tag":"RCons","contents":["hinfoDefault",{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]},{"annotation":[],"tag":"RCons","contents":["hinfoUnreachableArgs",{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]},{"annotation":[],"tag":"REmpty"}]}]}]}]}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"newtypeOptHelpInfo","info":{"declType":"instance","dependencies":[],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Newtype"],"Newtype"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Types"],"OptHelpInfo"]}]},{"annotation":[],"tag":"TypeWildcard","contents":null}]}},"sourceSpan":{"start":[518,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Types.purs","end":[518,60]}},{"comments":null,"title":"optHelpInfoEq","info":{"declType":"instance","dependencies":[],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Eq"],"Eq"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Types"],"OptHelpInfo"]}]}},"sourceSpan":{"start":[519,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Types.purs","end":[519,48]}},{"comments":null,"title":"optHelpInfoGeneric","info":{"declType":"instance","dependencies":[],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Generic","Rep"],"Generic"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Types"],"OptHelpInfo"]}]},{"annotation":[],"tag":"TypeWildcard","contents":null}]}},"sourceSpan":{"start":[520,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Types.purs","end":[520,60]}},{"comments":null,"title":"optHelpInfoShow","info":{"declType":"instance","dependencies":[],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Show"],"Show"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Types"],"OptHelpInfo"]}]}},"sourceSpan":{"start":[521,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Types.purs","end":[521,70]}}],"comments":null,"title":"OptHelpInfo","info":{"declType":"data","dataDeclType":"newtype","typeArguments":[]},"sourceSpan":{"start":[512,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Types.purs","end":[517,4]}},{"children":[{"comments":null,"title":"Leaf","info":{"arguments":[{"annotation":[],"tag":"TypeVar","contents":"a"}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"MultNode","info":{"arguments":[{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Array"]},{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Types"],"OptTree"]},{"annotation":[],"tag":"TypeVar","contents":"a"}]}}]}}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"AltNode","info":{"arguments":[{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Array"]},{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Types"],"OptTree"]},{"annotation":[],"tag":"TypeVar","contents":"a"}]}}]}}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"optTreeGeneric","info":{"declType":"instance","dependencies":[],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Generic","Rep"],"Generic"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Types"],"OptTree"]},{"annotation":[],"tag":"TypeVar","contents":"a"}]}]},{"annotation":[],"tag":"TypeWildcard","contents":null}]}},"sourceSpan":{"start":[529,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Types.purs","end":[529,56]}},{"comments":null,"title":"optTreeShow","info":{"declType":"instance","dependencies":[{"constraintAnn":[],"constraintClass":[["Data","Show"],"Show"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"a"}],"constraintKindArgs":[],"constraintData":null}],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Show"],"Show"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Types"],"OptTree"]},{"annotation":[],"tag":"TypeVar","contents":"a"}]}]}},"sourceSpan":{"start":[530,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Types.purs","end":[530,76]}}],"comments":null,"title":"OptTree","info":{"declType":"data","dataDeclType":"data","typeArguments":[["a",null]]},"sourceSpan":{"start":[524,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Types.purs","end":[527,32]}},{"children":[{"comments":null,"title":"SomeParser","info":{"arguments":[{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Exists"],"Exists"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Types"],"Parser"]}]}}],"declType":"dataConstructor"},"sourceSpan":null}],"comments":null,"title":"SomeParser","info":{"declType":"data","dataDeclType":"data","typeArguments":[]},"sourceSpan":{"start":[188,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Types.purs","end":[188,45]}},{"children":[{"comments":null,"title":"Context","info":{"arguments":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"String"]},{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Exists"],"Exists"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Types"],"ParserInfo"]}]}}],"declType":"dataConstructor"},"sourceSpan":null}],"comments":"Subparser context, containing the 'name' of the subparser, and its parser info.\nUsed by parserFailure to display relevant usage information when parsing inside a subparser fails.\n","title":"Context","info":{"declType":"data","dataDeclType":"data","typeArguments":[]},"sourceSpan":{"start":[192,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Types.purs","end":[192,50]}},{"children":[{"comments":null,"title":"CmdStart","info":{"arguments":[],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"CmdCont","info":{"arguments":[],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"isCmdStartGeneric","info":{"declType":"instance","dependencies":[],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Generic","Rep"],"Generic"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Types"],"IsCmdStart"]}]},{"annotation":[],"tag":"TypeWildcard","contents":null}]}},"sourceSpan":{"start":[81,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Types.purs","end":[81,58]}},{"comments":null,"title":"isCmdStartShow","info":{"declType":"instance","dependencies":[],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Show"],"Show"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Types"],"IsCmdStart"]}]}},"sourceSpan":{"start":[82,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Types.purs","end":[82,68]}}],"comments":null,"title":"IsCmdStart","info":{"declType":"data","dataDeclType":"data","typeArguments":[]},"sourceSpan":{"start":[83,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Types.purs","end":[83,37]}},{"children":[],"comments":null,"title":"optVisibility","info":{"declType":"value","type":{"annotation":[],"tag":"ForAll","contents":["a",{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Types"],"Option"]},{"annotation":[],"tag":"TypeVar","contents":"a"}]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Types"],"OptVisibility"]}]},null]}},"sourceSpan":{"start":[532,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Types.purs","end":[532,53]}},{"children":[],"comments":null,"title":"optMetaVar","info":{"declType":"value","type":{"annotation":[],"tag":"ForAll","contents":["a",{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Types"],"Option"]},{"annotation":[],"tag":"TypeVar","contents":"a"}]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},null]}},"sourceSpan":{"start":[538,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Types.purs","end":[538,43]}},{"children":[],"comments":null,"title":"optHelp","info":{"declType":"value","type":{"annotation":[],"tag":"ForAll","contents":["a",{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Types"],"Option"]},{"annotation":[],"tag":"TypeVar","contents":"a"}]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Help","Chunk"],"Chunk"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]}]}]},null]}},"sourceSpan":{"start":[535,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Types.purs","end":[535,43]}},{"children":[],"comments":null,"title":"optShowDefault","info":{"declType":"value","type":{"annotation":[],"tag":"ForAll","contents":["a",{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Types"],"Option"]},{"annotation":[],"tag":"TypeVar","contents":"a"}]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}]},null]}},"sourceSpan":{"start":[541,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Types.purs","end":[541,53]}},{"children":[],"comments":null,"title":"optDescMod","info":{"declType":"value","type":{"annotation":[],"tag":"ForAll","contents":["a",{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Types"],"Option"]},{"annotation":[],"tag":"TypeVar","contents":"a"}]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]}]}}]}]},null]}},"sourceSpan":{"start":[544,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Types.purs","end":[544,57]}},{"children":[],"comments":"Parses 0 or more values using the given parser. **Note: this should\nnever be used with the `value` modifier.**\n\nFor example, by using this option\n`many (strOption (long \"arg-name\"))`\n\none could write\n```\ncommand\n# produces Nil\n\ncommand --arg-name first\n# produces (\"first\" : Nil)\n\ncommand --arg-name first --arg-name second\n# produces (\"first\" : \"second\" : Nil)\n```\n\nTo parse 1 or more values, see `some` instead.\n","title":"many","info":{"declType":"value","type":{"annotation":[],"tag":"ForAll","contents":["a",{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Types"],"Parser"]},{"annotation":[],"tag":"TypeVar","contents":"a"}]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Types"],"Parser"]},{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","List","Types"],"List"]},{"annotation":[],"tag":"TypeVar","contents":"a"}]}}]}]},null]}},"sourceSpan":{"start":[378,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Types.purs","end":[378,46]}},{"children":[],"comments":"Parses 1 or more values using the given parser. **Note: this should\nnever be used with the `value` modifier.**\n\nFor example, by using this option\n`some (strOption (long \"arg-name\"))`\n\none could write\n```\ncommand\n# produces failure message\n\ncommand --arg-name first\n# produces (NonEmptyList \"first\" Nil)\n\ncommand --arg-name first --arg-name second\n# produces (NonEmptyList \"first\" (\"second\" : Nil))\n```\n\nTo parse 0 or more values, see `many` instead.\n","title":"some","info":{"declType":"value","type":{"annotation":[],"tag":"ForAll","contents":["a",{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Types"],"Parser"]},{"annotation":[],"tag":"TypeVar","contents":"a"}]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Options","Applicative","Types"],"Parser"]},{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","List","Types"],"NonEmptyList"]},{"annotation":[],"tag":"TypeVar","contents":"a"}]}}]}]},null]}},"sourceSpan":{"start":[400,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Types.purs","end":[400,54]}},{"children":[],"comments":null,"title":"optional","info":{"declType":"value","type":{"annotation":[],"tag":"ForAll","contents":["f",{"annotation":[],"tag":"ForAll","contents":["a",{"annotation":[],"tag":"ConstrainedType","contents":[{"constraintAnn":[],"constraintClass":[["Control","Alt"],"Alt"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"f"}],"constraintKindArgs":[],"constraintData":null},{"annotation":[],"tag":"ConstrainedType","contents":[{"constraintAnn":[],"constraintClass":[["Control","Applicative"],"Applicative"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"f"}],"constraintKindArgs":[],"constraintData":null},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeVar","contents":"f"},{"annotation":[],"tag":"TypeVar","contents":"a"}]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeVar","contents":"f"},{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"annotation":[],"tag":"TypeVar","contents":"a"}]}}]}]}]}]},null]},null]}},"sourceSpan":{"start":[403,1],"name":"/home/srghma/projects/purescript-optparse/src/Options/Applicative/Types.purs","end":[403,69]}}]},{"reExports":[],"name":"Text.PrettyPrint.Leijen","comments":"This is port of https://github.com/ekmett/ansi-wl-pprint to ps without any ansi stuff as it's\nused by optparser, later we shuold use [prettyprinter](https://hackage.haskell.org/package/prettyprinter) once\n[this](https://github.com/pcapriotti/optparse-applicative/issues/273) is fixed.\nAlso see [this](https://github.com/ekmett/ansi-wl-pprint/issues/18)\n","declarations":[{"children":[],"comments":"The document @(list xs)@ comma separates the documents @xs@ and\nencloses them in square brackets. The documents are rendered\nhorizontally if that fits the page. Otherwise they are aligned\nvertically. All comma separators are put in front of the elements.\n","title":"list","info":{"declType":"value","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Array"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]}]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]}]}},"sourceSpan":{"start":[31,1],"name":"/home/srghma/projects/purescript-optparse/src/Text/PrettyPrint/Leijen.purs","end":[31,25]}},{"children":[],"comments":"The document @(tupled xs)@ comma separates the documents @xs@ and\nencloses them in parenthesis. The documents are rendered\nhorizontally if that fits the page. Otherwise they are aligned\nvertically. All comma separators are put in front of the elements.\n","title":"tupled","info":{"declType":"value","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Array"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]}]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]}]}},"sourceSpan":{"start":[38,1],"name":"/home/srghma/projects/purescript-optparse/src/Text/PrettyPrint/Leijen.purs","end":[38,27]}},{"children":[],"comments":"The document @(semiBraces xs)@ separates the documents @xs@ with\nsemicolons and encloses them in braces. The documents are rendered\nhorizontally if that fits the page. Otherwise they are aligned\nvertically. All semicolons are put in front of the elements.\n","title":"semiBraces","info":{"declType":"value","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Array"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]}]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]}]}},"sourceSpan":{"start":[45,1],"name":"/home/srghma/projects/purescript-optparse/src/Text/PrettyPrint/Leijen.purs","end":[45,31]}},{"children":[],"comments":"The document @(encloseSep l r sep xs)@ concatenates the documents\n@xs@ separated by @sep@ and encloses the resulting document by @l@\nand @r@. The documents are rendered horizontally if that fits the\npage. Otherwise they are aligned vertically. All separators are put\nin front of the elements. For example, the combinator 'list' can be\ndefined with @encloseSep@:\n\n> list xs = encloseSep lbracket rbracket comma xs\n> test    = text \"list\" <+> (list (map int [10,200,3000]))\n\nWhich is layed out with a page width of 20 as:\n\n@\nlist [10,200,3000]\n@\n\nBut when the page width is 15, it is layed out as:\n\n@\nlist [10\n     ,200\n     ,3000]\n@\n","title":"encloseSep","info":{"declType":"value","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Array"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]}]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]}]}]}]}]}},"sourceSpan":{"start":[71,1],"name":"/home/srghma/projects/purescript-optparse/src/Text/PrettyPrint/Leijen.purs","end":[71,52]}},{"children":[],"comments":"@(punctuate p xs)@ concatenates all documents in @xs@ with\ndocument @p@ except for the last document.\n\n> someText = map text [\"words\",\"in\",\"a\",\"tuple\"]\n> test     = parens (align (cat (punctuate comma someText)))\n\nThis is layed out on a page width of 20 as:\n\n@\n(words,in,a,tuple)\n@\n\nBut when the page width is 15, it is layed out as:\n\n@\n(words,\n in,\n a,\n tuple)\n@\n\n(If you want put the commas in front of their elements instead of\nat the end, you should use 'tupled' or, in general, 'encloseSep'.)\n","title":"punctuate","info":{"declType":"value","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Array"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]}]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Array"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]}]}]}]}},"sourceSpan":{"start":[104,1],"name":"/home/srghma/projects/purescript-optparse/src/Text/PrettyPrint/Leijen.purs","end":[104,43]}},{"children":[],"comments":"The document @(sep xs)@ concatenates all documents @xs@ either\nhorizontally with @(\\<+\\>)@, if it fits the page, or vertically with\n@(\\<$\\>)@.\n\n> sep xs  = group (vsep xs)\n","title":"sep","info":{"declType":"value","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Array"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]}]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]}]}},"sourceSpan":{"start":[118,1],"name":"/home/srghma/projects/purescript-optparse/src/Text/PrettyPrint/Leijen.purs","end":[118,24]}},{"children":[],"comments":null,"title":"foldr1","info":{"declType":"value","type":{"annotation":[],"tag":"ForAll","contents":["a",{"annotation":[],"tag":"ConstrainedType","contents":[{"constraintAnn":[],"constraintClass":[["Data","Monoid"],"Monoid"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"a"}],"constraintKindArgs":[],"constraintData":null},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeVar","contents":"a"}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeVar","contents":"a"}]},{"annotation":[],"tag":"TypeVar","contents":"a"}]}]}}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Array"]},{"annotation":[],"tag":"TypeVar","contents":"a"}]}]},{"annotation":[],"tag":"TypeVar","contents":"a"}]}]}]},null]}},"sourceSpan":{"start":[121,1],"name":"/home/srghma/projects/purescript-optparse/src/Text/PrettyPrint/Leijen.purs","end":[121,62]}},{"children":[],"comments":"The document @(fillSep xs)@ concatenates documents @xs@\nhorizontally with @(\\<+\\>)@ as long as its fits the page, than\ninserts a @line@ and continues doing that for all documents in\n@xs@.\n\n> fillSep xs  = foldr (</>) empty xs\n","title":"fillSep","info":{"declType":"value","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Array"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]}]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]}]}},"sourceSpan":{"start":[131,1],"name":"/home/srghma/projects/purescript-optparse/src/Text/PrettyPrint/Leijen.purs","end":[131,28]}},{"children":[],"comments":"The document @(hsep xs)@ concatenates all documents @xs@\nhorizontally with @(\\<+\\>)@.\n","title":"hsep","info":{"declType":"value","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Array"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]}]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]}]}},"sourceSpan":{"start":[136,1],"name":"/home/srghma/projects/purescript-optparse/src/Text/PrettyPrint/Leijen.purs","end":[136,25]}},{"children":[],"comments":"The document @(vsep xs)@ concatenates all documents @xs@\nvertically with @(\\<$\\>)@. If a 'group' undoes the line breaks\ninserted by @vsep@, all documents are separated with a space.\n\n> someText = map text (words (\"text to lay out\"))\n>\n> test     = text \"some\" <+> vsep someText\n\nThis is layed out as:\n\n@\nsome text\nto\nlay\nout\n@\n\nThe 'align' combinator can be used to align the documents under\ntheir first element\n\n> test     = text \"some\" <+> align (vsep someText)\n\nWhich is printed as:\n\n@\nsome text\n     to\n     lay\n     out\n@\n","title":"vsep","info":{"declType":"value","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Array"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]}]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]}]}},"sourceSpan":{"start":[169,1],"name":"/home/srghma/projects/purescript-optparse/src/Text/PrettyPrint/Leijen.purs","end":[169,25]}},{"children":[],"comments":"The document @(cat xs)@ concatenates all documents @xs@ either\nhorizontally with @(\\<\\>)@, if it fits the page, or vertically with\n@(\\<$$\\>)@.\n\n> cat xs  = group (vcat xs)\n","title":"cat","info":{"declType":"value","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Array"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]}]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]}]}},"sourceSpan":{"start":[177,1],"name":"/home/srghma/projects/purescript-optparse/src/Text/PrettyPrint/Leijen.purs","end":[177,24]}},{"children":[],"comments":"The document @(fillCat xs)@ concatenates documents @xs@\nhorizontally with @(\\<\\>)@ as long as its fits the page, than inserts\na @linebreak@ and continues doing that for all documents in @xs@.\n\n> fillCat xs  = foldr1 (<//>) empty\n","title":"fillCat","info":{"declType":"value","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Array"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]}]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]}]}},"sourceSpan":{"start":[185,1],"name":"/home/srghma/projects/purescript-optparse/src/Text/PrettyPrint/Leijen.purs","end":[185,28]}},{"children":[],"comments":"The document @(hcat xs)@ concatenates all documents @xs@\nhorizontally with @(\\<\\>)@.\n","title":"hcat","info":{"declType":"value","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Array"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]}]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]}]}},"sourceSpan":{"start":[190,1],"name":"/home/srghma/projects/purescript-optparse/src/Text/PrettyPrint/Leijen.purs","end":[190,25]}},{"children":[],"comments":"The document @(vcat xs)@ concatenates all documents @xs@\nvertically with @(\\<$$\\>)@. If a 'group' undoes the line breaks\ninserted by @vcat@, all documents are directly concatenated.\n","title":"vcat","info":{"declType":"value","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Array"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]}]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]}]}},"sourceSpan":{"start":[196,1],"name":"/home/srghma/projects/purescript-optparse/src/Text/PrettyPrint/Leijen.purs","end":[196,25]}},{"children":[],"comments":"The document @(x \\<+\\> y)@ concatenates document @x@ and @y@ with a\n@space@ in between.  (infixr 6)\n","title":"appendWithSpace","info":{"declType":"value","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]}]}]}},"sourceSpan":{"start":[201,1],"name":"/home/srghma/projects/purescript-optparse/src/Text/PrettyPrint/Leijen.purs","end":[201,37]}},{"children":[],"comments":null,"title":"(<+>)","info":{"declType":"alias","alias":[["Text","PrettyPrint","Leijen"],{"Right":{"Left":{"Ident":"appendWithSpace"}}}],"fixity":{"associativity":"infixr","precedence":6}},"sourceSpan":{"start":[203,1],"name":"/home/srghma/projects/purescript-optparse/src/Text/PrettyPrint/Leijen.purs","end":[203,32]}},{"children":[],"comments":"The document @(x \\<\\/\\> y)@ concatenates document @x@ and @y@ with a\n'softline' in between. This effectively puts @x@ and @y@ either\nnext to each other (with a @space@ in between) or underneath each\nother. (infixr 5)\n","title":"appendWithSoftline","info":{"declType":"value","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]}]}]}},"sourceSpan":{"start":[209,1],"name":"/home/srghma/projects/purescript-optparse/src/Text/PrettyPrint/Leijen.purs","end":[209,40]}},{"children":[],"comments":null,"title":"(</>)","info":{"declType":"alias","alias":[["Text","PrettyPrint","Leijen"],{"Right":{"Left":{"Ident":"appendWithSoftline"}}}],"fixity":{"associativity":"infixr","precedence":5}},"sourceSpan":{"start":[211,1],"name":"/home/srghma/projects/purescript-optparse/src/Text/PrettyPrint/Leijen.purs","end":[211,35]}},{"children":[],"comments":"The document @(x \\<\\/\\/\\> y)@ concatenates document @x@ and @y@ with\na 'softbreak' in between. This effectively puts @x@ and @y@ either\nright next to each other or underneath each other. (infixr 5)\n","title":"appendWithSoftbreak","info":{"declType":"value","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]}]}]}},"sourceSpan":{"start":[216,1],"name":"/home/srghma/projects/purescript-optparse/src/Text/PrettyPrint/Leijen.purs","end":[216,41]}},{"children":[],"comments":null,"title":"(<//>)","info":{"declType":"alias","alias":[["Text","PrettyPrint","Leijen"],{"Right":{"Left":{"Ident":"appendWithSoftbreak"}}}],"fixity":{"associativity":"infixr","precedence":5}},"sourceSpan":{"start":[218,1],"name":"/home/srghma/projects/purescript-optparse/src/Text/PrettyPrint/Leijen.purs","end":[218,37]}},{"children":[],"comments":"The document @(x \\<$\\> y)@ concatenates document @x@ and @y@ with a\n'line' in between. (infixr 5)\n","title":"appendWithLine","info":{"declType":"value","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]}]}]}},"sourceSpan":{"start":[222,1],"name":"/home/srghma/projects/purescript-optparse/src/Text/PrettyPrint/Leijen.purs","end":[222,36]}},{"children":[],"comments":null,"title":"(<$>)","info":{"declType":"alias","alias":[["Text","PrettyPrint","Leijen"],{"Right":{"Left":{"Ident":"appendWithLine"}}}],"fixity":{"associativity":"infixr","precedence":5}},"sourceSpan":{"start":[224,1],"name":"/home/srghma/projects/purescript-optparse/src/Text/PrettyPrint/Leijen.purs","end":[224,31]}},{"children":[],"comments":"The document @(x \\<$$\\> y)@ concatenates document @x@ and @y@ with\na @linebreak@ in between. (infixr 5)\n","title":"appendWithLinebreak","info":{"declType":"value","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]}]}]}},"sourceSpan":{"start":[228,1],"name":"/home/srghma/projects/purescript-optparse/src/Text/PrettyPrint/Leijen.purs","end":[228,41]}},{"children":[],"comments":null,"title":"(<$$>)","info":{"declType":"alias","alias":[["Text","PrettyPrint","Leijen"],{"Right":{"Left":{"Ident":"appendWithLinebreak"}}}],"fixity":{"associativity":"infixr","precedence":5}},"sourceSpan":{"start":[230,1],"name":"/home/srghma/projects/purescript-optparse/src/Text/PrettyPrint/Leijen.purs","end":[230,37]}},{"children":[],"comments":"The document @softline@ behaves like 'space' if the resulting\noutput fits the page, otherwise it behaves like 'line'.\n\n> softline = group line\n","title":"softline","info":{"declType":"value","type":{"annotation":[],"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]}},"sourceSpan":{"start":[236,1],"name":"/home/srghma/projects/purescript-optparse/src/Text/PrettyPrint/Leijen.purs","end":[236,16]}},{"children":[],"comments":"The document @softbreak@ behaves like 'empty' if the resulting\noutput fits the page, otherwise it behaves like 'line'.\n\n> softbreak  = group linebreak\n","title":"softbreak","info":{"declType":"value","type":{"annotation":[],"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]}},"sourceSpan":{"start":[243,1],"name":"/home/srghma/projects/purescript-optparse/src/Text/PrettyPrint/Leijen.purs","end":[243,17]}},{"children":[],"comments":"Document @(squotes x)@ encloses document @x@ with single quotes\n\\\"'\\\".\n","title":"squotes","info":{"declType":"value","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]}]}},"sourceSpan":{"start":[248,1],"name":"/home/srghma/projects/purescript-optparse/src/Text/PrettyPrint/Leijen.purs","end":[248,22]}},{"children":[],"comments":"Document @(dquotes x)@ encloses document @x@ with double quotes\n'\\\"'.\n","title":"dquotes","info":{"declType":"value","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]}]}},"sourceSpan":{"start":[253,1],"name":"/home/srghma/projects/purescript-optparse/src/Text/PrettyPrint/Leijen.purs","end":[253,22]}},{"children":[],"comments":"Document @(braces x)@ encloses document @x@ in braces, \\\"{\\\" and\n\\\"}\\\".\n","title":"braces","info":{"declType":"value","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]}]}},"sourceSpan":{"start":[258,1],"name":"/home/srghma/projects/purescript-optparse/src/Text/PrettyPrint/Leijen.purs","end":[258,21]}},{"children":[],"comments":"Document @(parens x)@ encloses document @x@ in parenthesis, \\\"(\\\"\nand \\\")\\\".\n","title":"parens","info":{"declType":"value","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]}]}},"sourceSpan":{"start":[263,1],"name":"/home/srghma/projects/purescript-optparse/src/Text/PrettyPrint/Leijen.purs","end":[263,21]}},{"children":[],"comments":"Document @(angles x)@ encloses document @x@ in angles, \\\"\\<\\\" and\n\\\"\\>\\\".\n","title":"angles","info":{"declType":"value","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]}]}},"sourceSpan":{"start":[268,1],"name":"/home/srghma/projects/purescript-optparse/src/Text/PrettyPrint/Leijen.purs","end":[268,21]}},{"children":[],"comments":"Document @(brackets x)@ encloses document @x@ in square brackets,\n\\\"[\\\" and \\\"]\\\".\n","title":"brackets","info":{"declType":"value","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]}]}},"sourceSpan":{"start":[273,1],"name":"/home/srghma/projects/purescript-optparse/src/Text/PrettyPrint/Leijen.purs","end":[273,23]}},{"children":[],"comments":"The document @(enclose l r x)@ encloses document @x@ between\ndocuments @l@ and @r@ using @(\\<\\>)@.\n\n> enclose l r x   = l <> x <> r\n","title":"enclose","info":{"declType":"value","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]}]}]}]}},"sourceSpan":{"start":[280,1],"name":"/home/srghma/projects/purescript-optparse/src/Text/PrettyPrint/Leijen.purs","end":[280,36]}},{"children":[],"comments":"The document @lparen@ contains a left parenthesis, \\\"(\\\".\n","title":"lparen","info":{"declType":"value","type":{"annotation":[],"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]}},"sourceSpan":{"start":[284,1],"name":"/home/srghma/projects/purescript-optparse/src/Text/PrettyPrint/Leijen.purs","end":[284,14]}},{"children":[],"comments":"The document @rparen@ contains a right parenthesis, \\\")\\\".\n","title":"rparen","info":{"declType":"value","type":{"annotation":[],"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]}},"sourceSpan":{"start":[287,1],"name":"/home/srghma/projects/purescript-optparse/src/Text/PrettyPrint/Leijen.purs","end":[287,14]}},{"children":[],"comments":"The document @langle@ contains a left angle, \\\"\\<\\\".\n","title":"langle","info":{"declType":"value","type":{"annotation":[],"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]}},"sourceSpan":{"start":[290,1],"name":"/home/srghma/projects/purescript-optparse/src/Text/PrettyPrint/Leijen.purs","end":[290,14]}},{"children":[],"comments":"The document @rangle@ contains a right angle, \\\">\\\".\n","title":"rangle","info":{"declType":"value","type":{"annotation":[],"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]}},"sourceSpan":{"start":[293,1],"name":"/home/srghma/projects/purescript-optparse/src/Text/PrettyPrint/Leijen.purs","end":[293,14]}},{"children":[],"comments":"The document @lbrace@ contains a left brace, \\\"{\\\".\n","title":"lbrace","info":{"declType":"value","type":{"annotation":[],"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]}},"sourceSpan":{"start":[296,1],"name":"/home/srghma/projects/purescript-optparse/src/Text/PrettyPrint/Leijen.purs","end":[296,14]}},{"children":[],"comments":"The document @rbrace@ contains a right brace, \\\"}\\\".\n","title":"rbrace","info":{"declType":"value","type":{"annotation":[],"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]}},"sourceSpan":{"start":[299,1],"name":"/home/srghma/projects/purescript-optparse/src/Text/PrettyPrint/Leijen.purs","end":[299,14]}},{"children":[],"comments":"The document @lbracket@ contains a left square bracket, \\\"[\\\".\n","title":"lbracket","info":{"declType":"value","type":{"annotation":[],"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]}},"sourceSpan":{"start":[302,1],"name":"/home/srghma/projects/purescript-optparse/src/Text/PrettyPrint/Leijen.purs","end":[302,16]}},{"children":[],"comments":"The document @rbracket@ contains a right square bracket, \\\"]\\\".\n","title":"rbracket","info":{"declType":"value","type":{"annotation":[],"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]}},"sourceSpan":{"start":[305,1],"name":"/home/srghma/projects/purescript-optparse/src/Text/PrettyPrint/Leijen.purs","end":[305,16]}},{"children":[],"comments":"The document @squote@ contains a single quote, \\\"'\\\".\n","title":"squote","info":{"declType":"value","type":{"annotation":[],"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]}},"sourceSpan":{"start":[309,1],"name":"/home/srghma/projects/purescript-optparse/src/Text/PrettyPrint/Leijen.purs","end":[309,14]}},{"children":[],"comments":"The document @dquote@ contains a double quote, '\\\"'.\n","title":"dquote","info":{"declType":"value","type":{"annotation":[],"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]}},"sourceSpan":{"start":[312,1],"name":"/home/srghma/projects/purescript-optparse/src/Text/PrettyPrint/Leijen.purs","end":[312,14]}},{"children":[],"comments":"The document @semi@ contains a semicolon, \\\";\\\".\n","title":"semi","info":{"declType":"value","type":{"annotation":[],"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]}},"sourceSpan":{"start":[315,1],"name":"/home/srghma/projects/purescript-optparse/src/Text/PrettyPrint/Leijen.purs","end":[315,12]}},{"children":[],"comments":"The document @colon@ contains a colon, \\\":\\\".\n","title":"colon","info":{"declType":"value","type":{"annotation":[],"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]}},"sourceSpan":{"start":[318,1],"name":"/home/srghma/projects/purescript-optparse/src/Text/PrettyPrint/Leijen.purs","end":[318,13]}},{"children":[],"comments":"The document @comma@ contains a comma, \\\",\\\".\n","title":"comma","info":{"declType":"value","type":{"annotation":[],"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]}},"sourceSpan":{"start":[321,1],"name":"/home/srghma/projects/purescript-optparse/src/Text/PrettyPrint/Leijen.purs","end":[321,13]}},{"children":[],"comments":"The document @space@ contains a single space, \\\" \\\".\n\n> x <+> y   = x <> space <> y\n","title":"space","info":{"declType":"value","type":{"annotation":[],"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]}},"sourceSpan":{"start":[326,1],"name":"/home/srghma/projects/purescript-optparse/src/Text/PrettyPrint/Leijen.purs","end":[326,13]}},{"children":[],"comments":"The document @dot@ contains a single dot, \\\".\\\".\n","title":"dot","info":{"declType":"value","type":{"annotation":[],"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]}},"sourceSpan":{"start":[329,1],"name":"/home/srghma/projects/purescript-optparse/src/Text/PrettyPrint/Leijen.purs","end":[329,11]}},{"children":[],"comments":"The document @backslash@ contains a back slash, \\\"\\\\\\\".\n","title":"backslash","info":{"declType":"value","type":{"annotation":[],"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]}},"sourceSpan":{"start":[332,1],"name":"/home/srghma/projects/purescript-optparse/src/Text/PrettyPrint/Leijen.purs","end":[332,17]}},{"children":[],"comments":"The document @equals@ contains an equal sign, \\\"=\\\".\n","title":"equals","info":{"declType":"value","type":{"annotation":[],"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]}},"sourceSpan":{"start":[335,1],"name":"/home/srghma/projects/purescript-optparse/src/Text/PrettyPrint/Leijen.purs","end":[335,14]}},{"children":[],"comments":"The document @(string s)@ concatenates all characters in @s@\nusing @line@ for newline characters and @char@ for all other\ncharacters. It is used instead of 'text' whenever the text contains\nnewline characters.\n","title":"string","info":{"declType":"value","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]}]}},"sourceSpan":{"start":[348,1],"name":"/home/srghma/projects/purescript-optparse/src/Text/PrettyPrint/Leijen.purs","end":[348,24]}},{"children":[],"comments":"The document @(bool b)@ shows the literal bool @b@ using 'text'.\n","title":"bool","info":{"declType":"value","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]}]}},"sourceSpan":{"start":[352,1],"name":"/home/srghma/projects/purescript-optparse/src/Text/PrettyPrint/Leijen.purs","end":[352,23]}},{"children":[],"comments":"The document @(int i)@ shows the literal integer @i@ using 'text'.\n","title":"int","info":{"declType":"value","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]}]}},"sourceSpan":{"start":[356,1],"name":"/home/srghma/projects/purescript-optparse/src/Text/PrettyPrint/Leijen.purs","end":[356,18]}},{"children":[],"comments":"The document @(number f)@ shows the literal number @f@ using 'text'.\n","title":"number","info":{"declType":"value","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Number"]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]}]}},"sourceSpan":{"start":[360,1],"name":"/home/srghma/projects/purescript-optparse/src/Text/PrettyPrint/Leijen.purs","end":[360,24]}},{"children":[],"comments":"The document @(fillBreak i x)@ first renders document @x@. It\nthan appends @space@s until the width is equal to @i@. If the\nwidth of @x@ is already larger than @i@, the nesting level is\nincreased by @i@ and a @line@ is appended. When we redefine @ptype@\nin the previous example to use @fillBreak@, we get a useful\nvariation of the previous output:\n\n> ptype (name,tp)\n>        = fillBreak 6 (text name) <+> text \"::\" <+> text tp\n\nThe output will now be:\n\n@\nlet empty  :: Doc\n    nest   :: Int -> Doc -> Doc\n    linebreak\n           :: Doc\n@\n","title":"fillBreak","info":{"declType":"value","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]}]}]}},"sourceSpan":{"start":[439,1],"name":"/home/srghma/projects/purescript-optparse/src/Text/PrettyPrint/Leijen.purs","end":[439,31]}},{"children":[],"comments":"The document @(fill i x)@ renders document @x@. It than appends\n@space@s until the width is equal to @i@. If the width of @x@ is\nalready larger, nothing is appended. This combinator is quite\nuseful in practice to output a list of bindings. The following\nexample demonstrates this.\n\n> types  = [(\"empty\",\"Doc\")\n>          ,(\"nest\",\"Int -> Doc -> Doc\")\n>          ,(\"linebreak\",\"Doc\")]\n>\n> ptype (name,tp)\n>        = fill 6 (text name) <+> text \"::\" <+> text tp\n>\n> test   = text \"let\" <+> align (vcat (map ptype types))\n\nWhich is layed out as:\n\n@\nlet empty  :: Doc\n    nest   :: Int -> Doc -> Doc\n    linebreak :: Doc\n@\n","title":"fill","info":{"declType":"value","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]}]}]}},"sourceSpan":{"start":[466,1],"name":"/home/srghma/projects/purescript-optparse/src/Text/PrettyPrint/Leijen.purs","end":[466,26]}},{"children":[],"comments":null,"title":"width","info":{"declType":"value","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]}]}}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]}]}]}},"sourceSpan":{"start":[471,1],"name":"/home/srghma/projects/purescript-optparse/src/Text/PrettyPrint/Leijen.purs","end":[471,36]}},{"children":[],"comments":"The document @(indent i x)@ indents document @x@ with @i@ spaces.\n\n> test  = indent 4 (fillSep (map text\n>         (words \"the indent combinator indents these words !\")))\n\nWhich lays out with a page width of 20 as:\n\n@\n    the indent\n    combinator\n    indents these\n    words !\n@\n","title":"indent","info":{"declType":"value","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]}]}]}},"sourceSpan":{"start":[491,1],"name":"/home/srghma/projects/purescript-optparse/src/Text/PrettyPrint/Leijen.purs","end":[491,28]}},{"children":[],"comments":"The hang combinator implements hanging indentation. The document\n@(hang i x)@ renders document @x@ with a nesting level set to the\ncurrent column plus @i@. The following example uses hanging\nindentation for some text:\n\n> test  = hang 4 (fillSep (map text\n>         (words \"the hang combinator indents these words !\")))\n\nWhich lays out on a page with a width of 20 characters as:\n\n@\nthe hang combinator\n    indents these\n    words !\n@\n\nThe @hang@ combinator is implemented as:\n\n> hang i x  = align (nest i x)\n","title":"hang","info":{"declType":"value","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]}]}]}},"sourceSpan":{"start":[513,1],"name":"/home/srghma/projects/purescript-optparse/src/Text/PrettyPrint/Leijen.purs","end":[513,26]}},{"children":[],"comments":"The document @(align x)@ renders document @x@ with the nesting\nlevel set to the current column. It is used for example to\nimplement 'hang'.\n\nAs an example, we will put a document right above another one,\nregardless of the current nesting level:\n\n> x $$ y  = align (x <$> y)\n\n> test    = text \"hi\" <+> (text \"nice\" $$ text \"world\")\n\nwhich will be layed out as:\n\n@\nhi nice\n   world\n@\n","title":"align","info":{"declType":"value","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]}]}},"sourceSpan":{"start":[533,1],"name":"/home/srghma/projects/purescript-optparse/src/Text/PrettyPrint/Leijen.purs","end":[533,20]}},{"children":[{"comments":null,"title":"Fail","info":{"arguments":[],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"Empty","info":{"arguments":[],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"Char","info":{"arguments":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Char"]}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"Text","info":{"arguments":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Int"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"String"]}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"Line","info":{"arguments":[],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"FlatAlt","info":{"arguments":[{"annotation":[],"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"Cat","info":{"arguments":[{"annotation":[],"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"Nest","info":{"arguments":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Int"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"Union","info":{"arguments":[{"annotation":[],"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"Column","info":{"arguments":[{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]}]}}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"Columns","info":{"arguments":[{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]}]}}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"Nesting","info":{"arguments":[{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]}]}}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"docSemigroup","info":{"declType":"instance","dependencies":[],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Semigroup"],"Semigroup"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]}]}},"sourceSpan":{"start":[612,1],"name":"/home/srghma/projects/purescript-optparse/src/Text/PrettyPrint/Leijen.purs","end":[613,18]}},{"comments":null,"title":"docMonoid","info":{"declType":"instance","dependencies":[],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Monoid"],"Monoid"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]}]}},"sourceSpan":{"start":[614,1],"name":"/home/srghma/projects/purescript-optparse/src/Text/PrettyPrint/Leijen.purs","end":[615,17]}},{"comments":null,"title":"docShow","info":{"declType":"instance","dependencies":[],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Show"],"Show"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]}]}},"sourceSpan":{"start":[900,1],"name":"/home/srghma/projects/purescript-optparse/src/Text/PrettyPrint/Leijen.purs","end":[901,42]}}],"comments":"The abstract data type @Doc@ represents pretty documents.\n\nMore specifically, a value of type @Doc@ represents a non-empty set of\npossible renderings of a document.  The rendering functions select one of\nthese possibilities.\n\n@Doc@ is an instance of the 'Show' class. @(show doc)@ pretty\nprints document @doc@ with a page width of 80 characters and a\nribbon width of 32 characters.\n\n> show (text \"hello\" <$> text \"world\")\n\nWhich would return the string \\\"hello\\\\nworld\\\", i.e.\n\n@\nhello\nworld\n@\n","title":"Doc","info":{"declType":"data","dataDeclType":"data","typeArguments":[]},"sourceSpan":{"start":[561,1],"name":"/home/srghma/projects/purescript-optparse/src/Text/PrettyPrint/Leijen.purs","end":[573,39]}},{"children":[{"comments":null,"title":"SFail","info":{"arguments":[],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"SEmpty","info":{"arguments":[],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"SChar","info":{"arguments":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Char"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"SimpleDoc"]}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"SText","info":{"arguments":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Int"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"String"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"SimpleDoc"]}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"SLine","info":{"arguments":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Int"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"SimpleDoc"]}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"simpleDocEq","info":{"declType":"instance","dependencies":[],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Eq"],"Eq"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"SimpleDoc"]}]}},"sourceSpan":{"start":[607,1],"name":"/home/srghma/projects/purescript-optparse/src/Text/PrettyPrint/Leijen.purs","end":[607,44]}},{"comments":null,"title":"simpleDocOrd","info":{"declType":"instance","dependencies":[],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Ord"],"Ord"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"SimpleDoc"]}]}},"sourceSpan":{"start":[608,1],"name":"/home/srghma/projects/purescript-optparse/src/Text/PrettyPrint/Leijen.purs","end":[608,46]}},{"comments":null,"title":"genericSimpleDoc","info":{"declType":"instance","dependencies":[],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Generic","Rep"],"Generic"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"SimpleDoc"]}]},{"annotation":[],"tag":"TypeWildcard","contents":null}]}},"sourceSpan":{"start":[609,1],"name":"/home/srghma/projects/purescript-optparse/src/Text/PrettyPrint/Leijen.purs","end":[609,56]}},{"comments":null,"title":"showSimpleDoc","info":{"declType":"instance","dependencies":[],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Show"],"Show"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"SimpleDoc"]}]}},"sourceSpan":{"start":[610,1],"name":"/home/srghma/projects/purescript-optparse/src/Text/PrettyPrint/Leijen.purs","end":[610,70]}}],"comments":"The data type @SimpleDoc@ represents rendered documents and is\nused by the display functions.\n\nWhereas values of the data type 'Doc' represent non-empty sets of possible\nrenderings of a document, values of the data type @SimpleDoc@ represent\nsingle renderings of a document.\n\nThe @Int@ in @SText@ contains the length of the string. The @Int@\nin @SLine@ contains the indentation for that line. The library\nprovides two default display functions 'displayS' and\n'displayIO'. You can provide your own display function by writing a\nfunction from a @SimpleDoc@ to your own output format.\n","title":"SimpleDoc","info":{"declType":"data","dataDeclType":"data","typeArguments":[]},"sourceSpan":{"start":[587,1],"name":"/home/srghma/projects/purescript-optparse/src/Text/PrettyPrint/Leijen.purs","end":[591,38]}},{"children":[{"comments":null,"title":"SFail'","info":{"arguments":[],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"SEmpty'","info":{"arguments":[],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"SChar'","info":{"arguments":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Char"]},{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Lazy"],"Lazy"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"LazySimpleDoc"]}]}}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"SText'","info":{"arguments":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Int"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"String"]},{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Lazy"],"Lazy"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"LazySimpleDoc"]}]}}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"SLine'","info":{"arguments":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Int"]},{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Lazy"],"Lazy"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"LazySimpleDoc"]}]}}],"declType":"dataConstructor"},"sourceSpan":null}],"comments":null,"title":"LazySimpleDoc","info":{"declType":"data","dataDeclType":"data","typeArguments":[]},"sourceSpan":{"start":[593,1],"name":"/home/srghma/projects/purescript-optparse/src/Text/PrettyPrint/Leijen.purs","end":[597,53]}},{"children":[],"comments":null,"title":"forceSimpleDoc","info":{"declType":"value","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"LazySimpleDoc"]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"SimpleDoc"]}]}},"sourceSpan":{"start":[599,1],"name":"/home/srghma/projects/purescript-optparse/src/Text/PrettyPrint/Leijen.purs","end":[599,45]}},{"children":[],"comments":"The empty document is, indeed, empty. Although @empty@ has no\ncontent, it does have a \\'height\\' of 1 and behaves exactly like\n@(text \\\"\\\")@ (and is therefore not a unit of @\\<$\\>@).\n","title":"empty","info":{"declType":"value","type":{"annotation":[],"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]}},"sourceSpan":{"start":[620,1],"name":"/home/srghma/projects/purescript-optparse/src/Text/PrettyPrint/Leijen.purs","end":[620,13]}},{"children":[],"comments":"The document @(char c)@ contains the literal character @c@. The\ncharacter shouldn't be a newline (@'\\n'@), the function 'line'\nshould be used for line breaks.\n","title":"char","info":{"declType":"value","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Char"]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]}]}},"sourceSpan":{"start":[626,1],"name":"/home/srghma/projects/purescript-optparse/src/Text/PrettyPrint/Leijen.purs","end":[626,20]}},{"children":[],"comments":"The document @(text s)@ contains the literal string @s@. The\nstring shouldn't contain any newline (@'\\n'@) characters. If the\nstring contains newline characters, the function 'string' should be\nused.\n","title":"text","info":{"declType":"value","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]}]}},"sourceSpan":{"start":[634,1],"name":"/home/srghma/projects/purescript-optparse/src/Text/PrettyPrint/Leijen.purs","end":[634,22]}},{"children":[],"comments":"The @line@ document advances to the next line and indents to the\ncurrent nesting level. Document @line@ behaves like @(text \\\" \\\")@\nif the line break is undone by 'group'.\n","title":"line","info":{"declType":"value","type":{"annotation":[],"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]}},"sourceSpan":{"start":[641,1],"name":"/home/srghma/projects/purescript-optparse/src/Text/PrettyPrint/Leijen.purs","end":[641,12]}},{"children":[],"comments":"The @linebreak@ document advances to the next line and indents to\nthe current nesting level. Document @linebreak@ behaves like\n'empty' if the line break is undone by 'group'.\n","title":"linebreak","info":{"declType":"value","type":{"annotation":[],"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]}},"sourceSpan":{"start":[647,1],"name":"/home/srghma/projects/purescript-optparse/src/Text/PrettyPrint/Leijen.purs","end":[647,17]}},{"children":[],"comments":"A linebreak that will never be flattened; it is guaranteed to render\nas a newline.\n","title":"hardline","info":{"declType":"value","type":{"annotation":[],"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]}},"sourceSpan":{"start":[652,1],"name":"/home/srghma/projects/purescript-optparse/src/Text/PrettyPrint/Leijen.purs","end":[652,16]}},{"children":[],"comments":null,"title":"beside","info":{"declType":"value","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]}]}]}},"sourceSpan":{"start":[655,1],"name":"/home/srghma/projects/purescript-optparse/src/Text/PrettyPrint/Leijen.purs","end":[655,28]}},{"children":[],"comments":"The document @(nest i x)@ renders document @x@ with the current\nindentation level increased by i (See also 'hang', 'align' and\n'indent').\n\n> nest 2 (text \"hello\" <$> text \"world\") <$> text \"!\"\n\noutputs as:\n\n@\nhello\n  world\n!\n@\n","title":"nest","info":{"declType":"value","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]}]}]}},"sourceSpan":{"start":[671,1],"name":"/home/srghma/projects/purescript-optparse/src/Text/PrettyPrint/Leijen.purs","end":[671,26]}},{"children":[],"comments":null,"title":"column","info":{"declType":"value","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]}]}}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]}]}},"sourceSpan":{"start":[674,1],"name":"/home/srghma/projects/purescript-optparse/src/Text/PrettyPrint/Leijen.purs","end":[674,30]}},{"children":[],"comments":null,"title":"nesting","info":{"declType":"value","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]}]}}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]}]}},"sourceSpan":{"start":[677,1],"name":"/home/srghma/projects/purescript-optparse/src/Text/PrettyPrint/Leijen.purs","end":[677,31]}},{"children":[],"comments":null,"title":"columns","info":{"declType":"value","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]}]}}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]}]}},"sourceSpan":{"start":[680,1],"name":"/home/srghma/projects/purescript-optparse/src/Text/PrettyPrint/Leijen.purs","end":[680,37]}},{"children":[],"comments":"The @group@ combinator is used to specify alternative\nlayouts. The document @(group x)@ undoes all line breaks in\ndocument @x@. The resulting line is added to the current line if\nthat fits the page. Otherwise, the document @x@ is rendered without\nany changes.\n","title":"group","info":{"declType":"value","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]}]}},"sourceSpan":{"start":[688,1],"name":"/home/srghma/projects/purescript-optparse/src/Text/PrettyPrint/Leijen.purs","end":[688,20]}},{"children":[],"comments":"A document that is normally rendered as the first argument, but\nwhen flattened, is rendered as the second document.\n","title":"flatAlt","info":{"declType":"value","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]}]}]}},"sourceSpan":{"start":[693,1],"name":"/home/srghma/projects/purescript-optparse/src/Text/PrettyPrint/Leijen.purs","end":[693,29]}},{"children":[],"comments":null,"title":"flatten","info":{"declType":"value","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]}]}},"sourceSpan":{"start":[696,1],"name":"/home/srghma/projects/purescript-optparse/src/Text/PrettyPrint/Leijen.purs","end":[696,22]}},{"children":[{"comments":null,"title":"Nil","info":{"arguments":[],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"Cons","info":{"arguments":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Int"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Docs"]}],"declType":"dataConstructor"},"sourceSpan":null}],"comments":"list of indentation/document pairs; saves an indirection over [(Int,Doc)]\n","title":"Docs","info":{"declType":"data","dataDeclType":"data","typeArguments":[]},"sourceSpan":{"start":[717,1],"name":"/home/srghma/projects/purescript-optparse/src/Text/PrettyPrint/Leijen.purs","end":[718,32]}},{"children":[],"comments":"This is the default pretty printer which is used by 'show',\n'putDoc' and 'hPutDoc'. @(renderPretty ribbonfrac width x)@ renders\ndocument @x@ with a page width of @width@ and a ribbon width of\n@(ribbonfrac * width)@ characters. The ribbon width is the maximal\namount of non-indentation characters on a line. The parameter\n@ribbonfrac@ should be between @0.0@ and @1.0@. If it is lower or\nhigher, the ribbon width will be 0 or @width@ respectively.\n","title":"renderPretty","info":{"declType":"value","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Number"]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"SimpleDoc"]}]}]}]}},"sourceSpan":{"start":[727,1],"name":"/home/srghma/projects/purescript-optparse/src/Text/PrettyPrint/Leijen.purs","end":[727,50]}},{"children":[],"comments":"A slightly smarter rendering algorithm with more lookahead. It provides\nprovide earlier breaking on deeply nested structures\nFor example, consider this python-ish pseudocode:\n@fun(fun(fun(fun(fun([abcdefg, abcdefg])))))@\nIf we put a softbreak (+ nesting 2) after each open parenthesis, and align\nthe elements of the list to match the opening brackets, this will render with\n@renderPretty@ and a page width of 20 as:\n@\nfun(fun(fun(fun(fun([\n                    | abcdef,\n                    | abcdef,\n                    ]\n  )))))             |\n@\nWhere the 20c. boundary has been marked with |.\nBecause @renderPretty@ only uses one-line lookahead, it sees that the first\nline fits, and is stuck putting the second and third lines after the 20-c\nmark. In contrast, @renderSmart@ will continue to check that the potential\ndocument up to the end of the indentation level. Thus, it will format the\ndocument as:\n\n@\nfun(                |\n  fun(              |\n    fun(            |\n      fun(          |\n        fun([       |\n              abcdef,\n              abcdef,\n            ]       |\n  )))))             |\n@\nWhich fits within the 20c. boundary.\n","title":"renderSmart","info":{"declType":"value","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Number"]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"SimpleDoc"]}]}]}]}},"sourceSpan":{"start":[763,1],"name":"/home/srghma/projects/purescript-optparse/src/Text/PrettyPrint/Leijen.purs","end":[763,49]}},{"children":[],"comments":null,"title":"renderFits","info":{"declType":"value","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"LazySimpleDoc"]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}]}]}]}}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Number"]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"SimpleDoc"]}]}]}]}]}},"sourceSpan":{"start":[766,1],"name":"/home/srghma/projects/purescript-optparse/src/Text/PrettyPrint/Leijen.purs","end":[767,48]}},{"children":[],"comments":"@fits1@ does 1 line lookahead.\n","title":"fits1","info":{"declType":"value","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"LazySimpleDoc"]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}]}]}]}},"sourceSpan":{"start":[819,1],"name":"/home/srghma/projects/purescript-optparse/src/Text/PrettyPrint/Leijen.purs","end":[819,55]}},{"children":[],"comments":"@fitsR@ has a little more lookahead: assuming that nesting roughly\ncorresponds to syntactic depth, @fitsR@ checks that not only the current line\nfits, but the entire syntactic structure being formatted at this level of\nindentation fits. If we were to remove the second case for @SLine@, we would\ncheck that not only the current structure fits, but also the rest of the\ndocument, which would be slightly more intelligent but would have exponential\nruntime (and is prohibitively expensive in practice).\np = pagewidth\nm = minimum nesting level to fit in\nw = the width in which to fit the first line\n","title":"fitsR","info":{"declType":"value","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"LazySimpleDoc"]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}]}]}]}},"sourceSpan":{"start":[837,1],"name":"/home/srghma/projects/purescript-optparse/src/Text/PrettyPrint/Leijen.purs","end":[837,55]}},{"children":[],"comments":"@(renderCompact x)@ renders document @x@ without adding any\nindentation. Since no \\'pretty\\' printing is involved, this\nrenderer is very fast. The resulting output contains fewer\ncharacters than a pretty printed version and can be used for output\nthat is read by other programs.\n\nThis rendering function does not add any colorisation information.\n","title":"renderCompact","info":{"declType":"value","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"SimpleDoc"]}]}},"sourceSpan":{"start":[858,1],"name":"/home/srghma/projects/purescript-optparse/src/Text/PrettyPrint/Leijen.purs","end":[858,34]}},{"children":[],"comments":"@(displayS simpleDoc)@ takes the output @simpleDoc@ from a\nrendering function and transforms it to a 'ShowS' type (for use in\nthe 'Show' class).\n\n> showWidth :: Int -> Doc -> String\n> showWidth w x   = displayS (renderPretty 0.4 w x) \"\"\n\nANSI color information will be discarded by this function unless\nyou are running on a Unix-like operating system. This is due to\na technical limitation in Windows ANSI support.\n","title":"displayS","info":{"declType":"value","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"SimpleDoc"]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}},"sourceSpan":{"start":[893,1],"name":"/home/srghma/projects/purescript-optparse/src/Text/PrettyPrint/Leijen.purs","end":[893,32]}},{"children":[],"comments":null,"title":"spaces","info":{"declType":"value","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}},"sourceSpan":{"start":[908,1],"name":"/home/srghma/projects/purescript-optparse/src/Text/PrettyPrint/Leijen.purs","end":[908,24]}},{"children":[],"comments":null,"title":"indentation","info":{"declType":"value","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}},"sourceSpan":{"start":[912,1],"name":"/home/srghma/projects/purescript-optparse/src/Text/PrettyPrint/Leijen.purs","end":[912,29]}}]}],"resolvedDependencies":{"purescript-free":"6.0.1","purescript-exceptions":"5.0.0","purescript-newtype":"4.0.0","purescript-effect":"3.0.0","purescript-ordered-collections":"2.0.1","purescript-control":"5.0.0","purescript-arraybuffer-types":"3.0.0","purescript-console":"5.0.0","purescript-either":"5.0.0","purescript-node-streams":"5.0.0","purescript-profunctor":"5.0.0","purescript-arrays":"6.0.1","purescript-maybe":"5.0.0","purescript-open-memoize":"6.1.0","purescript-type-equality":"4.0.0","purescript-exists":"5.0.0","purescript-distributive":"5.0.0","purescript-unfoldable":"5.0.0","purescript-invariant":"5.0.0","purescript-fork":"5.0.0","purescript-lcg":"3.0.0","purescript-lazy":"5.0.0","purescript-foreign-object":"3.0.0","purescript-now":"5.0.0","purescript-exitcodes":"4.0.0","purescript-node-process":"8.1.0","purescript-aff":"6.0.0","purescript-foldable-traversable":"5.0.1","purescript-tailrec":"5.0.1","purescript-avar":"4.0.0","purescript-gen":"3.0.0","purescript-typelevel-prelude":"6.0.0","purescript-functors":"4.1.1","purescript-prelude":"5.0.0","purescript-st":"5.0.1","purescript-bifunctors":"5.0.0","purescript-pipes":"7.0.0","purescript-nonempty":"6.0.0","purescript-contravariant":"5.0.0","purescript-unsafe-coerce":"5.0.0","purescript-refs":"5.0.0","purescript-integers":"5.0.0","purescript-mmorph":"6.0.0","purescript-ansi":"6.1.0","purescript-orders":"5.0.0","purescript-const":"5.0.0","purescript-spec":"5.0.0","purescript-record":"3.0.0","purescript-node-buffer":"7.0.0","purescript-transformers":"5.1.0","purescript-numbers":"8.0.0","purescript-math":"3.0.0","purescript-enums":"5.0.0","purescript-psci-support":"5.0.0","purescript-catenable-lists":"6.0.1","purescript-random":"5.0.0","purescript-parallel":"5.0.0","purescript-posix-types":"5.0.0","purescript-tuples":"6.0.1","purescript-partial":"3.0.0","purescript-quickcheck":"7.1.0","purescript-strings":"5.0.0","purescript-identity":"5.0.0","purescript-safe-coerce":"1.0.0","purescript-lists":"6.0.1","purescript-datetime":"5.0.2","purescript-functions":"5.0.0"},"version":"3.3.0","github":["f-o-a-m","purescript-optparse"],"versionTag":"v3.3.0","moduleMap":{"Data.BooleanAlgebra":"purescript-prelude","Ansi.Output":"purescript-ansi","Data.Decide":"purescript-contravariant","Type.Data.Boolean":"purescript-typelevel-prelude","Data.Ring":"purescript-prelude","Data.Semigroup.Generic":"purescript-prelude","Control.Monad.Trans.Class":"purescript-transformers","Record.Unsafe.Union":"purescript-record","Data.Functor.Product":"purescript-functors","Type.Function":"purescript-typelevel-prelude","Data.Functor.Flip":"purescript-functors","Data.NonEmpty":"purescript-nonempty","Test.Spec.Console":"purescript-spec","Effect.Uncurried":"purescript-effect","Control.Monad.Identity.Trans":"purescript-transformers","Data.Char.Gen":"purescript-strings","Test.Spec.Style":"purescript-spec","Effect.Now":"purescript-now","Data.Monoid.Generic":"purescript-prelude","Data.String.NonEmpty":"purescript-strings","Effect":"purescript-effect","Data.Traversable.Accum.Internal":"purescript-foldable-traversable","Data.Enum.Gen":"purescript-enums","Control.Comonad.Env":"purescript-transformers","Control.Comonad.Traced.Class":"purescript-transformers","Data.Functor.Costar":"purescript-functors","Test.Spec.Summary":"purescript-spec","Data.HeytingAlgebra.Generic":"purescript-prelude","Data.Functor.Compose":"purescript-functors","Foreign.Object.Gen":"purescript-foreign-object","Type.Row.Homogeneous":"purescript-typelevel-prelude","Node.Buffer.ST":"purescript-node-buffer","Data.Int.Bits":"purescript-integers","Data.DateTime":"purescript-datetime","Data.String.CodePoints":"purescript-strings","Data.Ord":"purescript-prelude","Control.Monad.Gen":"purescript-gen","Data.Bounded.Generic":"purescript-prelude","Control.Monad.Free.Class":"purescript-free","Type.Data.Row":"purescript-prelude","Data.Date":"purescript-datetime","Control.Comonad.Cofree.Class":"purescript-free","Safe.Coerce":"purescript-safe-coerce","Data.Monoid.Dual":"purescript-prelude","Control.Monad.Rec.Class":"purescript-tailrec","Data.Time.Component":"purescript-datetime","Data.Bitraversable":"purescript-foldable-traversable","Record.Builder":"purescript-record","Data.Boolean":"purescript-prelude","Data.Show.Generic":"purescript-prelude","Data.Map":"purescript-ordered-collections","Control.Biapplicative":"purescript-bifunctors","Data.CatList":"purescript-catenable-lists","Effect.Exception.Unsafe":"purescript-exceptions","Control.Parallel.Class":"purescript-parallel","Data.Array.NonEmpty.Internal":"purescript-arrays","Type.Proxy":"purescript-prelude","Pipes.Core":"purescript-pipes","Data.Coyoneda":"purescript-free","Effect.Aff.Compat":"purescript-aff","Data.Array.ST.Iterator":"purescript-arrays","Data.Enum.Generic":"purescript-enums","Data.DateTime.Gen":"purescript-datetime","Data.String.Pattern":"purescript-strings","Data.Bounded":"purescript-prelude","Control.Monad.State.Trans":"purescript-transformers","Data.TraversableWithIndex":"purescript-foldable-traversable","Node.Encoding":"purescript-node-buffer","Data.Int":"purescript-integers","Data.Profunctor.Cochoice":"purescript-profunctor","Data.Show":"purescript-prelude","Random.LCG":"purescript-lcg","Control.Monad.Writer.Trans":"purescript-transformers","Data.Foldable":"purescript-foldable-traversable","Data.Divide":"purescript-contravariant","Control.Comonad.Store.Class":"purescript-transformers","Data.Number":"purescript-numbers","Data.Enum":"purescript-enums","Control.Monad.Trampoline":"purescript-free","Foreign.Object":"purescript-foreign-object","Test.Spec.Tree":"purescript-spec","Control.Apply":"purescript-prelude","Data.Functor.Contravariant":"purescript-contravariant","Data.Tuple.Nested":"purescript-tuples","Data.List.Internal":"purescript-lists","Control.Monad":"purescript-prelude","Data.Lazy":"purescript-lazy","Data.Monoid":"purescript-prelude","Data.Profunctor.Closed":"purescript-profunctor","Control.Monad.List.Trans":"purescript-transformers","Data.Ord.Generic":"purescript-prelude","Control.Monad.RWS":"purescript-transformers","Data.String.Common":"purescript-strings","Data.Maybe.First":"purescript-maybe","Control.Bind":"purescript-prelude","Data.Profunctor.Split":"purescript-profunctor","Data.Number.Format":"purescript-numbers","Effect.Aff.Class":"purescript-aff","Data.Monoid.Additive":"purescript-prelude","Data.Symbol":"purescript-prelude","Data.Map.Gen":"purescript-ordered-collections","Data.String.Regex":"purescript-strings","Data.Profunctor.Join":"purescript-profunctor","Data.HeytingAlgebra":"purescript-prelude","Control.Alt":"purescript-control","Data.Date.Gen":"purescript-datetime","Control.Monad.Maybe.Trans":"purescript-transformers","Control.Monad.Cont":"purescript-transformers","Control.Monad.ST.Internal":"purescript-st","Type.Data.RowList":"purescript-prelude","Data.Time.Component.Gen":"purescript-datetime","Effect.Ref":"purescript-refs","Data.Either.Inject":"purescript-either","Foreign.Object.ST.Unsafe":"purescript-foreign-object","Data.List.ZipList":"purescript-lists","Data.Ord.Min":"purescript-orders","Test.Spec.Runner":"purescript-spec","Data.Functor.Coproduct.Nested":"purescript-functors","Data.Ring.Generic":"purescript-prelude","Data.Semigroup":"purescript-prelude","Data.Array.NonEmpty":"purescript-arrays","Control.Monad.Reader":"purescript-transformers","Data.Const":"purescript-const","Test.Spec.Reporter.Console":"purescript-spec","Control.Comonad.Traced.Trans":"purescript-transformers","Test.Spec.Reporter.Dot":"purescript-spec","Data.Ord.Down":"purescript-orders","Data.Number.Approximate":"purescript-numbers","Data.Array.ST.Partial":"purescript-arrays","Effect.Unsafe":"purescript-effect","Pipes.Internal":"purescript-pipes","Control.Monad.Morph":"purescript-mmorph","Type.Data.Ordering":"purescript-typelevel-prelude","Data.Tuple":"purescript-tuples","Data.Functor.Clown":"purescript-functors","Data.Semigroup.Foldable":"purescript-foldable-traversable","Control.Biapply":"purescript-bifunctors","Data.Distributive":"purescript-distributive","Effect.Exception":"purescript-exceptions","Type.Equality":"purescript-type-equality","Control.Alternative":"purescript-control","Data.Semiring":"purescript-prelude","Pipes.Prelude":"purescript-pipes","Data.Functor.Product2":"purescript-functors","Data.Exists":"purescript-exists","Effect.Console":"purescript-console","Data.Traversable.Accum":"purescript-foldable-traversable","Node.Buffer.Class":"purescript-node-buffer","Data.CommutativeRing":"purescript-prelude","Data.NaturalTransformation":"purescript-prelude","Data.Monoid.Conj":"purescript-prelude","Data.Yoneda":"purescript-free","ExitCodes":"purescript-exitcodes","Data.Functor.App":"purescript-functors","Data.Profunctor.Star":"purescript-profunctor","Data.Unfoldable":"purescript-unfoldable","Type.RowList":"purescript-typelevel-prelude","Control.Comonad.Store.Trans":"purescript-transformers","Test.Spec.Assertions.String":"purescript-spec","Foreign.Object.Unsafe":"purescript-foreign-object","Control.Monad.ST":"purescript-st","Control.Monad.State.Class":"purescript-transformers","Data.List.Types":"purescript-lists","Data.String.NonEmpty.CodeUnits":"purescript-strings","Data.Functor":"purescript-prelude","Unsafe.Coerce":"purescript-unsafe-coerce","Control.Monad.Writer.Class":"purescript-transformers","Data.Profunctor.Strong":"purescript-profunctor","Test.Spec.Reporter.Base":"purescript-spec","Data.CatQueue":"purescript-catenable-lists","Control.Monad.Except":"purescript-transformers","Data.Interval":"purescript-datetime","Data.List.Lazy.Types":"purescript-lists","Control.Category":"purescript-prelude","Test.Spec.Reporter.Tap":"purescript-spec","Test.QuickCheck.Arbitrary":"purescript-quickcheck","Data.Interval.Duration":"purescript-datetime","Control.Monad.Gen.Common":"purescript-gen","Control.Monad.RWS.Trans":"purescript-transformers","Test.Spec.Speed":"purescript-spec","Control.Monad.Cont.Trans":"purescript-transformers","Data.Maybe":"purescript-maybe","Type.Row":"purescript-typelevel-prelude","Data.String.Regex.Unsafe":"purescript-strings","Foreign.Object.ST":"purescript-foreign-object","Data.Set":"purescript-ordered-collections","Data.Profunctor":"purescript-profunctor","Control.Comonad":"purescript-control","Control.Monad.ST.Global":"purescript-st","Data.Function":"purescript-prelude","Data.List":"purescript-lists","Data.Field":"purescript-prelude","Data.List.Lazy":"purescript-lists","Data.EuclideanRing":"purescript-prelude","Data.Semigroup.Last":"purescript-prelude","Data.Semigroup.First":"purescript-prelude","Data.Functor.Invariant":"purescript-invariant","Node.Buffer.Internal":"purescript-node-buffer","Control.Comonad.Traced":"purescript-transformers","Data.Comparison":"purescript-contravariant","Data.String.Unsafe":"purescript-strings","Prelude":"purescript-prelude","Effect.Class":"purescript-effect","Data.Predicate":"purescript-contravariant","Partial.Unsafe":"purescript-partial","Data.Array":"purescript-arrays","Control.Extend":"purescript-control","Pipes":"purescript-pipes","Data.Unfoldable1":"purescript-unfoldable","Control.Lazy":"purescript-control","Data.Function.Uncurried":"purescript-functions","Control.Monad.Reader.Trans":"purescript-transformers","Data.Functor.Product.Nested":"purescript-functors","Pipes.ListT":"purescript-pipes","Control.Comonad.Env.Class":"purescript-transformers","Effect.Aff.AVar":"purescript-avar","Node.Buffer.Immutable":"purescript-node-buffer","Data.Interval.Duration.Iso":"purescript-datetime","Data.ArrayBuffer.Types":"purescript-arraybuffer-types","Data.Eq":"purescript-prelude","Test.Spec.Result":"purescript-spec","Data.Either.Nested":"purescript-either","Control.Comonad.Cofree":"purescript-free","Data.Newtype":"purescript-newtype","Data.Semigroup.Traversable":"purescript-foldable-traversable","Test.Spec.Assertions":"purescript-spec","Data.Bifunctor":"purescript-bifunctors","Effect.Random":"purescript-random","Test.Spec.Reporter":"purescript-spec","Data.Monoid.Disj":"purescript-prelude","Control.Monad.Gen.Class":"purescript-gen","Data.Array.Partial":"purescript-arrays","Data.String.CaseInsensitive":"purescript-strings","Control.Monad.Free":"purescript-free","Control.Parallel":"purescript-parallel","Node.Stream":"purescript-node-streams","Control.MonadPlus":"purescript-control","Data.Void":"purescript-prelude","Control.MonadZero":"purescript-control","Data.DateTime.Instant":"purescript-datetime","Data.Profunctor.Costrong":"purescript-profunctor","Data.Ord.Max":"purescript-orders","Effect.AVar":"purescript-avar","Control.Comonad.Store":"purescript-transformers","Node.Process":"purescript-node-process","Control.Monad.Except.Trans":"purescript-transformers","Data.String.CodeUnits":"purescript-strings","Ansi.Codes":"purescript-ansi","Test.Spec":"purescript-spec","Data.FunctorWithIndex":"purescript-foldable-traversable","Data.Divisible":"purescript-contravariant","Data.Eq.Generic":"purescript-prelude","Data.DivisionRing":"purescript-prelude","Record":"purescript-record","PSCI.Support":"purescript-psci-support","Data.Equivalence":"purescript-contravariant","Data.Maybe.Last":"purescript-maybe","Data.Unit":"purescript-prelude","Data.List.NonEmpty":"purescript-lists","Data.List.Lazy.NonEmpty":"purescript-lists","Data.Ordering":"purescript-prelude","Data.Functor.Coproduct":"purescript-functors","Control.Monad.Cont.Class":"purescript-transformers","Effect.Aff":"purescript-aff","Data.Identity":"purescript-identity","Math":"purescript-math","Data.Set.NonEmpty":"purescript-ordered-collections","Control.Comonad.Trans.Class":"purescript-transformers","Data.String":"purescript-strings","Control.Plus":"purescript-control","Node.Buffer.Types":"purescript-node-buffer","Data.Posix":"purescript-posix-types","Data.Posix.Signal":"purescript-posix-types","Test.QuickCheck":"purescript-quickcheck","Data.Map.Internal":"purescript-ordered-collections","Data.Time":"purescript-datetime","Data.Time.Duration":"purescript-datetime","Data.Date.Component":"purescript-datetime","Partial":"purescript-partial","Control.Comonad.Env.Trans":"purescript-transformers","Control.Monad.Reader.Class":"purescript-transformers","Data.String.NonEmpty.CodePoints":"purescript-strings","Data.Decidable":"purescript-contravariant","Data.String.NonEmpty.Internal":"purescript-strings","Data.Monoid.Multiplicative":"purescript-prelude","Data.String.NonEmpty.CaseInsensitive":"purescript-strings","Data.Functor.Joker":"purescript-functors","Type.Data.Symbol":"purescript-typelevel-prelude","Data.Array.ST":"purescript-arrays","Node.Buffer":"purescript-node-buffer","Control.Monad.Error.Class":"purescript-transformers","Control.Semigroupoid":"purescript-prelude","Data.Function.Memoize":"purescript-open-memoize","Data.Monoid.Alternate":"purescript-control","Data.Char":"purescript-strings","Data.Generic.Rep":"purescript-prelude","Effect.Class.Console":"purescript-console","Data.Bifunctor.Join":"purescript-bifunctors","Control.Monad.Fork.Class":"purescript-fork","Node.Globals":"purescript-node-process","Data.Bifoldable":"purescript-foldable-traversable","Control.Monad.ST.Ref":"purescript-st","Data.Monoid.Endo":"purescript-prelude","Control.Monad.State":"purescript-transformers","Data.List.Partial":"purescript-lists","Data.Semiring.Generic":"purescript-prelude","Test.Spec.Runner.Event":"purescript-spec","Data.String.Regex.Flags":"purescript-strings","Data.Either":"purescript-either","Data.Time.Duration.Gen":"purescript-datetime","Data.Date.Component.Gen":"purescript-datetime","Type.Prelude":"purescript-typelevel-prelude","Control.Applicative":"purescript-prelude","Control.Monad.ST.Class":"purescript-st","Data.FoldableWithIndex":"purescript-foldable-traversable","Data.Op":"purescript-contravariant","Node.Platform":"purescript-node-process","Record.Unsafe":"purescript-prelude","Test.QuickCheck.Gen":"purescript-quickcheck","Control.Monad.Writer":"purescript-transformers","Test.Spec.Reporter.Spec":"purescript-spec","Data.Functor.Coproduct.Inject":"purescript-functors","Data.Profunctor.Choice":"purescript-profunctor","Data.Time.Gen":"purescript-datetime","Data.Traversable":"purescript-foldable-traversable","Data.String.Gen":"purescript-strings"},"compilerVersion":"0.14.0"}