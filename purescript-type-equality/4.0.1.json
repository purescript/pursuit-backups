{"uploader":"JordanMartinez","packageMeta":{"homepage":"https://github.com/purescript/purescript-type-equality","repository":{"url":"https://github.com/purescript/purescript-type-equality.git","type":"git"},"ignore":["**/.*","bower_components","node_modules","output","test","bower.json","package.json"],"devDependencies":{"purescript-newtype":"^5.0.0","purescript-console":"^6.0.0"},"name":"purescript-type-equality","license":["BSD-3-Clause"]},"tagTime":"2022-04-27T18:00:18+0000","modules":[{"reExports":[],"name":"Type.Equality","comments":null,"declarations":[{"kind":{"kind":{"annotation":[],"tag":"ForAll","contents":["k",{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeVar","contents":"k"}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeVar","contents":"k"}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Constraint"]}]}]},null]},"keyword":"class"},"children":[{"comments":null,"title":"proof","info":{"declType":"typeClassMember","type":{"annotation":[],"tag":"ForAll","contents":["p",{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeVar","contents":"p"},{"annotation":[],"tag":"TypeVar","contents":"a"}]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeVar","contents":"p"},{"annotation":[],"tag":"TypeVar","contents":"b"}]}]},null]}},"sourceSpan":{"start":[22,3],"name":"/home/jordan/Programming/ps-libs/lib/type-equality/src/Type/Equality.purs","end":[22,32]}},{"comments":null,"title":"refl","info":{"declType":"instance","dependencies":[],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Type","Equality"],"TypeEquals"]},{"annotation":[],"tag":"TypeVar","contents":"a"}]},{"annotation":[],"tag":"TypeVar","contents":"a"}]}},"sourceSpan":{"start":[24,1],"name":"/home/jordan/Programming/ps-libs/lib/type-equality/src/Type/Equality.purs","end":[25,14]}}],"comments":"This type class asserts that types `a` and `b`\nare equal.\n\nThe functional dependencies and the single\ninstance below will force the two type arguments\nto unify when either one is known.\n\nNote: any instance will necessarily overlap with\n`refl` below, so instances of this class should\nnot be defined in libraries.\n","title":"TypeEquals","info":{"fundeps":[[["a"],["b"]],[["b"],["a"]]],"arguments":[["a",null],["b",null]],"declType":"typeClass","superclasses":[{"constraintAnn":[],"constraintClass":[["Prim","Coerce"],"Coercible"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"a"},{"annotation":[],"tag":"TypeVar","contents":"b"}],"constraintKindArgs":[],"constraintData":null}]},"sourceSpan":{"start":[21,1],"name":"/home/jordan/Programming/ps-libs/lib/type-equality/src/Type/Equality.purs","end":[22,32]}},{"kind":null,"children":[],"comments":null,"title":"to","info":{"declType":"value","type":{"annotation":[],"tag":"ForAll","contents":["a",{"annotation":[],"tag":"ForAll","contents":["b",{"annotation":[],"tag":"ConstrainedType","contents":[{"constraintAnn":[],"constraintClass":[["Type","Equality"],"TypeEquals"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"a"},{"annotation":[],"tag":"TypeVar","contents":"b"}],"constraintKindArgs":[],"constraintData":null},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeVar","contents":"a"}]},{"annotation":[],"tag":"TypeVar","contents":"b"}]}]},null]},null]}},"sourceSpan":{"start":[29,1],"name":"/home/jordan/Programming/ps-libs/lib/type-equality/src/Type/Equality.purs","end":[29,43]}},{"kind":null,"children":[],"comments":null,"title":"from","info":{"declType":"value","type":{"annotation":[],"tag":"ForAll","contents":["a",{"annotation":[],"tag":"ForAll","contents":["b",{"annotation":[],"tag":"ConstrainedType","contents":[{"constraintAnn":[],"constraintClass":[["Type","Equality"],"TypeEquals"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"a"},{"annotation":[],"tag":"TypeVar","contents":"b"}],"constraintKindArgs":[],"constraintData":null},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeVar","contents":"b"}]},{"annotation":[],"tag":"TypeVar","contents":"a"}]}]},null]},null]}},"sourceSpan":{"start":[34,1],"name":"/home/jordan/Programming/ps-libs/lib/type-equality/src/Type/Equality.purs","end":[34,45]}}]}],"resolvedDependencies":{"purescript-newtype":"5.0.0","purescript-effect":"4.0.0","purescript-console":"6.0.0","purescript-prelude":"6.0.0","purescript-unsafe-coerce":"6.0.0","purescript-safe-coerce":"2.0.0"},"version":"4.0.1","github":["purescript","purescript-type-equality"],"versionTag":"v4.0.1","moduleMap":{"Data.BooleanAlgebra":"purescript-prelude","Data.Ring":"purescript-prelude","Data.Semigroup.Generic":"purescript-prelude","Effect.Uncurried":"purescript-effect","Data.Monoid.Generic":"purescript-prelude","Effect":"purescript-effect","Data.HeytingAlgebra.Generic":"purescript-prelude","Data.Ord":"purescript-prelude","Data.Bounded.Generic":"purescript-prelude","Safe.Coerce":"purescript-safe-coerce","Data.Monoid.Dual":"purescript-prelude","Data.Boolean":"purescript-prelude","Data.Show.Generic":"purescript-prelude","Type.Proxy":"purescript-prelude","Data.Bounded":"purescript-prelude","Data.Show":"purescript-prelude","Control.Apply":"purescript-prelude","Control.Monad":"purescript-prelude","Data.Monoid":"purescript-prelude","Data.Ord.Generic":"purescript-prelude","Control.Bind":"purescript-prelude","Data.Monoid.Additive":"purescript-prelude","Data.Symbol":"purescript-prelude","Data.HeytingAlgebra":"purescript-prelude","Data.Ring.Generic":"purescript-prelude","Data.Semigroup":"purescript-prelude","Effect.Unsafe":"purescript-effect","Data.Semiring":"purescript-prelude","Effect.Console":"purescript-console","Data.CommutativeRing":"purescript-prelude","Data.NaturalTransformation":"purescript-prelude","Data.Monoid.Conj":"purescript-prelude","Data.Functor":"purescript-prelude","Unsafe.Coerce":"purescript-unsafe-coerce","Control.Category":"purescript-prelude","Data.Function":"purescript-prelude","Data.Field":"purescript-prelude","Data.EuclideanRing":"purescript-prelude","Data.Semigroup.Last":"purescript-prelude","Data.Semigroup.First":"purescript-prelude","Prelude":"purescript-prelude","Effect.Class":"purescript-effect","Data.Eq":"purescript-prelude","Data.Newtype":"purescript-newtype","Data.Monoid.Disj":"purescript-prelude","Data.Void":"purescript-prelude","Data.Eq.Generic":"purescript-prelude","Data.DivisionRing":"purescript-prelude","Data.Unit":"purescript-prelude","Data.Ordering":"purescript-prelude","Data.Reflectable":"purescript-prelude","Data.Monoid.Multiplicative":"purescript-prelude","Control.Semigroupoid":"purescript-prelude","Data.Generic.Rep":"purescript-prelude","Effect.Class.Console":"purescript-console","Data.Monoid.Endo":"purescript-prelude","Data.Semiring.Generic":"purescript-prelude","Control.Applicative":"purescript-prelude","Record.Unsafe":"purescript-prelude"},"compilerVersion":"0.14.5"}