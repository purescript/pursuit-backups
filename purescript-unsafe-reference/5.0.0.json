{"uploader":"JordanMartinez","packageMeta":{"homepage":"https://github.com/purescript-contrib/purescript-unsafe-reference","repository":{"url":"https://github.com/purescript-contrib/purescript-unsafe-reference.git","type":"git"},"ignore":["**/.*","node_modules","bower_components","test","output","package.json","bower.json"],"devDependencies":{"purescript-exceptions":"^6.0.0","purescript-effect":"^4.0.0","purescript-console":"^6.0.0"},"dependencies":{"purescript-prelude":"^6.0.0"},"name":"purescript-unsafe-reference","license":["MIT"],"description":"Unsafe referential equality."},"tagTime":"2022-04-27T19:34:42+0000","modules":[{"reExports":[],"name":"Unsafe.Reference","comments":null,"declarations":[{"kind":null,"children":[],"comments":"Compares two values of the same type using strict (`===`) equality.\n","title":"unsafeRefEq","info":{"declType":"value","type":{"annotation":[],"tag":"ForAll","contents":["a",{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeVar","contents":"a"}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeVar","contents":"a"}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}]},null]}},"sourceSpan":{"start":[11,1],"name":"/home/jordan/Programming/ps-libs/lib/unsafe-reference/src/Unsafe/Reference.purs","end":[11,43]}},{"kind":null,"children":[],"comments":"Compares two values of different types using strict (`===`) equality.\n","title":"reallyUnsafeRefEq","info":{"declType":"value","type":{"annotation":[],"tag":"ForAll","contents":["a",{"annotation":[],"tag":"ForAll","contents":["b",{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeVar","contents":"a"}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeVar","contents":"b"}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}]},null]},null]}},"sourceSpan":{"start":[15,1],"name":"/home/jordan/Programming/ps-libs/lib/unsafe-reference/src/Unsafe/Reference.purs","end":[15,66]}},{"kind":null,"children":[{"comments":null,"title":"UnsafeRefEq","info":{"arguments":[{"annotation":[],"tag":"TypeVar","contents":"a"}],"declType":"dataConstructor"},"sourceSpan":{"start":[18,23],"name":"/home/jordan/Programming/ps-libs/lib/unsafe-reference/src/Unsafe/Reference.purs","end":[18,38]}},{"comments":null,"title":"eqUnsafeRefEq","info":{"declType":"instance","dependencies":[],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Eq"],"Eq"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Unsafe","Reference"],"UnsafeRefEq"]},{"annotation":[],"tag":"TypeVar","contents":"a"}]}]}},"sourceSpan":{"start":[20,1],"name":"/home/jordan/Programming/ps-libs/lib/unsafe-reference/src/Unsafe/Reference.purs","end":[21,55]}}],"comments":"The `Eq` instance is defined by `unsafeRefEq`.\n","title":"UnsafeRefEq","info":{"declType":"data","dataDeclType":"newtype","typeArguments":[["a",null]]},"sourceSpan":{"start":[18,1],"name":"/home/jordan/Programming/ps-libs/lib/unsafe-reference/src/Unsafe/Reference.purs","end":[18,38]}},{"kind":null,"children":[{"comments":null,"title":"UnsafeRefEqFallback","info":{"arguments":[{"annotation":[],"tag":"TypeVar","contents":"a"}],"declType":"dataConstructor"},"sourceSpan":{"start":[25,31],"name":"/home/jordan/Programming/ps-libs/lib/unsafe-reference/src/Unsafe/Reference.purs","end":[25,54]}},{"comments":null,"title":"eqUnsafeRefEqFallback","info":{"declType":"instance","dependencies":[{"constraintAnn":[],"constraintClass":[["Data","Eq"],"Eq"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"a"}],"constraintKindArgs":[],"constraintData":null}],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Eq"],"Eq"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Unsafe","Reference"],"UnsafeRefEqFallback"]},{"annotation":[],"tag":"TypeVar","contents":"a"}]}]}},"sourceSpan":{"start":[27,1],"name":"/home/jordan/Programming/ps-libs/lib/unsafe-reference/src/Unsafe/Reference.purs","end":[31,30]}}],"comments":"The `Eq` instance first checks `unsafeRefEq`, if `false` falls back to\nthe underlying `Eq` instance.\n","title":"UnsafeRefEqFallback","info":{"declType":"data","dataDeclType":"newtype","typeArguments":[["a",null]]},"sourceSpan":{"start":[25,1],"name":"/home/jordan/Programming/ps-libs/lib/unsafe-reference/src/Unsafe/Reference.purs","end":[25,54]}}]}],"resolvedDependencies":{"purescript-exceptions":"6.0.0","purescript-newtype":"5.0.0","purescript-effect":"4.0.0","purescript-control":"6.0.0","purescript-console":"6.0.0","purescript-either":"6.0.0","purescript-maybe":"6.0.0","purescript-invariant":"6.0.0","purescript-prelude":"6.0.0","purescript-unsafe-coerce":"6.0.0","purescript-safe-coerce":"2.0.0"},"version":"5.0.0","github":["purescript-contrib","purescript-unsafe-reference"],"versionTag":"v5.0.0","moduleMap":{"Data.BooleanAlgebra":"purescript-prelude","Data.Ring":"purescript-prelude","Data.Semigroup.Generic":"purescript-prelude","Effect.Uncurried":"purescript-effect","Data.Monoid.Generic":"purescript-prelude","Effect":"purescript-effect","Data.HeytingAlgebra.Generic":"purescript-prelude","Data.Ord":"purescript-prelude","Data.Bounded.Generic":"purescript-prelude","Safe.Coerce":"purescript-safe-coerce","Data.Monoid.Dual":"purescript-prelude","Data.Boolean":"purescript-prelude","Data.Show.Generic":"purescript-prelude","Effect.Exception.Unsafe":"purescript-exceptions","Type.Proxy":"purescript-prelude","Data.Bounded":"purescript-prelude","Data.Show":"purescript-prelude","Control.Apply":"purescript-prelude","Control.Monad":"purescript-prelude","Data.Monoid":"purescript-prelude","Data.Ord.Generic":"purescript-prelude","Data.Maybe.First":"purescript-maybe","Control.Bind":"purescript-prelude","Data.Monoid.Additive":"purescript-prelude","Data.Symbol":"purescript-prelude","Data.HeytingAlgebra":"purescript-prelude","Control.Alt":"purescript-control","Data.Either.Inject":"purescript-either","Data.Ring.Generic":"purescript-prelude","Data.Semigroup":"purescript-prelude","Effect.Unsafe":"purescript-effect","Effect.Exception":"purescript-exceptions","Control.Alternative":"purescript-control","Data.Semiring":"purescript-prelude","Effect.Console":"purescript-console","Data.CommutativeRing":"purescript-prelude","Data.NaturalTransformation":"purescript-prelude","Data.Monoid.Conj":"purescript-prelude","Data.Functor":"purescript-prelude","Unsafe.Coerce":"purescript-unsafe-coerce","Control.Category":"purescript-prelude","Data.Maybe":"purescript-maybe","Control.Comonad":"purescript-control","Data.Function":"purescript-prelude","Data.Field":"purescript-prelude","Data.EuclideanRing":"purescript-prelude","Data.Semigroup.Last":"purescript-prelude","Data.Semigroup.First":"purescript-prelude","Data.Functor.Invariant":"purescript-invariant","Prelude":"purescript-prelude","Effect.Class":"purescript-effect","Control.Extend":"purescript-control","Control.Lazy":"purescript-control","Data.Eq":"purescript-prelude","Data.Either.Nested":"purescript-either","Data.Newtype":"purescript-newtype","Data.Monoid.Disj":"purescript-prelude","Control.MonadPlus":"purescript-control","Data.Void":"purescript-prelude","Data.Eq.Generic":"purescript-prelude","Data.DivisionRing":"purescript-prelude","Data.Maybe.Last":"purescript-maybe","Data.Unit":"purescript-prelude","Data.Ordering":"purescript-prelude","Data.Reflectable":"purescript-prelude","Control.Plus":"purescript-control","Data.Monoid.Multiplicative":"purescript-prelude","Control.Semigroupoid":"purescript-prelude","Data.Monoid.Alternate":"purescript-control","Data.Generic.Rep":"purescript-prelude","Effect.Class.Console":"purescript-console","Data.Monoid.Endo":"purescript-prelude","Data.Semiring.Generic":"purescript-prelude","Data.Either":"purescript-either","Control.Applicative":"purescript-prelude","Record.Unsafe":"purescript-prelude"},"compilerVersion":"0.14.5"}