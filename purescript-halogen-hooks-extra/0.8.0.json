{"uploader":"JordanMartinez","packageMeta":{"homepage":"https://github.com/JordanMartinez/purescript-halogen-hooks-extra","repository":{"url":"https://github.com/jordanmartinez/purescript-halogen-hooks-extra.git","type":"git"},"private":true,"ignore":["**/.*","node_modules","bower_components","spago","generated-docs","examples","dist",".pulp-cache"],"authors":[{"email":"jordanalex.martinez@gmail.com","name":"Jordan Martinez"}],"dependencies":{"purescript-halogen-hooks":"https://github.com/thomashoneyman/purescript-halogen-hooks.git#v0.5.0","purescript-halogen":"^6.0.0"},"name":"purescript-halogen-hooks-extra","keywords":["halogen","halogen-hooks"],"license":["MIT"],"description":"Provides useful Halogen Hooks and other utilities commonly used in hooks (e.g. actions)."},"tagTime":"2021-03-16T19:01:39+0000","modules":[{"reExports":[],"name":"Halogen.Hooks.Extra.Actions.Events","comments":null,"declarations":[{"children":[],"comments":null,"title":"preventDefault'","info":{"declType":"value","type":{"annotation":[],"tag":"ForAll","contents":["m",{"annotation":[],"tag":"ConstrainedType","contents":[{"constraintAnn":[],"constraintClass":[["Effect","Class"],"MonadEffect"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"m"}],"constraintKindArgs":[],"constraintData":null},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Web","Event","Internal","Types"],"Event"]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Halogen","Hooks","HookM"],"HookM"]},{"annotation":[],"tag":"TypeVar","contents":"m"}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]}]},null]}},"sourceSpan":{"start":[11,1],"name":"src/Halogen/Hooks/Extra/Actions/Events.purs","end":[15,18]}},{"children":[],"comments":null,"title":"preventDefault","info":{"declType":"value","type":{"annotation":[],"tag":"ForAll","contents":["event",{"annotation":[],"tag":"ForAll","contents":["m",{"annotation":[],"tag":"ConstrainedType","contents":[{"constraintAnn":[],"constraintClass":[["Effect","Class"],"MonadEffect"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"m"}],"constraintKindArgs":[],"constraintData":null},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeVar","contents":"event"}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Web","Event","Internal","Types"],"Event"]}]}}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeVar","contents":"event"}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Halogen","Hooks","HookM"],"HookM"]},{"annotation":[],"tag":"TypeVar","contents":"m"}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]}]}]},null]},null]}},"sourceSpan":{"start":[18,1],"name":"src/Halogen/Hooks/Extra/Actions/Events.purs","end":[23,18]}},{"children":[],"comments":null,"title":"preventMouseEvent","info":{"declType":"value","type":{"annotation":[],"tag":"ForAll","contents":["m",{"annotation":[],"tag":"ConstrainedType","contents":[{"constraintAnn":[],"constraintClass":[["Effect","Class"],"MonadEffect"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"m"}],"constraintKindArgs":[],"constraintData":null},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Web","UIEvent","MouseEvent"],"MouseEvent"]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Halogen","Hooks","HookM"],"HookM"]},{"annotation":[],"tag":"TypeVar","contents":"m"}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]}]},null]}},"sourceSpan":{"start":[26,1],"name":"src/Halogen/Hooks/Extra/Actions/Events.purs","end":[30,18]}},{"children":[],"comments":null,"title":"preventKeyEvent","info":{"declType":"value","type":{"annotation":[],"tag":"ForAll","contents":["m",{"annotation":[],"tag":"ConstrainedType","contents":[{"constraintAnn":[],"constraintClass":[["Effect","Class"],"MonadEffect"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"m"}],"constraintKindArgs":[],"constraintData":null},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Web","UIEvent","KeyboardEvent"],"KeyboardEvent"]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Halogen","Hooks","HookM"],"HookM"]},{"annotation":[],"tag":"TypeVar","contents":"m"}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]}]},null]}},"sourceSpan":{"start":[33,1],"name":"src/Halogen/Hooks/Extra/Actions/Events.purs","end":[37,18]}}]},{"reExports":[{"moduleName":{"package":null,"item":["Halogen","Hooks","Extra","Hooks","UseDebouncer"]},"declarations":[{"children":[],"comments":null,"title":"UseDebouncer","info":{"kind":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Type"]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Halogen","Hooks","Types"],"HookType"]}]},"declType":"externData"},"sourceSpan":{"start":[23,1],"name":"src/Halogen/Hooks/Extra/Hooks/UseDebouncer.purs","end":[23,59]}},{"children":[],"comments":"A hook that, once the given time period ends, will run an action using\nthe last value written. Once the initial write occurs, a timer is set\nand begins counting down. If a new write occurs before that timer ends,\nthe timer restarts. When the timer ends, the last value that was written\nwill be passed into the handler.\n\n## Example Usage\n\nThe below example shows how to update the label with the value the\nuser inputted after there have been 500ms of no user input.\n\n```\nmyComponent = Hooks.component \\_ -> Hooks.do\n  label /\\ labelId <- useState \"\"\n  makeNewSearchFor <- useDebouncer (Milliseconds 500.0) \\finalValue -> do\n     Hooks.put labelId finalValue\n\n  Hooks.pure\n   HH.div_\n     [ HH.h1_\n       [ HH.text $ \"Label text is: \" <> label ]\n     , HH.input\n       [ HP.onValueInput \\str -> Just (makeNewSearchFor str) ]\n     ]\n```\n","title":"useDebouncer","info":{"declType":"value","type":{"annotation":[],"tag":"ForAll","contents":["m",{"annotation":[],"tag":"ForAll","contents":["a",{"annotation":[],"tag":"ConstrainedType","contents":[{"constraintAnn":[],"constraintClass":[["Effect","Aff","Class"],"MonadAff"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"m"}],"constraintKindArgs":[],"constraintData":null},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Time","Duration"],"Milliseconds"]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeVar","contents":"a"}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Halogen","Hooks","HookM"],"HookM"]},{"annotation":[],"tag":"TypeVar","contents":"m"}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]}}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Halogen","Hooks","Hook"],"Hook"]},{"annotation":[],"tag":"TypeVar","contents":"m"}]},{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Halogen","Hooks","Extra","Hooks","UseDebouncer"],"UseDebouncer"]},{"annotation":[],"tag":"TypeVar","contents":"a"}]}}]},{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeVar","contents":"a"}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Halogen","Hooks","HookM"],"HookM"]},{"annotation":[],"tag":"TypeVar","contents":"m"}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]}}]}]}]}]},null]},null]}},"sourceSpan":{"start":[56,1],"name":"src/Halogen/Hooks/Extra/Hooks/UseDebouncer.purs","end":[61,49]}}]},{"moduleName":{"package":null,"item":["Halogen","Hooks","Extra","Hooks","UseEvent"]},"declarations":[{"children":[],"comments":"For proper usage, see the docs for `useEvent`.\n","title":"UseEventApi","info":{"arguments":[["m",null],["a",null]],"declType":"typeSynonym","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"annotation":[],"tag":"RCons","contents":["push",{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeVar","contents":"a"}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Halogen","Hooks","HookM"],"HookM"]},{"annotation":[],"tag":"TypeVar","contents":"m"}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]},{"annotation":[],"tag":"RCons","contents":["setCallback",{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Halogen","Hooks","HookM"],"HookM"]},{"annotation":[],"tag":"TypeVar","contents":"m"}]},{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Halogen","Hooks","HookM"],"HookM"]},{"annotation":[],"tag":"TypeVar","contents":"m"}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}}]}}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Halogen","Hooks","HookM"],"HookM"]},{"annotation":[],"tag":"TypeVar","contents":"m"}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]}}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeVar","contents":"a"}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Halogen","Hooks","HookM"],"HookM"]},{"annotation":[],"tag":"TypeVar","contents":"m"}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]}]}}]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Halogen","Hooks","HookM"],"HookM"]},{"annotation":[],"tag":"TypeVar","contents":"m"}]},{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Halogen","Hooks","HookM"],"HookM"]},{"annotation":[],"tag":"TypeVar","contents":"m"}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}}]}]},{"annotation":[],"tag":"REmpty"}]}]}]}},"sourceSpan":{"start":[33,1],"name":"src/Halogen/Hooks/Extra/Hooks/UseEvent.purs","end":[42,4]}},{"children":[],"comments":null,"title":"UseEvent","info":{"kind":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Type"]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Type"]}]}}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Type"]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Halogen","Hooks","Types"],"HookType"]}]}]},"declType":"externData"},"sourceSpan":{"start":[29,1],"name":"src/Halogen/Hooks/Extra/Hooks/UseEvent.purs","end":[29,73]}},{"children":[],"comments":"Allows you to \"push\" events that occur inside a hook\nto a single handler outside of the hook. This allows the end user\nto use the full API returned by the hook when handling the event.\nMoreover, the end-user can set up resources on the first time\nthe handler is run and unsubscribe when the finalizer is run.\n\nFor example...\n```\n-- let's say this is the end-user's Hook code\nonEvent <- useEvent\n\n-- Here, we'll inline the code for a hypothetical hook we found.\n-- This could be a hook provided by a library or something.\n{ foo } <- Hooks.do\n\n  -- somewhere in the hypothetical hook, an event occurs\n  onEvent.push \"user clicked foo\"\n\n  -- return the value of the hook provided by the library\n  pure { foo: \"foo\" }\n\nHooks.useLifecycleEffect do\n  unsubscribe <- onEvent.setCallback $ Just \\setupSubscription str -> do\n    -- handle the event\n    Hooks.raise (\"Event occurred: \" <> str)\n\n    setupSubscription do\n      -- Then, set up some resources in this code block\n      -- that need to be cleaned up later\n      liftEffect $ log $ \"Setting up resources.\"\n\n      pure do\n        -- now define the code that will run when we call\n        -- 'unsubscribe' later\n        liftEffect $ log $ \"Cleaning up resources.\"\n\n  pure $ Just do\n    -- unsubscribe to clean up resources\n    unsubscribe\n```\nIf you don't need to unsubscribe, just ignore the first argument\nin the function passed to `onEvent`:\n```\nstate /\\ stateId <- useState 0\n\nHooks.captures { state } Hooks.useTickEffect do\n  -- Notice two things here:\n  -- 1. we're ignoring the 'unsubscribeCallback' argument\n  --        by using the underscore (i.e. _).\n  -- 2. we're ignoring the returned 'unsubscribe' code by using `void`.\n  void $ onEvent \\_ string -> do\n    -- handle the event\n    Hooks.raise (\"Event occurred: \" <> string)\n\n  pure Nothing -- no need to unsubscribe here\n```\n\n## Beware Infinite Loops\n\nIf you use this hook, it's possible for you to create an infinite loop.\nThis will occur if a handler runs code that causes another event to\nbe emitted. Consider this workflow:\n\n1. Event A is emitted\n2. During A's handler, Action X is called\n3. During Action X's computation, Event A is emitted.\n4. An infinite loop occurs (go to Step 2)\n\nHere's an example in code:\n```\nlibrary <- useLibrary\nuseLifecycleEffect do\n  library.onNewInteger \\newInt -> do\n    library.setIntValue (newInt + 1)\n```\nConsider also cases where the chain is longer and\nsome computations run only when certain conditions are true:\n\n1. Event A is emitted\n2. During A's handler, Action X is called\n3. During Action X's computation, Event B is emitted.\n4. During B's handler, Action Y is called\n5. During Action Y's computation, Event C is emitted but only if State M is equal to 4.\n6. During C's handler, Action Z is called\n7. During Action Z's computation, Event A is emitted.\n8. Infinite loop may occur (depends on State M)\n","title":"useEvent","info":{"declType":"value","type":{"annotation":[],"tag":"ForAll","contents":["m",{"annotation":[],"tag":"ForAll","contents":["a",{"annotation":[],"tag":"ConstrainedType","contents":[{"constraintAnn":[],"constraintClass":[["Effect","Class"],"MonadEffect"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"m"}],"constraintKindArgs":[],"constraintData":null},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Halogen","Hooks","Hook"],"Hook"]},{"annotation":[],"tag":"TypeVar","contents":"m"}]},{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Halogen","Hooks","Extra","Hooks","UseEvent"],"UseEvent"]},{"annotation":[],"tag":"TypeVar","contents":"m"}]},{"annotation":[],"tag":"TypeVar","contents":"a"}]}}]},{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Halogen","Hooks","Extra","Hooks","UseEvent"],"UseEventApi"]},{"annotation":[],"tag":"TypeVar","contents":"m"}]},{"annotation":[],"tag":"TypeVar","contents":"a"}]}}]}]},null]},null]}},"sourceSpan":{"start":[130,1],"name":"src/Halogen/Hooks/Extra/Hooks/UseEvent.purs","end":[132,45]}}]},{"moduleName":{"package":null,"item":["Halogen","Hooks","Extra","Hooks","UseGet"]},"declarations":[{"children":[],"comments":null,"title":"UseGet","info":{"kind":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Type"]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Halogen","Hooks","Types"],"HookType"]}]},"declType":"externData"},"sourceSpan":{"start":[19,1],"name":"src/Halogen/Hooks/Extra/Hooks/UseGet.purs","end":[19,53]}},{"children":[],"comments":"Use this hook when you wish to ensure that your reference to a state\nvalue or the component's input is not \"stale\" or outdated. Usually, this\nhappens in when you define a computation in one \"Hook evaluation cycle,\"\nbut you do not run the computation until a future \"Hook evaluation cycle.\"\nThis typically occurs when running a `useLifecycleEffect`/`useTickEffect`'s\ncleanup/finalizer/unsubscribe computation.\n\nLet's see an example of an effect's finalizer referring to a stale value\nin code. If you don't use `useGet` in this situation, you will refer to\nwhat the value used to be (a stale value), not what the value is now:\n```\nmyComponent :: forall q i o m. MonadAff m => H.Component HH.HTML q i o m\nmyComponent = Hooks.component \\_ _ -> Hooks.do\n  thisIsFive_NotSix /\\ stateId <- Hooks.useState 5\n  let modifyState = Hooks.modify_ stateId\n\n  Hooks.captures {} Hooks.useTickEffect do\n    -- The `thisIsFive_NotSix` state reference is currently `5` and\n    -- is up-to-date because this effect body runs immediately\n    -- after the Hook evaluation in which it is defined.\n    -- Thus, this will print \"5\" to the console.\n    logShow thisIsFive_NotSix\n\n    -- Now we change the value to 6\n    modifyState (_ + 1)\n\n    pure $ Just $ do\n      -- The effect cleanup, however, will not run after the Hook\n      -- evaluation in which it is defined. Thus, the `thisIsFive_NotSix`\n      -- state reference is still `5` even though we previously\n      -- updated the real value to 6.\n      -- Thus, this will print \"5\" to the console when it should print \"6\".\n      logShow thisIsFive_NotSix\n```\nTo ensure we refer to the latest value and not a stale one, we use\nthis hook to do so.\n```\nmyComponent :: forall q i o m. MonadAff m => H.Component HH.HTML q i o m\nmyComponent = Hooks.component \\_ _ -> Hooks.do\n  thisIsFive_NotSix /\\ stateId <- Hooks.useState 5\n  let modifyState = Hooks.modify_ stateId\n\n  -- This returns a function to get the latest state/input value.\n  getState <- useGet thisIsFive_NotSix\n\n  Hooks.captures {} Hooks.useTickEffect do\n    logShow thisIsFive_NotSix\n\n    modifyState (_ + 1)\n\n    pure $ Just $ do\n      -- Now we get the latest value rather than using the stale value.\n      -- This correctly prints \"6\".\n      thisIsSix_NotFive <- getState\n      logShow thisIsSix_NotFive\n```\n","title":"useGet","info":{"declType":"value","type":{"annotation":[],"tag":"ForAll","contents":["m",{"annotation":[],"tag":"ForAll","contents":["a",{"annotation":[],"tag":"ConstrainedType","contents":[{"constraintAnn":[],"constraintClass":[["Effect","Class"],"MonadEffect"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"m"}],"constraintKindArgs":[],"constraintData":null},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeVar","contents":"a"}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Halogen","Hooks","Hook"],"Hook"]},{"annotation":[],"tag":"TypeVar","contents":"m"}]},{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Halogen","Hooks","Extra","Hooks","UseGet"],"UseGet"]},{"annotation":[],"tag":"TypeVar","contents":"a"}]}}]},{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Halogen","Hooks","HookM"],"HookM"]},{"annotation":[],"tag":"TypeVar","contents":"m"}]},{"annotation":[],"tag":"TypeVar","contents":"a"}]}}]}]}]},null]},null]}},"sourceSpan":{"start":[78,1],"name":"src/Halogen/Hooks/Extra/Hooks/UseGet.purs","end":[82,35]}}]},{"moduleName":{"package":null,"item":["Halogen","Hooks","Extra","Hooks","UseStateFn"]},"declarations":[{"children":[],"comments":null,"title":"UseStateFn","info":{"kind":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Type"]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Halogen","Hooks","Types"],"HookType"]}]},"declType":"externData"},"sourceSpan":{"start":[19,1],"name":"src/Halogen/Hooks/Extra/Hooks/UseStateFn.purs","end":[19,57]}},{"children":[],"comments":"`useStateFn` allows you to choose a `MonadState` function to pair with\n`Hooks.useState` so you don't have to keep re-typing these functions in\nyour code if you only need to use one of them per piece of state.\n\nThe available functions to choose from are:\n- Hooks.modify_\n- Hooks.modify\n- Hooks.put\n- Hooks.get\n\nFor example, rather than writing:\n```\ncount /\\ countIdx <- Hooks.useState 42\n-- ...\nHooks.modify_ countIdx (add 1)\n```\n\nYou can write:\n```\ncount /\\ modifyCount <- useStateFn Hooks.modify_ 42\n-- ...\nmodifyCount (add 1)\n```\n\nSee these helper functions for another layer of convenience:\n- useModifyState_\n- useModifyState\n- usePutState\n\n","title":"useStateFn","info":{"declType":"value","type":{"annotation":[],"tag":"ForAll","contents":["m",{"annotation":[],"tag":"ForAll","contents":["a",{"annotation":[],"tag":"ForAll","contents":["b",{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Halogen","Hooks","Types"],"StateId"]},{"annotation":[],"tag":"TypeVar","contents":"a"}]}]},{"annotation":[],"tag":"TypeVar","contents":"b"}]}}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeVar","contents":"a"}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Halogen","Hooks","Hook"],"Hook"]},{"annotation":[],"tag":"TypeVar","contents":"m"}]},{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Halogen","Hooks","Extra","Hooks","UseStateFn"],"UseStateFn"]},{"annotation":[],"tag":"TypeVar","contents":"a"}]}}]},{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Tuple"],"Tuple"]},{"annotation":[],"tag":"TypeVar","contents":"a"}]},{"annotation":[],"tag":"TypeVar","contents":"b"}]}}]}]}]},null]},null]},null]}},"sourceSpan":{"start":[51,1],"name":"src/Halogen/Hooks/Extra/Hooks/UseStateFn.purs","end":[55,39]}},{"children":[],"comments":"Just like `useState`, but provides a convenience function for setting\nstate, rather than a state index to pass to `Hooks.put`.\n\nExample:\n```\ncount /\\ putCount <- usePutState 42\n-- ...\nputCount 0\n```\n\nInstead of:\n```\ncount /\\ countIdx <- Hooks.useState 42\n-- ...\nHooks.put countIdx 0\n```\n\nShorthand for:\n```\nuseStateFn Hooks.put\n```\n\n","title":"usePutState","info":{"declType":"value","type":{"annotation":[],"tag":"ForAll","contents":["m",{"annotation":[],"tag":"ForAll","contents":["a",{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeVar","contents":"a"}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Halogen","Hooks","Hook"],"Hook"]},{"annotation":[],"tag":"TypeVar","contents":"m"}]},{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Halogen","Hooks","Extra","Hooks","UseStateFn"],"UseStateFn"]},{"annotation":[],"tag":"TypeVar","contents":"a"}]}}]},{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Tuple"],"Tuple"]},{"annotation":[],"tag":"TypeVar","contents":"a"}]},{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeVar","contents":"a"}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Halogen","Hooks","HookM"],"HookM"]},{"annotation":[],"tag":"TypeVar","contents":"m"}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]}}]}}]}]},null]},null]}},"sourceSpan":{"start":[142,1],"name":"src/Halogen/Hooks/Extra/Hooks/UseStateFn.purs","end":[145,57]}},{"children":[],"comments":"Just like `useState`, but provides a convenience function for updating\nstate, rather than a state index to pass to `Hooks.modify_`.\n\nExample:\n```\ncount /\\ modifyCount <- useModifyState_ 42\n-- ...\nmodifyCount (add 1)\n```\n\nInstead of:\n```\ncount /\\ countIdx <- Hooks.useState 42\n-- ...\nHooks.modify_ countIdx (add 1)\n```\n\nShorthand for:\n```\nuseStateFn Hooks.modify_\n```\n\n","title":"useModifyState_","info":{"declType":"value","type":{"annotation":[],"tag":"ForAll","contents":["m",{"annotation":[],"tag":"ForAll","contents":["a",{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeVar","contents":"a"}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Halogen","Hooks","Hook"],"Hook"]},{"annotation":[],"tag":"TypeVar","contents":"m"}]},{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Halogen","Hooks","Extra","Hooks","UseStateFn"],"UseStateFn"]},{"annotation":[],"tag":"TypeVar","contents":"a"}]}}]},{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Tuple"],"Tuple"]},{"annotation":[],"tag":"TypeVar","contents":"a"}]},{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeVar","contents":"a"}]},{"annotation":[],"tag":"TypeVar","contents":"a"}]}}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Halogen","Hooks","HookM"],"HookM"]},{"annotation":[],"tag":"TypeVar","contents":"m"}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]}}]}}]}]},null]},null]}},"sourceSpan":{"start":[84,1],"name":"src/Halogen/Hooks/Extra/Hooks/UseStateFn.purs","end":[87,64]}},{"children":[],"comments":"Just like `useState`, but provides a convenience function for updating\nstate, rather than a state index to pass to `Hooks.modify`.\n\nExample:\n```\ncount /\\ modifyCount <- useModifyState 42\n-- ...\nnewCount <- modifyCount (add 1)\n```\n\nInstead of:\n```\ncount /\\ countIdx <- Hooks.useState 42\n-- ...\nnewCount <- Hooks.modify countIdx (add 1)\n```\n\nShorthand for:\n```\nuseStateFn Hooks.modify\n```\n\n","title":"useModifyState","info":{"declType":"value","type":{"annotation":[],"tag":"ForAll","contents":["m",{"annotation":[],"tag":"ForAll","contents":["a",{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeVar","contents":"a"}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Halogen","Hooks","Hook"],"Hook"]},{"annotation":[],"tag":"TypeVar","contents":"m"}]},{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Halogen","Hooks","Extra","Hooks","UseStateFn"],"UseStateFn"]},{"annotation":[],"tag":"TypeVar","contents":"a"}]}}]},{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Tuple"],"Tuple"]},{"annotation":[],"tag":"TypeVar","contents":"a"}]},{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeVar","contents":"a"}]},{"annotation":[],"tag":"TypeVar","contents":"a"}]}}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Halogen","Hooks","HookM"],"HookM"]},{"annotation":[],"tag":"TypeVar","contents":"m"}]},{"annotation":[],"tag":"TypeVar","contents":"a"}]}]}}]}}]}]},null]},null]}},"sourceSpan":{"start":[113,1],"name":"src/Halogen/Hooks/Extra/Hooks/UseStateFn.purs","end":[116,61]}}]},{"moduleName":{"package":null,"item":["Halogen","Hooks","Extra","Hooks","UseThrottle"]},"declarations":[{"children":[],"comments":null,"title":"UseThrottle","info":{"kind":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Type"]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Halogen","Hooks","Types"],"HookType"]}]},"declType":"externData"},"sourceSpan":{"start":[20,1],"name":"src/Halogen/Hooks/Extra/Hooks/UseThrottle.purs","end":[20,58]}},{"children":[],"comments":"Limits the amount of times an action is performed per time period.\nUse this hook when you need to run the same action repeatedly with a different input,\nbut you are concerned about performance or resource usage.\n\n## Example Usage\n\nThe below example shows how to update the label with the mouse position,\nlimiting the number of times the label is updated to once every 100ms.\n\n```\nmyComponent = Hooks.component \\_ _ -> Hooks.do\n  position /\\ positionId <- useState { x: zero, y: zero }\n  throttledMouseMove <- useThrottle (Milliseconds 100.0) \\e -> do\n    Hooks.modify_ positionId (_ { x = MouseEvent.pageX e, y = MouseEvent.pageY e}))\n\n  Hooks.pure $\n    HH.div\n      [ HE.onMouseMove $ Just <<< throttledMouseMove ]\n      [ HH.label_\n        [ HH.text $ \"Mouse position: (\" <>\n             show position.x <> \", \" <> show position.y <> \")\"\n        ]\n      ]\n```\n","title":"useThrottle","info":{"declType":"value","type":{"annotation":[],"tag":"ForAll","contents":["m",{"annotation":[],"tag":"ForAll","contents":["a",{"annotation":[],"tag":"ConstrainedType","contents":[{"constraintAnn":[],"constraintClass":[["Effect","Aff","Class"],"MonadAff"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"m"}],"constraintKindArgs":[],"constraintData":null},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Time","Duration"],"Milliseconds"]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeVar","contents":"a"}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Halogen","Hooks","HookM"],"HookM"]},{"annotation":[],"tag":"TypeVar","contents":"m"}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]}}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Halogen","Hooks","Hook"],"Hook"]},{"annotation":[],"tag":"TypeVar","contents":"m"}]},{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Halogen","Hooks","Extra","Hooks","UseThrottle"],"UseThrottle"]},{"annotation":[],"tag":"TypeVar","contents":"a"}]}}]},{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeVar","contents":"a"}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Halogen","Hooks","HookM"],"HookM"]},{"annotation":[],"tag":"TypeVar","contents":"m"}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]}}]}]}]}]},null]},null]}},"sourceSpan":{"start":[47,1],"name":"src/Halogen/Hooks/Extra/Hooks/UseThrottle.purs","end":[52,48]}}]}],"name":"Halogen.Hooks.Extra.Hooks","comments":"Reexports all Hooks defined in this repository.\n","declarations":[]},{"reExports":[],"name":"Halogen.Hooks.Extra.Hooks.UseDebouncer","comments":null,"declarations":[{"children":[],"comments":"A hook that, once the given time period ends, will run an action using\nthe last value written. Once the initial write occurs, a timer is set\nand begins counting down. If a new write occurs before that timer ends,\nthe timer restarts. When the timer ends, the last value that was written\nwill be passed into the handler.\n\n## Example Usage\n\nThe below example shows how to update the label with the value the\nuser inputted after there have been 500ms of no user input.\n\n```\nmyComponent = Hooks.component \\_ -> Hooks.do\n  label /\\ labelId <- useState \"\"\n  makeNewSearchFor <- useDebouncer (Milliseconds 500.0) \\finalValue -> do\n     Hooks.put labelId finalValue\n\n  Hooks.pure\n   HH.div_\n     [ HH.h1_\n       [ HH.text $ \"Label text is: \" <> label ]\n     , HH.input\n       [ HP.onValueInput \\str -> Just (makeNewSearchFor str) ]\n     ]\n```\n","title":"useDebouncer","info":{"declType":"value","type":{"annotation":[],"tag":"ForAll","contents":["m",{"annotation":[],"tag":"ForAll","contents":["a",{"annotation":[],"tag":"ConstrainedType","contents":[{"constraintAnn":[],"constraintClass":[["Effect","Aff","Class"],"MonadAff"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"m"}],"constraintKindArgs":[],"constraintData":null},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Time","Duration"],"Milliseconds"]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeVar","contents":"a"}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Halogen","Hooks","HookM"],"HookM"]},{"annotation":[],"tag":"TypeVar","contents":"m"}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]}}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Halogen","Hooks","Hook"],"Hook"]},{"annotation":[],"tag":"TypeVar","contents":"m"}]},{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Halogen","Hooks","Extra","Hooks","UseDebouncer"],"UseDebouncer"]},{"annotation":[],"tag":"TypeVar","contents":"a"}]}}]},{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeVar","contents":"a"}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Halogen","Hooks","HookM"],"HookM"]},{"annotation":[],"tag":"TypeVar","contents":"m"}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]}}]}]}]}]},null]},null]}},"sourceSpan":{"start":[56,1],"name":"src/Halogen/Hooks/Extra/Hooks/UseDebouncer.purs","end":[61,49]}},{"children":[],"comments":null,"title":"UseDebouncer","info":{"kind":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Type"]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Halogen","Hooks","Types"],"HookType"]}]},"declType":"externData"},"sourceSpan":{"start":[23,1],"name":"src/Halogen/Hooks/Extra/Hooks/UseDebouncer.purs","end":[23,59]}}]},{"reExports":[],"name":"Halogen.Hooks.Extra.Hooks.UseEvent","comments":null,"declarations":[{"children":[],"comments":"Allows you to \"push\" events that occur inside a hook\nto a single handler outside of the hook. This allows the end user\nto use the full API returned by the hook when handling the event.\nMoreover, the end-user can set up resources on the first time\nthe handler is run and unsubscribe when the finalizer is run.\n\nFor example...\n```\n-- let's say this is the end-user's Hook code\nonEvent <- useEvent\n\n-- Here, we'll inline the code for a hypothetical hook we found.\n-- This could be a hook provided by a library or something.\n{ foo } <- Hooks.do\n\n  -- somewhere in the hypothetical hook, an event occurs\n  onEvent.push \"user clicked foo\"\n\n  -- return the value of the hook provided by the library\n  pure { foo: \"foo\" }\n\nHooks.useLifecycleEffect do\n  unsubscribe <- onEvent.setCallback $ Just \\setupSubscription str -> do\n    -- handle the event\n    Hooks.raise (\"Event occurred: \" <> str)\n\n    setupSubscription do\n      -- Then, set up some resources in this code block\n      -- that need to be cleaned up later\n      liftEffect $ log $ \"Setting up resources.\"\n\n      pure do\n        -- now define the code that will run when we call\n        -- 'unsubscribe' later\n        liftEffect $ log $ \"Cleaning up resources.\"\n\n  pure $ Just do\n    -- unsubscribe to clean up resources\n    unsubscribe\n```\nIf you don't need to unsubscribe, just ignore the first argument\nin the function passed to `onEvent`:\n```\nstate /\\ stateId <- useState 0\n\nHooks.captures { state } Hooks.useTickEffect do\n  -- Notice two things here:\n  -- 1. we're ignoring the 'unsubscribeCallback' argument\n  --        by using the underscore (i.e. _).\n  -- 2. we're ignoring the returned 'unsubscribe' code by using `void`.\n  void $ onEvent \\_ string -> do\n    -- handle the event\n    Hooks.raise (\"Event occurred: \" <> string)\n\n  pure Nothing -- no need to unsubscribe here\n```\n\n## Beware Infinite Loops\n\nIf you use this hook, it's possible for you to create an infinite loop.\nThis will occur if a handler runs code that causes another event to\nbe emitted. Consider this workflow:\n\n1. Event A is emitted\n2. During A's handler, Action X is called\n3. During Action X's computation, Event A is emitted.\n4. An infinite loop occurs (go to Step 2)\n\nHere's an example in code:\n```\nlibrary <- useLibrary\nuseLifecycleEffect do\n  library.onNewInteger \\newInt -> do\n    library.setIntValue (newInt + 1)\n```\nConsider also cases where the chain is longer and\nsome computations run only when certain conditions are true:\n\n1. Event A is emitted\n2. During A's handler, Action X is called\n3. During Action X's computation, Event B is emitted.\n4. During B's handler, Action Y is called\n5. During Action Y's computation, Event C is emitted but only if State M is equal to 4.\n6. During C's handler, Action Z is called\n7. During Action Z's computation, Event A is emitted.\n8. Infinite loop may occur (depends on State M)\n","title":"useEvent","info":{"declType":"value","type":{"annotation":[],"tag":"ForAll","contents":["m",{"annotation":[],"tag":"ForAll","contents":["a",{"annotation":[],"tag":"ConstrainedType","contents":[{"constraintAnn":[],"constraintClass":[["Effect","Class"],"MonadEffect"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"m"}],"constraintKindArgs":[],"constraintData":null},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Halogen","Hooks","Hook"],"Hook"]},{"annotation":[],"tag":"TypeVar","contents":"m"}]},{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Halogen","Hooks","Extra","Hooks","UseEvent"],"UseEvent"]},{"annotation":[],"tag":"TypeVar","contents":"m"}]},{"annotation":[],"tag":"TypeVar","contents":"a"}]}}]},{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Halogen","Hooks","Extra","Hooks","UseEvent"],"UseEventApi"]},{"annotation":[],"tag":"TypeVar","contents":"m"}]},{"annotation":[],"tag":"TypeVar","contents":"a"}]}}]}]},null]},null]}},"sourceSpan":{"start":[130,1],"name":"src/Halogen/Hooks/Extra/Hooks/UseEvent.purs","end":[132,45]}},{"children":[],"comments":null,"title":"UseEvent","info":{"kind":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Type"]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Type"]}]}}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Type"]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Halogen","Hooks","Types"],"HookType"]}]}]},"declType":"externData"},"sourceSpan":{"start":[29,1],"name":"src/Halogen/Hooks/Extra/Hooks/UseEvent.purs","end":[29,73]}},{"children":[],"comments":"For proper usage, see the docs for `useEvent`.\n","title":"UseEventApi","info":{"arguments":[["m",null],["a",null]],"declType":"typeSynonym","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"annotation":[],"tag":"RCons","contents":["push",{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeVar","contents":"a"}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Halogen","Hooks","HookM"],"HookM"]},{"annotation":[],"tag":"TypeVar","contents":"m"}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]},{"annotation":[],"tag":"RCons","contents":["setCallback",{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Halogen","Hooks","HookM"],"HookM"]},{"annotation":[],"tag":"TypeVar","contents":"m"}]},{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Halogen","Hooks","HookM"],"HookM"]},{"annotation":[],"tag":"TypeVar","contents":"m"}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}}]}}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Halogen","Hooks","HookM"],"HookM"]},{"annotation":[],"tag":"TypeVar","contents":"m"}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]}}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeVar","contents":"a"}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Halogen","Hooks","HookM"],"HookM"]},{"annotation":[],"tag":"TypeVar","contents":"m"}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]}]}}]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Halogen","Hooks","HookM"],"HookM"]},{"annotation":[],"tag":"TypeVar","contents":"m"}]},{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Halogen","Hooks","HookM"],"HookM"]},{"annotation":[],"tag":"TypeVar","contents":"m"}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}}]}]},{"annotation":[],"tag":"REmpty"}]}]}]}},"sourceSpan":{"start":[33,1],"name":"src/Halogen/Hooks/Extra/Hooks/UseEvent.purs","end":[42,4]}}]},{"reExports":[],"name":"Halogen.Hooks.Extra.Hooks.UseGet","comments":"Idea and implementation by Thomas Honeyman. This was copied\nover from the Halogen Hooks repository's Examples folder.\n","declarations":[{"children":[],"comments":"Use this hook when you wish to ensure that your reference to a state\nvalue or the component's input is not \"stale\" or outdated. Usually, this\nhappens in when you define a computation in one \"Hook evaluation cycle,\"\nbut you do not run the computation until a future \"Hook evaluation cycle.\"\nThis typically occurs when running a `useLifecycleEffect`/`useTickEffect`'s\ncleanup/finalizer/unsubscribe computation.\n\nLet's see an example of an effect's finalizer referring to a stale value\nin code. If you don't use `useGet` in this situation, you will refer to\nwhat the value used to be (a stale value), not what the value is now:\n```\nmyComponent :: forall q i o m. MonadAff m => H.Component HH.HTML q i o m\nmyComponent = Hooks.component \\_ _ -> Hooks.do\n  thisIsFive_NotSix /\\ stateId <- Hooks.useState 5\n  let modifyState = Hooks.modify_ stateId\n\n  Hooks.captures {} Hooks.useTickEffect do\n    -- The `thisIsFive_NotSix` state reference is currently `5` and\n    -- is up-to-date because this effect body runs immediately\n    -- after the Hook evaluation in which it is defined.\n    -- Thus, this will print \"5\" to the console.\n    logShow thisIsFive_NotSix\n\n    -- Now we change the value to 6\n    modifyState (_ + 1)\n\n    pure $ Just $ do\n      -- The effect cleanup, however, will not run after the Hook\n      -- evaluation in which it is defined. Thus, the `thisIsFive_NotSix`\n      -- state reference is still `5` even though we previously\n      -- updated the real value to 6.\n      -- Thus, this will print \"5\" to the console when it should print \"6\".\n      logShow thisIsFive_NotSix\n```\nTo ensure we refer to the latest value and not a stale one, we use\nthis hook to do so.\n```\nmyComponent :: forall q i o m. MonadAff m => H.Component HH.HTML q i o m\nmyComponent = Hooks.component \\_ _ -> Hooks.do\n  thisIsFive_NotSix /\\ stateId <- Hooks.useState 5\n  let modifyState = Hooks.modify_ stateId\n\n  -- This returns a function to get the latest state/input value.\n  getState <- useGet thisIsFive_NotSix\n\n  Hooks.captures {} Hooks.useTickEffect do\n    logShow thisIsFive_NotSix\n\n    modifyState (_ + 1)\n\n    pure $ Just $ do\n      -- Now we get the latest value rather than using the stale value.\n      -- This correctly prints \"6\".\n      thisIsSix_NotFive <- getState\n      logShow thisIsSix_NotFive\n```\n","title":"useGet","info":{"declType":"value","type":{"annotation":[],"tag":"ForAll","contents":["m",{"annotation":[],"tag":"ForAll","contents":["a",{"annotation":[],"tag":"ConstrainedType","contents":[{"constraintAnn":[],"constraintClass":[["Effect","Class"],"MonadEffect"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"m"}],"constraintKindArgs":[],"constraintData":null},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeVar","contents":"a"}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Halogen","Hooks","Hook"],"Hook"]},{"annotation":[],"tag":"TypeVar","contents":"m"}]},{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Halogen","Hooks","Extra","Hooks","UseGet"],"UseGet"]},{"annotation":[],"tag":"TypeVar","contents":"a"}]}}]},{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Halogen","Hooks","HookM"],"HookM"]},{"annotation":[],"tag":"TypeVar","contents":"m"}]},{"annotation":[],"tag":"TypeVar","contents":"a"}]}}]}]}]},null]},null]}},"sourceSpan":{"start":[78,1],"name":"src/Halogen/Hooks/Extra/Hooks/UseGet.purs","end":[82,35]}},{"children":[],"comments":null,"title":"UseGet","info":{"kind":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Type"]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Halogen","Hooks","Types"],"HookType"]}]},"declType":"externData"},"sourceSpan":{"start":[19,1],"name":"src/Halogen/Hooks/Extra/Hooks/UseGet.purs","end":[19,53]}}]},{"reExports":[],"name":"Halogen.Hooks.Extra.Hooks.UseStateFn","comments":"Idea and implementation by Thomas Honeyman. This was copied\nover from the Halogen Hooks repository's Examples folder.\n","declarations":[{"children":[],"comments":"`useStateFn` allows you to choose a `MonadState` function to pair with\n`Hooks.useState` so you don't have to keep re-typing these functions in\nyour code if you only need to use one of them per piece of state.\n\nThe available functions to choose from are:\n- Hooks.modify_\n- Hooks.modify\n- Hooks.put\n- Hooks.get\n\nFor example, rather than writing:\n```\ncount /\\ countIdx <- Hooks.useState 42\n-- ...\nHooks.modify_ countIdx (add 1)\n```\n\nYou can write:\n```\ncount /\\ modifyCount <- useStateFn Hooks.modify_ 42\n-- ...\nmodifyCount (add 1)\n```\n\nSee these helper functions for another layer of convenience:\n- useModifyState_\n- useModifyState\n- usePutState\n\n","title":"useStateFn","info":{"declType":"value","type":{"annotation":[],"tag":"ForAll","contents":["m",{"annotation":[],"tag":"ForAll","contents":["a",{"annotation":[],"tag":"ForAll","contents":["b",{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Halogen","Hooks","Types"],"StateId"]},{"annotation":[],"tag":"TypeVar","contents":"a"}]}]},{"annotation":[],"tag":"TypeVar","contents":"b"}]}}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeVar","contents":"a"}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Halogen","Hooks","Hook"],"Hook"]},{"annotation":[],"tag":"TypeVar","contents":"m"}]},{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Halogen","Hooks","Extra","Hooks","UseStateFn"],"UseStateFn"]},{"annotation":[],"tag":"TypeVar","contents":"a"}]}}]},{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Tuple"],"Tuple"]},{"annotation":[],"tag":"TypeVar","contents":"a"}]},{"annotation":[],"tag":"TypeVar","contents":"b"}]}}]}]}]},null]},null]},null]}},"sourceSpan":{"start":[51,1],"name":"src/Halogen/Hooks/Extra/Hooks/UseStateFn.purs","end":[55,39]}},{"children":[],"comments":null,"title":"UseStateFn","info":{"kind":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Type"]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Halogen","Hooks","Types"],"HookType"]}]},"declType":"externData"},"sourceSpan":{"start":[19,1],"name":"src/Halogen/Hooks/Extra/Hooks/UseStateFn.purs","end":[19,57]}},{"children":[],"comments":"Just like `useState`, but provides a convenience function for updating\nstate, rather than a state index to pass to `Hooks.modify_`.\n\nExample:\n```\ncount /\\ modifyCount <- useModifyState_ 42\n-- ...\nmodifyCount (add 1)\n```\n\nInstead of:\n```\ncount /\\ countIdx <- Hooks.useState 42\n-- ...\nHooks.modify_ countIdx (add 1)\n```\n\nShorthand for:\n```\nuseStateFn Hooks.modify_\n```\n\n","title":"useModifyState_","info":{"declType":"value","type":{"annotation":[],"tag":"ForAll","contents":["m",{"annotation":[],"tag":"ForAll","contents":["a",{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeVar","contents":"a"}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Halogen","Hooks","Hook"],"Hook"]},{"annotation":[],"tag":"TypeVar","contents":"m"}]},{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Halogen","Hooks","Extra","Hooks","UseStateFn"],"UseStateFn"]},{"annotation":[],"tag":"TypeVar","contents":"a"}]}}]},{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Tuple"],"Tuple"]},{"annotation":[],"tag":"TypeVar","contents":"a"}]},{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeVar","contents":"a"}]},{"annotation":[],"tag":"TypeVar","contents":"a"}]}}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Halogen","Hooks","HookM"],"HookM"]},{"annotation":[],"tag":"TypeVar","contents":"m"}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]}}]}}]}]},null]},null]}},"sourceSpan":{"start":[84,1],"name":"src/Halogen/Hooks/Extra/Hooks/UseStateFn.purs","end":[87,64]}},{"children":[],"comments":"Just like `useState`, but provides a convenience function for updating\nstate, rather than a state index to pass to `Hooks.modify`.\n\nExample:\n```\ncount /\\ modifyCount <- useModifyState 42\n-- ...\nnewCount <- modifyCount (add 1)\n```\n\nInstead of:\n```\ncount /\\ countIdx <- Hooks.useState 42\n-- ...\nnewCount <- Hooks.modify countIdx (add 1)\n```\n\nShorthand for:\n```\nuseStateFn Hooks.modify\n```\n\n","title":"useModifyState","info":{"declType":"value","type":{"annotation":[],"tag":"ForAll","contents":["m",{"annotation":[],"tag":"ForAll","contents":["a",{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeVar","contents":"a"}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Halogen","Hooks","Hook"],"Hook"]},{"annotation":[],"tag":"TypeVar","contents":"m"}]},{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Halogen","Hooks","Extra","Hooks","UseStateFn"],"UseStateFn"]},{"annotation":[],"tag":"TypeVar","contents":"a"}]}}]},{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Tuple"],"Tuple"]},{"annotation":[],"tag":"TypeVar","contents":"a"}]},{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeVar","contents":"a"}]},{"annotation":[],"tag":"TypeVar","contents":"a"}]}}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Halogen","Hooks","HookM"],"HookM"]},{"annotation":[],"tag":"TypeVar","contents":"m"}]},{"annotation":[],"tag":"TypeVar","contents":"a"}]}]}}]}}]}]},null]},null]}},"sourceSpan":{"start":[113,1],"name":"src/Halogen/Hooks/Extra/Hooks/UseStateFn.purs","end":[116,61]}},{"children":[],"comments":"Just like `useState`, but provides a convenience function for setting\nstate, rather than a state index to pass to `Hooks.put`.\n\nExample:\n```\ncount /\\ putCount <- usePutState 42\n-- ...\nputCount 0\n```\n\nInstead of:\n```\ncount /\\ countIdx <- Hooks.useState 42\n-- ...\nHooks.put countIdx 0\n```\n\nShorthand for:\n```\nuseStateFn Hooks.put\n```\n\n","title":"usePutState","info":{"declType":"value","type":{"annotation":[],"tag":"ForAll","contents":["m",{"annotation":[],"tag":"ForAll","contents":["a",{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeVar","contents":"a"}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Halogen","Hooks","Hook"],"Hook"]},{"annotation":[],"tag":"TypeVar","contents":"m"}]},{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Halogen","Hooks","Extra","Hooks","UseStateFn"],"UseStateFn"]},{"annotation":[],"tag":"TypeVar","contents":"a"}]}}]},{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Tuple"],"Tuple"]},{"annotation":[],"tag":"TypeVar","contents":"a"}]},{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeVar","contents":"a"}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Halogen","Hooks","HookM"],"HookM"]},{"annotation":[],"tag":"TypeVar","contents":"m"}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]}}]}}]}]},null]},null]}},"sourceSpan":{"start":[142,1],"name":"src/Halogen/Hooks/Extra/Hooks/UseStateFn.purs","end":[145,57]}}]},{"reExports":[],"name":"Halogen.Hooks.Extra.Hooks.UseThrottle","comments":null,"declarations":[{"children":[],"comments":"Limits the amount of times an action is performed per time period.\nUse this hook when you need to run the same action repeatedly with a different input,\nbut you are concerned about performance or resource usage.\n\n## Example Usage\n\nThe below example shows how to update the label with the mouse position,\nlimiting the number of times the label is updated to once every 100ms.\n\n```\nmyComponent = Hooks.component \\_ _ -> Hooks.do\n  position /\\ positionId <- useState { x: zero, y: zero }\n  throttledMouseMove <- useThrottle (Milliseconds 100.0) \\e -> do\n    Hooks.modify_ positionId (_ { x = MouseEvent.pageX e, y = MouseEvent.pageY e}))\n\n  Hooks.pure $\n    HH.div\n      [ HE.onMouseMove $ Just <<< throttledMouseMove ]\n      [ HH.label_\n        [ HH.text $ \"Mouse position: (\" <>\n             show position.x <> \", \" <> show position.y <> \")\"\n        ]\n      ]\n```\n","title":"useThrottle","info":{"declType":"value","type":{"annotation":[],"tag":"ForAll","contents":["m",{"annotation":[],"tag":"ForAll","contents":["a",{"annotation":[],"tag":"ConstrainedType","contents":[{"constraintAnn":[],"constraintClass":[["Effect","Aff","Class"],"MonadAff"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"m"}],"constraintKindArgs":[],"constraintData":null},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Time","Duration"],"Milliseconds"]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeVar","contents":"a"}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Halogen","Hooks","HookM"],"HookM"]},{"annotation":[],"tag":"TypeVar","contents":"m"}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]}}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Halogen","Hooks","Hook"],"Hook"]},{"annotation":[],"tag":"TypeVar","contents":"m"}]},{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Halogen","Hooks","Extra","Hooks","UseThrottle"],"UseThrottle"]},{"annotation":[],"tag":"TypeVar","contents":"a"}]}}]},{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeVar","contents":"a"}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Halogen","Hooks","HookM"],"HookM"]},{"annotation":[],"tag":"TypeVar","contents":"m"}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]}}]}]}]}]},null]},null]}},"sourceSpan":{"start":[47,1],"name":"src/Halogen/Hooks/Extra/Hooks/UseThrottle.purs","end":[52,48]}},{"children":[],"comments":null,"title":"UseThrottle","info":{"kind":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Type"]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Halogen","Hooks","Types"],"HookType"]}]},"declType":"externData"},"sourceSpan":{"start":[20,1],"name":"src/Halogen/Hooks/Extra/Hooks/UseThrottle.purs","end":[20,58]}}]}],"resolvedDependencies":{"purescript-free":"6.0.0","purescript-web-storage":"4.0.0","purescript-exceptions":"5.0.0","purescript-newtype":"4.0.0","purescript-effect":"3.0.0","purescript-ordered-collections":"2.0.0","purescript-web-touchevents":"3.0.0","purescript-control":"5.0.0","purescript-console":"5.0.0","purescript-either":"5.0.0","purescript-profunctor":"5.0.0","purescript-media-types":"5.0.0","purescript-web-events":"3.0.0","purescript-arrays":"6.0.0","purescript-maybe":"5.0.0","purescript-type-equality":"4.0.0","purescript-exists":"5.0.0","purescript-distributive":"5.0.0","purescript-unfoldable":"5.0.0","purescript-invariant":"5.0.0","purescript-fork":"5.0.0","purescript-web-html":"3.0.1","purescript-halogen-hooks":"0.5.0","purescript-halogen-vdom":"7.0.0","purescript-lazy":"5.0.0","purescript-foreign-object":"3.0.0","purescript-now":"5.0.0","purescript-web-uievents":"3.0.0","purescript-halogen":"6.1.0","purescript-aff":"6.0.0","purescript-foldable-traversable":"5.0.0","purescript-tailrec":"5.0.0","purescript-unsafe-reference":"4.0.0","purescript-avar":"4.0.0","purescript-gen":"3.0.0","purescript-dom-indexed":"8.0.0","purescript-typelevel-prelude":"6.0.0","purescript-functors":"4.1.0","purescript-prelude":"5.0.0","purescript-st":"5.0.0","purescript-bifunctors":"5.0.0","purescript-nonempty":"6.0.0","purescript-contravariant":"5.0.0","purescript-unsafe-coerce":"5.0.0","purescript-refs":"5.0.0","purescript-integers":"5.0.0","purescript-orders":"5.0.0","purescript-const":"5.0.0","purescript-freeap":"6.0.0","purescript-transformers":"5.0.0","purescript-numbers":"8.0.0","purescript-js-date":"7.0.0","purescript-math":"3.0.0","purescript-enums":"5.0.0","purescript-halogen-subscriptions":"1.0.0","purescript-catenable-lists":"6.0.0","purescript-web-file":"3.0.0","purescript-web-dom":"5.0.0","purescript-parallel":"5.0.0","purescript-tuples":"6.0.0","purescript-partial":"3.0.0","purescript-strings":"5.0.0","purescript-identity":"5.0.0","purescript-foreign":"6.0.0","purescript-safe-coerce":"1.0.0","purescript-lists":"6.0.0","purescript-nullable":"5.0.0","purescript-datetime":"5.0.0","purescript-functions":"5.0.0","purescript-web-clipboard":"3.0.0"},"version":"0.8.0","github":["jordanmartinez","purescript-halogen-hooks-extra"],"versionTag":"v0.8.0","moduleMap":{"Data.BooleanAlgebra":"purescript-prelude","Web.DOM.NodeList":"purescript-web-dom","Halogen.HTML.Events":"purescript-halogen","Data.Decide":"purescript-contravariant","DOM.HTML.Indexed.InputAcceptType":"purescript-dom-indexed","Type.Data.Boolean":"purescript-typelevel-prelude","Data.Ring":"purescript-prelude","Web.UIEvent.CompositionEvent":"purescript-web-uievents","Data.Semigroup.Generic":"purescript-prelude","Web.TouchEvent.Touch":"purescript-web-touchevents","Web.HTML.HTMLDataListElement":"purescript-web-html","Control.Monad.Trans.Class":"purescript-transformers","Web.HTML.HTMLTextAreaElement":"purescript-web-html","Data.Functor.Product":"purescript-functors","Type.Function":"purescript-typelevel-prelude","DOM.HTML.Indexed.InputType":"purescript-dom-indexed","Data.Functor.Flip":"purescript-functors","Foreign.Keys":"purescript-foreign","Data.NonEmpty":"purescript-nonempty","Web.HTML.HTMLMediaElement.CanPlayType":"purescript-web-html","Effect.Uncurried":"purescript-effect","Web.DOM.ChildNode":"purescript-web-dom","Control.Monad.Identity.Trans":"purescript-transformers","Data.Char.Gen":"purescript-strings","DOM.HTML.Indexed.MenuitemType":"purescript-dom-indexed","Web.HTML.HTMLHRElement":"purescript-web-html","DOM.HTML.Indexed.ButtonType":"purescript-dom-indexed","Halogen.Hooks.Internal.Types":"purescript-halogen-hooks","Web.DOM.NonDocumentTypeChildNode":"purescript-web-dom","Effect.Now":"purescript-now","Data.Monoid.Generic":"purescript-prelude","Data.String.NonEmpty":"purescript-strings","Web.File.FileReader.ReadyState":"purescript-web-file","Effect":"purescript-effect","Web.HTML.HTMLLegendElement":"purescript-web-html","Data.Traversable.Accum.Internal":"purescript-foldable-traversable","Data.Enum.Gen":"purescript-enums","Halogen.Component":"purescript-halogen","Data.Nullable":"purescript-nullable","Control.Comonad.Env":"purescript-transformers","Web.TouchEvent":"purescript-web-touchevents","Web.HTML.Event.HashChangeEvent":"purescript-web-html","Control.Comonad.Traced.Class":"purescript-transformers","DOM.HTML.Indexed.OrderedListType":"purescript-dom-indexed","Data.Functor.Costar":"purescript-functors","Data.HeytingAlgebra.Generic":"purescript-prelude","Data.Functor.Compose":"purescript-functors","Foreign.Object.Gen":"purescript-foreign-object","Type.Row.Homogeneous":"purescript-typelevel-prelude","Data.Int.Bits":"purescript-integers","Web.HTML.Event.BeforeUnloadEvent":"purescript-web-html","Web.DOM.MutationObserver":"purescript-web-dom","Web.HTML.HTMLHyperlinkElementUtils":"purescript-web-html","Data.DateTime":"purescript-datetime","Web.UIEvent.EventTypes":"purescript-web-uievents","Data.String.CodePoints":"purescript-strings","Data.Ord":"purescript-prelude","Web.HTML.History":"purescript-web-html","Control.Monad.Gen":"purescript-gen","Data.Bounded.Generic":"purescript-prelude","Control.Monad.Free.Class":"purescript-free","Type.Data.Row":"purescript-prelude","Data.Date":"purescript-datetime","Control.Comonad.Cofree.Class":"purescript-free","Halogen.VDom.Thunk":"purescript-halogen-vdom","Safe.Coerce":"purescript-safe-coerce","Data.Monoid.Dual":"purescript-prelude","Web.HTML.Event.PopStateEvent.EventTypes":"purescript-web-html","Halogen.HTML.Properties":"purescript-halogen","Control.Monad.Rec.Class":"purescript-tailrec","Data.Time.Component":"purescript-datetime","Data.Bitraversable":"purescript-foldable-traversable","Web.DOM.ParentNode":"purescript-web-dom","Web.HTML.Event.DragEvent.EventTypes":"purescript-web-html","Halogen.Data.Slot":"purescript-halogen","Data.Boolean":"purescript-prelude","Data.Show.Generic":"purescript-prelude","Data.Map":"purescript-ordered-collections","Control.Biapplicative":"purescript-bifunctors","Web.HTML.HTMLSpanElement":"purescript-web-html","Data.CatList":"purescript-catenable-lists","Effect.Exception.Unsafe":"purescript-exceptions","Control.Parallel.Class":"purescript-parallel","Data.Array.NonEmpty.Internal":"purescript-arrays","Type.Proxy":"purescript-prelude","Data.Coyoneda":"purescript-free","Effect.Aff.Compat":"purescript-aff","Data.Array.ST.Iterator":"purescript-arrays","Data.Enum.Generic":"purescript-enums","Data.DateTime.Gen":"purescript-datetime","Data.String.Pattern":"purescript-strings","Data.Bounded":"purescript-prelude","Control.Monad.State.Trans":"purescript-transformers","Data.TraversableWithIndex":"purescript-foldable-traversable","Web.HTML.HTMLOptionElement":"purescript-web-html","Halogen.VDom.Types":"purescript-halogen-vdom","Data.Int":"purescript-integers","Web.DOM.HTMLCollection":"purescript-web-dom","Data.Profunctor.Cochoice":"purescript-profunctor","Web.HTML.Event.TrackEvent.EventTypes":"purescript-web-html","Data.Show":"purescript-prelude","Web.HTML.HTMLDivElement":"purescript-web-html","Control.Monad.Writer.Trans":"purescript-transformers","Web.File.FileReader":"purescript-web-file","Data.Foldable":"purescript-foldable-traversable","Data.Divide":"purescript-contravariant","Control.Comonad.Store.Class":"purescript-transformers","Data.Number":"purescript-numbers","Data.Enum":"purescript-enums","Control.Monad.Trampoline":"purescript-free","Foreign.Object":"purescript-foreign-object","Control.Apply":"purescript-prelude","Web.Clipboard.ClipboardEvent.EventTypes":"purescript-web-clipboard","Data.Functor.Contravariant":"purescript-contravariant","Data.Tuple.Nested":"purescript-tuples","Web.HTML.HTMLKeygenElement":"purescript-web-html","Data.List.Internal":"purescript-lists","Control.Monad":"purescript-prelude","Web.HTML.Event.EventTypes":"purescript-web-html","Web.TouchEvent.TouchEvent":"purescript-web-touchevents","Data.Lazy":"purescript-lazy","Data.Monoid":"purescript-prelude","Data.Profunctor.Closed":"purescript-profunctor","Web.HTML.Common":"purescript-web-html","Web.UIEvent.KeyboardEvent.EventTypes":"purescript-web-uievents","Control.Monad.List.Trans":"purescript-transformers","Data.Ord.Generic":"purescript-prelude","Web.HTML.HTMLLabelElement":"purescript-web-html","Web.HTML.HTMLAudioElement":"purescript-web-html","Halogen.Hooks":"purescript-halogen-hooks","Halogen.Aff.Driver.State":"purescript-halogen","Control.Monad.RWS":"purescript-transformers","Data.String.Common":"purescript-strings","Data.Maybe.First":"purescript-maybe","DOM.HTML.Indexed.PreloadValue":"purescript-dom-indexed","Control.Bind":"purescript-prelude","Web.HTML.HTMLFormElement":"purescript-web-html","Data.Profunctor.Split":"purescript-profunctor","Web.DOM.Element":"purescript-web-dom","Data.Number.Format":"purescript-numbers","Effect.Aff.Class":"purescript-aff","Halogen.Hooks.HookM":"purescript-halogen-hooks","Data.Monoid.Additive":"purescript-prelude","Data.Symbol":"purescript-prelude","Data.Map.Gen":"purescript-ordered-collections","Data.String.Regex":"purescript-strings","Data.Profunctor.Join":"purescript-profunctor","Data.HeytingAlgebra":"purescript-prelude","Control.Alt":"purescript-control","Data.Date.Gen":"purescript-datetime","Web.HTML.HTMLMediaElement.ReadyState":"purescript-web-html","Control.Monad.Maybe.Trans":"purescript-transformers","Control.Monad.Cont":"purescript-transformers","Control.Monad.ST.Internal":"purescript-st","Halogen.HTML.Core":"purescript-halogen","Type.Data.RowList":"purescript-prelude","Web.UIEvent.FocusEvent":"purescript-web-uievents","Halogen.Query.Event":"purescript-halogen","Data.Time.Component.Gen":"purescript-datetime","Web.HTML.HTMLTableElement":"purescript-web-html","Effect.Ref":"purescript-refs","Data.Either.Inject":"purescript-either","Foreign.Object.ST.Unsafe":"purescript-foreign-object","Data.List.ZipList":"purescript-lists","Data.Ord.Min":"purescript-orders","Data.Functor.Coproduct.Nested":"purescript-functors","Web.HTML.HTMLLIElement":"purescript-web-html","Data.Ring.Generic":"purescript-prelude","Web.HTML.HTMLMetaElement":"purescript-web-html","Web.HTML.HTMLOListElement":"purescript-web-html","Data.Semigroup":"purescript-prelude","Halogen.VDom.Machine":"purescript-halogen-vdom","Data.Array.NonEmpty":"purescript-arrays","Web.HTML.Event.DragEvent":"purescript-web-html","Control.Monad.Reader":"purescript-transformers","DOM.HTML.Indexed.CrossOriginValue":"purescript-dom-indexed","Data.Const":"purescript-const","Web.HTML.Event.PopStateEvent":"purescript-web-html","Web.Event.CustomEvent":"purescript-web-events","Web.HTML.Event.ErrorEvent":"purescript-web-html","Control.Comonad.Traced.Trans":"purescript-transformers","Web.DOM.Text":"purescript-web-dom","Web.HTML.HTMLObjectElement":"purescript-web-html","Halogen.Component.Profunctor":"purescript-halogen","Web.HTML.HTMLSourceElement":"purescript-web-html","Web.UIEvent.InputEvent.EventTypes":"purescript-web-uievents","Data.Ord.Down":"purescript-orders","Data.Number.Approximate":"purescript-numbers","Data.Array.ST.Partial":"purescript-arrays","Effect.Unsafe":"purescript-effect","Web.DOM.NodeType":"purescript-web-dom","Type.Data.Ordering":"purescript-typelevel-prelude","Data.Tuple":"purescript-tuples","Data.Functor.Clown":"purescript-functors","Data.Semigroup.Foldable":"purescript-foldable-traversable","Control.Biapply":"purescript-bifunctors","Data.Distributive":"purescript-distributive","Effect.Exception":"purescript-exceptions","Type.Equality":"purescript-type-equality","Foreign.Index":"purescript-foreign","DOM.HTML.Indexed.DirValue":"purescript-dom-indexed","Control.Alternative":"purescript-control","Web.HTML.HTMLSelectElement":"purescript-web-html","Data.Semiring":"purescript-prelude","Data.Functor.Product2":"purescript-functors","Web.HTML.HTMLCanvasElement":"purescript-web-html","Data.Exists":"purescript-exists","Effect.Console":"purescript-console","Data.Traversable.Accum":"purescript-foldable-traversable","Data.CommutativeRing":"purescript-prelude","Data.NaturalTransformation":"purescript-prelude","Data.Monoid.Conj":"purescript-prelude","Web.HTML.HTMLTableDataCellElement":"purescript-web-html","Data.Yoneda":"purescript-free","Web.HTML.HTMLTableCaptionElement":"purescript-web-html","Data.Functor.App":"purescript-functors","Data.Profunctor.Star":"purescript-profunctor","Data.Unfoldable":"purescript-unfoldable","Web.HTML.HTMLTemplateElement":"purescript-web-html","Web.HTML.SelectionMode":"purescript-web-html","Halogen":"purescript-halogen","Type.RowList":"purescript-typelevel-prelude","Web.UIEvent.WheelEvent.EventTypes":"purescript-web-uievents","Web.HTML.HTMLTitleElement":"purescript-web-html","Web.HTML.Event.PageTransitionEvent.EventTypes":"purescript-web-html","Web.HTML.HTMLTableCellElement":"purescript-web-html","Halogen.HTML.Elements.Keyed":"purescript-halogen","DOM.HTML.Indexed.KindValue":"purescript-dom-indexed","Control.Comonad.Store.Trans":"purescript-transformers","Foreign.Object.Unsafe":"purescript-foreign-object","Control.Monad.ST":"purescript-st","Control.Monad.State.Class":"purescript-transformers","Web.HTML.HTMLUListElement":"purescript-web-html","Web.UIEvent.KeyboardEvent":"purescript-web-uievents","Data.List.Types":"purescript-lists","Data.String.NonEmpty.CodeUnits":"purescript-strings","Data.Functor":"purescript-prelude","Web.HTML.HTMLParamElement":"purescript-web-html","Unsafe.Coerce":"purescript-unsafe-coerce","Control.Monad.Writer.Class":"purescript-transformers","Halogen.Aff":"purescript-halogen","Web.HTML.HTMLTableSectionElement":"purescript-web-html","Data.Profunctor.Strong":"purescript-profunctor","Halogen.Aff.Driver.Eval":"purescript-halogen","Data.CatQueue":"purescript-catenable-lists","Halogen.Hooks.Internal.Eval":"purescript-halogen-hooks","Control.Monad.Except":"purescript-transformers","Web.HTML.HTMLImageElement.CORSMode":"purescript-web-html","Web.Event.EventTarget":"purescript-web-events","Data.Interval":"purescript-datetime","Data.List.Lazy.Types":"purescript-lists","Control.Category":"purescript-prelude","Web.HTML.HTMLOutputElement":"purescript-web-html","Web.DOM.DocumentType":"purescript-web-dom","Data.Interval.Duration":"purescript-datetime","Control.Monad.Gen.Common":"purescript-gen","Control.Monad.RWS.Trans":"purescript-transformers","Web.UIEvent.MouseEvent.EventTypes":"purescript-web-uievents","Web.HTML.HTMLQuoteElement":"purescript-web-html","DOM.HTML.Indexed":"purescript-dom-indexed","Control.Monad.Cont.Trans":"purescript-transformers","Data.Maybe":"purescript-maybe","Halogen.Hooks.Internal.Eval.Types":"purescript-halogen-hooks","Type.Row":"purescript-typelevel-prelude","Data.String.Regex.Unsafe":"purescript-strings","Foreign.Object.ST":"purescript-foreign-object","Data.Set":"purescript-ordered-collections","Web.Clipboard.ClipboardEvent":"purescript-web-clipboard","Data.Profunctor":"purescript-profunctor","Control.Comonad":"purescript-control","Control.Monad.ST.Global":"purescript-st","Data.Function":"purescript-prelude","Data.List":"purescript-lists","Web.DOM.Internal.Types":"purescript-web-dom","Data.Field":"purescript-prelude","Data.List.Lazy":"purescript-lists","Web.HTML.Event.DataTransfer":"purescript-web-html","Data.EuclideanRing":"purescript-prelude","Halogen.Query.ChildQuery":"purescript-halogen","DOM.HTML.Indexed.OnOff":"purescript-dom-indexed","Web.HTML.Event.TrackEvent":"purescript-web-html","Data.Semigroup.Last":"purescript-prelude","Data.Semigroup.First":"purescript-prelude","Data.Functor.Invariant":"purescript-invariant","Web.HTML.HTMLVideoElement":"purescript-web-html","Halogen.Query.HalogenM":"purescript-halogen","Web.HTML.HTMLAnchorElement":"purescript-web-html","Control.Comonad.Traced":"purescript-transformers","Web.DOM.CharacterData":"purescript-web-dom","Data.Comparison":"purescript-contravariant","Unsafe.Reference":"purescript-unsafe-reference","Data.String.Unsafe":"purescript-strings","Web.UIEvent.WheelEvent":"purescript-web-uievents","Halogen.HTML.Properties.ARIA":"purescript-halogen","Prelude":"purescript-prelude","Effect.Class":"purescript-effect","Data.Predicate":"purescript-contravariant","Partial.Unsafe":"purescript-partial","Data.Array":"purescript-arrays","Web.HTML.HTMLDocument":"purescript-web-html","Control.Extend":"purescript-control","Data.Unfoldable1":"purescript-unfoldable","Control.Lazy":"purescript-control","Data.Function.Uncurried":"purescript-functions","Control.Monad.Reader.Trans":"purescript-transformers","Data.Functor.Product.Nested":"purescript-functors","Web.HTML.Event.PageTransitionEvent":"purescript-web-html","Control.Comonad.Env.Class":"purescript-transformers","Web.Event.EventPhase":"purescript-web-events","Effect.Aff.AVar":"purescript-avar","Web.HTML.HTMLOptGroupElement":"purescript-web-html","Data.Interval.Duration.Iso":"purescript-datetime","Data.Eq":"purescript-prelude","Web.HTML.HTMLIFrameElement":"purescript-web-html","Halogen.Query":"purescript-halogen","Data.Either.Nested":"purescript-either","Web.HTML.Navigator":"purescript-web-html","Control.Comonad.Cofree":"purescript-free","Data.Newtype":"purescript-newtype","Data.Semigroup.Traversable":"purescript-foldable-traversable","Data.Bifunctor":"purescript-bifunctors","Web.File.FileList":"purescript-web-file","Web.UIEvent.InputEvent":"purescript-web-uievents","Data.Monoid.Disj":"purescript-prelude","Halogen.VDom.Util":"purescript-halogen-vdom","Data.MediaType":"purescript-media-types","Control.Monad.Gen.Class":"purescript-gen","Data.Array.Partial":"purescript-arrays","Data.String.CaseInsensitive":"purescript-strings","Control.Monad.Free":"purescript-free","Web.HTML.HTMLMapElement":"purescript-web-html","Control.Parallel":"purescript-parallel","Control.MonadPlus":"purescript-control","Web.HTML.HTMLImageElement.Laziness":"purescript-web-html","Halogen.Query.Input":"purescript-halogen","Web.DOM.MutationRecord":"purescript-web-dom","Data.Void":"purescript-prelude","Control.MonadZero":"purescript-control","Halogen.Data.OrdBox":"purescript-halogen","Web.HTML.HTMLMediaElement":"purescript-web-html","Web.HTML.HTMLTableRowElement":"purescript-web-html","Data.DateTime.Instant":"purescript-datetime","Data.Profunctor.Costrong":"purescript-profunctor","Halogen.HTML":"purescript-halogen","Data.Ord.Max":"purescript-orders","Effect.AVar":"purescript-avar","Control.Comonad.Store":"purescript-transformers","Web.HTML.HTMLImageElement.DecodingHint":"purescript-web-html","Web.HTML.HTMLEmbedElement":"purescript-web-html","Web.UIEvent.CompositionEvent.EventTypes":"purescript-web-uievents","Control.Monad.Except.Trans":"purescript-transformers","Data.String.CodeUnits":"purescript-strings","Halogen.Hooks.Hook":"purescript-halogen-hooks","DOM.HTML.Indexed.WrapValue":"purescript-dom-indexed","Web.File.Url":"purescript-web-file","Web.HTML.HTMLDocument.ReadyState":"purescript-web-html","Web.UIEvent.MouseEvent":"purescript-web-uievents","Data.FunctorWithIndex":"purescript-foldable-traversable","Data.Divisible":"purescript-contravariant","Web.HTML.HTMLMediaElement.NetworkState":"purescript-web-html","Web.DOM.Comment":"purescript-web-dom","Web.File.Blob":"purescript-web-file","Halogen.Hooks.Types":"purescript-halogen-hooks","Data.Eq.Generic":"purescript-prelude","Web.HTML.HTMLMeterElement":"purescript-web-html","Web.DOM.ProcessingInstruction":"purescript-web-dom","Data.DivisionRing":"purescript-prelude","Data.Equivalence":"purescript-contravariant","Data.Maybe.Last":"purescript-maybe","Data.Unit":"purescript-prelude","Halogen.VDom.Driver":"purescript-halogen","Data.List.NonEmpty":"purescript-lists","Web.HTML.HTMLParagraphElement":"purescript-web-html","Web.DOM":"purescript-web-dom","Data.List.Lazy.NonEmpty":"purescript-lists","Web.HTML.HTMLButtonElement":"purescript-web-html","Data.Ordering":"purescript-prelude","Web.HTML.HTMLModElement":"purescript-web-html","Data.Functor.Coproduct":"purescript-functors","Web.Event.Event":"purescript-web-events","Web.HTML.HTMLDListElement":"purescript-web-html","Halogen.VDom.DOM":"purescript-halogen-vdom","Control.Monad.Cont.Class":"purescript-transformers","Web.File.File":"purescript-web-file","Web.UIEvent.UIEvent":"purescript-web-uievents","Effect.Aff":"purescript-aff","Data.Identity":"purescript-identity","Web.HTML.Location":"purescript-web-html","Web.HTML.ValidityState":"purescript-web-html","Math":"purescript-math","Halogen.VDom":"purescript-halogen-vdom","Web.HTML.HTMLTableColElement":"purescript-web-html","Data.Set.NonEmpty":"purescript-ordered-collections","Web.Storage.Storage":"purescript-web-storage","Control.Comonad.Trans.Class":"purescript-transformers","Web.HTML.HTMLInputElement":"purescript-web-html","Data.String":"purescript-strings","Control.Plus":"purescript-control","Halogen.VDom.DOM.Prop":"purescript-halogen-vdom","Web.HTML.HTMLTimeElement":"purescript-web-html","Data.Map.Internal":"purescript-ordered-collections","Data.Time":"purescript-datetime","Data.JSDate":"purescript-js-date","Data.Time.Duration":"purescript-datetime","Data.Date.Component":"purescript-datetime","Web.HTML":"purescript-web-html","Web.HTML.HTMLProgressElement":"purescript-web-html","Web.HTML.HTMLTrackElement.ReadyState":"purescript-web-html","Partial":"purescript-partial","Halogen.Aff.Util":"purescript-halogen","Control.Comonad.Env.Trans":"purescript-transformers","DOM.HTML.Indexed.StepValue":"purescript-dom-indexed","DOM.HTML.Indexed.ScopeValue":"purescript-dom-indexed","DOM.HTML.Indexed.FormMethod":"purescript-dom-indexed","Web.DOM.NonElementParentNode":"purescript-web-dom","Halogen.Query.HalogenQ":"purescript-halogen","Web.HTML.HTMLBaseElement":"purescript-web-html","Halogen.Subscription":"purescript-halogen-subscriptions","Control.Applicative.Free":"purescript-freeap","Control.Monad.Reader.Class":"purescript-transformers","Data.String.NonEmpty.CodePoints":"purescript-strings","Data.Decidable":"purescript-contravariant","Web.DOM.Node":"purescript-web-dom","Web.TouchEvent.TouchList":"purescript-web-touchevents","Data.String.NonEmpty.Internal":"purescript-strings","Data.Monoid.Multiplicative":"purescript-prelude","Data.String.NonEmpty.CaseInsensitive":"purescript-strings","Data.Functor.Joker":"purescript-functors","Type.Data.Symbol":"purescript-typelevel-prelude","Web.Storage.Event.StorageEvent":"purescript-web-storage","Web.HTML.HTMLElement":"purescript-web-html","Data.Array.ST":"purescript-arrays","Web.Event.Internal.Types":"purescript-web-events","Foreign":"purescript-foreign","Control.Monad.Error.Class":"purescript-transformers","Web.DOM.ShadowRoot":"purescript-web-dom","Control.Semigroupoid":"purescript-prelude","Web.Internal.FFI":"purescript-web-events","Data.Monoid.Alternate":"purescript-control","Data.Char":"purescript-strings","Data.Generic.Rep":"purescript-prelude","Web.HTML.HTMLFieldSetElement":"purescript-web-html","Web.HTML.HTMLLinkElement":"purescript-web-html","Web.HTML.Event.HashChangeEvent.EventTypes":"purescript-web-html","Effect.Class.Console":"purescript-console","Data.Bifunctor.Join":"purescript-bifunctors","Web.HTML.HTMLBRElement":"purescript-web-html","Web.TouchEvent.EventTypes":"purescript-web-touchevents","Control.Monad.Fork.Class":"purescript-fork","Web.HTML.HTMLHeadingElement":"purescript-web-html","Web.HTML.HTMLHeadElement":"purescript-web-html","Web.HTML.HTMLDataElement":"purescript-web-html","Web.HTML.HTMLBodyElement":"purescript-web-html","Data.Bifoldable":"purescript-foldable-traversable","Web.HTML.Event.BeforeUnloadEvent.EventTypes":"purescript-web-html","Halogen.HTML.Elements":"purescript-halogen","Control.Monad.ST.Ref":"purescript-st","Data.Monoid.Endo":"purescript-prelude","Halogen.Hooks.Internal.UseHookF":"purescript-halogen-hooks","Control.Monad.State":"purescript-transformers","Data.List.Partial":"purescript-lists","Control.Applicative.Free.Gen":"purescript-freeap","Web.UIEvent.FocusEvent.EventTypes":"purescript-web-uievents","Web.HTML.Window":"purescript-web-html","Data.Semiring.Generic":"purescript-prelude","Web.HTML.HTMLTableHeaderCellElement":"purescript-web-html","Data.String.Regex.Flags":"purescript-strings","Data.Either":"purescript-either","Data.Time.Duration.Gen":"purescript-datetime","Data.Date.Component.Gen":"purescript-datetime","Type.Prelude":"purescript-typelevel-prelude","Halogen.Aff.Driver":"purescript-halogen","DOM.HTML.Indexed.MenuType":"purescript-dom-indexed","Control.Applicative":"purescript-prelude","Control.Monad.ST.Class":"purescript-st","Data.FoldableWithIndex":"purescript-foldable-traversable","Web.HTML.HTMLImageElement":"purescript-web-html","Data.Op":"purescript-contravariant","Web.HTML.HTMLPreElement":"purescript-web-html","Web.HTML.HTMLScriptElement":"purescript-web-html","Record.Unsafe":"purescript-prelude","Data.MediaType.Common":"purescript-media-types","Web.DOM.DocumentFragment":"purescript-web-dom","Control.Monad.Writer":"purescript-transformers","Web.DOM.DOMTokenList":"purescript-web-dom","Web.HTML.HTMLAreaElement":"purescript-web-html","Halogen.Hooks.Component":"purescript-halogen-hooks","Web.DOM.Document":"purescript-web-dom","Data.Functor.Coproduct.Inject":"purescript-functors","Data.Profunctor.Choice":"purescript-profunctor","Data.Time.Gen":"purescript-datetime","Web.HTML.HTMLTrackElement":"purescript-web-html","Data.Traversable":"purescript-foldable-traversable","Data.String.Gen":"purescript-strings","Web.HTML.HTMLStyleElement":"purescript-web-html"},"compilerVersion":"0.14.0"}