{"uploader":"spicydonuts","packageMeta":{"repository":{"url":"https://github.com/lumihq/purescript-react-basic-classic","type":"git"},"ignore":["**/.*","node_modules","bower_components","output"],"dependencies":{"purescript-effect":"^v3.0.0","purescript-console":"^v5.0.0","purescript-maybe":"^v5.0.0","purescript-react-basic":"^v16.0.0","purescript-aff":"^v6.0.0","purescript-psci-support":"^v5.0.0","purescript-nullable":"^v5.0.0","purescript-functions":"^v5.0.0"},"name":"purescript-react-basic-classic","license":["Apache-2.0"]},"tagTime":"2021-03-10T18:05:28+0000","modules":[{"reExports":[{"moduleName":{"package":"purescript-react-basic","item":["React","Basic"]},"declarations":[{"children":[],"comments":"A React Ref, as created by `React.createRef`\n","title":"Ref","info":{"kind":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Type"]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Type"]}]},"declType":"externData"},"sourceSpan":{"start":[74,1],"name":"bower_components/purescript-react-basic/src/React/Basic.purs","end":[74,40]}},{"children":[],"comments":null,"title":"ReactContext","info":{"kind":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Type"]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Type"]}]},"declType":"externData"},"sourceSpan":{"start":[76,1],"name":"bower_components/purescript-react-basic/src/React/Basic.purs","end":[76,49]}},{"children":[],"comments":"Represents a traditional React component. Useful for JavaScript interop and\nFFI. For example:\n\n```purs\nforeign import ComponentRequiringJSHacks :: ReactComponent { someProp :: String }\n```\n\n__*See also:* `element`, `toReactComponent`__\n","title":"ReactComponent","info":{"kind":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Type"]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Type"]}]},"declType":"externData"},"sourceSpan":{"start":[71,1],"name":"bower_components/purescript-react-basic/src/React/Basic.purs","end":[71,51]}},{"children":[{"comments":null,"title":"semigroupJSX","info":{"declType":"instance","dependencies":[],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Semigroup"],"Semigroup"]},{"annotation":[],"tag":"TypeConstructor","contents":[["React","Basic"],"JSX"]}]}},"sourceSpan":{"start":[20,1],"name":"bower_components/purescript-react-basic/src/React/Basic.purs","end":[21,33]}},{"comments":null,"title":"monoidJSX","info":{"declType":"instance","dependencies":[],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Monoid"],"Monoid"]},{"annotation":[],"tag":"TypeConstructor","contents":[["React","Basic"],"JSX"]}]}},"sourceSpan":{"start":[23,1],"name":"bower_components/purescript-react-basic/src/React/Basic.purs","end":[24,17]}}],"comments":"Represents rendered React VDOM (the result of calling `React.createElement`\nin JavaScript).\n\n`JSX` is a `Monoid`:\n\n- `append`\n  - Merge two `JSX` nodes using `React.Fragment`.\n- `mempty`\n  - The `empty` node; renders nothing.\n\n__*Hint:* Many useful utility functions already exist for Monoids. For example,\n  `guard` can be used to conditionally render a subtree of components.__\n","title":"JSX","info":{"kind":{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Type"]},"declType":"externData"},"sourceSpan":{"start":[18,1],"name":"bower_components/purescript-react-basic/src/React/Basic.purs","end":[18,32]}},{"children":[],"comments":"Create a provider `JSX` given a context value and children.\n\n__*See also:* `createContext`, `consumer`__\n","title":"provider","info":{"declType":"value","type":{"annotation":[],"tag":"ForAll","contents":["a",{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["React","Basic"],"ReactContext"]},{"annotation":[],"tag":"TypeVar","contents":"a"}]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeVar","contents":"a"}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Array"]},{"annotation":[],"tag":"TypeConstructor","contents":[["React","Basic"],"JSX"]}]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["React","Basic"],"JSX"]}]}]}]},null]}},"sourceSpan":{"start":[98,1],"name":"bower_components/purescript-react-basic/src/React/Basic.purs","end":[98,62]}},{"children":[],"comments":"Apply a React key to a subtree. React-Basic usually hides React's warning about\nusing `key` props on components in an Array, but keys are still important for\nany dynamic lists of child components.\n\n__*See also:* React's documentation regarding the special `key` prop__\n","title":"keyed","info":{"declType":"value","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["React","Basic"],"JSX"]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["React","Basic"],"JSX"]}]}]}},"sourceSpan":{"start":[38,1],"name":"bower_components/purescript-react-basic/src/React/Basic.purs","end":[38,45]}},{"children":[],"comments":"Render an Array of children without a wrapping component.\n\n__*See also:* `JSX`__\n","title":"fragment","info":{"declType":"value","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Array"]},{"annotation":[],"tag":"TypeConstructor","contents":[["React","Basic"],"JSX"]}]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["React","Basic"],"JSX"]}]}},"sourceSpan":{"start":[43,1],"name":"bower_components/purescript-react-basic/src/React/Basic.purs","end":[43,44]}},{"children":[],"comments":"An empty `JSX` node. This is often useful when you would like to conditionally\nshow something, but you don't want to (or can't) modify the `children` prop\non the parent node.\n\n__*See also:* `JSX`, Monoid `guard`__\n","title":"empty","info":{"declType":"value","type":{"annotation":[],"tag":"TypeConstructor","contents":[["React","Basic"],"JSX"]}},"sourceSpan":{"start":[31,1],"name":"bower_components/purescript-react-basic/src/React/Basic.purs","end":[31,28]}},{"children":[],"comments":"Create a `JSX` node from a `ReactComponent`, by providing the props and a key.\n\n__*See also:* `ReactComponent`, `element`, React's documentation regarding the special `key` prop__\n","title":"elementKeyed","info":{"declType":"value","type":{"annotation":[],"tag":"ForAll","contents":["props",{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["React","Basic"],"ReactComponent"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"annotation":[],"tag":"TypeVar","contents":"props"}]}]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"annotation":[],"tag":"RCons","contents":["key",{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"String"]},{"annotation":[],"tag":"TypeVar","contents":"props"}]}]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["React","Basic"],"JSX"]}]}]},null]}},"sourceSpan":{"start":[57,1],"name":"bower_components/purescript-react-basic/src/React/Basic.purs","end":[61,6]}},{"children":[],"comments":"Create a `JSX` node from a `ReactComponent`, by providing the props.\n\n__*See also:* `ReactComponent`, `elementKeyed`__\n","title":"element","info":{"declType":"value","type":{"annotation":[],"tag":"ForAll","contents":["props",{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["React","Basic"],"ReactComponent"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"annotation":[],"tag":"TypeVar","contents":"props"}]}]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"annotation":[],"tag":"TypeVar","contents":"props"}]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["React","Basic"],"JSX"]}]}]},null]}},"sourceSpan":{"start":[48,1],"name":"bower_components/purescript-react-basic/src/React/Basic.purs","end":[52,6]}},{"children":[],"comments":"Create a `ReactContext` given a default value. Use `provider` and `consumer`\nto provide and consume context values. Alternatively, use `contextProvider`\nand `contextConsumer` directly if a `ReactComponent` is required for interop.\n\n__*See also:* `provider`, `consumer`, React's documentation regarding Context__\n","title":"createContext","info":{"declType":"value","type":{"annotation":[],"tag":"ForAll","contents":["a",{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeVar","contents":"a"}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["React","Basic"],"ReactContext"]},{"annotation":[],"tag":"TypeVar","contents":"a"}]}}]}]},null]}},"sourceSpan":{"start":[83,1],"name":"bower_components/purescript-react-basic/src/React/Basic.purs","end":[83,71]}},{"children":[],"comments":null,"title":"contextProvider","info":{"declType":"value","type":{"annotation":[],"tag":"ForAll","contents":["a",{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["React","Basic"],"ReactContext"]},{"annotation":[],"tag":"TypeVar","contents":"a"}]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["React","Basic"],"ReactComponent"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"annotation":[],"tag":"RCons","contents":["value",{"annotation":[],"tag":"TypeVar","contents":"a"},{"annotation":[],"tag":"RCons","contents":["children",{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Array"]},{"annotation":[],"tag":"TypeConstructor","contents":[["React","Basic"],"JSX"]}]},{"annotation":[],"tag":"REmpty"}]}]}]}]}]},null]}},"sourceSpan":{"start":[85,1],"name":"bower_components/purescript-react-basic/src/React/Basic.purs","end":[88,55]}},{"children":[],"comments":null,"title":"contextConsumer","info":{"declType":"value","type":{"annotation":[],"tag":"ForAll","contents":["a",{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["React","Basic"],"ReactContext"]},{"annotation":[],"tag":"TypeVar","contents":"a"}]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["React","Basic"],"ReactComponent"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"annotation":[],"tag":"RCons","contents":["children",{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeVar","contents":"a"}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Array"]},{"annotation":[],"tag":"TypeConstructor","contents":[["React","Basic"],"JSX"]}]}]},{"annotation":[],"tag":"REmpty"}]}]}]}]},null]}},"sourceSpan":{"start":[90,1],"name":"bower_components/purescript-react-basic/src/React/Basic.purs","end":[93,48]}},{"children":[],"comments":"Create a consumer `JSX` from a context value to children.\n\n__*See also:* `createContext`, `producer`__\n","title":"consumer","info":{"declType":"value","type":{"annotation":[],"tag":"ForAll","contents":["a",{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["React","Basic"],"ReactContext"]},{"annotation":[],"tag":"TypeVar","contents":"a"}]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeVar","contents":"a"}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Array"]},{"annotation":[],"tag":"TypeConstructor","contents":[["React","Basic"],"JSX"]}]}]}}]},{"annotation":[],"tag":"TypeConstructor","contents":[["React","Basic"],"JSX"]}]}]},null]}},"sourceSpan":{"start":[104,1],"name":"bower_components/purescript-react-basic/src/React/Basic.purs","end":[104,64]}}]}],"name":"React.Basic.Classic","comments":null,"declarations":[{"children":[],"comments":"`ComponentSpec` represents a React-Basic component implementation.\n\nThese are the properties your component definition may override\nwith specific implementations. None are required to be overridden, unless\nan overridden function interacts with `state`, in which case `initialState`\nis required (the compiler enforces this).\n\n- `initialState`\n  - The component's starting state.\n  - Avoid mirroring prop values in state.\n- `render`\n  - Takes a current snapshot of the component (`Self`) and converts it to renderable `JSX`.\n- `didMount`\n  - The React component's `componentDidMount` lifecycle. Useful for initiating an action on first mount, such as fetching data from a server.\n- `shouldUpdate`\n  - Can be useful for performance optimizations. Rarely necessary.\n- `didUpdate`\n  - The React component's `componentDidUpdate` lifecycle. Rarely necessary.\n- `willUnmount`\n  - The React component's `componentWillUnmount` lifecycle. Any subscriptions or timers created in `didMount` or `didUpdate` should be disposed of here.\n\nThe component spec is generally not exported from your component\nmodule and this type is rarely used explicitly. `make` will validate whether\nyour component's internal types line up.\n\nFor example:\n\n```purs\ncomponent :: Component Props\ncomponent = createComponent \"Counter\"\n\ntype Props =\n  { label :: String\n  }\n\ncounter :: Props -> JSX\ncounter = make component\n  { initialState: { counter: 0 }\n\n  , render: \\self ->\n      R.button\n        { onClick: capture_ $ self.setState \\s -> s { counter + 1 }\n        , children: [ R.text (self.props.label <> \": \" <> show self.state.counter) ]\n        }\n  }\n```\n\nThis example component overrides `initialState` and `render`.\n\n__*Note:* A `ComponentSpec` is *not* a valid React component by itself. If you would like to use\n  a React-Basic component from JavaScript, use `toReactComponent`.__\n\n__*See also:* `Component`, `ComponentSpec`, `make`, `makeStateless`__\n","title":"ComponentSpec","info":{"arguments":[["props",null],["state",null]],"declType":"typeSynonym","type":{"annotation":[],"tag":"RCons","contents":["initialState",{"annotation":[],"tag":"TypeVar","contents":"state"},{"annotation":[],"tag":"RCons","contents":["render",{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["React","Basic","Classic"],"Self"]},{"annotation":[],"tag":"TypeVar","contents":"props"}]},{"annotation":[],"tag":"TypeVar","contents":"state"}]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["React","Basic"],"JSX"]}]},{"annotation":[],"tag":"RCons","contents":["didMount",{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["React","Basic","Classic"],"Self"]},{"annotation":[],"tag":"TypeVar","contents":"props"}]},{"annotation":[],"tag":"TypeVar","contents":"state"}]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]},{"annotation":[],"tag":"RCons","contents":["shouldUpdate",{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["React","Basic","Classic"],"Self"]},{"annotation":[],"tag":"TypeVar","contents":"props"}]},{"annotation":[],"tag":"TypeVar","contents":"state"}]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"annotation":[],"tag":"RCons","contents":["nextProps",{"annotation":[],"tag":"TypeVar","contents":"props"},{"annotation":[],"tag":"RCons","contents":["nextState",{"annotation":[],"tag":"TypeVar","contents":"state"},{"annotation":[],"tag":"REmpty"}]}]}]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}]},{"annotation":[],"tag":"RCons","contents":["didUpdate",{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["React","Basic","Classic"],"Self"]},{"annotation":[],"tag":"TypeVar","contents":"props"}]},{"annotation":[],"tag":"TypeVar","contents":"state"}]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"annotation":[],"tag":"RCons","contents":["prevProps",{"annotation":[],"tag":"TypeVar","contents":"props"},{"annotation":[],"tag":"RCons","contents":["prevState",{"annotation":[],"tag":"TypeVar","contents":"state"},{"annotation":[],"tag":"REmpty"}]}]}]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]}]},{"annotation":[],"tag":"RCons","contents":["willUnmount",{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["React","Basic","Classic"],"Self"]},{"annotation":[],"tag":"TypeVar","contents":"props"}]},{"annotation":[],"tag":"TypeVar","contents":"state"}]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]},{"annotation":[],"tag":"REmpty"}]}]}]}]}]}]}},"sourceSpan":{"start":[80,1],"name":"/Users/maddie/dev/lumi/purescript-react-basic-classic/src/React/Basic/Classic.purs","end":[87,6]}},{"children":[],"comments":"Creates a `Component` with a given Display Name.\n\nThe resulting component spec is usually given the simplified `Component` type:\n\n```purs\ncomponent :: Component Props\ncomponent = createComponent \"Counter\"\n```\n\nThis function should be used at the module level and considered side effecting.\nThis is because React uses referential equality when deciding whether a new\n`JSX` tree is a valid update or if it needs to be replaced entirely\n(expensive and clears component state lower in the tree).\n\n__*Note:* A specific type for the props in `Component props` should always be chosen at this point.\n  It's technically possible to declare the component with `forall props. Component props`\n  but doing so is unsafe. Leaving the prop type open allows the use of a single `Component`\n  definition in multiple React-Basic components that may have different prop types. Because\n  component lifecycles are managed by React, it becomes possible for incompatible prop values to\n  be passed by React into lifecycle functions.__\n\n__*Note:* A `Component` is *not* a valid React component by itself. If you would like to use\n  a React-Basic component from JavaScript, use `toReactComponent`.__\n\n__*See also:* `Component`, `make`, `makeStateless`__\n","title":"createComponent","info":{"declType":"value","type":{"annotation":[],"tag":"ForAll","contents":["props",{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["React","Basic","Classic"],"Component"]},{"annotation":[],"tag":"TypeVar","contents":"props"}]}]},null]}},"sourceSpan":{"start":[114,1],"name":"/Users/maddie/dev/lumi/purescript-react-basic-classic/src/React/Basic/Classic.purs","end":[117,18]}},{"children":[],"comments":"Opaque component information for internal use.\n\n__*Note:* Never define a component with\n  a less specific type for `props` than its associated `ComponentSpec` and `make`\n  calls, as this can lead to unsafe interactions with React's lifecycle management.__\n\n__*For the curious:* This is the \"class\" React will use to render and\n  identify the component. It receives the `ComponentSpec` as a prop and knows\n  how to defer behavior to it. It requires very specific props and is not useful by\n  itself from JavaScript. For JavaScript interop, see `toReactComponent`.__\n","title":"Component","info":{"declType":"data","dataDeclType":"data","typeArguments":[["props",null]]},"sourceSpan":{"start":[129,1],"name":"/Users/maddie/dev/lumi/purescript-react-basic-classic/src/React/Basic/Classic.purs","end":[129,21]}},{"children":[],"comments":"`Self` represents the component instance at a particular point in time.\n\n- `props`\n  - A snapshot of `props` taken when this `Self` was created.\n- `state`\n  - A snapshot of `state` taken when this `Self` was created.\n- `setState`\n  - Update the component's state using the given function.\n- `setStateThen`\n  - Update the component's state using the given function. The given effects are performed after any resulting rerenders are completed. Be careful to avoid using stale props or state in the effect callback. Use `readProps` or `readState` to aquire the latest values.\n- `instance_`\n  - Unsafe escape hatch to the underlying component instance (`this` in the JavaScript React paradigm). Avoid as much as possible, but it's still frequently better than rewriting an entire component in JavaScript.\n\n__*See also:* `ComponentSpec`, `send`, `capture`, `readProps`, `readState`__\n","title":"Self","info":{"arguments":[["props",null],["state",null]],"declType":"typeSynonym","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"annotation":[],"tag":"RCons","contents":["props",{"annotation":[],"tag":"TypeVar","contents":"props"},{"annotation":[],"tag":"RCons","contents":["state",{"annotation":[],"tag":"TypeVar","contents":"state"},{"annotation":[],"tag":"RCons","contents":["setState",{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeVar","contents":"state"}]},{"annotation":[],"tag":"TypeVar","contents":"state"}]}}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]},{"annotation":[],"tag":"RCons","contents":["setStateThen",{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeVar","contents":"state"}]},{"annotation":[],"tag":"TypeVar","contents":"state"}]}}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]}]},{"annotation":[],"tag":"RCons","contents":["instance_",{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["React","Basic","Classic"],"ReactComponentInstance"]},{"annotation":[],"tag":"TypeVar","contents":"props"}]},{"annotation":[],"tag":"TypeVar","contents":"state"}]},{"annotation":[],"tag":"REmpty"}]}]}]}]}]}]}},"sourceSpan":{"start":[145,1],"name":"/Users/maddie/dev/lumi/purescript-react-basic-classic/src/React/Basic/Classic.purs","end":[151,6]}},{"children":[],"comments":"Read the most up to date `props` directly from the component instance\nassociated with this `Self`.\n\n_Note: This function is for specific, asynchronous edge cases.\n  Generally, the `props` snapshot on `Self` is sufficient.\n\n__*See also:* `Self`__\n","title":"readProps","info":{"declType":"value","type":{"annotation":[],"tag":"ForAll","contents":["props",{"annotation":[],"tag":"ForAll","contents":["state",{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["React","Basic","Classic"],"Self"]},{"annotation":[],"tag":"TypeVar","contents":"props"}]},{"annotation":[],"tag":"TypeVar","contents":"state"}]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"annotation":[],"tag":"TypeVar","contents":"props"}]}]},null]},null]}},"sourceSpan":{"start":[160,1],"name":"/Users/maddie/dev/lumi/purescript-react-basic-classic/src/React/Basic/Classic.purs","end":[160,81]}},{"children":[],"comments":"Read the most up to date `state` directly from the component instance\nassociated with this `Self`.\n\n_Note: This function is for specific, asynchronous edge cases.\n  Generally, the `state` snapshot on `Self` is sufficient.\n\n__*See also:* `Self`__\n","title":"readState","info":{"declType":"value","type":{"annotation":[],"tag":"ForAll","contents":["props",{"annotation":[],"tag":"ForAll","contents":["state",{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["React","Basic","Classic"],"Self"]},{"annotation":[],"tag":"TypeVar","contents":"props"}]},{"annotation":[],"tag":"TypeVar","contents":"state"}]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"annotation":[],"tag":"TypeVar","contents":"state"}]}]},null]},null]}},"sourceSpan":{"start":[169,1],"name":"/Users/maddie/dev/lumi/purescript-react-basic-classic/src/React/Basic/Classic.purs","end":[169,81]}},{"children":[{"comments":null,"title":"NoUpdate","info":{"arguments":[],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"Update","info":{"arguments":[{"annotation":[],"tag":"TypeVar","contents":"state"}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"SideEffects","info":{"arguments":[{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["React","Basic","Classic"],"Self"]},{"annotation":[],"tag":"TypeVar","contents":"props"}]},{"annotation":[],"tag":"TypeVar","contents":"state"}]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]}}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"UpdateAndSideEffects","info":{"arguments":[{"annotation":[],"tag":"TypeVar","contents":"state"},{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["React","Basic","Classic"],"Self"]},{"annotation":[],"tag":"TypeVar","contents":"props"}]},{"annotation":[],"tag":"TypeVar","contents":"state"}]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]}}],"declType":"dataConstructor"},"sourceSpan":null}],"comments":"Describes a state update for use with `runUpdate`.\n\n__*See also:* `runUpdate`__\n","title":"StateUpdate","info":{"declType":"data","dataDeclType":"data","typeArguments":[["props",null],["state",null]]},"sourceSpan":{"start":[174,1],"name":"/Users/maddie/dev/lumi/purescript-react-basic-classic/src/React/Basic/Classic.purs","end":[178,65]}},{"children":[],"comments":"Creates a send/dispatch function which sends actions through the given\n`update` function.\n\n__*See also:* `StateUpdate`__\n","title":"runUpdate","info":{"declType":"value","type":{"annotation":[],"tag":"ForAll","contents":["props",{"annotation":[],"tag":"ForAll","contents":["state",{"annotation":[],"tag":"ForAll","contents":["action",{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["React","Basic","Classic"],"Self"]},{"annotation":[],"tag":"TypeVar","contents":"props"}]},{"annotation":[],"tag":"TypeVar","contents":"state"}]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeVar","contents":"action"}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["React","Basic","Classic"],"StateUpdate"]},{"annotation":[],"tag":"TypeVar","contents":"props"}]},{"annotation":[],"tag":"TypeVar","contents":"state"}]}]}]}}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["React","Basic","Classic"],"Self"]},{"annotation":[],"tag":"TypeVar","contents":"props"}]},{"annotation":[],"tag":"TypeVar","contents":"state"}]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeVar","contents":"action"}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]}]}]},null]},null]},null]}},"sourceSpan":{"start":[184,1],"name":"/Users/maddie/dev/lumi/purescript-react-basic-classic/src/React/Basic/Classic.purs","end":[189,14]}},{"children":[],"comments":"Turn a `Component` and `ComponentSpec` into a usable render function.\nThis is where you will want to provide customized implementations:\n\n```purs\ncomponent :: Component Props\ncomponent = createComponent \"Counter\"\n\ntype Props =\n  { label :: String\n  }\n\ncounter :: Props -> JSX\ncounter = make component\n  { initialState: { counter: 0 }\n\n  , render: \\self ->\n      R.button\n        { onClick: capture_ $ self.setState \\s -> s { counter = s.counter + 1 }\n        , children: [ R.text (self.props.label <> \": \" <> show self.state.counter) ]\n        }\n  }\n```\n\n__*See also:* `makeStateless`, `createComponent`, `Component`, `ComponentSpec`__\n","title":"make","info":{"declType":"value","type":{"annotation":[],"tag":"ForAll","contents":["spec",{"annotation":[],"tag":"ForAll","contents":["spec_",{"annotation":[],"tag":"ForAll","contents":["props",{"annotation":[],"tag":"ForAll","contents":["state",{"annotation":[],"tag":"ConstrainedType","contents":[{"constraintAnn":[],"constraintClass":[["Prim","Row"],"Union"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"spec"},{"annotation":[],"tag":"TypeVar","contents":"spec_"},{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["React","Basic","Classic"],"ComponentSpec"]},{"annotation":[],"tag":"TypeVar","contents":"props"}]},{"annotation":[],"tag":"TypeVar","contents":"state"}]}}],"constraintKindArgs":[],"constraintData":null},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["React","Basic","Classic"],"Component"]},{"annotation":[],"tag":"TypeVar","contents":"props"}]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"annotation":[],"tag":"RCons","contents":["initialState",{"annotation":[],"tag":"TypeVar","contents":"state"},{"annotation":[],"tag":"RCons","contents":["render",{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["React","Basic","Classic"],"Self"]},{"annotation":[],"tag":"TypeVar","contents":"props"}]},{"annotation":[],"tag":"TypeVar","contents":"state"}]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["React","Basic"],"JSX"]}]},{"annotation":[],"tag":"TypeVar","contents":"spec"}]}]}]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeVar","contents":"props"}]},{"annotation":[],"tag":"TypeConstructor","contents":[["React","Basic"],"JSX"]}]}]}]}]},null]},null]},null]},null]}},"sourceSpan":{"start":[216,1],"name":"/Users/maddie/dev/lumi/purescript-react-basic-classic/src/React/Basic/Classic.purs","end":[222,6]}},{"children":[],"comments":"Makes stateless component definition slightly less verbose:\n\n```purs\ncomponent :: Component Props\ncomponent = createComponent \"Xyz\"\n\nmyComponent :: Props -> JSX\nmyComponent = makeStateless component \\props -> JSX\n```\n\n__*Note:* The only difference between a stateless React-Basic component and\n  a plain `props -> JSX` function is the presense of the component name\n  in React's dev tools and error stacks. It's just a conceptual boundary.\n  If this isn't important simply write a `props -> JSX` function.__\n\n__*See also:* `make`, `createComponent`, `Component`, `ComponentSpec`__\n","title":"makeStateless","info":{"declType":"value","type":{"annotation":[],"tag":"ForAll","contents":["props",{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["React","Basic","Classic"],"Component"]},{"annotation":[],"tag":"TypeVar","contents":"props"}]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeVar","contents":"props"}]},{"annotation":[],"tag":"TypeConstructor","contents":[["React","Basic"],"JSX"]}]}}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeVar","contents":"props"}]},{"annotation":[],"tag":"TypeConstructor","contents":[["React","Basic"],"JSX"]}]}]}]},null]}},"sourceSpan":{"start":[240,1],"name":"/Users/maddie/dev/lumi/purescript-react-basic-classic/src/React/Basic/Classic.purs","end":[245,6]}},{"children":[],"comments":"Retrieve the Display Name from a `ComponentSpec`. Useful for debugging and improving\nerror messages in logs.\n\n__*See also:* `displayNameFromSelf`, `createComponent`__\n","title":"displayNameFromComponent","info":{"declType":"value","type":{"annotation":[],"tag":"ForAll","contents":["props",{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["React","Basic","Classic"],"Component"]},{"annotation":[],"tag":"TypeVar","contents":"props"}]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},null]}},"sourceSpan":{"start":[252,1],"name":"/Users/maddie/dev/lumi/purescript-react-basic-classic/src/React/Basic/Classic.purs","end":[255,9]}},{"children":[],"comments":"Retrieve the Display Name from a `Self`. Useful for debugging and improving\nerror messages in logs.\n\n__*See also:* `displayNameFromComponent`, `createComponent`__\n","title":"displayNameFromSelf","info":{"declType":"value","type":{"annotation":[],"tag":"ForAll","contents":["props",{"annotation":[],"tag":"ForAll","contents":["state",{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["React","Basic","Classic"],"Self"]},{"annotation":[],"tag":"TypeVar","contents":"props"}]},{"annotation":[],"tag":"TypeVar","contents":"state"}]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},null]},null]}},"sourceSpan":{"start":[261,1],"name":"/Users/maddie/dev/lumi/purescript-react-basic-classic/src/React/Basic/Classic.purs","end":[264,9]}},{"children":[],"comments":"An opaque representation of a React component's instance (`this` in the JavaScript\nReact paradigm). It exists as an escape hatch to unsafe behavior. Use it with\ncaution.\n","title":"ReactComponentInstance","info":{"kind":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Type"]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Type"]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Type"]}]}]},"declType":"externData"},"sourceSpan":{"start":[269,1],"name":"/Users/maddie/dev/lumi/purescript-react-basic-classic/src/React/Basic/Classic.purs","end":[269,67]}},{"children":[],"comments":"Convert a React-Basic `ComponentSpec` to a JavaScript-friendly React component.\nThis function should only be used for JS interop and not normal React-Basic usage.\n\n__*Note:* Like `createComponent`, `toReactComponent` is side effecting in that\n  it creates a \"class\" React will see as unique each time it's called. Lift\n  any usage up to the module level, usage in `render` or any other function,\n  and applying any type classes to the `props`.__\n\n__*See also:* `ReactComponent`__\n","title":"toReactComponent","info":{"declType":"value","type":{"annotation":[],"tag":"ForAll","contents":["spec",{"annotation":[],"tag":"ForAll","contents":["spec_",{"annotation":[],"tag":"ForAll","contents":["jsProps",{"annotation":[],"tag":"ForAll","contents":["props",{"annotation":[],"tag":"ForAll","contents":["state",{"annotation":[],"tag":"ConstrainedType","contents":[{"constraintAnn":[],"constraintClass":[["Prim","Row"],"Union"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"spec"},{"annotation":[],"tag":"TypeVar","contents":"spec_"},{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["React","Basic","Classic"],"ComponentSpec"]},{"annotation":[],"tag":"TypeVar","contents":"props"}]},{"annotation":[],"tag":"TypeVar","contents":"state"}]}}],"constraintKindArgs":[],"constraintData":null},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"annotation":[],"tag":"TypeVar","contents":"jsProps"}]}]},{"annotation":[],"tag":"TypeVar","contents":"props"}]}}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["React","Basic","Classic"],"Component"]},{"annotation":[],"tag":"TypeVar","contents":"props"}]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"annotation":[],"tag":"RCons","contents":["render",{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["React","Basic","Classic"],"Self"]},{"annotation":[],"tag":"TypeVar","contents":"props"}]},{"annotation":[],"tag":"TypeVar","contents":"state"}]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["React","Basic"],"JSX"]}]},{"annotation":[],"tag":"TypeVar","contents":"spec"}]}]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["React","Basic"],"ReactComponent"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"annotation":[],"tag":"TypeVar","contents":"jsProps"}]}]}]}]}]}]},null]},null]},null]},null]},null]}},"sourceSpan":{"start":[280,1],"name":"/Users/maddie/dev/lumi/purescript-react-basic-classic/src/React/Basic/Classic.purs","end":[286,31]}}]},{"reExports":[],"name":"React.Basic.Classic.Components.Async","comments":null,"declarations":[{"children":[],"comments":null,"title":"async","info":{"declType":"value","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Effect","Aff"],"Aff"]},{"annotation":[],"tag":"TypeConstructor","contents":[["React","Basic"],"JSX"]}]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["React","Basic"],"JSX"]}]}},"sourceSpan":{"start":[15,1],"name":"/Users/maddie/dev/lumi/purescript-react-basic-classic/src/React/Basic/Classic/Components/Async.purs","end":[15,24]}},{"children":[],"comments":null,"title":"asyncWithLoader","info":{"declType":"value","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["React","Basic"],"JSX"]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Effect","Aff"],"Aff"]},{"annotation":[],"tag":"TypeConstructor","contents":[["React","Basic"],"JSX"]}]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["React","Basic"],"JSX"]}]}]}},"sourceSpan":{"start":[18,1],"name":"/Users/maddie/dev/lumi/purescript-react-basic-classic/src/React/Basic/Classic/Components/Async.purs","end":[18,41]}}]}],"resolvedDependencies":{"purescript-exceptions":"5.0.0","purescript-newtype":"4.0.0","purescript-effect":"3.0.0","purescript-ordered-collections":"2.0.0","purescript-control":"5.0.0","purescript-console":"5.0.0","purescript-either":"5.0.0","purescript-profunctor":"5.0.0","purescript-arrays":"6.0.0","purescript-maybe":"5.0.0","purescript-type-equality":"4.0.0","purescript-exists":"5.0.0","purescript-distributive":"5.0.0","purescript-unfoldable":"5.0.0","purescript-invariant":"5.0.0","purescript-lazy":"5.0.0","purescript-react-basic":"16.0.0","purescript-aff":"6.0.0","purescript-foldable-traversable":"5.0.0","purescript-tailrec":"5.0.0","purescript-gen":"3.0.0","purescript-functors":"4.0.0","purescript-prelude":"5.0.0","purescript-st":"5.0.0","purescript-bifunctors":"5.0.0","purescript-nonempty":"6.0.0","purescript-contravariant":"5.0.0","purescript-unsafe-coerce":"5.0.0","purescript-refs":"5.0.0","purescript-integers":"5.0.0","purescript-orders":"5.0.0","purescript-const":"5.0.0","purescript-record":"3.0.0","purescript-transformers":"5.0.0","purescript-numbers":"8.0.0","purescript-math":"3.0.0","purescript-enums":"5.0.0","purescript-psci-support":"5.0.0","purescript-parallel":"5.0.0","purescript-tuples":"6.0.0","purescript-partial":"3.0.0","purescript-identity":"5.0.0","purescript-safe-coerce":"1.0.0","purescript-lists":"6.0.0","purescript-nullable":"5.0.0","purescript-datetime":"5.0.0","purescript-functions":"5.0.0"},"version":"2.0.0","github":["lumihq","purescript-react-basic-classic"],"versionTag":"v2.0.0","moduleMap":{"Data.BooleanAlgebra":"purescript-prelude","Data.Decide":"purescript-contravariant","Data.Ring":"purescript-prelude","Data.Semigroup.Generic":"purescript-prelude","Control.Monad.Trans.Class":"purescript-transformers","Record.Unsafe.Union":"purescript-record","Data.Functor.Product":"purescript-functors","Data.Functor.Flip":"purescript-functors","Data.NonEmpty":"purescript-nonempty","React.Basic.Events":"purescript-react-basic","Effect.Uncurried":"purescript-effect","Control.Monad.Identity.Trans":"purescript-transformers","Data.Monoid.Generic":"purescript-prelude","Effect":"purescript-effect","Data.Traversable.Accum.Internal":"purescript-foldable-traversable","Data.Enum.Gen":"purescript-enums","Data.Nullable":"purescript-nullable","Control.Comonad.Env":"purescript-transformers","Control.Comonad.Traced.Class":"purescript-transformers","Data.Functor.Costar":"purescript-functors","Data.HeytingAlgebra.Generic":"purescript-prelude","Data.Functor.Compose":"purescript-functors","Data.Int.Bits":"purescript-integers","Data.DateTime":"purescript-datetime","Data.Ord":"purescript-prelude","Control.Monad.Gen":"purescript-gen","Data.Bounded.Generic":"purescript-prelude","Type.Data.Row":"purescript-prelude","Data.Date":"purescript-datetime","Safe.Coerce":"purescript-safe-coerce","Data.Monoid.Dual":"purescript-prelude","Control.Monad.Rec.Class":"purescript-tailrec","Data.Time.Component":"purescript-datetime","Data.Bitraversable":"purescript-foldable-traversable","Record.Builder":"purescript-record","Data.Boolean":"purescript-prelude","Data.Show.Generic":"purescript-prelude","Data.Map":"purescript-ordered-collections","Control.Biapplicative":"purescript-bifunctors","Effect.Exception.Unsafe":"purescript-exceptions","Control.Parallel.Class":"purescript-parallel","Data.Array.NonEmpty.Internal":"purescript-arrays","Type.Proxy":"purescript-prelude","Effect.Aff.Compat":"purescript-aff","Data.Array.ST.Iterator":"purescript-arrays","Data.Enum.Generic":"purescript-enums","Data.DateTime.Gen":"purescript-datetime","Data.Bounded":"purescript-prelude","Control.Monad.State.Trans":"purescript-transformers","Data.TraversableWithIndex":"purescript-foldable-traversable","Data.Int":"purescript-integers","Data.Profunctor.Cochoice":"purescript-profunctor","Data.Show":"purescript-prelude","Control.Monad.Writer.Trans":"purescript-transformers","Data.Foldable":"purescript-foldable-traversable","Data.Divide":"purescript-contravariant","Control.Comonad.Store.Class":"purescript-transformers","Data.Number":"purescript-numbers","Data.Enum":"purescript-enums","Control.Apply":"purescript-prelude","Data.Functor.Contravariant":"purescript-contravariant","Data.Tuple.Nested":"purescript-tuples","Data.List.Internal":"purescript-lists","Control.Monad":"purescript-prelude","Data.Lazy":"purescript-lazy","Data.Monoid":"purescript-prelude","Data.Profunctor.Closed":"purescript-profunctor","Control.Monad.List.Trans":"purescript-transformers","Data.Ord.Generic":"purescript-prelude","Control.Monad.RWS":"purescript-transformers","Data.Maybe.First":"purescript-maybe","Control.Bind":"purescript-prelude","Data.Profunctor.Split":"purescript-profunctor","Data.Number.Format":"purescript-numbers","Effect.Aff.Class":"purescript-aff","Data.Monoid.Additive":"purescript-prelude","Data.Symbol":"purescript-prelude","Data.Map.Gen":"purescript-ordered-collections","Data.Profunctor.Join":"purescript-profunctor","Data.HeytingAlgebra":"purescript-prelude","Control.Alt":"purescript-control","Data.Date.Gen":"purescript-datetime","Control.Monad.Maybe.Trans":"purescript-transformers","Control.Monad.Cont":"purescript-transformers","Control.Monad.ST.Internal":"purescript-st","Type.Data.RowList":"purescript-prelude","Data.Time.Component.Gen":"purescript-datetime","Effect.Ref":"purescript-refs","Data.Either.Inject":"purescript-either","Data.List.ZipList":"purescript-lists","Data.Ord.Min":"purescript-orders","Data.Functor.Coproduct.Nested":"purescript-functors","Data.Ring.Generic":"purescript-prelude","Data.Semigroup":"purescript-prelude","Data.Array.NonEmpty":"purescript-arrays","Control.Monad.Reader":"purescript-transformers","Data.Const":"purescript-const","Control.Comonad.Traced.Trans":"purescript-transformers","Data.Ord.Down":"purescript-orders","Data.Number.Approximate":"purescript-numbers","Data.Array.ST.Partial":"purescript-arrays","Effect.Unsafe":"purescript-effect","Data.Tuple":"purescript-tuples","Data.Functor.Clown":"purescript-functors","Data.Semigroup.Foldable":"purescript-foldable-traversable","Control.Biapply":"purescript-bifunctors","Data.Distributive":"purescript-distributive","Effect.Exception":"purescript-exceptions","Type.Equality":"purescript-type-equality","Control.Alternative":"purescript-control","Data.Semiring":"purescript-prelude","Data.Functor.Product2":"purescript-functors","Data.Exists":"purescript-exists","Effect.Console":"purescript-console","Data.Traversable.Accum":"purescript-foldable-traversable","Data.CommutativeRing":"purescript-prelude","Data.NaturalTransformation":"purescript-prelude","Data.Monoid.Conj":"purescript-prelude","Data.Functor.App":"purescript-functors","Data.Profunctor.Star":"purescript-profunctor","Data.Unfoldable":"purescript-unfoldable","Control.Comonad.Store.Trans":"purescript-transformers","Control.Monad.ST":"purescript-st","Control.Monad.State.Class":"purescript-transformers","Data.List.Types":"purescript-lists","Data.Functor":"purescript-prelude","Unsafe.Coerce":"purescript-unsafe-coerce","Control.Monad.Writer.Class":"purescript-transformers","Data.Profunctor.Strong":"purescript-profunctor","Control.Monad.Except":"purescript-transformers","Data.Interval":"purescript-datetime","Data.List.Lazy.Types":"purescript-lists","Control.Category":"purescript-prelude","Data.Interval.Duration":"purescript-datetime","Control.Monad.Gen.Common":"purescript-gen","Control.Monad.RWS.Trans":"purescript-transformers","Control.Monad.Cont.Trans":"purescript-transformers","Data.Maybe":"purescript-maybe","Data.Set":"purescript-ordered-collections","Data.Profunctor":"purescript-profunctor","Control.Comonad":"purescript-control","Control.Monad.ST.Global":"purescript-st","Data.Function":"purescript-prelude","Data.List":"purescript-lists","Data.Field":"purescript-prelude","Data.List.Lazy":"purescript-lists","Data.EuclideanRing":"purescript-prelude","Data.Semigroup.Last":"purescript-prelude","Data.Semigroup.First":"purescript-prelude","Data.Functor.Invariant":"purescript-invariant","Control.Comonad.Traced":"purescript-transformers","Data.Comparison":"purescript-contravariant","Prelude":"purescript-prelude","Effect.Class":"purescript-effect","Data.Predicate":"purescript-contravariant","Partial.Unsafe":"purescript-partial","Data.Array":"purescript-arrays","Control.Extend":"purescript-control","Data.Unfoldable1":"purescript-unfoldable","Control.Lazy":"purescript-control","Data.Function.Uncurried":"purescript-functions","Control.Monad.Reader.Trans":"purescript-transformers","Data.Functor.Product.Nested":"purescript-functors","Control.Comonad.Env.Class":"purescript-transformers","Data.Interval.Duration.Iso":"purescript-datetime","Data.Eq":"purescript-prelude","Data.Either.Nested":"purescript-either","Data.Newtype":"purescript-newtype","Data.Semigroup.Traversable":"purescript-foldable-traversable","Data.Bifunctor":"purescript-bifunctors","Data.Monoid.Disj":"purescript-prelude","Control.Monad.Gen.Class":"purescript-gen","Data.Array.Partial":"purescript-arrays","Control.Parallel":"purescript-parallel","Control.MonadPlus":"purescript-control","Data.Void":"purescript-prelude","Control.MonadZero":"purescript-control","Data.DateTime.Instant":"purescript-datetime","Data.Profunctor.Costrong":"purescript-profunctor","Data.Ord.Max":"purescript-orders","Control.Comonad.Store":"purescript-transformers","Control.Monad.Except.Trans":"purescript-transformers","React.Basic":"purescript-react-basic","Data.FunctorWithIndex":"purescript-foldable-traversable","Data.Divisible":"purescript-contravariant","Data.Eq.Generic":"purescript-prelude","Data.DivisionRing":"purescript-prelude","Record":"purescript-record","PSCI.Support":"purescript-psci-support","Data.Equivalence":"purescript-contravariant","Data.Maybe.Last":"purescript-maybe","Data.Unit":"purescript-prelude","Data.List.NonEmpty":"purescript-lists","Data.List.Lazy.NonEmpty":"purescript-lists","Data.Ordering":"purescript-prelude","Data.Functor.Coproduct":"purescript-functors","Control.Monad.Cont.Class":"purescript-transformers","Effect.Aff":"purescript-aff","Data.Identity":"purescript-identity","Math":"purescript-math","Data.Set.NonEmpty":"purescript-ordered-collections","Control.Comonad.Trans.Class":"purescript-transformers","Control.Plus":"purescript-control","Data.Map.Internal":"purescript-ordered-collections","Data.Time":"purescript-datetime","Data.Time.Duration":"purescript-datetime","Data.Date.Component":"purescript-datetime","Partial":"purescript-partial","React.Basic.StrictMode":"purescript-react-basic","Control.Comonad.Env.Trans":"purescript-transformers","Control.Monad.Reader.Class":"purescript-transformers","Data.Decidable":"purescript-contravariant","Data.Monoid.Multiplicative":"purescript-prelude","Data.Functor.Joker":"purescript-functors","Data.Array.ST":"purescript-arrays","Control.Monad.Error.Class":"purescript-transformers","Control.Semigroupoid":"purescript-prelude","Data.Monoid.Alternate":"purescript-control","Data.Generic.Rep":"purescript-prelude","Effect.Class.Console":"purescript-console","Data.Bifunctor.Join":"purescript-bifunctors","Data.Bifoldable":"purescript-foldable-traversable","Control.Monad.ST.Ref":"purescript-st","Data.Monoid.Endo":"purescript-prelude","Control.Monad.State":"purescript-transformers","Data.List.Partial":"purescript-lists","Data.Semiring.Generic":"purescript-prelude","Data.Either":"purescript-either","Data.Time.Duration.Gen":"purescript-datetime","Data.Date.Component.Gen":"purescript-datetime","Control.Applicative":"purescript-prelude","Control.Monad.ST.Class":"purescript-st","Data.FoldableWithIndex":"purescript-foldable-traversable","Data.Op":"purescript-contravariant","Record.Unsafe":"purescript-prelude","Control.Monad.Writer":"purescript-transformers","Data.Functor.Coproduct.Inject":"purescript-functors","Data.Profunctor.Choice":"purescript-profunctor","Data.Time.Gen":"purescript-datetime","Data.Traversable":"purescript-foldable-traversable"},"compilerVersion":"0.14.0"}