{"uploader":"spicydonuts","packageMeta":{"repository":{"url":"https://github.com/lumihq/purescript-react-basic.git","type":"git"},"ignore":["**/.*","node_modules","bower_components","output"],"dependencies":{"purescript-effect":"^2.0.1","purescript-prelude":"^4.1.1","purescript-record":"^2.0.2"},"name":"purescript-react-basic","license":["Apache-2.0"]},"tagTime":"2020-06-30T06:50:13+0000","modules":[{"reExports":[],"name":"React.Basic","comments":null,"declarations":[{"children":[{"comments":null,"title":"semigroupJSX","info":{"declType":"instance","dependencies":[],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Semigroup"],"Semigroup"]},{"annotation":[],"tag":"TypeConstructor","contents":[["React","Basic"],"JSX"]}]}},"sourceSpan":{"start":[20,1],"name":"/Users/maddie/dev/lumi/purescript-react-basic/src/React/Basic.purs","end":[21,33]}},{"comments":null,"title":"monoidJSX","info":{"declType":"instance","dependencies":[],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Monoid"],"Monoid"]},{"annotation":[],"tag":"TypeConstructor","contents":[["React","Basic"],"JSX"]}]}},"sourceSpan":{"start":[23,1],"name":"/Users/maddie/dev/lumi/purescript-react-basic/src/React/Basic.purs","end":[24,17]}}],"comments":"Represents rendered React VDOM (the result of calling `React.createElement`\nin JavaScript).\n\n`JSX` is a `Monoid`:\n\n- `append`\n  - Merge two `JSX` nodes using `React.Fragment`.\n- `mempty`\n  - The `empty` node; renders nothing.\n\n__*Hint:* Many useful utility functions already exist for Monoids. For example,\n  `guard` can be used to conditionally render a subtree of components.__\n","title":"JSX","info":{"kind":{"annotation":[],"tag":"NamedKind","contents":[["Prim"],"Type"]},"declType":"externData"},"sourceSpan":{"start":[18,1],"name":"/Users/maddie/dev/lumi/purescript-react-basic/src/React/Basic.purs","end":[18,32]}},{"children":[],"comments":"An empty `JSX` node. This is often useful when you would like to conditionally\nshow something, but you don't want to (or can't) modify the `children` prop\non the parent node.\n\n__*See also:* `JSX`, Monoid `guard`__\n","title":"empty","info":{"declType":"value","type":{"annotation":[],"tag":"TypeConstructor","contents":[["React","Basic"],"JSX"]}},"sourceSpan":{"start":[31,1],"name":"/Users/maddie/dev/lumi/purescript-react-basic/src/React/Basic.purs","end":[31,28]}},{"children":[],"comments":"Apply a React key to a subtree. React-Basic usually hides React's warning about\nusing `key` props on components in an Array, but keys are still important for\nany dynamic lists of child components.\n\n__*See also:* React's documentation regarding the special `key` prop__\n","title":"keyed","info":{"declType":"value","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["React","Basic"],"JSX"]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["React","Basic"],"JSX"]}]}]}},"sourceSpan":{"start":[38,1],"name":"/Users/maddie/dev/lumi/purescript-react-basic/src/React/Basic.purs","end":[38,45]}},{"children":[],"comments":"Render an Array of children without a wrapping component.\n\n__*See also:* `JSX`__\n","title":"fragment","info":{"declType":"value","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Array"]},{"annotation":[],"tag":"TypeConstructor","contents":[["React","Basic"],"JSX"]}]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["React","Basic"],"JSX"]}]}},"sourceSpan":{"start":[43,1],"name":"/Users/maddie/dev/lumi/purescript-react-basic/src/React/Basic.purs","end":[43,44]}},{"children":[],"comments":"Create a `JSX` node from a `ReactComponent`, by providing the props.\n\n__*See also:* `ReactComponent`, `elementKeyed`__\n","title":"element","info":{"declType":"value","type":{"annotation":[],"tag":"ForAll","contents":["props",{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["React","Basic"],"ReactComponent"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"annotation":[],"tag":"TypeVar","contents":"props"}]}]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"annotation":[],"tag":"TypeVar","contents":"props"}]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["React","Basic"],"JSX"]}]}]},null]}},"sourceSpan":{"start":[48,1],"name":"/Users/maddie/dev/lumi/purescript-react-basic/src/React/Basic.purs","end":[52,6]}},{"children":[],"comments":"Create a `JSX` node from a `ReactComponent`, by providing the props and a key.\n\n__*See also:* `ReactComponent`, `element`, React's documentation regarding the special `key` prop__\n","title":"elementKeyed","info":{"declType":"value","type":{"annotation":[],"tag":"ForAll","contents":["props",{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["React","Basic"],"ReactComponent"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"annotation":[],"tag":"TypeVar","contents":"props"}]}]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"annotation":[],"tag":"RCons","contents":["key",{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"String"]},{"annotation":[],"tag":"TypeVar","contents":"props"}]}]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["React","Basic"],"JSX"]}]}]},null]}},"sourceSpan":{"start":[57,1],"name":"/Users/maddie/dev/lumi/purescript-react-basic/src/React/Basic.purs","end":[61,6]}},{"children":[],"comments":"Represents a traditional React component. Useful for JavaScript interop and\nFFI. For example:\n\n```purs\nforeign import ComponentRequiringJSHacks :: ReactComponent { someProp :: String }\n```\n\n__*See also:* `element`, `toReactComponent`__\n","title":"ReactComponent","info":{"kind":{"annotation":[],"tag":"FunKind","contents":[{"annotation":[],"tag":"NamedKind","contents":[["Prim"],"Type"]},{"annotation":[],"tag":"NamedKind","contents":[["Prim"],"Type"]}]},"declType":"externData"},"sourceSpan":{"start":[71,1],"name":"/Users/maddie/dev/lumi/purescript-react-basic/src/React/Basic.purs","end":[71,51]}},{"children":[],"comments":"A React Ref, as created by `React.createRef`\n","title":"Ref","info":{"kind":{"annotation":[],"tag":"FunKind","contents":[{"annotation":[],"tag":"NamedKind","contents":[["Prim"],"Type"]},{"annotation":[],"tag":"NamedKind","contents":[["Prim"],"Type"]}]},"declType":"externData"},"sourceSpan":{"start":[74,1],"name":"/Users/maddie/dev/lumi/purescript-react-basic/src/React/Basic.purs","end":[74,40]}},{"children":[],"comments":null,"title":"ReactContext","info":{"kind":{"annotation":[],"tag":"FunKind","contents":[{"annotation":[],"tag":"NamedKind","contents":[["Prim"],"Type"]},{"annotation":[],"tag":"NamedKind","contents":[["Prim"],"Type"]}]},"declType":"externData"},"sourceSpan":{"start":[76,1],"name":"/Users/maddie/dev/lumi/purescript-react-basic/src/React/Basic.purs","end":[76,49]}},{"children":[],"comments":"Create a `ReactContext` given a default value. Use `provider` and `consumer`\nto provide and consume context values. Alternatively, use `contextProvider`\nand `contextConsumer` directly if a `ReactComponent` is required for interop.\n\n__*See also:* `provider`, `consumer`, React's documentation regarding Context__\n","title":"createContext","info":{"declType":"value","type":{"annotation":[],"tag":"ForAll","contents":["a",{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeVar","contents":"a"}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["React","Basic"],"ReactContext"]},{"annotation":[],"tag":"TypeVar","contents":"a"}]}}]}]},null]}},"sourceSpan":{"start":[83,1],"name":"/Users/maddie/dev/lumi/purescript-react-basic/src/React/Basic.purs","end":[83,71]}},{"children":[],"comments":null,"title":"contextProvider","info":{"declType":"value","type":{"annotation":[],"tag":"ForAll","contents":["a",{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["React","Basic"],"ReactContext"]},{"annotation":[],"tag":"TypeVar","contents":"a"}]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["React","Basic"],"ReactComponent"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"annotation":[],"tag":"RCons","contents":["value",{"annotation":[],"tag":"TypeVar","contents":"a"},{"annotation":[],"tag":"RCons","contents":["children",{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Array"]},{"annotation":[],"tag":"TypeConstructor","contents":[["React","Basic"],"JSX"]}]},{"annotation":[],"tag":"REmpty"}]}]}]}]}]},null]}},"sourceSpan":{"start":[85,1],"name":"/Users/maddie/dev/lumi/purescript-react-basic/src/React/Basic.purs","end":[88,55]}},{"children":[],"comments":null,"title":"contextConsumer","info":{"declType":"value","type":{"annotation":[],"tag":"ForAll","contents":["a",{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["React","Basic"],"ReactContext"]},{"annotation":[],"tag":"TypeVar","contents":"a"}]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["React","Basic"],"ReactComponent"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"annotation":[],"tag":"RCons","contents":["children",{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeVar","contents":"a"}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Array"]},{"annotation":[],"tag":"TypeConstructor","contents":[["React","Basic"],"JSX"]}]}]},{"annotation":[],"tag":"REmpty"}]}]}]}]},null]}},"sourceSpan":{"start":[90,1],"name":"/Users/maddie/dev/lumi/purescript-react-basic/src/React/Basic.purs","end":[93,48]}},{"children":[],"comments":"Create a provider `JSX` given a context value and children.\n\n__*See also:* `createContext`, `consumer`__\n","title":"provider","info":{"declType":"value","type":{"annotation":[],"tag":"ForAll","contents":["a",{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["React","Basic"],"ReactContext"]},{"annotation":[],"tag":"TypeVar","contents":"a"}]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeVar","contents":"a"}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Array"]},{"annotation":[],"tag":"TypeConstructor","contents":[["React","Basic"],"JSX"]}]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["React","Basic"],"JSX"]}]}]}]},null]}},"sourceSpan":{"start":[98,1],"name":"/Users/maddie/dev/lumi/purescript-react-basic/src/React/Basic.purs","end":[98,62]}},{"children":[],"comments":"Create a consumer `JSX` from a context value to children.\n\n__*See also:* `createContext`, `producer`__\n","title":"consumer","info":{"declType":"value","type":{"annotation":[],"tag":"ForAll","contents":["a",{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["React","Basic"],"ReactContext"]},{"annotation":[],"tag":"TypeVar","contents":"a"}]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeVar","contents":"a"}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Array"]},{"annotation":[],"tag":"TypeConstructor","contents":[["React","Basic"],"JSX"]}]}]}}]},{"annotation":[],"tag":"TypeConstructor","contents":[["React","Basic"],"JSX"]}]}]},null]}},"sourceSpan":{"start":[104,1],"name":"/Users/maddie/dev/lumi/purescript-react-basic/src/React/Basic.purs","end":[104,64]}}]},{"reExports":[],"name":"React.Basic.Events","comments":null,"declarations":[{"children":[],"comments":"An event handler, which receives a `SyntheticEvent` and performs some\neffects in return.\n","title":"EventHandler","info":{"arguments":[],"declType":"typeSynonym","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Effect","Uncurried"],"EffectFn1"]},{"annotation":[],"tag":"TypeConstructor","contents":[["React","Basic","Events"],"SyntheticEvent"]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}},"sourceSpan":{"start":[25,1],"name":"/Users/maddie/dev/lumi/purescript-react-basic/src/React/Basic/Events.purs","end":[26,34]}},{"children":[],"comments":"Event data that we receive from React.\n","title":"SyntheticEvent","info":{"kind":{"annotation":[],"tag":"NamedKind","contents":[["Prim"],"Type"]},"declType":"externData"},"sourceSpan":{"start":[29,1],"name":"/Users/maddie/dev/lumi/purescript-react-basic/src/React/Basic/Events.purs","end":[29,43]}},{"children":[{"comments":null,"title":"semigroupoidBuilder","info":{"declType":"instance","dependencies":[],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Control","Semigroupoid"],"Semigroupoid"]},{"annotation":[],"tag":"TypeConstructor","contents":[["React","Basic","Events"],"EventFn"]}]}},"sourceSpan":{"start":[52,1],"name":"/Users/maddie/dev/lumi/purescript-react-basic/src/React/Basic/Events.purs","end":[52,68]}},{"comments":null,"title":"categoryBuilder","info":{"declType":"instance","dependencies":[],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Control","Category"],"Category"]},{"annotation":[],"tag":"TypeConstructor","contents":[["React","Basic","Events"],"EventFn"]}]}},"sourceSpan":{"start":[54,1],"name":"/Users/maddie/dev/lumi/purescript-react-basic/src/React/Basic/Events.purs","end":[54,60]}},{"comments":null,"title":"mergeCons","info":{"declType":"instance","dependencies":[{"constraintAnn":[],"constraintClass":[["Data","Symbol"],"IsSymbol"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"l"}],"constraintData":null},{"constraintAnn":[],"constraintClass":[["Prim","Row"],"Cons"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"l"},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["React","Basic","Events"],"EventFn"]},{"annotation":[],"tag":"TypeVar","contents":"a"}]},{"annotation":[],"tag":"TypeVar","contents":"b"}]},{"annotation":[],"tag":"TypeVar","contents":"fns_rest"},{"annotation":[],"tag":"TypeVar","contents":"fns"}],"constraintData":null},{"constraintAnn":[],"constraintClass":[["Prim","Row"],"Cons"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"l"},{"annotation":[],"tag":"TypeVar","contents":"b"},{"annotation":[],"tag":"TypeVar","contents":"r_rest"},{"annotation":[],"tag":"TypeVar","contents":"r"}],"constraintData":null},{"constraintAnn":[],"constraintClass":[["Prim","Row"],"Lacks"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"l"},{"annotation":[],"tag":"TypeVar","contents":"fns_rest"}],"constraintData":null},{"constraintAnn":[],"constraintClass":[["Prim","Row"],"Lacks"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"l"},{"annotation":[],"tag":"TypeVar","contents":"r_rest"}],"constraintData":null},{"constraintAnn":[],"constraintClass":[["React","Basic","Events"],"Merge"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"rest"},{"annotation":[],"tag":"TypeVar","contents":"fns_rest"},{"annotation":[],"tag":"TypeVar","contents":"a"},{"annotation":[],"tag":"TypeVar","contents":"r_rest"}],"constraintData":null}],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["React","Basic","Events"],"Merge"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim","RowList"],"Cons"]},{"annotation":[],"tag":"TypeVar","contents":"l"}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["React","Basic","Events"],"EventFn"]},{"annotation":[],"tag":"TypeVar","contents":"a"}]},{"annotation":[],"tag":"TypeVar","contents":"b"}]}]},{"annotation":[],"tag":"TypeVar","contents":"rest"}]}]},{"annotation":[],"tag":"TypeVar","contents":"fns"}]},{"annotation":[],"tag":"TypeVar","contents":"a"}]},{"annotation":[],"tag":"TypeVar","contents":"r"}]}},"sourceSpan":{"start":[88,1],"name":"/Users/maddie/dev/lumi/purescript-react-basic/src/React/Basic/Events.purs","end":[106,27]}}],"comments":"Encapsulates a safe event operation. `EventFn`s can be composed\nto perform multiple operations.\n\nFor example:\n\n```purs\ninput { onChange: handler (preventDefault >>> targetValue)\n                    \\value -> setState \\_ -> { value }\n      }\n```\n","title":"EventFn","info":{"declType":"data","dataDeclType":"newtype","typeArguments":[["a",null],["b",null]]},"sourceSpan":{"start":[41,1],"name":"/Users/maddie/dev/lumi/purescript-react-basic/src/React/Basic/Events.purs","end":[42,21]}},{"children":[],"comments":"Unsafely create an `EventFn`. This function should be avoided as it can allow\na `SyntheticEvent` to escape its scope. Accessing a React event's properties is only\nvalid in a synchronous event callback.\n\nInstead, use the helper functions specific to your platform, such as `React.Basic.DOM.Events`.\n","title":"unsafeEventFn","info":{"declType":"value","type":{"annotation":[],"tag":"ForAll","contents":["b",{"annotation":[],"tag":"ForAll","contents":["a",{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeVar","contents":"a"}]},{"annotation":[],"tag":"TypeVar","contents":"b"}]}}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["React","Basic","Events"],"EventFn"]},{"annotation":[],"tag":"TypeVar","contents":"a"}]},{"annotation":[],"tag":"TypeVar","contents":"b"}]}]},null]},null]}},"sourceSpan":{"start":[49,1],"name":"/Users/maddie/dev/lumi/purescript-react-basic/src/React/Basic/Events.purs","end":[49,53]}},{"children":[],"comments":"Create an `EventHandler`, given an `EventFn` and a callback.\n\nFor example:\n\n```purs\ninput { onChange: handler targetValue\n                    \\value -> setState \\_ -> { value }\n      }\n```\n","title":"handler","info":{"declType":"value","type":{"annotation":[],"tag":"ForAll","contents":["a",{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["React","Basic","Events"],"EventFn"]},{"annotation":[],"tag":"TypeConstructor","contents":[["React","Basic","Events"],"SyntheticEvent"]}]},{"annotation":[],"tag":"TypeVar","contents":"a"}]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeVar","contents":"a"}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]}}]},{"annotation":[],"tag":"TypeConstructor","contents":[["React","Basic","Events"],"EventHandler"]}]}]},null]}},"sourceSpan":{"start":[65,1],"name":"/Users/maddie/dev/lumi/purescript-react-basic/src/React/Basic/Events.purs","end":[65,84]}},{"children":[],"comments":"Create an `EventHandler` which discards the `SyntheticEvent`.\n\nFor example:\n\n```purs\ninput { onChange: handler_ (setState \\_ -> { value })\n      }\n```\n","title":"handler_","info":{"declType":"value","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["React","Basic","Events"],"EventHandler"]}]}},"sourceSpan":{"start":[76,1],"name":"/Users/maddie/dev/lumi/purescript-react-basic/src/React/Basic/Events.purs","end":[76,40]}},{"children":[],"comments":null,"title":"syntheticEvent","info":{"declType":"value","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["React","Basic","Events"],"EventFn"]},{"annotation":[],"tag":"TypeConstructor","contents":[["React","Basic","Events"],"SyntheticEvent"]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["React","Basic","Events"],"SyntheticEvent"]}]}},"sourceSpan":{"start":[79,1],"name":"/Users/maddie/dev/lumi/purescript-react-basic/src/React/Basic/Events.purs","end":[79,56]}},{"children":[],"comments":"Merge multiple `EventFn` operations and collect their results.\n\nFor example:\n\n```purs\ninput { onChange: handler (merge { targetValue, timeStamp })\n                    \\{ targetValue, timeStamp } -> setState \\_ -> { ... }\n      }\n```\n","title":"merge","info":{"declType":"value","type":{"annotation":[],"tag":"ForAll","contents":["r",{"annotation":[],"tag":"ForAll","contents":["fns_list",{"annotation":[],"tag":"ForAll","contents":["fns",{"annotation":[],"tag":"ForAll","contents":["a",{"annotation":[],"tag":"ConstrainedType","contents":[{"constraintAnn":[],"constraintClass":[["Prim","RowList"],"RowToList"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"fns"},{"annotation":[],"tag":"TypeVar","contents":"fns_list"}],"constraintData":null},{"annotation":[],"tag":"ConstrainedType","contents":[{"constraintAnn":[],"constraintClass":[["React","Basic","Events"],"Merge"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"fns_list"},{"annotation":[],"tag":"TypeVar","contents":"fns"},{"annotation":[],"tag":"TypeVar","contents":"a"},{"annotation":[],"tag":"TypeVar","contents":"r"}],"constraintData":null},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"annotation":[],"tag":"TypeVar","contents":"fns"}]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["React","Basic","Events"],"EventFn"]},{"annotation":[],"tag":"TypeVar","contents":"a"}]},{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"annotation":[],"tag":"TypeVar","contents":"r"}]}}]}]}]}]},null]},null]},null]},null]}},"sourceSpan":{"start":[117,1],"name":"/Users/maddie/dev/lumi/purescript-react-basic/src/React/Basic/Events.purs","end":[122,23]}},{"children":[{"comments":null,"title":"mergeImpl","info":{"declType":"typeClassMember","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Type","Data","RowList"],"RLProxy"]},{"annotation":[],"tag":"TypeVar","contents":"rl"}]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"annotation":[],"tag":"TypeVar","contents":"fns"}]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["React","Basic","Events"],"EventFn"]},{"annotation":[],"tag":"TypeVar","contents":"a"}]},{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"annotation":[],"tag":"TypeVar","contents":"r"}]}}]}]}]}},"sourceSpan":{"start":[83,3],"name":"/Users/maddie/dev/lumi/purescript-react-basic/src/React/Basic/Events.purs","end":[83,64]}},{"comments":null,"title":"mergeNil","info":{"declType":"instance","dependencies":[],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["React","Basic","Events"],"Merge"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim","RowList"],"Nil"]}]},{"annotation":[],"tag":"REmpty"}]},{"annotation":[],"tag":"TypeVar","contents":"a"}]},{"annotation":[],"tag":"REmpty"}]}},"sourceSpan":{"start":[85,1],"name":"/Users/maddie/dev/lumi/purescript-react-basic/src/React/Basic/Events.purs","end":[86,35]}},{"comments":null,"title":"mergeCons","info":{"declType":"instance","dependencies":[{"constraintAnn":[],"constraintClass":[["Data","Symbol"],"IsSymbol"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"l"}],"constraintData":null},{"constraintAnn":[],"constraintClass":[["Prim","Row"],"Cons"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"l"},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["React","Basic","Events"],"EventFn"]},{"annotation":[],"tag":"TypeVar","contents":"a"}]},{"annotation":[],"tag":"TypeVar","contents":"b"}]},{"annotation":[],"tag":"TypeVar","contents":"fns_rest"},{"annotation":[],"tag":"TypeVar","contents":"fns"}],"constraintData":null},{"constraintAnn":[],"constraintClass":[["Prim","Row"],"Cons"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"l"},{"annotation":[],"tag":"TypeVar","contents":"b"},{"annotation":[],"tag":"TypeVar","contents":"r_rest"},{"annotation":[],"tag":"TypeVar","contents":"r"}],"constraintData":null},{"constraintAnn":[],"constraintClass":[["Prim","Row"],"Lacks"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"l"},{"annotation":[],"tag":"TypeVar","contents":"fns_rest"}],"constraintData":null},{"constraintAnn":[],"constraintClass":[["Prim","Row"],"Lacks"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"l"},{"annotation":[],"tag":"TypeVar","contents":"r_rest"}],"constraintData":null},{"constraintAnn":[],"constraintClass":[["React","Basic","Events"],"Merge"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"rest"},{"annotation":[],"tag":"TypeVar","contents":"fns_rest"},{"annotation":[],"tag":"TypeVar","contents":"a"},{"annotation":[],"tag":"TypeVar","contents":"r_rest"}],"constraintData":null}],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["React","Basic","Events"],"Merge"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim","RowList"],"Cons"]},{"annotation":[],"tag":"TypeVar","contents":"l"}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["React","Basic","Events"],"EventFn"]},{"annotation":[],"tag":"TypeVar","contents":"a"}]},{"annotation":[],"tag":"TypeVar","contents":"b"}]}]},{"annotation":[],"tag":"TypeVar","contents":"rest"}]}]},{"annotation":[],"tag":"TypeVar","contents":"fns"}]},{"annotation":[],"tag":"TypeVar","contents":"a"}]},{"annotation":[],"tag":"TypeVar","contents":"r"}]}},"sourceSpan":{"start":[88,1],"name":"/Users/maddie/dev/lumi/purescript-react-basic/src/React/Basic/Events.purs","end":[106,27]}}],"comments":null,"title":"Merge","info":{"fundeps":[[["rl"],["fns"]],[["rl","a"],["r"]]],"arguments":[["rl",{"annotation":[],"tag":"NamedKind","contents":[["Prim","RowList"],"RowList"]}],["fns",null],["a",null],["r",null]],"declType":"typeClass","superclasses":[]},"sourceSpan":{"start":[82,1],"name":"/Users/maddie/dev/lumi/purescript-react-basic/src/React/Basic/Events.purs","end":[83,64]}}]},{"reExports":[],"name":"React.Basic.StrictMode","comments":null,"declarations":[{"children":[],"comments":null,"title":"strictMode","info":{"declType":"value","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["React","Basic"],"JSX"]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["React","Basic"],"JSX"]}]}},"sourceSpan":{"start":[8,1],"name":"/Users/maddie/dev/lumi/purescript-react-basic/src/React/Basic/StrictMode.purs","end":[8,25]}}]}],"resolvedDependencies":{"purescript-newtype":"3.0.0","purescript-effect":"2.0.1","purescript-control":"4.2.0","purescript-either":"4.1.1","purescript-maybe":"4.0.1","purescript-invariant":"4.1.0","purescript-foldable-traversable":"4.1.1","purescript-tailrec":"4.1.1","purescript-prelude":"4.1.1","purescript-st":"4.1.1","purescript-bifunctors":"4.0.0","purescript-unsafe-coerce":"4.0.0","purescript-refs":"4.1.0","purescript-orders":"4.0.0","purescript-record":"2.0.2","purescript-partial":"2.0.1","purescript-identity":"4.1.0","purescript-functions":"4.0.0"},"version":"15.0.0","github":["lumihq","purescript-react-basic"],"versionTag":"v15.0.0","moduleMap":{"Data.BooleanAlgebra":"purescript-prelude","Data.Ring":"purescript-prelude","Record.ST":"purescript-record","Record.Unsafe.Union":"purescript-record","Effect.Uncurried":"purescript-effect","Effect":"purescript-effect","Data.Traversable.Accum.Internal":"purescript-foldable-traversable","Data.Bifunctor.Flip":"purescript-bifunctors","Data.Ord":"purescript-prelude","Type.Data.Row":"purescript-prelude","Data.Monoid.Dual":"purescript-prelude","Control.Monad.Rec.Class":"purescript-tailrec","Data.Bitraversable":"purescript-foldable-traversable","Record.Builder":"purescript-record","Data.Boolean":"purescript-prelude","Control.Biapplicative":"purescript-bifunctors","Data.Bounded":"purescript-prelude","Data.TraversableWithIndex":"purescript-foldable-traversable","Data.Show":"purescript-prelude","Data.Bifunctor.Clown":"purescript-bifunctors","Data.Foldable":"purescript-foldable-traversable","Control.Apply":"purescript-prelude","Control.Monad":"purescript-prelude","Data.Monoid":"purescript-prelude","Data.Maybe.First":"purescript-maybe","Control.Bind":"purescript-prelude","Data.Monoid.Additive":"purescript-prelude","Data.Symbol":"purescript-prelude","Data.HeytingAlgebra":"purescript-prelude","Control.Alt":"purescript-control","Control.Monad.ST.Internal":"purescript-st","Type.Data.RowList":"purescript-prelude","Effect.Ref":"purescript-refs","Data.Either.Inject":"purescript-either","Data.Ord.Min":"purescript-orders","Data.Ord.Unsafe":"purescript-prelude","Data.Semigroup":"purescript-prelude","Data.Ord.Down":"purescript-orders","Effect.Unsafe":"purescript-effect","Data.Semigroup.Foldable":"purescript-foldable-traversable","Control.Biapply":"purescript-bifunctors","Control.Alternative":"purescript-control","Data.Semiring":"purescript-prelude","Data.Traversable.Accum":"purescript-foldable-traversable","Data.CommutativeRing":"purescript-prelude","Data.NaturalTransformation":"purescript-prelude","Data.Monoid.Conj":"purescript-prelude","Control.Monad.ST":"purescript-st","Data.Functor":"purescript-prelude","Unsafe.Coerce":"purescript-unsafe-coerce","Control.Category":"purescript-prelude","Data.Maybe":"purescript-maybe","Control.Comonad":"purescript-control","Control.Monad.ST.Global":"purescript-st","Data.Function":"purescript-prelude","Data.Field":"purescript-prelude","Data.EuclideanRing":"purescript-prelude","Data.Semigroup.Last":"purescript-prelude","Data.Semigroup.First":"purescript-prelude","Data.Functor.Invariant":"purescript-invariant","Prelude":"purescript-prelude","Effect.Class":"purescript-effect","Partial.Unsafe":"purescript-partial","Data.Bifunctor.Product":"purescript-bifunctors","Control.Extend":"purescript-control","Control.Lazy":"purescript-control","Data.Function.Uncurried":"purescript-functions","Data.Eq":"purescript-prelude","Data.Either.Nested":"purescript-either","Data.Newtype":"purescript-newtype","Data.Semigroup.Traversable":"purescript-foldable-traversable","Data.Bifunctor":"purescript-bifunctors","Data.Monoid.Disj":"purescript-prelude","Control.MonadPlus":"purescript-control","Data.Void":"purescript-prelude","Control.MonadZero":"purescript-control","Data.Ord.Max":"purescript-orders","Data.Bifunctor.Joker":"purescript-bifunctors","Data.FunctorWithIndex":"purescript-foldable-traversable","Data.DivisionRing":"purescript-prelude","Record":"purescript-record","Data.Bifunctor.Wrap":"purescript-bifunctors","Data.Maybe.Last":"purescript-maybe","Data.Unit":"purescript-prelude","Data.Ordering":"purescript-prelude","Data.Identity":"purescript-identity","Control.Plus":"purescript-control","Partial":"purescript-partial","Data.Monoid.Multiplicative":"purescript-prelude","Control.Semigroupoid":"purescript-prelude","Data.Monoid.Alternate":"purescript-control","Data.Bifunctor.Join":"purescript-bifunctors","Data.Bifoldable":"purescript-foldable-traversable","Control.Monad.ST.Ref":"purescript-st","Data.Monoid.Endo":"purescript-prelude","Data.Either":"purescript-either","Control.Applicative":"purescript-prelude","Control.Monad.ST.Class":"purescript-st","Data.FoldableWithIndex":"purescript-foldable-traversable","Record.Unsafe":"purescript-prelude","Data.Traversable":"purescript-foldable-traversable"},"compilerVersion":"0.13.3"}