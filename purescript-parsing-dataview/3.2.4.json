{"compilerVersion":"0.15.6","github":["jamesdbrock","purescript-parsing-dataview"],"moduleMap":{"Control.Alt":"purescript-control","Control.Alternative":"purescript-control","Control.Applicative":"purescript-prelude","Control.Apply":"purescript-prelude","Control.Biapplicative":"purescript-bifunctors","Control.Biapply":"purescript-bifunctors","Control.Bind":"purescript-prelude","Control.Category":"purescript-prelude","Control.Comonad":"purescript-control","Control.Comonad.Env":"purescript-transformers","Control.Comonad.Env.Class":"purescript-transformers","Control.Comonad.Env.Trans":"purescript-transformers","Control.Comonad.Store":"purescript-transformers","Control.Comonad.Store.Class":"purescript-transformers","Control.Comonad.Store.Trans":"purescript-transformers","Control.Comonad.Traced":"purescript-transformers","Control.Comonad.Traced.Class":"purescript-transformers","Control.Comonad.Traced.Trans":"purescript-transformers","Control.Comonad.Trans.Class":"purescript-transformers","Control.Extend":"purescript-control","Control.Lazy":"purescript-control","Control.Monad":"purescript-prelude","Control.Monad.Cont":"purescript-transformers","Control.Monad.Cont.Class":"purescript-transformers","Control.Monad.Cont.Trans":"purescript-transformers","Control.Monad.Error.Class":"purescript-transformers","Control.Monad.Except":"purescript-transformers","Control.Monad.Except.Trans":"purescript-transformers","Control.Monad.Gen":"purescript-gen","Control.Monad.Gen.Class":"purescript-gen","Control.Monad.Gen.Common":"purescript-gen","Control.Monad.Identity.Trans":"purescript-transformers","Control.Monad.List.Trans":"purescript-transformers","Control.Monad.Maybe.Trans":"purescript-transformers","Control.Monad.RWS":"purescript-transformers","Control.Monad.RWS.Trans":"purescript-transformers","Control.Monad.Reader":"purescript-transformers","Control.Monad.Reader.Class":"purescript-transformers","Control.Monad.Reader.Trans":"purescript-transformers","Control.Monad.Rec.Class":"purescript-tailrec","Control.Monad.ST":"purescript-st","Control.Monad.ST.Class":"purescript-st","Control.Monad.ST.Global":"purescript-st","Control.Monad.ST.Internal":"purescript-st","Control.Monad.ST.Ref":"purescript-st","Control.Monad.ST.Uncurried":"purescript-st","Control.Monad.State":"purescript-transformers","Control.Monad.State.Class":"purescript-transformers","Control.Monad.State.Trans":"purescript-transformers","Control.Monad.Trans.Class":"purescript-transformers","Control.Monad.Writer":"purescript-transformers","Control.Monad.Writer.Class":"purescript-transformers","Control.Monad.Writer.Trans":"purescript-transformers","Control.MonadPlus":"purescript-control","Control.Plus":"purescript-control","Control.Semigroupoid":"purescript-prelude","Data.Array":"purescript-arrays","Data.Array.NonEmpty":"purescript-arrays","Data.Array.NonEmpty.Internal":"purescript-arrays","Data.Array.Partial":"purescript-arrays","Data.Array.ST":"purescript-arrays","Data.Array.ST.Iterator":"purescript-arrays","Data.Array.ST.Partial":"purescript-arrays","Data.ArrayBuffer.ArrayBuffer":"purescript-arraybuffer","Data.ArrayBuffer.ArrayBuffer.Gen":"purescript-arraybuffer","Data.ArrayBuffer.Cast":"purescript-arraybuffer","Data.ArrayBuffer.DataView":"purescript-arraybuffer","Data.ArrayBuffer.DataView.Gen":"purescript-arraybuffer","Data.ArrayBuffer.Typed":"purescript-arraybuffer","Data.ArrayBuffer.Typed.Gen":"purescript-arraybuffer","Data.ArrayBuffer.Types":"purescript-arraybuffer-types","Data.ArrayBuffer.ValueMapping":"purescript-arraybuffer","Data.Bifoldable":"purescript-foldable-traversable","Data.Bifunctor":"purescript-bifunctors","Data.Bifunctor.Join":"purescript-bifunctors","Data.Bitraversable":"purescript-foldable-traversable","Data.Boolean":"purescript-prelude","Data.BooleanAlgebra":"purescript-prelude","Data.Bounded":"purescript-prelude","Data.Bounded.Generic":"purescript-prelude","Data.Char":"purescript-strings","Data.Char.Gen":"purescript-strings","Data.CodePoint.Unicode":"purescript-unicode","Data.CodePoint.Unicode.Internal":"purescript-unicode","Data.CodePoint.Unicode.Internal.Casing":"purescript-unicode","Data.CommutativeRing":"purescript-prelude","Data.Comparison":"purescript-contravariant","Data.Const":"purescript-const","Data.Decidable":"purescript-contravariant","Data.Decide":"purescript-contravariant","Data.Distributive":"purescript-distributive","Data.Divide":"purescript-contravariant","Data.Divisible":"purescript-contravariant","Data.DivisionRing":"purescript-prelude","Data.Either":"purescript-either","Data.Either.Inject":"purescript-either","Data.Either.Nested":"purescript-either","Data.Enum":"purescript-enums","Data.Enum.Gen":"purescript-enums","Data.Enum.Generic":"purescript-enums","Data.Eq":"purescript-prelude","Data.Eq.Generic":"purescript-prelude","Data.Equivalence":"purescript-contravariant","Data.EuclideanRing":"purescript-prelude","Data.Exists":"purescript-exists","Data.Field":"purescript-prelude","Data.Float32":"purescript-float32","Data.Float32.Gen":"purescript-float32","Data.Foldable":"purescript-foldable-traversable","Data.FoldableWithIndex":"purescript-foldable-traversable","Data.Function":"purescript-prelude","Data.Function.Uncurried":"purescript-functions","Data.Functor":"purescript-prelude","Data.Functor.App":"purescript-functors","Data.Functor.Clown":"purescript-functors","Data.Functor.Compose":"purescript-functors","Data.Functor.Contravariant":"purescript-contravariant","Data.Functor.Coproduct":"purescript-functors","Data.Functor.Coproduct.Inject":"purescript-functors","Data.Functor.Coproduct.Nested":"purescript-functors","Data.Functor.Costar":"purescript-functors","Data.Functor.Flip":"purescript-functors","Data.Functor.Invariant":"purescript-invariant","Data.Functor.Joker":"purescript-functors","Data.Functor.Product":"purescript-functors","Data.Functor.Product.Nested":"purescript-functors","Data.Functor.Product2":"purescript-functors","Data.FunctorWithIndex":"purescript-foldable-traversable","Data.Generic.Rep":"purescript-prelude","Data.HeytingAlgebra":"purescript-prelude","Data.HeytingAlgebra.Generic":"purescript-prelude","Data.Identity":"purescript-identity","Data.Int":"purescript-integers","Data.Int.Bits":"purescript-integers","Data.Lazy":"purescript-lazy","Data.List":"purescript-lists","Data.List.Internal":"purescript-lists","Data.List.Lazy":"purescript-lists","Data.List.Lazy.NonEmpty":"purescript-lists","Data.List.Lazy.Types":"purescript-lists","Data.List.NonEmpty":"purescript-lists","Data.List.Partial":"purescript-lists","Data.List.Types":"purescript-lists","Data.List.ZipList":"purescript-lists","Data.Maybe":"purescript-maybe","Data.Maybe.First":"purescript-maybe","Data.Maybe.Last":"purescript-maybe","Data.Monoid":"purescript-prelude","Data.Monoid.Additive":"purescript-prelude","Data.Monoid.Alternate":"purescript-control","Data.Monoid.Conj":"purescript-prelude","Data.Monoid.Disj":"purescript-prelude","Data.Monoid.Dual":"purescript-prelude","Data.Monoid.Endo":"purescript-prelude","Data.Monoid.Generic":"purescript-prelude","Data.Monoid.Multiplicative":"purescript-prelude","Data.NaturalTransformation":"purescript-prelude","Data.Newtype":"purescript-newtype","Data.NonEmpty":"purescript-nonempty","Data.Nullable":"purescript-nullable","Data.Number":"purescript-numbers","Data.Number.Approximate":"purescript-numbers","Data.Number.Format":"purescript-numbers","Data.Op":"purescript-contravariant","Data.Ord":"purescript-prelude","Data.Ord.Down":"purescript-orders","Data.Ord.Generic":"purescript-prelude","Data.Ord.Max":"purescript-orders","Data.Ord.Min":"purescript-orders","Data.Ordering":"purescript-prelude","Data.Predicate":"purescript-contravariant","Data.Profunctor":"purescript-profunctor","Data.Profunctor.Choice":"purescript-profunctor","Data.Profunctor.Closed":"purescript-profunctor","Data.Profunctor.Cochoice":"purescript-profunctor","Data.Profunctor.Costrong":"purescript-profunctor","Data.Profunctor.Join":"purescript-profunctor","Data.Profunctor.Split":"purescript-profunctor","Data.Profunctor.Star":"purescript-profunctor","Data.Profunctor.Strong":"purescript-profunctor","Data.Reflectable":"purescript-prelude","Data.Ring":"purescript-prelude","Data.Ring.Generic":"purescript-prelude","Data.Semigroup":"purescript-prelude","Data.Semigroup.First":"purescript-prelude","Data.Semigroup.Foldable":"purescript-foldable-traversable","Data.Semigroup.Generic":"purescript-prelude","Data.Semigroup.Last":"purescript-prelude","Data.Semigroup.Traversable":"purescript-foldable-traversable","Data.Semiring":"purescript-prelude","Data.Semiring.Generic":"purescript-prelude","Data.Show":"purescript-prelude","Data.Show.Generic":"purescript-prelude","Data.String":"purescript-strings","Data.String.CaseInsensitive":"purescript-strings","Data.String.CodePoints":"purescript-strings","Data.String.CodeUnits":"purescript-strings","Data.String.Common":"purescript-strings","Data.String.Gen":"purescript-strings","Data.String.NonEmpty":"purescript-strings","Data.String.NonEmpty.CaseInsensitive":"purescript-strings","Data.String.NonEmpty.CodePoints":"purescript-strings","Data.String.NonEmpty.CodeUnits":"purescript-strings","Data.String.NonEmpty.Internal":"purescript-strings","Data.String.Pattern":"purescript-strings","Data.String.Regex":"purescript-strings","Data.String.Regex.Flags":"purescript-strings","Data.String.Regex.Unsafe":"purescript-strings","Data.String.Unicode":"purescript-unicode","Data.String.Unsafe":"purescript-strings","Data.Symbol":"purescript-prelude","Data.Traversable":"purescript-foldable-traversable","Data.Traversable.Accum":"purescript-foldable-traversable","Data.Traversable.Accum.Internal":"purescript-foldable-traversable","Data.TraversableWithIndex":"purescript-foldable-traversable","Data.Tuple":"purescript-tuples","Data.Tuple.Nested":"purescript-tuples","Data.UInt":"purescript-uint","Data.UInt.Gen":"purescript-uint","Data.Unfoldable":"purescript-unfoldable","Data.Unfoldable1":"purescript-unfoldable","Data.Unit":"purescript-prelude","Data.Void":"purescript-prelude","Effect":"purescript-effect","Effect.Class":"purescript-effect","Effect.Exception":"purescript-exceptions","Effect.Exception.Unsafe":"purescript-exceptions","Effect.Ref":"purescript-refs","Effect.Uncurried":"purescript-effect","Effect.Unsafe":"purescript-effect","Parsing":"purescript-parsing","Parsing.Combinators":"purescript-parsing","Parsing.Combinators.Array":"purescript-parsing","Parsing.Expr":"purescript-parsing","Parsing.Indent":"purescript-parsing","Parsing.Language":"purescript-parsing","Parsing.String":"purescript-parsing","Parsing.String.Basic":"purescript-parsing","Parsing.String.Replace":"purescript-parsing","Parsing.Token":"purescript-parsing","Partial":"purescript-partial","Partial.Unsafe":"purescript-partial","Prelude":"purescript-prelude","Record.Unsafe":"purescript-prelude","Safe.Coerce":"purescript-safe-coerce","Type.Equality":"purescript-type-equality","Type.Proxy":"purescript-prelude","Unsafe.Coerce":"purescript-unsafe-coerce"},"modules":[{"comments":"Primitive parsers for input type `DataView`.\n\nAll of these primitive parsers will consume when they succeed.\n\nAll of these primitive parsers will not consume and will automatically\nbacktrack when they fail.\n\nSee the package README for usage examples.\n\n### Mutable ArrayBuffer\n\nAll of the parsers in this module operate on an input stream of\n[__Data.ArrayBuffer.Types.DataView__](https://pursuit.purescript.org/packages/purescript-arraybuffer-types/docs/Data.ArrayBuffer.Types#t:DataView),\nwhich represents a range of a mutable\n[__Data.ArrayBuffer.Types.ArrayBuffer__](https://pursuit.purescript.org/packages/purescript-arraybuffer-types/docs/Data.ArrayBuffer.Types#t:ArrayBuffer).\n\nFor operations for working with `DataView`, see\nmodule\n[__Data.ArrayBuffer.DataView__](https://pursuit.purescript.org/packages/purescript-arraybuffer/docs/Data.ArrayBuffer.DataView)\nin package __arraybuffer__.\n\nReading from an `ArrayBuffer` is an `Effect`ful activity, so\nall parsers in this module must be run in a\n`MonadEffect m => ParserT DataView m` context with\n`Parsing.runParserT`.\n\n### Position\n\nIn a `DataView` parser, the `Position {index}` counts the number of\nbytes since the beginning of the input.\n\nThe `Postion {line,column}` fields are unused and will remain constant *1*.\n","declarations":[{"children":[],"comments":"Take *N* bytes starting from the current parser position. Will fail\nif not enough bytes remain in the input. Will fail if *N* is negative.\n\n#### Example\n\nParse three bytes.\n\n    takeN 3\n\n","info":{"declType":"value","type":{"annotation":[],"contents":["m",{"annotation":[],"contents":[{"constraintAnn":[],"constraintArgs":[{"annotation":[],"contents":"m","tag":"TypeVar"}],"constraintClass":[["Effect","Class"],"MonadEffect"],"constraintData":null,"constraintKindArgs":[]},{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Data","ArrayBuffer","Types"],"ByteLength"],"tag":"TypeConstructor"}],"tag":"TypeApp"},{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Parsing"],"ParserT"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Data","ArrayBuffer","Types"],"DataView"],"tag":"TypeConstructor"}],"tag":"TypeApp"},{"annotation":[],"contents":"m","tag":"TypeVar"}],"tag":"TypeApp"},{"annotation":[],"contents":[["Data","ArrayBuffer","Types"],"DataView"],"tag":"TypeConstructor"}],"tag":"TypeApp"}],"tag":"TypeApp"}],"tag":"ConstrainedType"},null],"tag":"ForAll"}},"kind":null,"sourceSpan":{"end":[263,78],"name":"/tmp/nix-shell.GCcvke/tmp-40743-z23cJt6q6gma/purescript-parsing-dataview/src/Parsing/DataView.purs","start":[263,1]},"title":"takeN"},{"children":[],"comments":"Take the rest of the input, however many bytes remain. Always succeeds.\n","info":{"declType":"value","type":{"annotation":[],"contents":["m",{"annotation":[],"contents":[{"constraintAnn":[],"constraintArgs":[{"annotation":[],"contents":"m","tag":"TypeVar"}],"constraintClass":[["Effect","Class"],"MonadEffect"],"constraintData":null,"constraintKindArgs":[]},{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Parsing"],"ParserT"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Data","ArrayBuffer","Types"],"DataView"],"tag":"TypeConstructor"}],"tag":"TypeApp"},{"annotation":[],"contents":"m","tag":"TypeVar"}],"tag":"TypeApp"},{"annotation":[],"contents":[["Data","ArrayBuffer","Types"],"DataView"],"tag":"TypeConstructor"}],"tag":"TypeApp"}],"tag":"ConstrainedType"},null],"tag":"ForAll"}},"kind":null,"sourceSpan":{"end":[275,67],"name":"/tmp/nix-shell.GCcvke/tmp-40743-z23cJt6q6gma/purescript-parsing-dataview/src/Parsing/DataView.purs","start":[275,1]},"title":"takeRest"},{"children":[],"comments":"Parse succeeds at the end of the input DataView.\n","info":{"declType":"value","type":{"annotation":[],"contents":["m",{"annotation":[],"contents":[{"constraintAnn":[],"constraintArgs":[{"annotation":[],"contents":"m","tag":"TypeVar"}],"constraintClass":[["Control","Monad"],"Monad"],"constraintData":null,"constraintKindArgs":[]},{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Parsing"],"ParserT"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Data","ArrayBuffer","Types"],"DataView"],"tag":"TypeConstructor"}],"tag":"TypeApp"},{"annotation":[],"contents":"m","tag":"TypeVar"}],"tag":"TypeApp"},{"annotation":[],"contents":[["Data","Unit"],"Unit"],"tag":"TypeConstructor"}],"tag":"TypeApp"}],"tag":"ConstrainedType"},null],"tag":"ForAll"}},"kind":null,"sourceSpan":{"end":[283,52],"name":"/tmp/nix-shell.GCcvke/tmp-40743-z23cJt6q6gma/purescript-parsing-dataview/src/Parsing/DataView.purs","start":[283,1]},"title":"eof"},{"children":[],"comments":"The\n[famous `match`](http://www.serpentine.com/blog/2014/05/31/attoparsec/#from-strings-to-buffers-and-cursors)\ncombinator.\n\nReturn both the result of a parse and the portion of the input that\nwas consumed while it was being parsed.\n","info":{"declType":"value","type":{"annotation":[],"contents":["a",{"annotation":[],"contents":["m",{"annotation":[],"contents":[{"constraintAnn":[],"constraintArgs":[{"annotation":[],"contents":"m","tag":"TypeVar"}],"constraintClass":[["Effect","Class"],"MonadEffect"],"constraintData":null,"constraintKindArgs":[]},{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Parsing"],"ParserT"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Data","ArrayBuffer","Types"],"DataView"],"tag":"TypeConstructor"}],"tag":"TypeApp"},{"annotation":[],"contents":"m","tag":"TypeVar"}],"tag":"TypeApp"},{"annotation":[],"contents":"a","tag":"TypeVar"}],"tag":"TypeApp"}],"tag":"TypeApp"},{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Parsing"],"ParserT"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Data","ArrayBuffer","Types"],"DataView"],"tag":"TypeConstructor"}],"tag":"TypeApp"},{"annotation":[],"contents":"m","tag":"TypeVar"}],"tag":"TypeApp"},{"annotation":[],"contents":{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Data","Tuple"],"Tuple"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Data","ArrayBuffer","Types"],"DataView"],"tag":"TypeConstructor"}],"tag":"TypeApp"},{"annotation":[],"contents":"a","tag":"TypeVar"}],"tag":"TypeApp"},"tag":"ParensInType"}],"tag":"TypeApp"}],"tag":"TypeApp"}],"tag":"ConstrainedType"},null],"tag":"ForAll"},null],"tag":"ForAll"}},"kind":null,"sourceSpan":{"end":[298,100],"name":"/tmp/nix-shell.GCcvke/tmp-40743-z23cJt6q6gma/purescript-parsing-dataview/src/Parsing/DataView.purs","start":[298,1]},"title":"match"},{"children":[],"comments":"Combinator which finds the first position in the input `DataView` where the\nphrase can parse. Returns both the\nparsed result and the unparsable input section searched before the parse.\nWill fail if no section of the input is parseable. To backtrack the input\nstream on failure, combine with `tryRethrow`.\n\nThis combinator is equivalent to `manyTill_ anyInt8`, but it will be\nfaster because it returns a slice of the input `DataView` for the\nsection preceding the parse instead of a `List Int`.\n\nBe careful not to look too far\nahead; if the phrase parser looks to the end of the input then `anyTill`\ncould be *O(n²)*.\n","info":{"declType":"value","type":{"annotation":[],"contents":["m",{"annotation":[],"contents":["a",{"annotation":[],"contents":[{"constraintAnn":[],"constraintArgs":[{"annotation":[],"contents":"m","tag":"TypeVar"}],"constraintClass":[["Effect","Class"],"MonadEffect"],"constraintData":null,"constraintKindArgs":[]},{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Parsing"],"ParserT"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Data","ArrayBuffer","Types"],"DataView"],"tag":"TypeConstructor"}],"tag":"TypeApp"},{"annotation":[],"contents":"m","tag":"TypeVar"}],"tag":"TypeApp"},{"annotation":[],"contents":"a","tag":"TypeVar"}],"tag":"TypeApp"}],"tag":"TypeApp"},{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Parsing"],"ParserT"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Data","ArrayBuffer","Types"],"DataView"],"tag":"TypeConstructor"}],"tag":"TypeApp"},{"annotation":[],"contents":"m","tag":"TypeVar"}],"tag":"TypeApp"},{"annotation":[],"contents":{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Data","Tuple"],"Tuple"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Data","ArrayBuffer","Types"],"DataView"],"tag":"TypeConstructor"}],"tag":"TypeApp"},{"annotation":[],"contents":"a","tag":"TypeVar"}],"tag":"TypeApp"},"tag":"ParensInType"}],"tag":"TypeApp"}],"tag":"TypeApp"}],"tag":"ConstrainedType"},null],"tag":"ForAll"},null],"tag":"ForAll"}},"kind":null,"sourceSpan":{"end":[323,43],"name":"/tmp/nix-shell.GCcvke/tmp-40743-z23cJt6q6gma/purescript-parsing-dataview/src/Parsing/DataView.purs","start":[319,1]},"title":"anyTill"},{"children":[],"comments":"Parse one fixed-bit-width `Data.ArrayBuffer.Types.ArrayViewType` primitive\nof a given endianness.\n\n#### Example\n\nParse a little-endian 32-bit two’s-complement signed integer (4 bytes):\n\n    anyPrim LE (Proxy :: Proxy Int32)\n\nor just use the convenience function `anyInt32le`, see below.\n","info":{"declType":"value","type":{"annotation":[],"contents":["a",{"annotation":[],"contents":["name",{"annotation":[],"contents":["m",{"annotation":[],"contents":["t",{"annotation":[],"contents":[{"constraintAnn":[],"constraintArgs":[{"annotation":[],"contents":"a","tag":"TypeVar"},{"annotation":[],"contents":"t","tag":"TypeVar"}],"constraintClass":[["Data","ArrayBuffer","ValueMapping"],"BinaryValue"],"constraintData":null,"constraintKindArgs":[]},{"annotation":[],"contents":[{"constraintAnn":[],"constraintArgs":[{"annotation":[],"contents":"a","tag":"TypeVar"}],"constraintClass":[["Data","ArrayBuffer","ValueMapping"],"BytesPerType"],"constraintData":null,"constraintKindArgs":[]},{"annotation":[],"contents":[{"constraintAnn":[],"constraintArgs":[{"annotation":[],"contents":"a","tag":"TypeVar"},{"annotation":[],"contents":"name","tag":"TypeVar"}],"constraintClass":[["Data","ArrayBuffer","ValueMapping"],"ShowArrayViewType"],"constraintData":null,"constraintKindArgs":[]},{"annotation":[],"contents":[{"constraintAnn":[],"constraintArgs":[{"annotation":[],"contents":"name","tag":"TypeVar"}],"constraintClass":[["Data","Symbol"],"IsSymbol"],"constraintData":null,"constraintKindArgs":[]},{"annotation":[],"contents":[{"constraintAnn":[],"constraintArgs":[{"annotation":[],"contents":"m","tag":"TypeVar"}],"constraintClass":[["Effect","Class"],"MonadEffect"],"constraintData":null,"constraintKindArgs":[]},{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Data","ArrayBuffer","DataView"],"Endian"],"tag":"TypeConstructor"}],"tag":"TypeApp"},{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[{"annotation":[],"contents":[["Type","Proxy"],"Proxy"],"tag":"TypeConstructor"},{"annotation":[],"contents":"a","tag":"TypeVar"}],"tag":"TypeApp"}],"tag":"TypeApp"},{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Parsing"],"ParserT"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Data","ArrayBuffer","Types"],"DataView"],"tag":"TypeConstructor"}],"tag":"TypeApp"},{"annotation":[],"contents":"m","tag":"TypeVar"}],"tag":"TypeApp"},{"annotation":[],"contents":"t","tag":"TypeVar"}],"tag":"TypeApp"}],"tag":"TypeApp"}],"tag":"TypeApp"}],"tag":"ConstrainedType"}],"tag":"ConstrainedType"}],"tag":"ConstrainedType"}],"tag":"ConstrainedType"}],"tag":"ConstrainedType"},null],"tag":"ForAll"},null],"tag":"ForAll"},null],"tag":"ForAll"},null],"tag":"ForAll"}},"kind":null,"sourceSpan":{"end":[108,26],"name":"/tmp/nix-shell.GCcvke/tmp-40743-z23cJt6q6gma/purescript-parsing-dataview/src/Parsing/DataView.purs","start":[99,1]},"title":"anyPrim"},{"children":[],"comments":"Parse one 8-bit two’s-complement signed integer (byte).\n","info":{"declType":"value","type":{"annotation":[],"contents":["m",{"annotation":[],"contents":[{"constraintAnn":[],"constraintArgs":[{"annotation":[],"contents":"m","tag":"TypeVar"}],"constraintClass":[["Effect","Class"],"MonadEffect"],"constraintData":null,"constraintKindArgs":[]},{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Parsing"],"ParserT"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Data","ArrayBuffer","Types"],"DataView"],"tag":"TypeConstructor"}],"tag":"TypeApp"},{"annotation":[],"contents":"m","tag":"TypeVar"}],"tag":"TypeApp"},{"annotation":[],"contents":[["Prim"],"Int"],"tag":"TypeConstructor"}],"tag":"TypeApp"}],"tag":"ConstrainedType"},null],"tag":"ForAll"}},"kind":null,"sourceSpan":{"end":[117,61],"name":"/tmp/nix-shell.GCcvke/tmp-40743-z23cJt6q6gma/purescript-parsing-dataview/src/Parsing/DataView.purs","start":[117,1]},"title":"anyInt8"},{"children":[],"comments":"Parse one 16-bit big-endian two’s-complement signed integer.\n","info":{"declType":"value","type":{"annotation":[],"contents":["m",{"annotation":[],"contents":[{"constraintAnn":[],"constraintArgs":[{"annotation":[],"contents":"m","tag":"TypeVar"}],"constraintClass":[["Effect","Class"],"MonadEffect"],"constraintData":null,"constraintKindArgs":[]},{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Parsing"],"ParserT"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Data","ArrayBuffer","Types"],"DataView"],"tag":"TypeConstructor"}],"tag":"TypeApp"},{"annotation":[],"contents":"m","tag":"TypeVar"}],"tag":"TypeApp"},{"annotation":[],"contents":[["Prim"],"Int"],"tag":"TypeConstructor"}],"tag":"TypeApp"}],"tag":"ConstrainedType"},null],"tag":"ForAll"}},"kind":null,"sourceSpan":{"end":[121,64],"name":"/tmp/nix-shell.GCcvke/tmp-40743-z23cJt6q6gma/purescript-parsing-dataview/src/Parsing/DataView.purs","start":[121,1]},"title":"anyInt16be"},{"children":[],"comments":"Parse one 16-bit little-endian two’s-complement signed integer.\n","info":{"declType":"value","type":{"annotation":[],"contents":["m",{"annotation":[],"contents":[{"constraintAnn":[],"constraintArgs":[{"annotation":[],"contents":"m","tag":"TypeVar"}],"constraintClass":[["Effect","Class"],"MonadEffect"],"constraintData":null,"constraintKindArgs":[]},{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Parsing"],"ParserT"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Data","ArrayBuffer","Types"],"DataView"],"tag":"TypeConstructor"}],"tag":"TypeApp"},{"annotation":[],"contents":"m","tag":"TypeVar"}],"tag":"TypeApp"},{"annotation":[],"contents":[["Prim"],"Int"],"tag":"TypeConstructor"}],"tag":"TypeApp"}],"tag":"ConstrainedType"},null],"tag":"ForAll"}},"kind":null,"sourceSpan":{"end":[125,64],"name":"/tmp/nix-shell.GCcvke/tmp-40743-z23cJt6q6gma/purescript-parsing-dataview/src/Parsing/DataView.purs","start":[125,1]},"title":"anyInt16le"},{"children":[],"comments":"Parse one 32-bit big-endian two’s-complement signed integer.\n","info":{"declType":"value","type":{"annotation":[],"contents":["m",{"annotation":[],"contents":[{"constraintAnn":[],"constraintArgs":[{"annotation":[],"contents":"m","tag":"TypeVar"}],"constraintClass":[["Effect","Class"],"MonadEffect"],"constraintData":null,"constraintKindArgs":[]},{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Parsing"],"ParserT"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Data","ArrayBuffer","Types"],"DataView"],"tag":"TypeConstructor"}],"tag":"TypeApp"},{"annotation":[],"contents":"m","tag":"TypeVar"}],"tag":"TypeApp"},{"annotation":[],"contents":[["Prim"],"Int"],"tag":"TypeConstructor"}],"tag":"TypeApp"}],"tag":"ConstrainedType"},null],"tag":"ForAll"}},"kind":null,"sourceSpan":{"end":[129,64],"name":"/tmp/nix-shell.GCcvke/tmp-40743-z23cJt6q6gma/purescript-parsing-dataview/src/Parsing/DataView.purs","start":[129,1]},"title":"anyInt32be"},{"children":[],"comments":"Parse one 32-bit little-endian two’s-complement signed integer.\n","info":{"declType":"value","type":{"annotation":[],"contents":["m",{"annotation":[],"contents":[{"constraintAnn":[],"constraintArgs":[{"annotation":[],"contents":"m","tag":"TypeVar"}],"constraintClass":[["Effect","Class"],"MonadEffect"],"constraintData":null,"constraintKindArgs":[]},{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Parsing"],"ParserT"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Data","ArrayBuffer","Types"],"DataView"],"tag":"TypeConstructor"}],"tag":"TypeApp"},{"annotation":[],"contents":"m","tag":"TypeVar"}],"tag":"TypeApp"},{"annotation":[],"contents":[["Prim"],"Int"],"tag":"TypeConstructor"}],"tag":"TypeApp"}],"tag":"ConstrainedType"},null],"tag":"ForAll"}},"kind":null,"sourceSpan":{"end":[133,64],"name":"/tmp/nix-shell.GCcvke/tmp-40743-z23cJt6q6gma/purescript-parsing-dataview/src/Parsing/DataView.purs","start":[133,1]},"title":"anyInt32le"},{"children":[],"comments":"Parse one 8-bit unsigned integer (octet).\n","info":{"declType":"value","type":{"annotation":[],"contents":["m",{"annotation":[],"contents":[{"constraintAnn":[],"constraintArgs":[{"annotation":[],"contents":"m","tag":"TypeVar"}],"constraintClass":[["Effect","Class"],"MonadEffect"],"constraintData":null,"constraintKindArgs":[]},{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Parsing"],"ParserT"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Data","ArrayBuffer","Types"],"DataView"],"tag":"TypeConstructor"}],"tag":"TypeApp"},{"annotation":[],"contents":"m","tag":"TypeVar"}],"tag":"TypeApp"},{"annotation":[],"contents":[["Data","UInt"],"UInt"],"tag":"TypeConstructor"}],"tag":"TypeApp"}],"tag":"ConstrainedType"},null],"tag":"ForAll"}},"kind":null,"sourceSpan":{"end":[137,63],"name":"/tmp/nix-shell.GCcvke/tmp-40743-z23cJt6q6gma/purescript-parsing-dataview/src/Parsing/DataView.purs","start":[137,1]},"title":"anyUint8"},{"children":[],"comments":"Parse one 16-bit big-endian unsigned integer.\n","info":{"declType":"value","type":{"annotation":[],"contents":["m",{"annotation":[],"contents":[{"constraintAnn":[],"constraintArgs":[{"annotation":[],"contents":"m","tag":"TypeVar"}],"constraintClass":[["Effect","Class"],"MonadEffect"],"constraintData":null,"constraintKindArgs":[]},{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Parsing"],"ParserT"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Data","ArrayBuffer","Types"],"DataView"],"tag":"TypeConstructor"}],"tag":"TypeApp"},{"annotation":[],"contents":"m","tag":"TypeVar"}],"tag":"TypeApp"},{"annotation":[],"contents":[["Data","UInt"],"UInt"],"tag":"TypeConstructor"}],"tag":"TypeApp"}],"tag":"ConstrainedType"},null],"tag":"ForAll"}},"kind":null,"sourceSpan":{"end":[141,66],"name":"/tmp/nix-shell.GCcvke/tmp-40743-z23cJt6q6gma/purescript-parsing-dataview/src/Parsing/DataView.purs","start":[141,1]},"title":"anyUint16be"},{"children":[],"comments":"Parse one 16-bit little-endian unsigned integer.\n","info":{"declType":"value","type":{"annotation":[],"contents":["m",{"annotation":[],"contents":[{"constraintAnn":[],"constraintArgs":[{"annotation":[],"contents":"m","tag":"TypeVar"}],"constraintClass":[["Effect","Class"],"MonadEffect"],"constraintData":null,"constraintKindArgs":[]},{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Parsing"],"ParserT"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Data","ArrayBuffer","Types"],"DataView"],"tag":"TypeConstructor"}],"tag":"TypeApp"},{"annotation":[],"contents":"m","tag":"TypeVar"}],"tag":"TypeApp"},{"annotation":[],"contents":[["Data","UInt"],"UInt"],"tag":"TypeConstructor"}],"tag":"TypeApp"}],"tag":"ConstrainedType"},null],"tag":"ForAll"}},"kind":null,"sourceSpan":{"end":[145,66],"name":"/tmp/nix-shell.GCcvke/tmp-40743-z23cJt6q6gma/purescript-parsing-dataview/src/Parsing/DataView.purs","start":[145,1]},"title":"anyUint16le"},{"children":[],"comments":"Parse one 32-bit big-endian unsigned integer.\n","info":{"declType":"value","type":{"annotation":[],"contents":["m",{"annotation":[],"contents":[{"constraintAnn":[],"constraintArgs":[{"annotation":[],"contents":"m","tag":"TypeVar"}],"constraintClass":[["Effect","Class"],"MonadEffect"],"constraintData":null,"constraintKindArgs":[]},{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Parsing"],"ParserT"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Data","ArrayBuffer","Types"],"DataView"],"tag":"TypeConstructor"}],"tag":"TypeApp"},{"annotation":[],"contents":"m","tag":"TypeVar"}],"tag":"TypeApp"},{"annotation":[],"contents":[["Data","UInt"],"UInt"],"tag":"TypeConstructor"}],"tag":"TypeApp"}],"tag":"ConstrainedType"},null],"tag":"ForAll"}},"kind":null,"sourceSpan":{"end":[149,66],"name":"/tmp/nix-shell.GCcvke/tmp-40743-z23cJt6q6gma/purescript-parsing-dataview/src/Parsing/DataView.purs","start":[149,1]},"title":"anyUint32be"},{"children":[],"comments":"Parse one 32-bit little-endian unsigned integer.\n","info":{"declType":"value","type":{"annotation":[],"contents":["m",{"annotation":[],"contents":[{"constraintAnn":[],"constraintArgs":[{"annotation":[],"contents":"m","tag":"TypeVar"}],"constraintClass":[["Effect","Class"],"MonadEffect"],"constraintData":null,"constraintKindArgs":[]},{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Parsing"],"ParserT"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Data","ArrayBuffer","Types"],"DataView"],"tag":"TypeConstructor"}],"tag":"TypeApp"},{"annotation":[],"contents":"m","tag":"TypeVar"}],"tag":"TypeApp"},{"annotation":[],"contents":[["Data","UInt"],"UInt"],"tag":"TypeConstructor"}],"tag":"TypeApp"}],"tag":"ConstrainedType"},null],"tag":"ForAll"}},"kind":null,"sourceSpan":{"end":[153,66],"name":"/tmp/nix-shell.GCcvke/tmp-40743-z23cJt6q6gma/purescript-parsing-dataview/src/Parsing/DataView.purs","start":[153,1]},"title":"anyUint32le"},{"children":[],"comments":"Parse one 32-bit big-endian IEEE 754 floating-point number.\n","info":{"declType":"value","type":{"annotation":[],"contents":["m",{"annotation":[],"contents":[{"constraintAnn":[],"constraintArgs":[{"annotation":[],"contents":"m","tag":"TypeVar"}],"constraintClass":[["Effect","Class"],"MonadEffect"],"constraintData":null,"constraintKindArgs":[]},{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Parsing"],"ParserT"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Data","ArrayBuffer","Types"],"DataView"],"tag":"TypeConstructor"}],"tag":"TypeApp"},{"annotation":[],"contents":"m","tag":"TypeVar"}],"tag":"TypeApp"},{"annotation":[],"contents":[["Data","Float32"],"Float32"],"tag":"TypeConstructor"}],"tag":"TypeApp"}],"tag":"ConstrainedType"},null],"tag":"ForAll"}},"kind":null,"sourceSpan":{"end":[157,78],"name":"/tmp/nix-shell.GCcvke/tmp-40743-z23cJt6q6gma/purescript-parsing-dataview/src/Parsing/DataView.purs","start":[157,1]},"title":"anyFloat32be"},{"children":[],"comments":"Parse one 32-bit little-endian IEEE 754 floating-point number.\n","info":{"declType":"value","type":{"annotation":[],"contents":["m",{"annotation":[],"contents":[{"constraintAnn":[],"constraintArgs":[{"annotation":[],"contents":"m","tag":"TypeVar"}],"constraintClass":[["Effect","Class"],"MonadEffect"],"constraintData":null,"constraintKindArgs":[]},{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Parsing"],"ParserT"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Data","ArrayBuffer","Types"],"DataView"],"tag":"TypeConstructor"}],"tag":"TypeApp"},{"annotation":[],"contents":"m","tag":"TypeVar"}],"tag":"TypeApp"},{"annotation":[],"contents":[["Data","Float32"],"Float32"],"tag":"TypeConstructor"}],"tag":"TypeApp"}],"tag":"ConstrainedType"},null],"tag":"ForAll"}},"kind":null,"sourceSpan":{"end":[161,78],"name":"/tmp/nix-shell.GCcvke/tmp-40743-z23cJt6q6gma/purescript-parsing-dataview/src/Parsing/DataView.purs","start":[161,1]},"title":"anyFloat32le"},{"children":[],"comments":"Parse one 64-bit big-endian IEEE 754 floating-point number.\n","info":{"declType":"value","type":{"annotation":[],"contents":["m",{"annotation":[],"contents":[{"constraintAnn":[],"constraintArgs":[{"annotation":[],"contents":"m","tag":"TypeVar"}],"constraintClass":[["Effect","Class"],"MonadEffect"],"constraintData":null,"constraintKindArgs":[]},{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Parsing"],"ParserT"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Data","ArrayBuffer","Types"],"DataView"],"tag":"TypeConstructor"}],"tag":"TypeApp"},{"annotation":[],"contents":"m","tag":"TypeVar"}],"tag":"TypeApp"},{"annotation":[],"contents":[["Prim"],"Number"],"tag":"TypeConstructor"}],"tag":"TypeApp"}],"tag":"ConstrainedType"},null],"tag":"ForAll"}},"kind":null,"sourceSpan":{"end":[165,69],"name":"/tmp/nix-shell.GCcvke/tmp-40743-z23cJt6q6gma/purescript-parsing-dataview/src/Parsing/DataView.purs","start":[165,1]},"title":"anyFloat64be"},{"children":[],"comments":"Parse one 64-bit little-endian IEEE 754 floating-point number.\n","info":{"declType":"value","type":{"annotation":[],"contents":["m",{"annotation":[],"contents":[{"constraintAnn":[],"constraintArgs":[{"annotation":[],"contents":"m","tag":"TypeVar"}],"constraintClass":[["Effect","Class"],"MonadEffect"],"constraintData":null,"constraintKindArgs":[]},{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Parsing"],"ParserT"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Data","ArrayBuffer","Types"],"DataView"],"tag":"TypeConstructor"}],"tag":"TypeApp"},{"annotation":[],"contents":"m","tag":"TypeVar"}],"tag":"TypeApp"},{"annotation":[],"contents":[["Prim"],"Number"],"tag":"TypeConstructor"}],"tag":"TypeApp"}],"tag":"ConstrainedType"},null],"tag":"ForAll"}},"kind":null,"sourceSpan":{"end":[169,69],"name":"/tmp/nix-shell.GCcvke/tmp-40743-z23cJt6q6gma/purescript-parsing-dataview/src/Parsing/DataView.purs","start":[169,1]},"title":"anyFloat64le"},{"children":[],"comments":"Parse one fixed-bit-width primitive that satisfies the given predicate.\n\n#### Example\n\nParse a little-endian 32-bit signed integer that is equal to *3*:\n\n    satisfy LE (Proxy :: Proxy Int32) (_ == 3)\n\nor just use the convenience function `satisfyInt32le`, see below.\n","info":{"declType":"value","type":{"annotation":[],"contents":["a",{"annotation":[],"contents":["name",{"annotation":[],"contents":["m",{"annotation":[],"contents":["t",{"annotation":[],"contents":[{"constraintAnn":[],"constraintArgs":[{"annotation":[],"contents":"a","tag":"TypeVar"},{"annotation":[],"contents":"t","tag":"TypeVar"}],"constraintClass":[["Data","ArrayBuffer","ValueMapping"],"BinaryValue"],"constraintData":null,"constraintKindArgs":[]},{"annotation":[],"contents":[{"constraintAnn":[],"constraintArgs":[{"annotation":[],"contents":"a","tag":"TypeVar"}],"constraintClass":[["Data","ArrayBuffer","ValueMapping"],"BytesPerType"],"constraintData":null,"constraintKindArgs":[]},{"annotation":[],"contents":[{"constraintAnn":[],"constraintArgs":[{"annotation":[],"contents":"a","tag":"TypeVar"},{"annotation":[],"contents":"name","tag":"TypeVar"}],"constraintClass":[["Data","ArrayBuffer","ValueMapping"],"ShowArrayViewType"],"constraintData":null,"constraintKindArgs":[]},{"annotation":[],"contents":[{"constraintAnn":[],"constraintArgs":[{"annotation":[],"contents":"name","tag":"TypeVar"}],"constraintClass":[["Data","Symbol"],"IsSymbol"],"constraintData":null,"constraintKindArgs":[]},{"annotation":[],"contents":[{"constraintAnn":[],"constraintArgs":[{"annotation":[],"contents":"t","tag":"TypeVar"}],"constraintClass":[["Data","Show"],"Show"],"constraintData":null,"constraintKindArgs":[]},{"annotation":[],"contents":[{"constraintAnn":[],"constraintArgs":[{"annotation":[],"contents":"m","tag":"TypeVar"}],"constraintClass":[["Effect","Class"],"MonadEffect"],"constraintData":null,"constraintKindArgs":[]},{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Data","ArrayBuffer","DataView"],"Endian"],"tag":"TypeConstructor"}],"tag":"TypeApp"},{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[{"annotation":[],"contents":[["Type","Proxy"],"Proxy"],"tag":"TypeConstructor"},{"annotation":[],"contents":"a","tag":"TypeVar"}],"tag":"TypeApp"}],"tag":"TypeApp"},{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":"t","tag":"TypeVar"}],"tag":"TypeApp"},{"annotation":[],"contents":[["Prim"],"Boolean"],"tag":"TypeConstructor"}],"tag":"TypeApp"},"tag":"ParensInType"}],"tag":"TypeApp"},{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Parsing"],"ParserT"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Data","ArrayBuffer","Types"],"DataView"],"tag":"TypeConstructor"}],"tag":"TypeApp"},{"annotation":[],"contents":"m","tag":"TypeVar"}],"tag":"TypeApp"},{"annotation":[],"contents":"t","tag":"TypeVar"}],"tag":"TypeApp"}],"tag":"TypeApp"}],"tag":"TypeApp"}],"tag":"TypeApp"}],"tag":"ConstrainedType"}],"tag":"ConstrainedType"}],"tag":"ConstrainedType"}],"tag":"ConstrainedType"}],"tag":"ConstrainedType"}],"tag":"ConstrainedType"},null],"tag":"ForAll"},null],"tag":"ForAll"},null],"tag":"ForAll"},null],"tag":"ForAll"}},"kind":null,"sourceSpan":{"end":[192,26],"name":"/tmp/nix-shell.GCcvke/tmp-40743-z23cJt6q6gma/purescript-parsing-dataview/src/Parsing/DataView.purs","start":[181,1]},"title":"satisfy"},{"children":[],"comments":"Parse one 8-bit signed integer that satisfies the given predicate.\n","info":{"declType":"value","type":{"annotation":[],"contents":["m",{"annotation":[],"contents":[{"constraintAnn":[],"constraintArgs":[{"annotation":[],"contents":"m","tag":"TypeVar"}],"constraintClass":[["Effect","Class"],"MonadEffect"],"constraintData":null,"constraintKindArgs":[]},{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Prim"],"Int"],"tag":"TypeConstructor"}],"tag":"TypeApp"},{"annotation":[],"contents":[["Prim"],"Boolean"],"tag":"TypeConstructor"}],"tag":"TypeApp"},"tag":"ParensInType"}],"tag":"TypeApp"},{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Parsing"],"ParserT"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Data","ArrayBuffer","Types"],"DataView"],"tag":"TypeConstructor"}],"tag":"TypeApp"},{"annotation":[],"contents":"m","tag":"TypeVar"}],"tag":"TypeApp"},{"annotation":[],"contents":[["Prim"],"Int"],"tag":"TypeConstructor"}],"tag":"TypeApp"}],"tag":"TypeApp"}],"tag":"ConstrainedType"},null],"tag":"ForAll"}},"kind":null,"sourceSpan":{"end":[199,85],"name":"/tmp/nix-shell.GCcvke/tmp-40743-z23cJt6q6gma/purescript-parsing-dataview/src/Parsing/DataView.purs","start":[199,1]},"title":"satisfyInt8"},{"children":[],"comments":"Parse one 16-bit big-endian signed integer that satisfies the given predicate.\n","info":{"declType":"value","type":{"annotation":[],"contents":["m",{"annotation":[],"contents":[{"constraintAnn":[],"constraintArgs":[{"annotation":[],"contents":"m","tag":"TypeVar"}],"constraintClass":[["Effect","Class"],"MonadEffect"],"constraintData":null,"constraintKindArgs":[]},{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Prim"],"Int"],"tag":"TypeConstructor"}],"tag":"TypeApp"},{"annotation":[],"contents":[["Prim"],"Boolean"],"tag":"TypeConstructor"}],"tag":"TypeApp"},"tag":"ParensInType"}],"tag":"TypeApp"},{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Parsing"],"ParserT"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Data","ArrayBuffer","Types"],"DataView"],"tag":"TypeConstructor"}],"tag":"TypeApp"},{"annotation":[],"contents":"m","tag":"TypeVar"}],"tag":"TypeApp"},{"annotation":[],"contents":[["Prim"],"Int"],"tag":"TypeConstructor"}],"tag":"TypeApp"}],"tag":"TypeApp"}],"tag":"ConstrainedType"},null],"tag":"ForAll"}},"kind":null,"sourceSpan":{"end":[203,88],"name":"/tmp/nix-shell.GCcvke/tmp-40743-z23cJt6q6gma/purescript-parsing-dataview/src/Parsing/DataView.purs","start":[203,1]},"title":"satisfyInt16be"},{"children":[],"comments":"Parse one 16-bit little-endian signed integer that satisfies the given predicate.\n","info":{"declType":"value","type":{"annotation":[],"contents":["m",{"annotation":[],"contents":[{"constraintAnn":[],"constraintArgs":[{"annotation":[],"contents":"m","tag":"TypeVar"}],"constraintClass":[["Effect","Class"],"MonadEffect"],"constraintData":null,"constraintKindArgs":[]},{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Prim"],"Int"],"tag":"TypeConstructor"}],"tag":"TypeApp"},{"annotation":[],"contents":[["Prim"],"Boolean"],"tag":"TypeConstructor"}],"tag":"TypeApp"},"tag":"ParensInType"}],"tag":"TypeApp"},{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Parsing"],"ParserT"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Data","ArrayBuffer","Types"],"DataView"],"tag":"TypeConstructor"}],"tag":"TypeApp"},{"annotation":[],"contents":"m","tag":"TypeVar"}],"tag":"TypeApp"},{"annotation":[],"contents":[["Prim"],"Int"],"tag":"TypeConstructor"}],"tag":"TypeApp"}],"tag":"TypeApp"}],"tag":"ConstrainedType"},null],"tag":"ForAll"}},"kind":null,"sourceSpan":{"end":[207,88],"name":"/tmp/nix-shell.GCcvke/tmp-40743-z23cJt6q6gma/purescript-parsing-dataview/src/Parsing/DataView.purs","start":[207,1]},"title":"satisfyInt16le"},{"children":[],"comments":"Parse one 32-bit big-endian signed integer that satisfies the given predicate.\n","info":{"declType":"value","type":{"annotation":[],"contents":["m",{"annotation":[],"contents":[{"constraintAnn":[],"constraintArgs":[{"annotation":[],"contents":"m","tag":"TypeVar"}],"constraintClass":[["Effect","Class"],"MonadEffect"],"constraintData":null,"constraintKindArgs":[]},{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Prim"],"Int"],"tag":"TypeConstructor"}],"tag":"TypeApp"},{"annotation":[],"contents":[["Prim"],"Boolean"],"tag":"TypeConstructor"}],"tag":"TypeApp"},"tag":"ParensInType"}],"tag":"TypeApp"},{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Parsing"],"ParserT"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Data","ArrayBuffer","Types"],"DataView"],"tag":"TypeConstructor"}],"tag":"TypeApp"},{"annotation":[],"contents":"m","tag":"TypeVar"}],"tag":"TypeApp"},{"annotation":[],"contents":[["Prim"],"Int"],"tag":"TypeConstructor"}],"tag":"TypeApp"}],"tag":"TypeApp"}],"tag":"ConstrainedType"},null],"tag":"ForAll"}},"kind":null,"sourceSpan":{"end":[211,88],"name":"/tmp/nix-shell.GCcvke/tmp-40743-z23cJt6q6gma/purescript-parsing-dataview/src/Parsing/DataView.purs","start":[211,1]},"title":"satisfyInt32be"},{"children":[],"comments":"Parse one 32-bit little-endian signed integer that satisfies the given predicate.\n","info":{"declType":"value","type":{"annotation":[],"contents":["m",{"annotation":[],"contents":[{"constraintAnn":[],"constraintArgs":[{"annotation":[],"contents":"m","tag":"TypeVar"}],"constraintClass":[["Effect","Class"],"MonadEffect"],"constraintData":null,"constraintKindArgs":[]},{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Prim"],"Int"],"tag":"TypeConstructor"}],"tag":"TypeApp"},{"annotation":[],"contents":[["Prim"],"Boolean"],"tag":"TypeConstructor"}],"tag":"TypeApp"},"tag":"ParensInType"}],"tag":"TypeApp"},{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Parsing"],"ParserT"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Data","ArrayBuffer","Types"],"DataView"],"tag":"TypeConstructor"}],"tag":"TypeApp"},{"annotation":[],"contents":"m","tag":"TypeVar"}],"tag":"TypeApp"},{"annotation":[],"contents":[["Prim"],"Int"],"tag":"TypeConstructor"}],"tag":"TypeApp"}],"tag":"TypeApp"}],"tag":"ConstrainedType"},null],"tag":"ForAll"}},"kind":null,"sourceSpan":{"end":[215,88],"name":"/tmp/nix-shell.GCcvke/tmp-40743-z23cJt6q6gma/purescript-parsing-dataview/src/Parsing/DataView.purs","start":[215,1]},"title":"satisfyInt32le"},{"children":[],"comments":"Parse one 8-bit unsigned integer that satisfies the given predicate.\n","info":{"declType":"value","type":{"annotation":[],"contents":["m",{"annotation":[],"contents":[{"constraintAnn":[],"constraintArgs":[{"annotation":[],"contents":"m","tag":"TypeVar"}],"constraintClass":[["Effect","Class"],"MonadEffect"],"constraintData":null,"constraintKindArgs":[]},{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Data","UInt"],"UInt"],"tag":"TypeConstructor"}],"tag":"TypeApp"},{"annotation":[],"contents":[["Prim"],"Boolean"],"tag":"TypeConstructor"}],"tag":"TypeApp"},"tag":"ParensInType"}],"tag":"TypeApp"},{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Parsing"],"ParserT"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Data","ArrayBuffer","Types"],"DataView"],"tag":"TypeConstructor"}],"tag":"TypeApp"},{"annotation":[],"contents":"m","tag":"TypeVar"}],"tag":"TypeApp"},{"annotation":[],"contents":[["Data","UInt"],"UInt"],"tag":"TypeConstructor"}],"tag":"TypeApp"}],"tag":"TypeApp"}],"tag":"ConstrainedType"},null],"tag":"ForAll"}},"kind":null,"sourceSpan":{"end":[219,88],"name":"/tmp/nix-shell.GCcvke/tmp-40743-z23cJt6q6gma/purescript-parsing-dataview/src/Parsing/DataView.purs","start":[219,1]},"title":"satisfyUint8"},{"children":[],"comments":"Parse one 16-bit big-endian unsigned integer that satisfies the given predicate.\n","info":{"declType":"value","type":{"annotation":[],"contents":["m",{"annotation":[],"contents":[{"constraintAnn":[],"constraintArgs":[{"annotation":[],"contents":"m","tag":"TypeVar"}],"constraintClass":[["Effect","Class"],"MonadEffect"],"constraintData":null,"constraintKindArgs":[]},{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Data","UInt"],"UInt"],"tag":"TypeConstructor"}],"tag":"TypeApp"},{"annotation":[],"contents":[["Prim"],"Boolean"],"tag":"TypeConstructor"}],"tag":"TypeApp"},"tag":"ParensInType"}],"tag":"TypeApp"},{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Parsing"],"ParserT"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Data","ArrayBuffer","Types"],"DataView"],"tag":"TypeConstructor"}],"tag":"TypeApp"},{"annotation":[],"contents":"m","tag":"TypeVar"}],"tag":"TypeApp"},{"annotation":[],"contents":[["Data","UInt"],"UInt"],"tag":"TypeConstructor"}],"tag":"TypeApp"}],"tag":"TypeApp"}],"tag":"ConstrainedType"},null],"tag":"ForAll"}},"kind":null,"sourceSpan":{"end":[223,91],"name":"/tmp/nix-shell.GCcvke/tmp-40743-z23cJt6q6gma/purescript-parsing-dataview/src/Parsing/DataView.purs","start":[223,1]},"title":"satisfyUint16be"},{"children":[],"comments":"Parse one 16-bit little-endian unsigned integer that satisfies the given predicate.\n","info":{"declType":"value","type":{"annotation":[],"contents":["m",{"annotation":[],"contents":[{"constraintAnn":[],"constraintArgs":[{"annotation":[],"contents":"m","tag":"TypeVar"}],"constraintClass":[["Effect","Class"],"MonadEffect"],"constraintData":null,"constraintKindArgs":[]},{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Data","UInt"],"UInt"],"tag":"TypeConstructor"}],"tag":"TypeApp"},{"annotation":[],"contents":[["Prim"],"Boolean"],"tag":"TypeConstructor"}],"tag":"TypeApp"},"tag":"ParensInType"}],"tag":"TypeApp"},{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Parsing"],"ParserT"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Data","ArrayBuffer","Types"],"DataView"],"tag":"TypeConstructor"}],"tag":"TypeApp"},{"annotation":[],"contents":"m","tag":"TypeVar"}],"tag":"TypeApp"},{"annotation":[],"contents":[["Data","UInt"],"UInt"],"tag":"TypeConstructor"}],"tag":"TypeApp"}],"tag":"TypeApp"}],"tag":"ConstrainedType"},null],"tag":"ForAll"}},"kind":null,"sourceSpan":{"end":[227,91],"name":"/tmp/nix-shell.GCcvke/tmp-40743-z23cJt6q6gma/purescript-parsing-dataview/src/Parsing/DataView.purs","start":[227,1]},"title":"satisfyUint16le"},{"children":[],"comments":"Parse one 32-bit big-endian unsigned integer that satisfies the given predicate.\n","info":{"declType":"value","type":{"annotation":[],"contents":["m",{"annotation":[],"contents":[{"constraintAnn":[],"constraintArgs":[{"annotation":[],"contents":"m","tag":"TypeVar"}],"constraintClass":[["Effect","Class"],"MonadEffect"],"constraintData":null,"constraintKindArgs":[]},{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Data","UInt"],"UInt"],"tag":"TypeConstructor"}],"tag":"TypeApp"},{"annotation":[],"contents":[["Prim"],"Boolean"],"tag":"TypeConstructor"}],"tag":"TypeApp"},"tag":"ParensInType"}],"tag":"TypeApp"},{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Parsing"],"ParserT"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Data","ArrayBuffer","Types"],"DataView"],"tag":"TypeConstructor"}],"tag":"TypeApp"},{"annotation":[],"contents":"m","tag":"TypeVar"}],"tag":"TypeApp"},{"annotation":[],"contents":[["Data","UInt"],"UInt"],"tag":"TypeConstructor"}],"tag":"TypeApp"}],"tag":"TypeApp"}],"tag":"ConstrainedType"},null],"tag":"ForAll"}},"kind":null,"sourceSpan":{"end":[231,91],"name":"/tmp/nix-shell.GCcvke/tmp-40743-z23cJt6q6gma/purescript-parsing-dataview/src/Parsing/DataView.purs","start":[231,1]},"title":"satisfyUint32be"},{"children":[],"comments":"Parse one 32-bit little-endian unsigned integer that satisfies the given predicate.\n","info":{"declType":"value","type":{"annotation":[],"contents":["m",{"annotation":[],"contents":[{"constraintAnn":[],"constraintArgs":[{"annotation":[],"contents":"m","tag":"TypeVar"}],"constraintClass":[["Effect","Class"],"MonadEffect"],"constraintData":null,"constraintKindArgs":[]},{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Data","UInt"],"UInt"],"tag":"TypeConstructor"}],"tag":"TypeApp"},{"annotation":[],"contents":[["Prim"],"Boolean"],"tag":"TypeConstructor"}],"tag":"TypeApp"},"tag":"ParensInType"}],"tag":"TypeApp"},{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Parsing"],"ParserT"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Data","ArrayBuffer","Types"],"DataView"],"tag":"TypeConstructor"}],"tag":"TypeApp"},{"annotation":[],"contents":"m","tag":"TypeVar"}],"tag":"TypeApp"},{"annotation":[],"contents":[["Data","UInt"],"UInt"],"tag":"TypeConstructor"}],"tag":"TypeApp"}],"tag":"TypeApp"}],"tag":"ConstrainedType"},null],"tag":"ForAll"}},"kind":null,"sourceSpan":{"end":[235,91],"name":"/tmp/nix-shell.GCcvke/tmp-40743-z23cJt6q6gma/purescript-parsing-dataview/src/Parsing/DataView.purs","start":[235,1]},"title":"satisfyUint32le"},{"children":[],"comments":"Parse one 32-bit big-endian floating-point number that satisfies the given predicate.\n","info":{"declType":"value","type":{"annotation":[],"contents":["m",{"annotation":[],"contents":[{"constraintAnn":[],"constraintArgs":[{"annotation":[],"contents":"m","tag":"TypeVar"}],"constraintClass":[["Effect","Class"],"MonadEffect"],"constraintData":null,"constraintKindArgs":[]},{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Data","Float32"],"Float32"],"tag":"TypeConstructor"}],"tag":"TypeApp"},{"annotation":[],"contents":[["Prim"],"Boolean"],"tag":"TypeConstructor"}],"tag":"TypeApp"},"tag":"ParensInType"}],"tag":"TypeApp"},{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Parsing"],"ParserT"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Data","ArrayBuffer","Types"],"DataView"],"tag":"TypeConstructor"}],"tag":"TypeApp"},{"annotation":[],"contents":"m","tag":"TypeVar"}],"tag":"TypeApp"},{"annotation":[],"contents":[["Data","Float32"],"Float32"],"tag":"TypeConstructor"}],"tag":"TypeApp"}],"tag":"TypeApp"}],"tag":"ConstrainedType"},null],"tag":"ForAll"}},"kind":null,"sourceSpan":{"end":[239,114],"name":"/tmp/nix-shell.GCcvke/tmp-40743-z23cJt6q6gma/purescript-parsing-dataview/src/Parsing/DataView.purs","start":[239,1]},"title":"satisfyFloat32be"},{"children":[],"comments":"Parse one 32-bit little-endian floating-point number that satisfies the given predicate.\n","info":{"declType":"value","type":{"annotation":[],"contents":["m",{"annotation":[],"contents":[{"constraintAnn":[],"constraintArgs":[{"annotation":[],"contents":"m","tag":"TypeVar"}],"constraintClass":[["Effect","Class"],"MonadEffect"],"constraintData":null,"constraintKindArgs":[]},{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Data","Float32"],"Float32"],"tag":"TypeConstructor"}],"tag":"TypeApp"},{"annotation":[],"contents":[["Prim"],"Boolean"],"tag":"TypeConstructor"}],"tag":"TypeApp"},"tag":"ParensInType"}],"tag":"TypeApp"},{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Parsing"],"ParserT"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Data","ArrayBuffer","Types"],"DataView"],"tag":"TypeConstructor"}],"tag":"TypeApp"},{"annotation":[],"contents":"m","tag":"TypeVar"}],"tag":"TypeApp"},{"annotation":[],"contents":[["Data","Float32"],"Float32"],"tag":"TypeConstructor"}],"tag":"TypeApp"}],"tag":"TypeApp"}],"tag":"ConstrainedType"},null],"tag":"ForAll"}},"kind":null,"sourceSpan":{"end":[243,114],"name":"/tmp/nix-shell.GCcvke/tmp-40743-z23cJt6q6gma/purescript-parsing-dataview/src/Parsing/DataView.purs","start":[243,1]},"title":"satisfyFloat32le"},{"children":[],"comments":"Parse one 64-bit big-endian floating-point number that satisfies the given predicate.\n","info":{"declType":"value","type":{"annotation":[],"contents":["m",{"annotation":[],"contents":[{"constraintAnn":[],"constraintArgs":[{"annotation":[],"contents":"m","tag":"TypeVar"}],"constraintClass":[["Effect","Class"],"MonadEffect"],"constraintData":null,"constraintKindArgs":[]},{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Prim"],"Number"],"tag":"TypeConstructor"}],"tag":"TypeApp"},{"annotation":[],"contents":[["Prim"],"Boolean"],"tag":"TypeConstructor"}],"tag":"TypeApp"},"tag":"ParensInType"}],"tag":"TypeApp"},{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Parsing"],"ParserT"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Data","ArrayBuffer","Types"],"DataView"],"tag":"TypeConstructor"}],"tag":"TypeApp"},{"annotation":[],"contents":"m","tag":"TypeVar"}],"tag":"TypeApp"},{"annotation":[],"contents":[["Prim"],"Number"],"tag":"TypeConstructor"}],"tag":"TypeApp"}],"tag":"TypeApp"}],"tag":"ConstrainedType"},null],"tag":"ForAll"}},"kind":null,"sourceSpan":{"end":[247,96],"name":"/tmp/nix-shell.GCcvke/tmp-40743-z23cJt6q6gma/purescript-parsing-dataview/src/Parsing/DataView.purs","start":[247,1]},"title":"satisfyFloat64be"},{"children":[],"comments":"Parse one 64-bit little-endian floating-point number that satisfies the given predicate.\n","info":{"declType":"value","type":{"annotation":[],"contents":["m",{"annotation":[],"contents":[{"constraintAnn":[],"constraintArgs":[{"annotation":[],"contents":"m","tag":"TypeVar"}],"constraintClass":[["Effect","Class"],"MonadEffect"],"constraintData":null,"constraintKindArgs":[]},{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Prim"],"Number"],"tag":"TypeConstructor"}],"tag":"TypeApp"},{"annotation":[],"contents":[["Prim"],"Boolean"],"tag":"TypeConstructor"}],"tag":"TypeApp"},"tag":"ParensInType"}],"tag":"TypeApp"},{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Parsing"],"ParserT"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Data","ArrayBuffer","Types"],"DataView"],"tag":"TypeConstructor"}],"tag":"TypeApp"},{"annotation":[],"contents":"m","tag":"TypeVar"}],"tag":"TypeApp"},{"annotation":[],"contents":[["Prim"],"Number"],"tag":"TypeConstructor"}],"tag":"TypeApp"}],"tag":"TypeApp"}],"tag":"ConstrainedType"},null],"tag":"ForAll"}},"kind":null,"sourceSpan":{"end":[251,96],"name":"/tmp/nix-shell.GCcvke/tmp-40743-z23cJt6q6gma/purescript-parsing-dataview/src/Parsing/DataView.purs","start":[251,1]},"title":"satisfyFloat64le"}],"name":"Parsing.DataView","reExports":[]},{"comments":"Basic `DataView` parsers derived from primitive `DataView` parsers.\n\nAll of these parsers will consume when they succeed.\n\nAll of these parsers will not consume and will automatically\nbacktrack when they fail.\n","declarations":[{"children":[],"comments":"Decode one UTF-8 code point, *1—4* bytes.\n","info":{"declType":"value","type":{"annotation":[],"contents":["m",{"annotation":[],"contents":[{"constraintAnn":[],"constraintArgs":[{"annotation":[],"contents":"m","tag":"TypeVar"}],"constraintClass":[["Effect","Class"],"MonadEffect"],"constraintData":null,"constraintKindArgs":[]},{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Parsing"],"ParserT"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Data","ArrayBuffer","Types"],"DataView"],"tag":"TypeConstructor"}],"tag":"TypeApp"},{"annotation":[],"contents":"m","tag":"TypeVar"}],"tag":"TypeApp"},{"annotation":[],"contents":[["Data","String","CodePoints"],"CodePoint"],"tag":"TypeConstructor"}],"tag":"TypeApp"}],"tag":"ConstrainedType"},null],"tag":"ForAll"}},"kind":null,"sourceSpan":{"end":[26,34],"name":"/tmp/nix-shell.GCcvke/tmp-40743-z23cJt6q6gma/purescript-parsing-dataview/src/Parsing/DataView.Basic.purs","start":[23,1]},"title":"anyCodePointUTF8"}],"name":"Parsing.DataView.Basic","reExports":[]}],"packageMeta":{"dependencies":{"purescript-arraybuffer":">=13.1.1 <14.0.0","purescript-arraybuffer-types":">=3.0.2 <4.0.0","purescript-effect":">=4.0.0 <5.0.0","purescript-enums":">=6.0.1 <7.0.0","purescript-float32":">=2.0.0 <3.0.0","purescript-maybe":">=6.0.0 <7.0.0","purescript-parsing":">=10.2.0 <11.0.0","purescript-prelude":">=6.0.1 <7.0.0","purescript-strings":">=6.0.1 <7.0.0","purescript-tailrec":">=6.1.0 <7.0.0","purescript-transformers":">=6.0.0 <7.0.0","purescript-tuples":">=7.0.0 <8.0.0","purescript-uint":">=7.0.0 <8.0.0"},"homepage":"https://github.com/jamesdbrock/purescript-parsing-dataview.git","license":["BSD-2-Clause"],"name":"purescript-parsing-dataview","repository":{"type":"git","url":"https://github.com/jamesdbrock/purescript-parsing-dataview.git"}},"resolvedDependencies":{"purescript-arraybuffer":"13.1.1","purescript-arraybuffer-types":"3.0.2","purescript-arrays":"7.1.0","purescript-bifunctors":"6.0.0","purescript-const":"6.0.0","purescript-contravariant":"6.0.0","purescript-control":"6.0.0","purescript-distributive":"6.0.0","purescript-effect":"4.0.0","purescript-either":"6.1.0","purescript-enums":"6.0.1","purescript-exceptions":"6.0.0","purescript-exists":"6.0.0","purescript-float32":"2.0.0","purescript-foldable-traversable":"6.0.0","purescript-functions":"6.0.0","purescript-functors":"5.0.0","purescript-gen":"4.0.0","purescript-identity":"6.0.0","purescript-integers":"6.0.0","purescript-invariant":"6.0.0","purescript-lazy":"6.0.0","purescript-lists":"7.0.0","purescript-maybe":"6.0.0","purescript-newtype":"5.0.0","purescript-nonempty":"7.0.0","purescript-nullable":"6.0.0","purescript-numbers":"9.0.0","purescript-orders":"6.0.0","purescript-parsing":"10.2.0","purescript-partial":"4.0.0","purescript-prelude":"6.0.1","purescript-profunctor":"6.0.0","purescript-refs":"6.0.0","purescript-safe-coerce":"2.0.0","purescript-st":"6.2.0","purescript-strings":"6.0.1","purescript-tailrec":"6.1.0","purescript-transformers":"6.0.0","purescript-tuples":"7.0.0","purescript-type-equality":"4.0.1","purescript-uint":"7.0.0","purescript-unfoldable":"6.0.0","purescript-unicode":"6.0.0","purescript-unsafe-coerce":"6.0.0"},"tagTime":"2022-12-05T00:04:12+0000","uploader":"pacchettibotti","version":"3.2.4","versionTag":"v3.2.4"}