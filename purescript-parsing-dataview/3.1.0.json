{"uploader":"jamesdbrock","packageMeta":{"repository":{"url":"https://github.com/jamesdbrock/purescript-parsing-dataview","type":"git"},"ignore":["**/.*","node_modules","bower_components","output"],"dependencies":{"purescript-effect":"^v4.0.0","purescript-arraybuffer-types":"^v3.0.2","purescript-maybe":"^v6.0.0","purescript-parsing":"^v9.0.0","purescript-uint":"^v7.0.0","purescript-float32":"^v2.0.0","purescript-prelude":"^v6.0.0","purescript-transformers":"^v6.0.0","purescript-tuples":"^v7.0.0","purescript-arraybuffer":"^v13.0.0"},"name":"purescript-parsing-dataview","license":["BSD-2-Clause"]},"tagTime":"2022-05-11T13:01:30+0000","modules":[{"reExports":[],"name":"Parsing.DataView","comments":"Primitive parsers for input `DataView`s with the\n`ParserT` type and combinators in package __parsing__.\nSee the package README for usage examples.\n\n### Mutable ArrayBuffer\n\nAll of the parsers in this module operate on an input stream of\n[__Data.ArrayBuffer.Types.DataView__](https://pursuit.purescript.org/packages/purescript-arraybuffer-types/docs/Data.ArrayBuffer.Types#t:DataView),\nwhich represents a range of a mutable\n[__Data.ArrayBuffer.Types.ArrayBuffer__](https://pursuit.purescript.org/packages/purescript-arraybuffer-types/docs/Data.ArrayBuffer.Types#t:ArrayBuffer).\n\nFor operations for working with `DataView`, see\nmodule\n[__Data.ArrayBuffer.DataView__](https://pursuit.purescript.org/packages/purescript-arraybuffer/docs/Data.ArrayBuffer.DataView)\nin package __arraybuffer__.\n\nReading from an `ArrayBuffer` is an `Effect`ful activity, so\nall parsers in this module must be run in a\n`MonadEffect m => ParserT DataView m` context with\n`Parsing.runParserT`.\n\n### Position\n\nIn a `DataView` parser, the `Position {index}` counts the number of\nbytes since the beginning of the input.\n\nThe `Postion {line,column}` fields are unused and will remain constant *1*.\n","declarations":[{"kind":null,"children":[],"comments":"Take *N* bytes starting from the current parser position. Will fail\nif not enough bytes remain in the input. Will fail if *N* is negative.\n\n#### Example\n\nParse three bytes.\n\n    takeN 3\n\n","title":"takeN","info":{"declType":"value","type":{"annotation":[],"tag":"ForAll","contents":["m",{"annotation":[],"tag":"ConstrainedType","contents":[{"constraintAnn":[],"constraintClass":[["Effect","Class"],"MonadEffect"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"m"}],"constraintKindArgs":[],"constraintData":null},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","ArrayBuffer","Types"],"ByteLength"]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Parsing"],"ParserT"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","ArrayBuffer","Types"],"DataView"]}]},{"annotation":[],"tag":"TypeVar","contents":"m"}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","ArrayBuffer","Types"],"DataView"]}]}]}]},null]}},"sourceSpan":{"start":[256,1],"name":"/home/jbrock/work/me/purescript-parsing-dataview/src/Parsing/DataView.purs","end":[256,78]}},{"kind":null,"children":[],"comments":"Take the rest of the input, however many bytes remain. Always succeeds.\n","title":"takeRest","info":{"declType":"value","type":{"annotation":[],"tag":"ForAll","contents":["m",{"annotation":[],"tag":"ConstrainedType","contents":[{"constraintAnn":[],"constraintClass":[["Effect","Class"],"MonadEffect"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"m"}],"constraintKindArgs":[],"constraintData":null},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Parsing"],"ParserT"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","ArrayBuffer","Types"],"DataView"]}]},{"annotation":[],"tag":"TypeVar","contents":"m"}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","ArrayBuffer","Types"],"DataView"]}]}]},null]}},"sourceSpan":{"start":[268,1],"name":"/home/jbrock/work/me/purescript-parsing-dataview/src/Parsing/DataView.purs","end":[268,67]}},{"kind":null,"children":[],"comments":"Parse succeeds at the end of the input DataView.\n","title":"eof","info":{"declType":"value","type":{"annotation":[],"tag":"ForAll","contents":["m",{"annotation":[],"tag":"ConstrainedType","contents":[{"constraintAnn":[],"constraintClass":[["Control","Monad"],"Monad"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"m"}],"constraintKindArgs":[],"constraintData":null},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Parsing"],"ParserT"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","ArrayBuffer","Types"],"DataView"]}]},{"annotation":[],"tag":"TypeVar","contents":"m"}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]},null]}},"sourceSpan":{"start":[276,1],"name":"/home/jbrock/work/me/purescript-parsing-dataview/src/Parsing/DataView.purs","end":[276,52]}},{"kind":null,"children":[],"comments":"The\n[famous `match`](http://www.serpentine.com/blog/2014/05/31/attoparsec/#from-strings-to-buffers-and-cursors)\ncombinator.\n\nReturn both the result of a parse and the portion of the input that\nwas consumed while it was being parsed.\n","title":"match","info":{"declType":"value","type":{"annotation":[],"tag":"ForAll","contents":["a",{"annotation":[],"tag":"ForAll","contents":["m",{"annotation":[],"tag":"ConstrainedType","contents":[{"constraintAnn":[],"constraintClass":[["Effect","Class"],"MonadEffect"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"m"}],"constraintKindArgs":[],"constraintData":null},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Parsing"],"ParserT"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","ArrayBuffer","Types"],"DataView"]}]},{"annotation":[],"tag":"TypeVar","contents":"m"}]},{"annotation":[],"tag":"TypeVar","contents":"a"}]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Parsing"],"ParserT"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","ArrayBuffer","Types"],"DataView"]}]},{"annotation":[],"tag":"TypeVar","contents":"m"}]},{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Tuple"],"Tuple"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","ArrayBuffer","Types"],"DataView"]}]},{"annotation":[],"tag":"TypeVar","contents":"a"}]}}]}]}]},null]},null]}},"sourceSpan":{"start":[291,1],"name":"/home/jbrock/work/me/purescript-parsing-dataview/src/Parsing/DataView.purs","end":[291,100]}},{"kind":null,"children":[],"comments":"Parse one fixed-bit-width `Data.ArrayBuffer.Types.ArrayViewType` primitive\nof a given endianness.\n\n#### Example\n\nParse a little-endian 32-bit twoâ€™s-complement signed integer (4 bytes):\n\n    anyPrim LE (Proxy :: Proxy Int32)\n\nor just use the convenience function `anyInt32le`, see below.\n","title":"anyPrim","info":{"declType":"value","type":{"annotation":[],"tag":"ForAll","contents":["a",{"annotation":[],"tag":"ForAll","contents":["name",{"annotation":[],"tag":"ForAll","contents":["m",{"annotation":[],"tag":"ForAll","contents":["t",{"annotation":[],"tag":"ConstrainedType","contents":[{"constraintAnn":[],"constraintClass":[["Data","ArrayBuffer","ValueMapping"],"BinaryValue"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"a"},{"annotation":[],"tag":"TypeVar","contents":"t"}],"constraintKindArgs":[],"constraintData":null},{"annotation":[],"tag":"ConstrainedType","contents":[{"constraintAnn":[],"constraintClass":[["Data","ArrayBuffer","ValueMapping"],"BytesPerType"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"a"}],"constraintKindArgs":[],"constraintData":null},{"annotation":[],"tag":"ConstrainedType","contents":[{"constraintAnn":[],"constraintClass":[["Data","ArrayBuffer","ValueMapping"],"ShowArrayViewType"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"a"},{"annotation":[],"tag":"TypeVar","contents":"name"}],"constraintKindArgs":[],"constraintData":null},{"annotation":[],"tag":"ConstrainedType","contents":[{"constraintAnn":[],"constraintClass":[["Data","Symbol"],"IsSymbol"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"name"}],"constraintKindArgs":[],"constraintData":null},{"annotation":[],"tag":"ConstrainedType","contents":[{"constraintAnn":[],"constraintClass":[["Effect","Class"],"MonadEffect"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"m"}],"constraintKindArgs":[],"constraintData":null},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","ArrayBuffer","DataView"],"Endian"]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Type","Proxy"],"Proxy"]},{"annotation":[],"tag":"TypeVar","contents":"a"}]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Parsing"],"ParserT"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","ArrayBuffer","Types"],"DataView"]}]},{"annotation":[],"tag":"TypeVar","contents":"m"}]},{"annotation":[],"tag":"TypeVar","contents":"t"}]}]}]}]}]}]}]}]},null]},null]},null]},null]}},"sourceSpan":{"start":[92,1],"name":"/home/jbrock/work/me/purescript-parsing-dataview/src/Parsing/DataView.purs","end":[101,26]}},{"kind":null,"children":[],"comments":"Parse one 8-bit twoâ€™s-complement signed integer (byte).\n","title":"anyInt8","info":{"declType":"value","type":{"annotation":[],"tag":"ForAll","contents":["m",{"annotation":[],"tag":"ConstrainedType","contents":[{"constraintAnn":[],"constraintClass":[["Effect","Class"],"MonadEffect"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"m"}],"constraintKindArgs":[],"constraintData":null},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Parsing"],"ParserT"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","ArrayBuffer","Types"],"DataView"]}]},{"annotation":[],"tag":"TypeVar","contents":"m"}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]}]},null]}},"sourceSpan":{"start":[110,1],"name":"/home/jbrock/work/me/purescript-parsing-dataview/src/Parsing/DataView.purs","end":[110,61]}},{"kind":null,"children":[],"comments":"Parse one 16-bit big-endian twoâ€™s-complement signed integer.\n","title":"anyInt16be","info":{"declType":"value","type":{"annotation":[],"tag":"ForAll","contents":["m",{"annotation":[],"tag":"ConstrainedType","contents":[{"constraintAnn":[],"constraintClass":[["Effect","Class"],"MonadEffect"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"m"}],"constraintKindArgs":[],"constraintData":null},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Parsing"],"ParserT"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","ArrayBuffer","Types"],"DataView"]}]},{"annotation":[],"tag":"TypeVar","contents":"m"}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]}]},null]}},"sourceSpan":{"start":[114,1],"name":"/home/jbrock/work/me/purescript-parsing-dataview/src/Parsing/DataView.purs","end":[114,64]}},{"kind":null,"children":[],"comments":"Parse one 16-bit little-endian twoâ€™s-complement signed integer.\n","title":"anyInt16le","info":{"declType":"value","type":{"annotation":[],"tag":"ForAll","contents":["m",{"annotation":[],"tag":"ConstrainedType","contents":[{"constraintAnn":[],"constraintClass":[["Effect","Class"],"MonadEffect"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"m"}],"constraintKindArgs":[],"constraintData":null},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Parsing"],"ParserT"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","ArrayBuffer","Types"],"DataView"]}]},{"annotation":[],"tag":"TypeVar","contents":"m"}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]}]},null]}},"sourceSpan":{"start":[118,1],"name":"/home/jbrock/work/me/purescript-parsing-dataview/src/Parsing/DataView.purs","end":[118,64]}},{"kind":null,"children":[],"comments":"Parse one 32-bit big-endian twoâ€™s-complement signed integer.\n","title":"anyInt32be","info":{"declType":"value","type":{"annotation":[],"tag":"ForAll","contents":["m",{"annotation":[],"tag":"ConstrainedType","contents":[{"constraintAnn":[],"constraintClass":[["Effect","Class"],"MonadEffect"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"m"}],"constraintKindArgs":[],"constraintData":null},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Parsing"],"ParserT"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","ArrayBuffer","Types"],"DataView"]}]},{"annotation":[],"tag":"TypeVar","contents":"m"}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]}]},null]}},"sourceSpan":{"start":[122,1],"name":"/home/jbrock/work/me/purescript-parsing-dataview/src/Parsing/DataView.purs","end":[122,64]}},{"kind":null,"children":[],"comments":"Parse one 32-bit little-endian twoâ€™s-complement signed integer.\n","title":"anyInt32le","info":{"declType":"value","type":{"annotation":[],"tag":"ForAll","contents":["m",{"annotation":[],"tag":"ConstrainedType","contents":[{"constraintAnn":[],"constraintClass":[["Effect","Class"],"MonadEffect"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"m"}],"constraintKindArgs":[],"constraintData":null},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Parsing"],"ParserT"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","ArrayBuffer","Types"],"DataView"]}]},{"annotation":[],"tag":"TypeVar","contents":"m"}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]}]},null]}},"sourceSpan":{"start":[126,1],"name":"/home/jbrock/work/me/purescript-parsing-dataview/src/Parsing/DataView.purs","end":[126,64]}},{"kind":null,"children":[],"comments":"Parse one 8-bit unsigned integer (octet).\n","title":"anyUint8","info":{"declType":"value","type":{"annotation":[],"tag":"ForAll","contents":["m",{"annotation":[],"tag":"ConstrainedType","contents":[{"constraintAnn":[],"constraintClass":[["Effect","Class"],"MonadEffect"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"m"}],"constraintKindArgs":[],"constraintData":null},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Parsing"],"ParserT"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","ArrayBuffer","Types"],"DataView"]}]},{"annotation":[],"tag":"TypeVar","contents":"m"}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","UInt"],"UInt"]}]}]},null]}},"sourceSpan":{"start":[130,1],"name":"/home/jbrock/work/me/purescript-parsing-dataview/src/Parsing/DataView.purs","end":[130,63]}},{"kind":null,"children":[],"comments":"Parse one 16-bit big-endian unsigned integer.\n","title":"anyUint16be","info":{"declType":"value","type":{"annotation":[],"tag":"ForAll","contents":["m",{"annotation":[],"tag":"ConstrainedType","contents":[{"constraintAnn":[],"constraintClass":[["Effect","Class"],"MonadEffect"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"m"}],"constraintKindArgs":[],"constraintData":null},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Parsing"],"ParserT"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","ArrayBuffer","Types"],"DataView"]}]},{"annotation":[],"tag":"TypeVar","contents":"m"}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","UInt"],"UInt"]}]}]},null]}},"sourceSpan":{"start":[134,1],"name":"/home/jbrock/work/me/purescript-parsing-dataview/src/Parsing/DataView.purs","end":[134,66]}},{"kind":null,"children":[],"comments":"Parse one 16-bit little-endian unsigned integer.\n","title":"anyUint16le","info":{"declType":"value","type":{"annotation":[],"tag":"ForAll","contents":["m",{"annotation":[],"tag":"ConstrainedType","contents":[{"constraintAnn":[],"constraintClass":[["Effect","Class"],"MonadEffect"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"m"}],"constraintKindArgs":[],"constraintData":null},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Parsing"],"ParserT"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","ArrayBuffer","Types"],"DataView"]}]},{"annotation":[],"tag":"TypeVar","contents":"m"}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","UInt"],"UInt"]}]}]},null]}},"sourceSpan":{"start":[138,1],"name":"/home/jbrock/work/me/purescript-parsing-dataview/src/Parsing/DataView.purs","end":[138,66]}},{"kind":null,"children":[],"comments":"Parse one 32-bit big-endian unsigned integer.\n","title":"anyUint32be","info":{"declType":"value","type":{"annotation":[],"tag":"ForAll","contents":["m",{"annotation":[],"tag":"ConstrainedType","contents":[{"constraintAnn":[],"constraintClass":[["Effect","Class"],"MonadEffect"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"m"}],"constraintKindArgs":[],"constraintData":null},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Parsing"],"ParserT"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","ArrayBuffer","Types"],"DataView"]}]},{"annotation":[],"tag":"TypeVar","contents":"m"}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","UInt"],"UInt"]}]}]},null]}},"sourceSpan":{"start":[142,1],"name":"/home/jbrock/work/me/purescript-parsing-dataview/src/Parsing/DataView.purs","end":[142,66]}},{"kind":null,"children":[],"comments":"Parse one 32-bit little-endian unsigned integer.\n","title":"anyUint32le","info":{"declType":"value","type":{"annotation":[],"tag":"ForAll","contents":["m",{"annotation":[],"tag":"ConstrainedType","contents":[{"constraintAnn":[],"constraintClass":[["Effect","Class"],"MonadEffect"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"m"}],"constraintKindArgs":[],"constraintData":null},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Parsing"],"ParserT"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","ArrayBuffer","Types"],"DataView"]}]},{"annotation":[],"tag":"TypeVar","contents":"m"}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","UInt"],"UInt"]}]}]},null]}},"sourceSpan":{"start":[146,1],"name":"/home/jbrock/work/me/purescript-parsing-dataview/src/Parsing/DataView.purs","end":[146,66]}},{"kind":null,"children":[],"comments":"Parse one 32-bit big-endian IEEE 754 floating-point number.\n","title":"anyFloat32be","info":{"declType":"value","type":{"annotation":[],"tag":"ForAll","contents":["m",{"annotation":[],"tag":"ConstrainedType","contents":[{"constraintAnn":[],"constraintClass":[["Effect","Class"],"MonadEffect"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"m"}],"constraintKindArgs":[],"constraintData":null},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Parsing"],"ParserT"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","ArrayBuffer","Types"],"DataView"]}]},{"annotation":[],"tag":"TypeVar","contents":"m"}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Float32"],"Float32"]}]}]},null]}},"sourceSpan":{"start":[150,1],"name":"/home/jbrock/work/me/purescript-parsing-dataview/src/Parsing/DataView.purs","end":[150,78]}},{"kind":null,"children":[],"comments":"Parse one 32-bit little-endian IEEE 754 floating-point number.\n","title":"anyFloat32le","info":{"declType":"value","type":{"annotation":[],"tag":"ForAll","contents":["m",{"annotation":[],"tag":"ConstrainedType","contents":[{"constraintAnn":[],"constraintClass":[["Effect","Class"],"MonadEffect"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"m"}],"constraintKindArgs":[],"constraintData":null},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Parsing"],"ParserT"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","ArrayBuffer","Types"],"DataView"]}]},{"annotation":[],"tag":"TypeVar","contents":"m"}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Float32"],"Float32"]}]}]},null]}},"sourceSpan":{"start":[154,1],"name":"/home/jbrock/work/me/purescript-parsing-dataview/src/Parsing/DataView.purs","end":[154,78]}},{"kind":null,"children":[],"comments":"Parse one 64-bit big-endian IEEE 754 floating-point number.\n","title":"anyFloat64be","info":{"declType":"value","type":{"annotation":[],"tag":"ForAll","contents":["m",{"annotation":[],"tag":"ConstrainedType","contents":[{"constraintAnn":[],"constraintClass":[["Effect","Class"],"MonadEffect"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"m"}],"constraintKindArgs":[],"constraintData":null},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Parsing"],"ParserT"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","ArrayBuffer","Types"],"DataView"]}]},{"annotation":[],"tag":"TypeVar","contents":"m"}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Number"]}]}]},null]}},"sourceSpan":{"start":[158,1],"name":"/home/jbrock/work/me/purescript-parsing-dataview/src/Parsing/DataView.purs","end":[158,69]}},{"kind":null,"children":[],"comments":"Parse one 64-bit little-endian IEEE 754 floating-point number.\n","title":"anyFloat64le","info":{"declType":"value","type":{"annotation":[],"tag":"ForAll","contents":["m",{"annotation":[],"tag":"ConstrainedType","contents":[{"constraintAnn":[],"constraintClass":[["Effect","Class"],"MonadEffect"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"m"}],"constraintKindArgs":[],"constraintData":null},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Parsing"],"ParserT"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","ArrayBuffer","Types"],"DataView"]}]},{"annotation":[],"tag":"TypeVar","contents":"m"}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Number"]}]}]},null]}},"sourceSpan":{"start":[162,1],"name":"/home/jbrock/work/me/purescript-parsing-dataview/src/Parsing/DataView.purs","end":[162,69]}},{"kind":null,"children":[],"comments":"Parse one fixed-bit-width primitive that satisfies the given predicate.\n\n#### Example\n\nParse a little-endian 32-bit signed integer that is equal to *3*:\n\n    satisfy LE (Proxy :: Proxy Int32) (_ == 3)\n\nor just use the convenience function `satisfyInt32le`, see below.\n","title":"satisfy","info":{"declType":"value","type":{"annotation":[],"tag":"ForAll","contents":["a",{"annotation":[],"tag":"ForAll","contents":["name",{"annotation":[],"tag":"ForAll","contents":["m",{"annotation":[],"tag":"ForAll","contents":["t",{"annotation":[],"tag":"ConstrainedType","contents":[{"constraintAnn":[],"constraintClass":[["Data","ArrayBuffer","ValueMapping"],"BinaryValue"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"a"},{"annotation":[],"tag":"TypeVar","contents":"t"}],"constraintKindArgs":[],"constraintData":null},{"annotation":[],"tag":"ConstrainedType","contents":[{"constraintAnn":[],"constraintClass":[["Data","ArrayBuffer","ValueMapping"],"BytesPerType"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"a"}],"constraintKindArgs":[],"constraintData":null},{"annotation":[],"tag":"ConstrainedType","contents":[{"constraintAnn":[],"constraintClass":[["Data","ArrayBuffer","ValueMapping"],"ShowArrayViewType"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"a"},{"annotation":[],"tag":"TypeVar","contents":"name"}],"constraintKindArgs":[],"constraintData":null},{"annotation":[],"tag":"ConstrainedType","contents":[{"constraintAnn":[],"constraintClass":[["Data","Symbol"],"IsSymbol"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"name"}],"constraintKindArgs":[],"constraintData":null},{"annotation":[],"tag":"ConstrainedType","contents":[{"constraintAnn":[],"constraintClass":[["Data","Show"],"Show"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"t"}],"constraintKindArgs":[],"constraintData":null},{"annotation":[],"tag":"ConstrainedType","contents":[{"constraintAnn":[],"constraintClass":[["Effect","Class"],"MonadEffect"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"m"}],"constraintKindArgs":[],"constraintData":null},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","ArrayBuffer","DataView"],"Endian"]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Type","Proxy"],"Proxy"]},{"annotation":[],"tag":"TypeVar","contents":"a"}]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeVar","contents":"t"}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Parsing"],"ParserT"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","ArrayBuffer","Types"],"DataView"]}]},{"annotation":[],"tag":"TypeVar","contents":"m"}]},{"annotation":[],"tag":"TypeVar","contents":"t"}]}]}]}]}]}]}]}]}]}]},null]},null]},null]},null]}},"sourceSpan":{"start":[174,1],"name":"/home/jbrock/work/me/purescript-parsing-dataview/src/Parsing/DataView.purs","end":[185,26]}},{"kind":null,"children":[],"comments":"Parse one 8-bit signed integer that satisfies the given predicate.\n","title":"satisfyInt8","info":{"declType":"value","type":{"annotation":[],"tag":"ForAll","contents":["m",{"annotation":[],"tag":"ConstrainedType","contents":[{"constraintAnn":[],"constraintClass":[["Effect","Class"],"MonadEffect"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"m"}],"constraintKindArgs":[],"constraintData":null},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Parsing"],"ParserT"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","ArrayBuffer","Types"],"DataView"]}]},{"annotation":[],"tag":"TypeVar","contents":"m"}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]}]}]},null]}},"sourceSpan":{"start":[192,1],"name":"/home/jbrock/work/me/purescript-parsing-dataview/src/Parsing/DataView.purs","end":[192,85]}},{"kind":null,"children":[],"comments":"Parse one 16-bit big-endian signed integer that satisfies the given predicate.\n","title":"satisfyInt16be","info":{"declType":"value","type":{"annotation":[],"tag":"ForAll","contents":["m",{"annotation":[],"tag":"ConstrainedType","contents":[{"constraintAnn":[],"constraintClass":[["Effect","Class"],"MonadEffect"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"m"}],"constraintKindArgs":[],"constraintData":null},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Parsing"],"ParserT"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","ArrayBuffer","Types"],"DataView"]}]},{"annotation":[],"tag":"TypeVar","contents":"m"}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]}]}]},null]}},"sourceSpan":{"start":[196,1],"name":"/home/jbrock/work/me/purescript-parsing-dataview/src/Parsing/DataView.purs","end":[196,88]}},{"kind":null,"children":[],"comments":"Parse one 16-bit little-endian signed integer that satisfies the given predicate.\n","title":"satisfyInt16le","info":{"declType":"value","type":{"annotation":[],"tag":"ForAll","contents":["m",{"annotation":[],"tag":"ConstrainedType","contents":[{"constraintAnn":[],"constraintClass":[["Effect","Class"],"MonadEffect"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"m"}],"constraintKindArgs":[],"constraintData":null},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Parsing"],"ParserT"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","ArrayBuffer","Types"],"DataView"]}]},{"annotation":[],"tag":"TypeVar","contents":"m"}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]}]}]},null]}},"sourceSpan":{"start":[200,1],"name":"/home/jbrock/work/me/purescript-parsing-dataview/src/Parsing/DataView.purs","end":[200,88]}},{"kind":null,"children":[],"comments":"Parse one 32-bit big-endian signed integer that satisfies the given predicate.\n","title":"satisfyInt32be","info":{"declType":"value","type":{"annotation":[],"tag":"ForAll","contents":["m",{"annotation":[],"tag":"ConstrainedType","contents":[{"constraintAnn":[],"constraintClass":[["Effect","Class"],"MonadEffect"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"m"}],"constraintKindArgs":[],"constraintData":null},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Parsing"],"ParserT"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","ArrayBuffer","Types"],"DataView"]}]},{"annotation":[],"tag":"TypeVar","contents":"m"}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]}]}]},null]}},"sourceSpan":{"start":[204,1],"name":"/home/jbrock/work/me/purescript-parsing-dataview/src/Parsing/DataView.purs","end":[204,88]}},{"kind":null,"children":[],"comments":"Parse one 32-bit little-endian signed integer that satisfies the given predicate.\n","title":"satisfyInt32le","info":{"declType":"value","type":{"annotation":[],"tag":"ForAll","contents":["m",{"annotation":[],"tag":"ConstrainedType","contents":[{"constraintAnn":[],"constraintClass":[["Effect","Class"],"MonadEffect"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"m"}],"constraintKindArgs":[],"constraintData":null},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Parsing"],"ParserT"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","ArrayBuffer","Types"],"DataView"]}]},{"annotation":[],"tag":"TypeVar","contents":"m"}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]}]}]},null]}},"sourceSpan":{"start":[208,1],"name":"/home/jbrock/work/me/purescript-parsing-dataview/src/Parsing/DataView.purs","end":[208,88]}},{"kind":null,"children":[],"comments":"Parse one 8-bit unsigned integer that satisfies the given predicate.\n","title":"satisfyUint8","info":{"declType":"value","type":{"annotation":[],"tag":"ForAll","contents":["m",{"annotation":[],"tag":"ConstrainedType","contents":[{"constraintAnn":[],"constraintClass":[["Effect","Class"],"MonadEffect"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"m"}],"constraintKindArgs":[],"constraintData":null},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","UInt"],"UInt"]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Parsing"],"ParserT"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","ArrayBuffer","Types"],"DataView"]}]},{"annotation":[],"tag":"TypeVar","contents":"m"}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","UInt"],"UInt"]}]}]}]},null]}},"sourceSpan":{"start":[212,1],"name":"/home/jbrock/work/me/purescript-parsing-dataview/src/Parsing/DataView.purs","end":[212,88]}},{"kind":null,"children":[],"comments":"Parse one 16-bit big-endian unsigned integer that satisfies the given predicate.\n","title":"satisfyUint16be","info":{"declType":"value","type":{"annotation":[],"tag":"ForAll","contents":["m",{"annotation":[],"tag":"ConstrainedType","contents":[{"constraintAnn":[],"constraintClass":[["Effect","Class"],"MonadEffect"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"m"}],"constraintKindArgs":[],"constraintData":null},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","UInt"],"UInt"]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Parsing"],"ParserT"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","ArrayBuffer","Types"],"DataView"]}]},{"annotation":[],"tag":"TypeVar","contents":"m"}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","UInt"],"UInt"]}]}]}]},null]}},"sourceSpan":{"start":[216,1],"name":"/home/jbrock/work/me/purescript-parsing-dataview/src/Parsing/DataView.purs","end":[216,91]}},{"kind":null,"children":[],"comments":"Parse one 16-bit little-endian unsigned integer that satisfies the given predicate.\n","title":"satisfyUint16le","info":{"declType":"value","type":{"annotation":[],"tag":"ForAll","contents":["m",{"annotation":[],"tag":"ConstrainedType","contents":[{"constraintAnn":[],"constraintClass":[["Effect","Class"],"MonadEffect"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"m"}],"constraintKindArgs":[],"constraintData":null},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","UInt"],"UInt"]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Parsing"],"ParserT"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","ArrayBuffer","Types"],"DataView"]}]},{"annotation":[],"tag":"TypeVar","contents":"m"}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","UInt"],"UInt"]}]}]}]},null]}},"sourceSpan":{"start":[220,1],"name":"/home/jbrock/work/me/purescript-parsing-dataview/src/Parsing/DataView.purs","end":[220,91]}},{"kind":null,"children":[],"comments":"Parse one 32-bit big-endian unsigned integer that satisfies the given predicate.\n","title":"satisfyUint32be","info":{"declType":"value","type":{"annotation":[],"tag":"ForAll","contents":["m",{"annotation":[],"tag":"ConstrainedType","contents":[{"constraintAnn":[],"constraintClass":[["Effect","Class"],"MonadEffect"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"m"}],"constraintKindArgs":[],"constraintData":null},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","UInt"],"UInt"]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Parsing"],"ParserT"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","ArrayBuffer","Types"],"DataView"]}]},{"annotation":[],"tag":"TypeVar","contents":"m"}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","UInt"],"UInt"]}]}]}]},null]}},"sourceSpan":{"start":[224,1],"name":"/home/jbrock/work/me/purescript-parsing-dataview/src/Parsing/DataView.purs","end":[224,91]}},{"kind":null,"children":[],"comments":"Parse one 32-bit little-endian unsigned integer that satisfies the given predicate.\n","title":"satisfyUint32le","info":{"declType":"value","type":{"annotation":[],"tag":"ForAll","contents":["m",{"annotation":[],"tag":"ConstrainedType","contents":[{"constraintAnn":[],"constraintClass":[["Effect","Class"],"MonadEffect"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"m"}],"constraintKindArgs":[],"constraintData":null},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","UInt"],"UInt"]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Parsing"],"ParserT"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","ArrayBuffer","Types"],"DataView"]}]},{"annotation":[],"tag":"TypeVar","contents":"m"}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","UInt"],"UInt"]}]}]}]},null]}},"sourceSpan":{"start":[228,1],"name":"/home/jbrock/work/me/purescript-parsing-dataview/src/Parsing/DataView.purs","end":[228,91]}},{"kind":null,"children":[],"comments":"Parse one 32-bit big-endian floating-point number that satisfies the given predicate.\n","title":"satisfyFloat32be","info":{"declType":"value","type":{"annotation":[],"tag":"ForAll","contents":["m",{"annotation":[],"tag":"ConstrainedType","contents":[{"constraintAnn":[],"constraintClass":[["Effect","Class"],"MonadEffect"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"m"}],"constraintKindArgs":[],"constraintData":null},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Float32"],"Float32"]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Parsing"],"ParserT"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","ArrayBuffer","Types"],"DataView"]}]},{"annotation":[],"tag":"TypeVar","contents":"m"}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Float32"],"Float32"]}]}]}]},null]}},"sourceSpan":{"start":[232,1],"name":"/home/jbrock/work/me/purescript-parsing-dataview/src/Parsing/DataView.purs","end":[232,114]}},{"kind":null,"children":[],"comments":"Parse one 32-bit little-endian floating-point number that satisfies the given predicate.\n","title":"satisfyFloat32le","info":{"declType":"value","type":{"annotation":[],"tag":"ForAll","contents":["m",{"annotation":[],"tag":"ConstrainedType","contents":[{"constraintAnn":[],"constraintClass":[["Effect","Class"],"MonadEffect"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"m"}],"constraintKindArgs":[],"constraintData":null},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Float32"],"Float32"]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Parsing"],"ParserT"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","ArrayBuffer","Types"],"DataView"]}]},{"annotation":[],"tag":"TypeVar","contents":"m"}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Float32"],"Float32"]}]}]}]},null]}},"sourceSpan":{"start":[236,1],"name":"/home/jbrock/work/me/purescript-parsing-dataview/src/Parsing/DataView.purs","end":[236,114]}},{"kind":null,"children":[],"comments":"Parse one 64-bit big-endian floating-point number that satisfies the given predicate.\n","title":"satisfyFloat64be","info":{"declType":"value","type":{"annotation":[],"tag":"ForAll","contents":["m",{"annotation":[],"tag":"ConstrainedType","contents":[{"constraintAnn":[],"constraintClass":[["Effect","Class"],"MonadEffect"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"m"}],"constraintKindArgs":[],"constraintData":null},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Number"]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Parsing"],"ParserT"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","ArrayBuffer","Types"],"DataView"]}]},{"annotation":[],"tag":"TypeVar","contents":"m"}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Number"]}]}]}]},null]}},"sourceSpan":{"start":[240,1],"name":"/home/jbrock/work/me/purescript-parsing-dataview/src/Parsing/DataView.purs","end":[240,96]}},{"kind":null,"children":[],"comments":"Parse one 64-bit little-endian floating-point number that satisfies the given predicate.\n","title":"satisfyFloat64le","info":{"declType":"value","type":{"annotation":[],"tag":"ForAll","contents":["m",{"annotation":[],"tag":"ConstrainedType","contents":[{"constraintAnn":[],"constraintClass":[["Effect","Class"],"MonadEffect"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"m"}],"constraintKindArgs":[],"constraintData":null},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Number"]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Parsing"],"ParserT"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","ArrayBuffer","Types"],"DataView"]}]},{"annotation":[],"tag":"TypeVar","contents":"m"}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Number"]}]}]}]},null]}},"sourceSpan":{"start":[244,1],"name":"/home/jbrock/work/me/purescript-parsing-dataview/src/Parsing/DataView.purs","end":[244,96]}}]}],"resolvedDependencies":{"purescript-exceptions":"6.0.0","purescript-newtype":"5.0.0","purescript-effect":"4.0.0","purescript-unicode":"6.0.0","purescript-control":"6.0.0","purescript-arraybuffer-types":"3.0.2","purescript-either":"6.0.0","purescript-profunctor":"6.0.0","purescript-arrays":"7.0.0","purescript-maybe":"6.0.0","purescript-type-equality":"4.0.1","purescript-exists":"6.0.0","purescript-distributive":"6.0.0","purescript-unfoldable":"6.0.0","purescript-invariant":"6.0.0","purescript-parsing":"9.0.0","purescript-lazy":"6.0.0","purescript-uint":"7.0.0","purescript-float32":"2.0.0","purescript-foldable-traversable":"6.0.0","purescript-tailrec":"6.0.0","purescript-gen":"4.0.0","purescript-functors":"5.0.0","purescript-prelude":"6.0.0","purescript-st":"6.0.0","purescript-bifunctors":"6.0.0","purescript-nonempty":"7.0.0","purescript-contravariant":"6.0.0","purescript-unsafe-coerce":"6.0.0","purescript-refs":"6.0.0","purescript-integers":"6.0.0","purescript-orders":"6.0.0","purescript-const":"6.0.0","purescript-transformers":"6.0.0","purescript-numbers":"9.0.0","purescript-enums":"6.0.0","purescript-tuples":"7.0.0","purescript-partial":"4.0.0","purescript-strings":"6.0.0","purescript-identity":"6.0.0","purescript-safe-coerce":"2.0.0","purescript-lists":"7.0.0","purescript-nullable":"6.0.0","purescript-functions":"6.0.0","purescript-arraybuffer":"13.0.0"},"version":"3.1.0","github":["jamesdbrock","purescript-parsing-dataview"],"versionTag":"v3.1.0","moduleMap":{"Data.BooleanAlgebra":"purescript-prelude","Data.Decide":"purescript-contravariant","Data.Ring":"purescript-prelude","Data.Semigroup.Generic":"purescript-prelude","Control.Monad.Trans.Class":"purescript-transformers","Data.Functor.Product":"purescript-functors","Data.Functor.Flip":"purescript-functors","Data.NonEmpty":"purescript-nonempty","Effect.Uncurried":"purescript-effect","Parsing.Language":"purescript-parsing","Control.Monad.Identity.Trans":"purescript-transformers","Data.Char.Gen":"purescript-strings","Data.Monoid.Generic":"purescript-prelude","Data.String.NonEmpty":"purescript-strings","Effect":"purescript-effect","Data.Traversable.Accum.Internal":"purescript-foldable-traversable","Data.CodePoint.Unicode.Internal":"purescript-unicode","Data.Enum.Gen":"purescript-enums","Data.Nullable":"purescript-nullable","Control.Comonad.Env":"purescript-transformers","Parsing.String.Basic":"purescript-parsing","Control.Comonad.Traced.Class":"purescript-transformers","Data.Functor.Costar":"purescript-functors","Data.HeytingAlgebra.Generic":"purescript-prelude","Data.Functor.Compose":"purescript-functors","Data.Int.Bits":"purescript-integers","Data.String.CodePoints":"purescript-strings","Data.Ord":"purescript-prelude","Control.Monad.Gen":"purescript-gen","Data.Bounded.Generic":"purescript-prelude","Parsing.Indent":"purescript-parsing","Data.ArrayBuffer.ArrayBuffer.Gen":"purescript-arraybuffer","Safe.Coerce":"purescript-safe-coerce","Data.Monoid.Dual":"purescript-prelude","Control.Monad.Rec.Class":"purescript-tailrec","Data.Bitraversable":"purescript-foldable-traversable","Data.UInt.Gen":"purescript-uint","Data.Boolean":"purescript-prelude","Data.Show.Generic":"purescript-prelude","Control.Biapplicative":"purescript-bifunctors","Effect.Exception.Unsafe":"purescript-exceptions","Data.Array.NonEmpty.Internal":"purescript-arrays","Type.Proxy":"purescript-prelude","Data.String.Unicode":"purescript-unicode","Data.Array.ST.Iterator":"purescript-arrays","Data.Enum.Generic":"purescript-enums","Data.String.Pattern":"purescript-strings","Data.Bounded":"purescript-prelude","Control.Monad.State.Trans":"purescript-transformers","Data.TraversableWithIndex":"purescript-foldable-traversable","Data.Int":"purescript-integers","Data.Profunctor.Cochoice":"purescript-profunctor","Data.Show":"purescript-prelude","Control.Monad.Writer.Trans":"purescript-transformers","Data.Foldable":"purescript-foldable-traversable","Data.Divide":"purescript-contravariant","Control.Comonad.Store.Class":"purescript-transformers","Data.Number":"purescript-numbers","Data.Enum":"purescript-enums","Control.Apply":"purescript-prelude","Data.Functor.Contravariant":"purescript-contravariant","Data.Tuple.Nested":"purescript-tuples","Data.List.Internal":"purescript-lists","Control.Monad":"purescript-prelude","Data.Lazy":"purescript-lazy","Data.Monoid":"purescript-prelude","Data.Profunctor.Closed":"purescript-profunctor","Control.Monad.List.Trans":"purescript-transformers","Data.Ord.Generic":"purescript-prelude","Control.Monad.RWS":"purescript-transformers","Data.String.Common":"purescript-strings","Data.Maybe.First":"purescript-maybe","Control.Bind":"purescript-prelude","Data.Profunctor.Split":"purescript-profunctor","Data.Number.Format":"purescript-numbers","Data.CodePoint.Unicode.Internal.Casing":"purescript-unicode","Data.UInt":"purescript-uint","Data.Monoid.Additive":"purescript-prelude","Data.Symbol":"purescript-prelude","Data.String.Regex":"purescript-strings","Data.Profunctor.Join":"purescript-profunctor","Data.HeytingAlgebra":"purescript-prelude","Control.Alt":"purescript-control","Data.ArrayBuffer.ArrayBuffer":"purescript-arraybuffer","Control.Monad.Maybe.Trans":"purescript-transformers","Control.Monad.Cont":"purescript-transformers","Control.Monad.ST.Internal":"purescript-st","Parsing":"purescript-parsing","Effect.Ref":"purescript-refs","Data.Either.Inject":"purescript-either","Data.List.ZipList":"purescript-lists","Data.Ord.Min":"purescript-orders","Data.Functor.Coproduct.Nested":"purescript-functors","Data.Ring.Generic":"purescript-prelude","Data.Semigroup":"purescript-prelude","Data.Array.NonEmpty":"purescript-arrays","Control.Monad.Reader":"purescript-transformers","Data.Const":"purescript-const","Control.Comonad.Traced.Trans":"purescript-transformers","Data.Ord.Down":"purescript-orders","Data.Number.Approximate":"purescript-numbers","Data.Array.ST.Partial":"purescript-arrays","Effect.Unsafe":"purescript-effect","Data.ArrayBuffer.DataView.Gen":"purescript-arraybuffer","Data.Tuple":"purescript-tuples","Data.Functor.Clown":"purescript-functors","Data.Semigroup.Foldable":"purescript-foldable-traversable","Control.Biapply":"purescript-bifunctors","Data.Distributive":"purescript-distributive","Effect.Exception":"purescript-exceptions","Type.Equality":"purescript-type-equality","Control.Alternative":"purescript-control","Data.Semiring":"purescript-prelude","Data.Functor.Product2":"purescript-functors","Data.Exists":"purescript-exists","Data.CodePoint.Unicode":"purescript-unicode","Data.Traversable.Accum":"purescript-foldable-traversable","Data.CommutativeRing":"purescript-prelude","Data.NaturalTransformation":"purescript-prelude","Data.Monoid.Conj":"purescript-prelude","Data.Functor.App":"purescript-functors","Data.Profunctor.Star":"purescript-profunctor","Data.Unfoldable":"purescript-unfoldable","Control.Comonad.Store.Trans":"purescript-transformers","Control.Monad.ST":"purescript-st","Control.Monad.State.Class":"purescript-transformers","Data.List.Types":"purescript-lists","Data.String.NonEmpty.CodeUnits":"purescript-strings","Parsing.String.Replace":"purescript-parsing","Data.Functor":"purescript-prelude","Unsafe.Coerce":"purescript-unsafe-coerce","Control.Monad.Writer.Class":"purescript-transformers","Data.Profunctor.Strong":"purescript-profunctor","Control.Monad.Except":"purescript-transformers","Data.List.Lazy.Types":"purescript-lists","Control.Category":"purescript-prelude","Control.Monad.Gen.Common":"purescript-gen","Control.Monad.RWS.Trans":"purescript-transformers","Data.ArrayBuffer.DataView":"purescript-arraybuffer","Control.Monad.Cont.Trans":"purescript-transformers","Data.Maybe":"purescript-maybe","Data.String.Regex.Unsafe":"purescript-strings","Data.Profunctor":"purescript-profunctor","Control.Comonad":"purescript-control","Control.Monad.ST.Global":"purescript-st","Data.Function":"purescript-prelude","Data.List":"purescript-lists","Data.Field":"purescript-prelude","Data.List.Lazy":"purescript-lists","Data.EuclideanRing":"purescript-prelude","Data.Semigroup.Last":"purescript-prelude","Data.Semigroup.First":"purescript-prelude","Data.Functor.Invariant":"purescript-invariant","Control.Comonad.Traced":"purescript-transformers","Data.Comparison":"purescript-contravariant","Data.String.Unsafe":"purescript-strings","Prelude":"purescript-prelude","Effect.Class":"purescript-effect","Data.Predicate":"purescript-contravariant","Partial.Unsafe":"purescript-partial","Data.Array":"purescript-arrays","Control.Extend":"purescript-control","Data.Unfoldable1":"purescript-unfoldable","Control.Lazy":"purescript-control","Data.Function.Uncurried":"purescript-functions","Control.Monad.Reader.Trans":"purescript-transformers","Data.Functor.Product.Nested":"purescript-functors","Data.Float32":"purescript-float32","Control.Comonad.Env.Class":"purescript-transformers","Data.ArrayBuffer.Typed.Gen":"purescript-arraybuffer","Data.ArrayBuffer.Types":"purescript-arraybuffer-types","Data.Eq":"purescript-prelude","Data.Either.Nested":"purescript-either","Data.Newtype":"purescript-newtype","Data.Semigroup.Traversable":"purescript-foldable-traversable","Data.Bifunctor":"purescript-bifunctors","Data.Monoid.Disj":"purescript-prelude","Control.Monad.Gen.Class":"purescript-gen","Data.Array.Partial":"purescript-arrays","Data.String.CaseInsensitive":"purescript-strings","Control.MonadPlus":"purescript-control","Data.Void":"purescript-prelude","Data.Profunctor.Costrong":"purescript-profunctor","Data.Ord.Max":"purescript-orders","Control.Comonad.Store":"purescript-transformers","Parsing.Token":"purescript-parsing","Data.ArrayBuffer.Typed":"purescript-arraybuffer","Control.Monad.Except.Trans":"purescript-transformers","Data.String.CodeUnits":"purescript-strings","Data.FunctorWithIndex":"purescript-foldable-traversable","Data.Divisible":"purescript-contravariant","Data.Float32.Gen":"purescript-float32","Data.Eq.Generic":"purescript-prelude","Data.DivisionRing":"purescript-prelude","Data.Equivalence":"purescript-contravariant","Data.Maybe.Last":"purescript-maybe","Data.Unit":"purescript-prelude","Data.List.NonEmpty":"purescript-lists","Data.List.Lazy.NonEmpty":"purescript-lists","Data.Ordering":"purescript-prelude","Data.Functor.Coproduct":"purescript-functors","Control.Monad.Cont.Class":"purescript-transformers","Data.Identity":"purescript-identity","Control.Comonad.Trans.Class":"purescript-transformers","Data.String":"purescript-strings","Data.Reflectable":"purescript-prelude","Control.Plus":"purescript-control","Partial":"purescript-partial","Parsing.String":"purescript-parsing","Control.Comonad.Env.Trans":"purescript-transformers","Control.Monad.Reader.Class":"purescript-transformers","Data.String.NonEmpty.CodePoints":"purescript-strings","Data.Decidable":"purescript-contravariant","Data.String.NonEmpty.Internal":"purescript-strings","Data.Monoid.Multiplicative":"purescript-prelude","Data.String.NonEmpty.CaseInsensitive":"purescript-strings","Data.Functor.Joker":"purescript-functors","Data.Array.ST":"purescript-arrays","Control.Monad.Error.Class":"purescript-transformers","Control.Semigroupoid":"purescript-prelude","Data.Monoid.Alternate":"purescript-control","Data.Char":"purescript-strings","Data.Generic.Rep":"purescript-prelude","Data.Bifunctor.Join":"purescript-bifunctors","Data.ArrayBuffer.ValueMapping":"purescript-arraybuffer","Data.Bifoldable":"purescript-foldable-traversable","Control.Monad.ST.Ref":"purescript-st","Data.Monoid.Endo":"purescript-prelude","Control.Monad.State":"purescript-transformers","Data.List.Partial":"purescript-lists","Parsing.Combinators":"purescript-parsing","Data.Semiring.Generic":"purescript-prelude","Data.String.Regex.Flags":"purescript-strings","Data.Either":"purescript-either","Control.Applicative":"purescript-prelude","Control.Monad.ST.Class":"purescript-st","Data.FoldableWithIndex":"purescript-foldable-traversable","Data.Op":"purescript-contravariant","Record.Unsafe":"purescript-prelude","Control.Monad.Writer":"purescript-transformers","Parsing.Expr":"purescript-parsing","Data.Functor.Coproduct.Inject":"purescript-functors","Data.Profunctor.Choice":"purescript-profunctor","Data.Traversable":"purescript-foldable-traversable","Data.String.Gen":"purescript-strings"},"compilerVersion":"0.15.0"}