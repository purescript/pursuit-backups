{"uploader":"danieljharvey","packageMeta":{"repository":{"url":"https://github.com/danieljharvey/purescript-refined.git","type":"git"},"resolutions":{"purescript-typelevel-prelude":"^5.0.0"},"ignore":["**/.*","node_modules","bower_components","output"],"devDependencies":{"purescript-test-unit":"15.0.0","purescript-psci-support":"^4.0.0"},"dependencies":{"purescript-effect":"^2.0.1","purescript-console":"^4.2.0","purescript-argonaut":"7.0.0","purescript-typelevel":"^5.0.0","purescript-typelevel-prelude":"^5.0.0","purescript-prelude":"^4.1.1","purescript-generics-rep":"6.1.1","purescript-quickcheck":"^6.1.0"},"name":"purescript-refined","license":["MIT"]},"tagTime":"2020-07-01T08:51:53+0000","modules":[{"reExports":[{"moduleName":{"package":null,"item":["Data","Refined","Error"]},"declarations":[{"children":[{"comments":null,"title":"AndError","info":{"arguments":[{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Refined","Internal"],"These"]},{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Refined","Error"],"RefinedError"]},{"annotation":[],"tag":"TypeVar","contents":"a"}]}}]},{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Refined","Error"],"RefinedError"]},{"annotation":[],"tag":"TypeVar","contents":"a"}]}}]}}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"OrError","info":{"arguments":[{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Refined","Error"],"RefinedError"]},{"annotation":[],"tag":"TypeVar","contents":"a"}]}},{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Refined","Error"],"RefinedError"]},{"annotation":[],"tag":"TypeVar","contents":"a"}]}}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"SizeEqualToError","info":{"arguments":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Int"]},{"annotation":[],"tag":"TypeVar","contents":"a"}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"SizeGreaterThanError","info":{"arguments":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Int"]},{"annotation":[],"tag":"TypeVar","contents":"a"}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"SizeLessThanError","info":{"arguments":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Int"]},{"annotation":[],"tag":"TypeVar","contents":"a"}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"NotError","info":{"arguments":[],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"LessThanError","info":{"arguments":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Int"]},{"annotation":[],"tag":"TypeVar","contents":"a"}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"GreaterThanError","info":{"arguments":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Int"]},{"annotation":[],"tag":"TypeVar","contents":"a"}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"FromError","info":{"arguments":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Int"]},{"annotation":[],"tag":"TypeVar","contents":"a"}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"ToError","info":{"arguments":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Int"]},{"annotation":[],"tag":"TypeVar","contents":"a"}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"FromToError","info":{"arguments":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Int"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Int"]},{"annotation":[],"tag":"TypeVar","contents":"a"}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"EqualToError","info":{"arguments":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Int"]},{"annotation":[],"tag":"TypeVar","contents":"a"}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"NotEqualToError","info":{"arguments":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Int"]},{"annotation":[],"tag":"TypeVar","contents":"a"}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"eqRefinedError","info":{"declType":"instance","dependencies":[{"constraintAnn":[],"constraintClass":[["Data","Eq"],"Eq"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"a"}],"constraintData":null}],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Eq"],"Eq"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Refined","Error"],"RefinedError"]},{"annotation":[],"tag":"TypeVar","contents":"a"}]}]}},"sourceSpan":{"start":[22,1],"name":"/Users/daniel/Git/purescript-refined/src/Error.purs","end":[23,35]}},{"comments":null,"title":"showRefinedError","info":{"declType":"instance","dependencies":[{"constraintAnn":[],"constraintClass":[["Data","Show"],"Show"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"a"}],"constraintData":null}],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Show"],"Show"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Refined","Error"],"RefinedError"]},{"annotation":[],"tag":"TypeVar","contents":"a"}]}]}},"sourceSpan":{"start":[25,1],"name":"/Users/daniel/Git/purescript-refined/src/Error.purs","end":[55,71]}}],"comments":null,"title":"RefinedError","info":{"declType":"data","dataDeclType":"data","typeArguments":[["a",null]]},"sourceSpan":{"start":[7,1],"name":"/Users/daniel/Git/purescript-refined/src/Error.purs","end":[20,26]}}]},{"moduleName":{"package":null,"item":["Data","Refined","Internal"]},"declarations":[{"children":[{"comments":null,"title":"This","info":{"arguments":[{"annotation":[],"tag":"TypeVar","contents":"a"}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"That","info":{"arguments":[{"annotation":[],"tag":"TypeVar","contents":"b"}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"These","info":{"arguments":[{"annotation":[],"tag":"TypeVar","contents":"a"},{"annotation":[],"tag":"TypeVar","contents":"b"}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"eqThese","info":{"declType":"instance","dependencies":[{"constraintAnn":[],"constraintClass":[["Data","Eq"],"Eq"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"a"}],"constraintData":null},{"constraintAnn":[],"constraintClass":[["Data","Eq"],"Eq"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"b"}],"constraintData":null}],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Eq"],"Eq"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Refined","Internal"],"These"]},{"annotation":[],"tag":"TypeVar","contents":"a"}]},{"annotation":[],"tag":"TypeVar","contents":"b"}]}]}},"sourceSpan":{"start":[19,1],"name":"/Users/daniel/Git/purescript-refined/src/Helpers.purs","end":[21,20]}},{"comments":null,"title":"ordThese","info":{"declType":"instance","dependencies":[{"constraintAnn":[],"constraintClass":[["Data","Ord"],"Ord"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"a"}],"constraintData":null},{"constraintAnn":[],"constraintClass":[["Data","Ord"],"Ord"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"b"}],"constraintData":null}],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Ord"],"Ord"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Refined","Internal"],"These"]},{"annotation":[],"tag":"TypeVar","contents":"a"}]},{"annotation":[],"tag":"TypeVar","contents":"b"}]}]}},"sourceSpan":{"start":[22,1],"name":"/Users/daniel/Git/purescript-refined/src/Helpers.purs","end":[24,21]}}],"comments":"Helper version of function because i am too lazy to find the package\n","title":"These","info":{"declType":"data","dataDeclType":"data","typeArguments":[["a",null],["b",null]]},"sourceSpan":{"start":[14,1],"name":"/Users/daniel/Git/purescript-refined/src/Helpers.purs","end":[17,14]}},{"children":[],"comments":null,"title":"fromInt","info":{"declType":"value","type":{"annotation":[],"tag":"ForAll","contents":["a",{"annotation":[],"tag":"ConstrainedType","contents":[{"constraintAnn":[],"constraintClass":[["Data","Ring"],"Ring"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"a"}],"constraintData":null},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},{"annotation":[],"tag":"TypeVar","contents":"a"}]}]},null]}},"sourceSpan":{"start":[7,1],"name":"/Users/daniel/Git/purescript-refined/src/Helpers.purs","end":[7,42]}}]},{"moduleName":{"package":null,"item":["Data","Refined","Predicate"]},"declarations":[{"children":[],"comments":"An inclusive range of values from zero to one.\n","title":"ZeroToOne","info":{"arguments":[],"declType":"typeSynonym","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Refined","Predicate"],"FromTo"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Typelevel","Num","Reps"],"D0"]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Typelevel","Num","Reps"],"D1"]}]}},"sourceSpan":{"start":[226,1],"name":"/Users/daniel/Git/purescript-refined/src/Predicate.purs","end":[226,30]}},{"children":[{"comments":null,"title":"predicateTo","info":{"declType":"instance","dependencies":[{"constraintAnn":[],"constraintClass":[["Data","Typelevel","Num","Sets"],"Nat"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"n"}],"constraintData":null},{"constraintAnn":[],"constraintClass":[["Data","Ord"],"Ord"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"x"}],"constraintData":null},{"constraintAnn":[],"constraintClass":[["Data","Ring"],"Ring"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"x"}],"constraintData":null}],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Refined","Predicate"],"Predicate"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Refined","Predicate"],"To"]},{"annotation":[],"tag":"TypeVar","contents":"n"}]}]},{"annotation":[],"tag":"TypeVar","contents":"x"}]}},"sourceSpan":{"start":[158,1],"name":"/Users/daniel/Git/purescript-refined/src/Predicate.purs","end":[167,33]}}],"comments":"A 'Predicate' ensuring that the value is up and including a given int\n","title":"To","info":{"declType":"data","dataDeclType":"data","typeArguments":[["n",null]]},"sourceSpan":{"start":[156,1],"name":"/Users/daniel/Git/purescript-refined/src/Predicate.purs","end":[156,10]}},{"children":[{"comments":null,"title":"predicateSizeLessThan","info":{"declType":"instance","dependencies":[{"constraintAnn":[],"constraintClass":[["Data","Refined","Predicate"],"Predicate"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"a"},{"annotation":[],"tag":"TypeVar","contents":"x"}],"constraintData":null},{"constraintAnn":[],"constraintClass":[["Data","Foldable"],"Foldable"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"t"}],"constraintData":null},{"constraintAnn":[],"constraintClass":[["Data","Typelevel","Num","Sets"],"Nat"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"n"}],"constraintData":null}],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Refined","Predicate"],"Predicate"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Refined","Predicate"],"SizeLessThan"]},{"annotation":[],"tag":"TypeVar","contents":"n"}]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeVar","contents":"t"},{"annotation":[],"tag":"TypeVar","contents":"a"}]}]}},"sourceSpan":{"start":[90,1],"name":"/Users/daniel/Git/purescript-refined/src/Predicate.purs","end":[99,35]}}],"comments":"A 'Predicate' ensuring that the length of a foldable is less than a given int\n","title":"SizeLessThan","info":{"declType":"data","dataDeclType":"data","typeArguments":[["a",null]]},"sourceSpan":{"start":[88,1],"name":"/Users/daniel/Git/purescript-refined/src/Predicate.purs","end":[88,20]}},{"children":[{"comments":null,"title":"predicateSizeGreaterThan","info":{"declType":"instance","dependencies":[{"constraintAnn":[],"constraintClass":[["Data","Refined","Predicate"],"Predicate"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"a"},{"annotation":[],"tag":"TypeVar","contents":"x"}],"constraintData":null},{"constraintAnn":[],"constraintClass":[["Data","Foldable"],"Foldable"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"t"}],"constraintData":null},{"constraintAnn":[],"constraintClass":[["Data","Typelevel","Num","Sets"],"Nat"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"n"}],"constraintData":null}],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Refined","Predicate"],"Predicate"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Refined","Predicate"],"SizeGreaterThan"]},{"annotation":[],"tag":"TypeVar","contents":"n"}]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeVar","contents":"t"},{"annotation":[],"tag":"TypeVar","contents":"a"}]}]}},"sourceSpan":{"start":[76,1],"name":"/Users/daniel/Git/purescript-refined/src/Predicate.purs","end":[85,35]}}],"comments":"A 'Predicate' ensuring that the length of a foldable is greater than a given int\n","title":"SizeGreaterThan","info":{"declType":"data","dataDeclType":"data","typeArguments":[["a",null]]},"sourceSpan":{"start":[74,1],"name":"/Users/daniel/Git/purescript-refined/src/Predicate.purs","end":[74,23]}},{"children":[{"comments":null,"title":"predicateSizeEqualTo","info":{"declType":"instance","dependencies":[{"constraintAnn":[],"constraintClass":[["Data","Refined","Predicate"],"Predicate"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"a"},{"annotation":[],"tag":"TypeVar","contents":"x"}],"constraintData":null},{"constraintAnn":[],"constraintClass":[["Data","Foldable"],"Foldable"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"t"}],"constraintData":null},{"constraintAnn":[],"constraintClass":[["Data","Typelevel","Num","Sets"],"Nat"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"n"}],"constraintData":null}],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Refined","Predicate"],"Predicate"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Refined","Predicate"],"SizeEqualTo"]},{"annotation":[],"tag":"TypeVar","contents":"n"}]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeVar","contents":"t"},{"annotation":[],"tag":"TypeVar","contents":"a"}]}]}},"sourceSpan":{"start":[62,1],"name":"/Users/daniel/Git/purescript-refined/src/Predicate.purs","end":[71,37]}}],"comments":"A 'Predicate' ensuring that the length of a foldable is equal to a given int\n","title":"SizeEqualTo","info":{"declType":"data","dataDeclType":"data","typeArguments":[["a",null]]},"sourceSpan":{"start":[60,1],"name":"/Users/daniel/Git/purescript-refined/src/Predicate.purs","end":[60,19]}},{"children":[],"comments":"A 'Predicate' ensuring that the value is greater than zero.\n","title":"Positive","info":{"arguments":[],"declType":"typeSynonym","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Refined","Predicate"],"GreaterThan"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Typelevel","Num","Reps"],"D0"]}]}},"sourceSpan":{"start":[214,1],"name":"/Users/daniel/Git/purescript-refined/src/Predicate.purs","end":[214,31]}},{"children":[{"comments":null,"title":"predicateOr","info":{"declType":"instance","dependencies":[{"constraintAnn":[],"constraintClass":[["Data","Refined","Predicate"],"Predicate"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"l"},{"annotation":[],"tag":"TypeVar","contents":"x"}],"constraintData":null},{"constraintAnn":[],"constraintClass":[["Data","Refined","Predicate"],"Predicate"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"r"},{"annotation":[],"tag":"TypeVar","contents":"x"}],"constraintData":null}],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Refined","Predicate"],"Predicate"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Refined","Predicate"],"Or"]},{"annotation":[],"tag":"TypeVar","contents":"l"}]},{"annotation":[],"tag":"TypeVar","contents":"r"}]}]},{"annotation":[],"tag":"TypeVar","contents":"x"}]}},"sourceSpan":{"start":[46,1],"name":"/Users/daniel/Git/purescript-refined/src/Predicate.purs","end":[57,40]}}],"comments":"A 'Predicate' ensuring that one of two given Predicates is valid \n","title":"Or","info":{"declType":"data","dataDeclType":"data","typeArguments":[["l",null],["r",null]]},"sourceSpan":{"start":[44,1],"name":"/Users/daniel/Git/purescript-refined/src/Predicate.purs","end":[44,12]}},{"children":[{"comments":null,"title":"predicateNotEqualTo","info":{"declType":"instance","dependencies":[{"constraintAnn":[],"constraintClass":[["Data","Typelevel","Num","Sets"],"Nat"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"n"}],"constraintData":null},{"constraintAnn":[],"constraintClass":[["Data","Eq"],"Eq"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"x"}],"constraintData":null},{"constraintAnn":[],"constraintClass":[["Data","Ring"],"Ring"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"x"}],"constraintData":null}],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Refined","Predicate"],"Predicate"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Refined","Predicate"],"NotEqualTo"]},{"annotation":[],"tag":"TypeVar","contents":"n"}]}]},{"annotation":[],"tag":"TypeVar","contents":"x"}]}},"sourceSpan":{"start":[202,1],"name":"/Users/daniel/Git/purescript-refined/src/Predicate.purs","end":[211,33]}}],"comments":"A 'Predicate' ensuring that the value is not equal to a given int\n","title":"NotEqualTo","info":{"declType":"data","dataDeclType":"data","typeArguments":[["n",null]]},"sourceSpan":{"start":[200,1],"name":"/Users/daniel/Git/purescript-refined/src/Predicate.purs","end":[200,18]}},{"children":[{"comments":null,"title":"predicateNot","info":{"declType":"instance","dependencies":[{"constraintAnn":[],"constraintClass":[["Data","Refined","Predicate"],"Predicate"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"a"},{"annotation":[],"tag":"TypeVar","contents":"x"}],"constraintData":null}],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Refined","Predicate"],"Predicate"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Refined","Predicate"],"Not"]},{"annotation":[],"tag":"TypeVar","contents":"a"}]}]},{"annotation":[],"tag":"TypeVar","contents":"x"}]}},"sourceSpan":{"start":[104,1],"name":"/Users/daniel/Git/purescript-refined/src/Predicate.purs","end":[110,32]}}],"comments":"A 'Predicate' ensuring that the opposite of another Predicate passes\n","title":"Not","info":{"declType":"data","dataDeclType":"data","typeArguments":[["a",null]]},"sourceSpan":{"start":[102,1],"name":"/Users/daniel/Git/purescript-refined/src/Predicate.purs","end":[102,11]}},{"children":[],"comments":"A 'Predicate' ensuring that the value is not equal to zero.\n","title":"NonZero","info":{"arguments":[],"declType":"typeSynonym","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Refined","Predicate"],"NotEqualTo"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Typelevel","Num","Reps"],"D0"]}]}},"sourceSpan":{"start":[229,1],"name":"/Users/daniel/Git/purescript-refined/src/Predicate.purs","end":[229,29]}},{"children":[],"comments":"A 'Predicate' ensuring that the value is greater than or equal to zero.\n","title":"NonNegative","info":{"arguments":[],"declType":"typeSynonym","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Refined","Predicate"],"From"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Typelevel","Num","Reps"],"D0"]}]}},"sourceSpan":{"start":[223,1],"name":"/Users/daniel/Git/purescript-refined/src/Predicate.purs","end":[223,27]}},{"children":[],"comments":"A 'Predicate' ensuring that the 'Foldable' is non-empty.\n","title":"NonEmpty","info":{"arguments":[],"declType":"typeSynonym","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Refined","Predicate"],"SizeGreaterThan"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Typelevel","Num","Reps"],"D0"]}]}},"sourceSpan":{"start":[232,1],"name":"/Users/daniel/Git/purescript-refined/src/Predicate.purs","end":[232,35]}},{"children":[],"comments":"A 'Predicate' ensuring that the value is less than zero.\n","title":"Negative","info":{"arguments":[],"declType":"typeSynonym","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Refined","Predicate"],"LessThan"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Typelevel","Num","Reps"],"D0"]}]}},"sourceSpan":{"start":[220,1],"name":"/Users/daniel/Git/purescript-refined/src/Predicate.purs","end":[220,28]}},{"children":[{"comments":null,"title":"predicateLessThan","info":{"declType":"instance","dependencies":[{"constraintAnn":[],"constraintClass":[["Data","Typelevel","Num","Sets"],"Nat"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"n"}],"constraintData":null},{"constraintAnn":[],"constraintClass":[["Data","Ord"],"Ord"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"x"}],"constraintData":null},{"constraintAnn":[],"constraintClass":[["Data","Ring"],"Ring"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"x"}],"constraintData":null}],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Refined","Predicate"],"Predicate"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Refined","Predicate"],"LessThan"]},{"annotation":[],"tag":"TypeVar","contents":"n"}]}]},{"annotation":[],"tag":"TypeVar","contents":"x"}]}},"sourceSpan":{"start":[115,1],"name":"/Users/daniel/Git/purescript-refined/src/Predicate.purs","end":[124,33]}}],"comments":"A 'Predicate' ensuring that the value is less than a given int\n","title":"LessThan","info":{"declType":"data","dataDeclType":"data","typeArguments":[["n",null]]},"sourceSpan":{"start":[113,1],"name":"/Users/daniel/Git/purescript-refined/src/Predicate.purs","end":[113,16]}},{"children":[{"comments":null,"title":"predicateIdPred","info":{"declType":"instance","dependencies":[],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Refined","Predicate"],"Predicate"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Refined","Predicate"],"IdPred"]}]},{"annotation":[],"tag":"TypeVar","contents":"x"}]}},"sourceSpan":{"start":[20,1],"name":"/Users/daniel/Git/purescript-refined/src/Predicate.purs","end":[23,27]}}],"comments":"A 'Predicate' for which everything is valid\n","title":"IdPred","info":{"declType":"data","dataDeclType":"data","typeArguments":[]},"sourceSpan":{"start":[18,1],"name":"/Users/daniel/Git/purescript-refined/src/Predicate.purs","end":[18,12]}},{"children":[{"comments":null,"title":"predicateGreaterThan","info":{"declType":"instance","dependencies":[{"constraintAnn":[],"constraintClass":[["Data","Typelevel","Num","Sets"],"Nat"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"n"}],"constraintData":null},{"constraintAnn":[],"constraintClass":[["Data","Ord"],"Ord"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"x"}],"constraintData":null},{"constraintAnn":[],"constraintClass":[["Data","Ring"],"Ring"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"x"}],"constraintData":null}],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Refined","Predicate"],"Predicate"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Refined","Predicate"],"GreaterThan"]},{"annotation":[],"tag":"TypeVar","contents":"n"}]}]},{"annotation":[],"tag":"TypeVar","contents":"x"}]}},"sourceSpan":{"start":[129,1],"name":"/Users/daniel/Git/purescript-refined/src/Predicate.purs","end":[139,35]}}],"comments":"A 'Predicate' ensuring that the value is greater than a given int\n","title":"GreaterThan","info":{"declType":"data","dataDeclType":"data","typeArguments":[["n",null]]},"sourceSpan":{"start":[127,1],"name":"/Users/daniel/Git/purescript-refined/src/Predicate.purs","end":[127,19]}},{"children":[{"comments":null,"title":"predicateFromTo","info":{"declType":"instance","dependencies":[{"constraintAnn":[],"constraintClass":[["Data","Typelevel","Num","Sets"],"Nat"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"n"}],"constraintData":null},{"constraintAnn":[],"constraintClass":[["Data","Typelevel","Num","Sets"],"Nat"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"m"}],"constraintData":null},{"constraintAnn":[],"constraintClass":[["Data","Ord"],"Ord"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"x"}],"constraintData":null},{"constraintAnn":[],"constraintClass":[["Data","Ring"],"Ring"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"x"}],"constraintData":null}],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Refined","Predicate"],"Predicate"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Refined","Predicate"],"FromTo"]},{"annotation":[],"tag":"TypeVar","contents":"m"}]},{"annotation":[],"tag":"TypeVar","contents":"n"}]}]},{"annotation":[],"tag":"TypeVar","contents":"x"}]}},"sourceSpan":{"start":[172,1],"name":"/Users/daniel/Git/purescript-refined/src/Predicate.purs","end":[183,33]}}],"comments":"A 'Predicate' ensuring that the value is between two given ints (inclusive)\n","title":"FromTo","info":{"declType":"data","dataDeclType":"data","typeArguments":[["m",null],["n",null]]},"sourceSpan":{"start":[170,1],"name":"/Users/daniel/Git/purescript-refined/src/Predicate.purs","end":[170,16]}},{"children":[{"comments":null,"title":"predicateFrom","info":{"declType":"instance","dependencies":[{"constraintAnn":[],"constraintClass":[["Data","Typelevel","Num","Sets"],"Nat"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"n"}],"constraintData":null},{"constraintAnn":[],"constraintClass":[["Data","Ord"],"Ord"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"x"}],"constraintData":null},{"constraintAnn":[],"constraintClass":[["Data","Ring"],"Ring"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"x"}],"constraintData":null}],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Refined","Predicate"],"Predicate"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Refined","Predicate"],"From"]},{"annotation":[],"tag":"TypeVar","contents":"n"}]}]},{"annotation":[],"tag":"TypeVar","contents":"x"}]}},"sourceSpan":{"start":[144,1],"name":"/Users/daniel/Git/purescript-refined/src/Predicate.purs","end":[153,33]}}],"comments":"A 'Predicate' ensuring that the value is equal to or greater than a given int\n","title":"From","info":{"declType":"data","dataDeclType":"data","typeArguments":[["n",null]]},"sourceSpan":{"start":[142,1],"name":"/Users/daniel/Git/purescript-refined/src/Predicate.purs","end":[142,12]}},{"children":[{"comments":null,"title":"predicateEqualTo","info":{"declType":"instance","dependencies":[{"constraintAnn":[],"constraintClass":[["Data","Typelevel","Num","Sets"],"Nat"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"n"}],"constraintData":null},{"constraintAnn":[],"constraintClass":[["Data","Eq"],"Eq"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"x"}],"constraintData":null},{"constraintAnn":[],"constraintClass":[["Data","Ring"],"Ring"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"x"}],"constraintData":null}],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Refined","Predicate"],"Predicate"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Refined","Predicate"],"EqualTo"]},{"annotation":[],"tag":"TypeVar","contents":"n"}]}]},{"annotation":[],"tag":"TypeVar","contents":"x"}]}},"sourceSpan":{"start":[188,1],"name":"/Users/daniel/Git/purescript-refined/src/Predicate.purs","end":[197,33]}}],"comments":"A 'Predicate' ensuring that the value is equal to a given int\n","title":"EqualTo","info":{"declType":"data","dataDeclType":"data","typeArguments":[["n",null]]},"sourceSpan":{"start":[186,1],"name":"/Users/daniel/Git/purescript-refined/src/Predicate.purs","end":[186,15]}},{"children":[{"comments":null,"title":"predicateAnd","info":{"declType":"instance","dependencies":[{"constraintAnn":[],"constraintClass":[["Data","Refined","Predicate"],"Predicate"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"l"},{"annotation":[],"tag":"TypeVar","contents":"x"}],"constraintData":null},{"constraintAnn":[],"constraintClass":[["Data","Refined","Predicate"],"Predicate"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"r"},{"annotation":[],"tag":"TypeVar","contents":"x"}],"constraintData":null}],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Refined","Predicate"],"Predicate"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Refined","Predicate"],"And"]},{"annotation":[],"tag":"TypeVar","contents":"l"}]},{"annotation":[],"tag":"TypeVar","contents":"r"}]}]},{"annotation":[],"tag":"TypeVar","contents":"x"}]}},"sourceSpan":{"start":[28,1],"name":"/Users/daniel/Git/purescript-refined/src/Predicate.purs","end":[41,40]}}],"comments":"A 'Predicate' ensuring that both given Predicates are valid\n","title":"And","info":{"declType":"data","dataDeclType":"data","typeArguments":[["l",null],["r",null]]},"sourceSpan":{"start":[26,1],"name":"/Users/daniel/Git/purescript-refined/src/Predicate.purs","end":[26,13]}},{"children":[{"comments":null,"title":"validate","info":{"declType":"typeClassMember","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeVar","contents":"p"}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeVar","contents":"x"}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Either"],"Either"]},{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Refined","Error"],"RefinedError"]},{"annotation":[],"tag":"TypeVar","contents":"x"}]}}]},{"annotation":[],"tag":"TypeVar","contents":"x"}]}]}]}},"sourceSpan":{"start":[15,3],"name":"/Users/daniel/Git/purescript-refined/src/Predicate.purs","end":[15,50]}},{"comments":null,"title":"predicateIdPred","info":{"declType":"instance","dependencies":[],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Refined","Predicate"],"Predicate"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Refined","Predicate"],"IdPred"]}]},{"annotation":[],"tag":"TypeVar","contents":"x"}]}},"sourceSpan":{"start":[20,1],"name":"/Users/daniel/Git/purescript-refined/src/Predicate.purs","end":[23,27]}},{"comments":null,"title":"predicateAnd","info":{"declType":"instance","dependencies":[{"constraintAnn":[],"constraintClass":[["Data","Refined","Predicate"],"Predicate"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"l"},{"annotation":[],"tag":"TypeVar","contents":"x"}],"constraintData":null},{"constraintAnn":[],"constraintClass":[["Data","Refined","Predicate"],"Predicate"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"r"},{"annotation":[],"tag":"TypeVar","contents":"x"}],"constraintData":null}],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Refined","Predicate"],"Predicate"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Refined","Predicate"],"And"]},{"annotation":[],"tag":"TypeVar","contents":"l"}]},{"annotation":[],"tag":"TypeVar","contents":"r"}]}]},{"annotation":[],"tag":"TypeVar","contents":"x"}]}},"sourceSpan":{"start":[28,1],"name":"/Users/daniel/Git/purescript-refined/src/Predicate.purs","end":[41,40]}},{"comments":null,"title":"predicateOr","info":{"declType":"instance","dependencies":[{"constraintAnn":[],"constraintClass":[["Data","Refined","Predicate"],"Predicate"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"l"},{"annotation":[],"tag":"TypeVar","contents":"x"}],"constraintData":null},{"constraintAnn":[],"constraintClass":[["Data","Refined","Predicate"],"Predicate"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"r"},{"annotation":[],"tag":"TypeVar","contents":"x"}],"constraintData":null}],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Refined","Predicate"],"Predicate"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Refined","Predicate"],"Or"]},{"annotation":[],"tag":"TypeVar","contents":"l"}]},{"annotation":[],"tag":"TypeVar","contents":"r"}]}]},{"annotation":[],"tag":"TypeVar","contents":"x"}]}},"sourceSpan":{"start":[46,1],"name":"/Users/daniel/Git/purescript-refined/src/Predicate.purs","end":[57,40]}},{"comments":null,"title":"predicateSizeEqualTo","info":{"declType":"instance","dependencies":[{"constraintAnn":[],"constraintClass":[["Data","Refined","Predicate"],"Predicate"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"a"},{"annotation":[],"tag":"TypeVar","contents":"x"}],"constraintData":null},{"constraintAnn":[],"constraintClass":[["Data","Foldable"],"Foldable"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"t"}],"constraintData":null},{"constraintAnn":[],"constraintClass":[["Data","Typelevel","Num","Sets"],"Nat"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"n"}],"constraintData":null}],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Refined","Predicate"],"Predicate"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Refined","Predicate"],"SizeEqualTo"]},{"annotation":[],"tag":"TypeVar","contents":"n"}]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeVar","contents":"t"},{"annotation":[],"tag":"TypeVar","contents":"a"}]}]}},"sourceSpan":{"start":[62,1],"name":"/Users/daniel/Git/purescript-refined/src/Predicate.purs","end":[71,37]}},{"comments":null,"title":"predicateSizeGreaterThan","info":{"declType":"instance","dependencies":[{"constraintAnn":[],"constraintClass":[["Data","Refined","Predicate"],"Predicate"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"a"},{"annotation":[],"tag":"TypeVar","contents":"x"}],"constraintData":null},{"constraintAnn":[],"constraintClass":[["Data","Foldable"],"Foldable"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"t"}],"constraintData":null},{"constraintAnn":[],"constraintClass":[["Data","Typelevel","Num","Sets"],"Nat"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"n"}],"constraintData":null}],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Refined","Predicate"],"Predicate"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Refined","Predicate"],"SizeGreaterThan"]},{"annotation":[],"tag":"TypeVar","contents":"n"}]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeVar","contents":"t"},{"annotation":[],"tag":"TypeVar","contents":"a"}]}]}},"sourceSpan":{"start":[76,1],"name":"/Users/daniel/Git/purescript-refined/src/Predicate.purs","end":[85,35]}},{"comments":null,"title":"predicateSizeLessThan","info":{"declType":"instance","dependencies":[{"constraintAnn":[],"constraintClass":[["Data","Refined","Predicate"],"Predicate"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"a"},{"annotation":[],"tag":"TypeVar","contents":"x"}],"constraintData":null},{"constraintAnn":[],"constraintClass":[["Data","Foldable"],"Foldable"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"t"}],"constraintData":null},{"constraintAnn":[],"constraintClass":[["Data","Typelevel","Num","Sets"],"Nat"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"n"}],"constraintData":null}],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Refined","Predicate"],"Predicate"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Refined","Predicate"],"SizeLessThan"]},{"annotation":[],"tag":"TypeVar","contents":"n"}]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeVar","contents":"t"},{"annotation":[],"tag":"TypeVar","contents":"a"}]}]}},"sourceSpan":{"start":[90,1],"name":"/Users/daniel/Git/purescript-refined/src/Predicate.purs","end":[99,35]}},{"comments":null,"title":"predicateNot","info":{"declType":"instance","dependencies":[{"constraintAnn":[],"constraintClass":[["Data","Refined","Predicate"],"Predicate"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"a"},{"annotation":[],"tag":"TypeVar","contents":"x"}],"constraintData":null}],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Refined","Predicate"],"Predicate"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Refined","Predicate"],"Not"]},{"annotation":[],"tag":"TypeVar","contents":"a"}]}]},{"annotation":[],"tag":"TypeVar","contents":"x"}]}},"sourceSpan":{"start":[104,1],"name":"/Users/daniel/Git/purescript-refined/src/Predicate.purs","end":[110,32]}},{"comments":null,"title":"predicateLessThan","info":{"declType":"instance","dependencies":[{"constraintAnn":[],"constraintClass":[["Data","Typelevel","Num","Sets"],"Nat"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"n"}],"constraintData":null},{"constraintAnn":[],"constraintClass":[["Data","Ord"],"Ord"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"x"}],"constraintData":null},{"constraintAnn":[],"constraintClass":[["Data","Ring"],"Ring"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"x"}],"constraintData":null}],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Refined","Predicate"],"Predicate"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Refined","Predicate"],"LessThan"]},{"annotation":[],"tag":"TypeVar","contents":"n"}]}]},{"annotation":[],"tag":"TypeVar","contents":"x"}]}},"sourceSpan":{"start":[115,1],"name":"/Users/daniel/Git/purescript-refined/src/Predicate.purs","end":[124,33]}},{"comments":null,"title":"predicateGreaterThan","info":{"declType":"instance","dependencies":[{"constraintAnn":[],"constraintClass":[["Data","Typelevel","Num","Sets"],"Nat"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"n"}],"constraintData":null},{"constraintAnn":[],"constraintClass":[["Data","Ord"],"Ord"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"x"}],"constraintData":null},{"constraintAnn":[],"constraintClass":[["Data","Ring"],"Ring"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"x"}],"constraintData":null}],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Refined","Predicate"],"Predicate"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Refined","Predicate"],"GreaterThan"]},{"annotation":[],"tag":"TypeVar","contents":"n"}]}]},{"annotation":[],"tag":"TypeVar","contents":"x"}]}},"sourceSpan":{"start":[129,1],"name":"/Users/daniel/Git/purescript-refined/src/Predicate.purs","end":[139,35]}},{"comments":null,"title":"predicateFrom","info":{"declType":"instance","dependencies":[{"constraintAnn":[],"constraintClass":[["Data","Typelevel","Num","Sets"],"Nat"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"n"}],"constraintData":null},{"constraintAnn":[],"constraintClass":[["Data","Ord"],"Ord"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"x"}],"constraintData":null},{"constraintAnn":[],"constraintClass":[["Data","Ring"],"Ring"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"x"}],"constraintData":null}],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Refined","Predicate"],"Predicate"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Refined","Predicate"],"From"]},{"annotation":[],"tag":"TypeVar","contents":"n"}]}]},{"annotation":[],"tag":"TypeVar","contents":"x"}]}},"sourceSpan":{"start":[144,1],"name":"/Users/daniel/Git/purescript-refined/src/Predicate.purs","end":[153,33]}},{"comments":null,"title":"predicateTo","info":{"declType":"instance","dependencies":[{"constraintAnn":[],"constraintClass":[["Data","Typelevel","Num","Sets"],"Nat"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"n"}],"constraintData":null},{"constraintAnn":[],"constraintClass":[["Data","Ord"],"Ord"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"x"}],"constraintData":null},{"constraintAnn":[],"constraintClass":[["Data","Ring"],"Ring"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"x"}],"constraintData":null}],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Refined","Predicate"],"Predicate"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Refined","Predicate"],"To"]},{"annotation":[],"tag":"TypeVar","contents":"n"}]}]},{"annotation":[],"tag":"TypeVar","contents":"x"}]}},"sourceSpan":{"start":[158,1],"name":"/Users/daniel/Git/purescript-refined/src/Predicate.purs","end":[167,33]}},{"comments":null,"title":"predicateFromTo","info":{"declType":"instance","dependencies":[{"constraintAnn":[],"constraintClass":[["Data","Typelevel","Num","Sets"],"Nat"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"n"}],"constraintData":null},{"constraintAnn":[],"constraintClass":[["Data","Typelevel","Num","Sets"],"Nat"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"m"}],"constraintData":null},{"constraintAnn":[],"constraintClass":[["Data","Ord"],"Ord"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"x"}],"constraintData":null},{"constraintAnn":[],"constraintClass":[["Data","Ring"],"Ring"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"x"}],"constraintData":null}],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Refined","Predicate"],"Predicate"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Refined","Predicate"],"FromTo"]},{"annotation":[],"tag":"TypeVar","contents":"m"}]},{"annotation":[],"tag":"TypeVar","contents":"n"}]}]},{"annotation":[],"tag":"TypeVar","contents":"x"}]}},"sourceSpan":{"start":[172,1],"name":"/Users/daniel/Git/purescript-refined/src/Predicate.purs","end":[183,33]}},{"comments":null,"title":"predicateEqualTo","info":{"declType":"instance","dependencies":[{"constraintAnn":[],"constraintClass":[["Data","Typelevel","Num","Sets"],"Nat"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"n"}],"constraintData":null},{"constraintAnn":[],"constraintClass":[["Data","Eq"],"Eq"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"x"}],"constraintData":null},{"constraintAnn":[],"constraintClass":[["Data","Ring"],"Ring"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"x"}],"constraintData":null}],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Refined","Predicate"],"Predicate"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Refined","Predicate"],"EqualTo"]},{"annotation":[],"tag":"TypeVar","contents":"n"}]}]},{"annotation":[],"tag":"TypeVar","contents":"x"}]}},"sourceSpan":{"start":[188,1],"name":"/Users/daniel/Git/purescript-refined/src/Predicate.purs","end":[197,33]}},{"comments":null,"title":"predicateNotEqualTo","info":{"declType":"instance","dependencies":[{"constraintAnn":[],"constraintClass":[["Data","Typelevel","Num","Sets"],"Nat"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"n"}],"constraintData":null},{"constraintAnn":[],"constraintClass":[["Data","Eq"],"Eq"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"x"}],"constraintData":null},{"constraintAnn":[],"constraintClass":[["Data","Ring"],"Ring"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"x"}],"constraintData":null}],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Refined","Predicate"],"Predicate"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Refined","Predicate"],"NotEqualTo"]},{"annotation":[],"tag":"TypeVar","contents":"n"}]}]},{"annotation":[],"tag":"TypeVar","contents":"x"}]}},"sourceSpan":{"start":[202,1],"name":"/Users/daniel/Git/purescript-refined/src/Predicate.purs","end":[211,33]}}],"comments":null,"title":"Predicate","info":{"fundeps":[],"arguments":[["p",null],["x",null]],"declType":"typeClass","superclasses":[]},"sourceSpan":{"start":[14,1],"name":"/Users/daniel/Git/purescript-refined/src/Predicate.purs","end":[15,50]}}]}],"name":"Data.Refined","comments":null,"declarations":[{"children":[{"comments":null,"title":"Refined","info":{"arguments":[{"annotation":[],"tag":"TypeVar","contents":"x"}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"eqRefined","info":{"declType":"instance","dependencies":[{"constraintAnn":[],"constraintClass":[["Data","Eq"],"Eq"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"x"}],"constraintData":null}],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Eq"],"Eq"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Refined"],"Refined"]},{"annotation":[],"tag":"TypeVar","contents":"p"}]},{"annotation":[],"tag":"TypeVar","contents":"x"}]}]}},"sourceSpan":{"start":[32,1],"name":"/Users/daniel/Git/purescript-refined/src/Refined.purs","end":[33,32]}},{"comments":null,"title":"showRefined","info":{"declType":"instance","dependencies":[{"constraintAnn":[],"constraintClass":[["Data","Show"],"Show"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"x"}],"constraintData":null}],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Show"],"Show"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Refined"],"Refined"]},{"annotation":[],"tag":"TypeVar","contents":"p"}]},{"annotation":[],"tag":"TypeVar","contents":"x"}]}]}},"sourceSpan":{"start":[34,1],"name":"/Users/daniel/Git/purescript-refined/src/Refined.purs","end":[35,36]}},{"comments":null,"title":"ordRefined","info":{"declType":"instance","dependencies":[{"constraintAnn":[],"constraintClass":[["Data","Ord"],"Ord"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"x"}],"constraintData":null}],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Ord"],"Ord"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Refined"],"Refined"]},{"annotation":[],"tag":"TypeVar","contents":"p"}]},{"annotation":[],"tag":"TypeVar","contents":"x"}]}]}},"sourceSpan":{"start":[36,1],"name":"/Users/daniel/Git/purescript-refined/src/Refined.purs","end":[37,34]}},{"comments":null,"title":"genericRefined","info":{"declType":"instance","dependencies":[],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Generic","Rep"],"Generic"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Refined"],"Refined"]},{"annotation":[],"tag":"TypeVar","contents":"p"}]},{"annotation":[],"tag":"TypeVar","contents":"x"}]}]},{"annotation":[],"tag":"TypeWildcard","contents":null}]}},"sourceSpan":{"start":[38,1],"name":"/Users/daniel/Git/purescript-refined/src/Refined.purs","end":[39,29]}},{"comments":"for decoding we first decode the thing inside, then run our predicate on it\n","title":"decodeJsonRefined","info":{"declType":"instance","dependencies":[{"constraintAnn":[],"constraintClass":[["Data","Argonaut","Decode","Class"],"DecodeJson"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"x"}],"constraintData":null},{"constraintAnn":[],"constraintClass":[["Data","Show"],"Show"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"x"}],"constraintData":null},{"constraintAnn":[],"constraintClass":[["Data","Refined","Predicate"],"Predicate"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"p"},{"annotation":[],"tag":"TypeVar","contents":"x"}],"constraintData":null}],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Argonaut","Decode","Class"],"DecodeJson"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Refined"],"Refined"]},{"annotation":[],"tag":"TypeVar","contents":"p"}]},{"annotation":[],"tag":"TypeVar","contents":"x"}]}]}},"sourceSpan":{"start":[42,1],"name":"/Users/daniel/Git/purescript-refined/src/Refined.purs","end":[47,62]}},{"comments":"for encoding we just want to strip away the outside layer and use whatever\nis inside\n","title":"encodeJsonRefined","info":{"declType":"instance","dependencies":[{"constraintAnn":[],"constraintClass":[["Data","Argonaut","Encode","Class"],"EncodeJson"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"x"}],"constraintData":null}],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Argonaut","Encode","Class"],"EncodeJson"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Refined"],"Refined"]},{"annotation":[],"tag":"TypeVar","contents":"p"}]},{"annotation":[],"tag":"TypeVar","contents":"x"}]}]}},"sourceSpan":{"start":[51,1],"name":"/Users/daniel/Git/purescript-refined/src/Refined.purs","end":[52,48]}},{"comments":"create an Arbitrary instance by randomly throwing values against the wall\nuntil something sticks\n","title":"arbitraryRefined","info":{"declType":"instance","dependencies":[{"constraintAnn":[],"constraintClass":[["Test","QuickCheck","Arbitrary"],"Arbitrary"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"a"}],"constraintData":null},{"constraintAnn":[],"constraintClass":[["Data","Refined","Predicate"],"Predicate"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"p"},{"annotation":[],"tag":"TypeVar","contents":"a"}],"constraintData":null}],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Test","QuickCheck","Arbitrary"],"Arbitrary"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Refined"],"Refined"]},{"annotation":[],"tag":"TypeVar","contents":"p"}]},{"annotation":[],"tag":"TypeVar","contents":"a"}]}]}},"sourceSpan":{"start":[56,1],"name":"/Users/daniel/Git/purescript-refined/src/Refined.purs","end":[61,46]}}],"comments":null,"title":"Refined","info":{"declType":"data","dataDeclType":"newtype","typeArguments":[["p",null],["x",null]]},"sourceSpan":{"start":[29,1],"name":"/Users/daniel/Git/purescript-refined/src/Refined.purs","end":[30,14]}},{"children":[],"comments":null,"title":"refine","info":{"declType":"value","type":{"annotation":[],"tag":"ForAll","contents":["x",{"annotation":[],"tag":"ForAll","contents":["p",{"annotation":[],"tag":"ConstrainedType","contents":[{"constraintAnn":[],"constraintClass":[["Data","Refined","Predicate"],"Predicate"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"p"},{"annotation":[],"tag":"TypeVar","contents":"x"}],"constraintData":null},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeVar","contents":"x"}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Either"],"Either"]},{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Refined","Error"],"RefinedError"]},{"annotation":[],"tag":"TypeVar","contents":"x"}]}}]},{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Refined"],"Refined"]},{"annotation":[],"tag":"TypeVar","contents":"p"}]},{"annotation":[],"tag":"TypeVar","contents":"x"}]}}]}]}]},null]},null]}},"sourceSpan":{"start":[74,1],"name":"/Users/daniel/Git/purescript-refined/src/Refined.purs","end":[77,43]}},{"children":[],"comments":null,"title":"unsafeRefine","info":{"declType":"value","type":{"annotation":[],"tag":"ForAll","contents":["x",{"annotation":[],"tag":"ForAll","contents":["p",{"annotation":[],"tag":"ConstrainedType","contents":[{"constraintAnn":[],"constraintClass":[["Data","Refined","Predicate"],"Predicate"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"p"},{"annotation":[],"tag":"TypeVar","contents":"x"}],"constraintData":null},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeVar","contents":"x"}]},{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Refined"],"Refined"]},{"annotation":[],"tag":"TypeVar","contents":"p"}]},{"annotation":[],"tag":"TypeVar","contents":"x"}]}}]}]},null]},null]}},"sourceSpan":{"start":[82,1],"name":"/Users/daniel/Git/purescript-refined/src/Refined.purs","end":[85,20]}},{"children":[],"comments":null,"title":"unrefine","info":{"declType":"value","type":{"annotation":[],"tag":"ForAll","contents":["x",{"annotation":[],"tag":"ForAll","contents":["p",{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Refined"],"Refined"]},{"annotation":[],"tag":"TypeVar","contents":"p"}]},{"annotation":[],"tag":"TypeVar","contents":"x"}]}]},{"annotation":[],"tag":"TypeVar","contents":"x"}]},null]},null]}},"sourceSpan":{"start":[89,1],"name":"/Users/daniel/Git/purescript-refined/src/Refined.purs","end":[91,8]}}]},{"reExports":[],"name":"Data.Refined.Error","comments":null,"declarations":[{"children":[{"comments":null,"title":"AndError","info":{"arguments":[{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Refined","Internal"],"These"]},{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Refined","Error"],"RefinedError"]},{"annotation":[],"tag":"TypeVar","contents":"a"}]}}]},{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Refined","Error"],"RefinedError"]},{"annotation":[],"tag":"TypeVar","contents":"a"}]}}]}}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"OrError","info":{"arguments":[{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Refined","Error"],"RefinedError"]},{"annotation":[],"tag":"TypeVar","contents":"a"}]}},{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Refined","Error"],"RefinedError"]},{"annotation":[],"tag":"TypeVar","contents":"a"}]}}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"SizeEqualToError","info":{"arguments":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Int"]},{"annotation":[],"tag":"TypeVar","contents":"a"}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"SizeGreaterThanError","info":{"arguments":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Int"]},{"annotation":[],"tag":"TypeVar","contents":"a"}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"SizeLessThanError","info":{"arguments":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Int"]},{"annotation":[],"tag":"TypeVar","contents":"a"}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"NotError","info":{"arguments":[],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"LessThanError","info":{"arguments":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Int"]},{"annotation":[],"tag":"TypeVar","contents":"a"}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"GreaterThanError","info":{"arguments":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Int"]},{"annotation":[],"tag":"TypeVar","contents":"a"}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"FromError","info":{"arguments":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Int"]},{"annotation":[],"tag":"TypeVar","contents":"a"}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"ToError","info":{"arguments":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Int"]},{"annotation":[],"tag":"TypeVar","contents":"a"}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"FromToError","info":{"arguments":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Int"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Int"]},{"annotation":[],"tag":"TypeVar","contents":"a"}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"EqualToError","info":{"arguments":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Int"]},{"annotation":[],"tag":"TypeVar","contents":"a"}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"NotEqualToError","info":{"arguments":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Int"]},{"annotation":[],"tag":"TypeVar","contents":"a"}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"eqRefinedError","info":{"declType":"instance","dependencies":[{"constraintAnn":[],"constraintClass":[["Data","Eq"],"Eq"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"a"}],"constraintData":null}],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Eq"],"Eq"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Refined","Error"],"RefinedError"]},{"annotation":[],"tag":"TypeVar","contents":"a"}]}]}},"sourceSpan":{"start":[22,1],"name":"/Users/daniel/Git/purescript-refined/src/Error.purs","end":[23,35]}},{"comments":null,"title":"showRefinedError","info":{"declType":"instance","dependencies":[{"constraintAnn":[],"constraintClass":[["Data","Show"],"Show"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"a"}],"constraintData":null}],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Show"],"Show"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Refined","Error"],"RefinedError"]},{"annotation":[],"tag":"TypeVar","contents":"a"}]}]}},"sourceSpan":{"start":[25,1],"name":"/Users/daniel/Git/purescript-refined/src/Error.purs","end":[55,71]}}],"comments":null,"title":"RefinedError","info":{"declType":"data","dataDeclType":"data","typeArguments":[["a",null]]},"sourceSpan":{"start":[7,1],"name":"/Users/daniel/Git/purescript-refined/src/Error.purs","end":[20,26]}}]},{"reExports":[],"name":"Data.Refined.Internal","comments":null,"declarations":[{"children":[],"comments":null,"title":"fromInt","info":{"declType":"value","type":{"annotation":[],"tag":"ForAll","contents":["a",{"annotation":[],"tag":"ConstrainedType","contents":[{"constraintAnn":[],"constraintClass":[["Data","Ring"],"Ring"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"a"}],"constraintData":null},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},{"annotation":[],"tag":"TypeVar","contents":"a"}]}]},null]}},"sourceSpan":{"start":[7,1],"name":"/Users/daniel/Git/purescript-refined/src/Helpers.purs","end":[7,42]}},{"children":[{"comments":null,"title":"This","info":{"arguments":[{"annotation":[],"tag":"TypeVar","contents":"a"}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"That","info":{"arguments":[{"annotation":[],"tag":"TypeVar","contents":"b"}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"These","info":{"arguments":[{"annotation":[],"tag":"TypeVar","contents":"a"},{"annotation":[],"tag":"TypeVar","contents":"b"}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"eqThese","info":{"declType":"instance","dependencies":[{"constraintAnn":[],"constraintClass":[["Data","Eq"],"Eq"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"a"}],"constraintData":null},{"constraintAnn":[],"constraintClass":[["Data","Eq"],"Eq"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"b"}],"constraintData":null}],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Eq"],"Eq"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Refined","Internal"],"These"]},{"annotation":[],"tag":"TypeVar","contents":"a"}]},{"annotation":[],"tag":"TypeVar","contents":"b"}]}]}},"sourceSpan":{"start":[19,1],"name":"/Users/daniel/Git/purescript-refined/src/Helpers.purs","end":[21,20]}},{"comments":null,"title":"ordThese","info":{"declType":"instance","dependencies":[{"constraintAnn":[],"constraintClass":[["Data","Ord"],"Ord"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"a"}],"constraintData":null},{"constraintAnn":[],"constraintClass":[["Data","Ord"],"Ord"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"b"}],"constraintData":null}],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Ord"],"Ord"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Refined","Internal"],"These"]},{"annotation":[],"tag":"TypeVar","contents":"a"}]},{"annotation":[],"tag":"TypeVar","contents":"b"}]}]}},"sourceSpan":{"start":[22,1],"name":"/Users/daniel/Git/purescript-refined/src/Helpers.purs","end":[24,21]}}],"comments":"Helper version of function because i am too lazy to find the package\n","title":"These","info":{"declType":"data","dataDeclType":"data","typeArguments":[["a",null],["b",null]]},"sourceSpan":{"start":[14,1],"name":"/Users/daniel/Git/purescript-refined/src/Helpers.purs","end":[17,14]}}]},{"reExports":[],"name":"Data.Refined.Predicate","comments":null,"declarations":[{"children":[{"comments":null,"title":"validate","info":{"declType":"typeClassMember","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeVar","contents":"p"}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeVar","contents":"x"}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Either"],"Either"]},{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Refined","Error"],"RefinedError"]},{"annotation":[],"tag":"TypeVar","contents":"x"}]}}]},{"annotation":[],"tag":"TypeVar","contents":"x"}]}]}]}},"sourceSpan":{"start":[15,3],"name":"/Users/daniel/Git/purescript-refined/src/Predicate.purs","end":[15,50]}},{"comments":null,"title":"predicateIdPred","info":{"declType":"instance","dependencies":[],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Refined","Predicate"],"Predicate"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Refined","Predicate"],"IdPred"]}]},{"annotation":[],"tag":"TypeVar","contents":"x"}]}},"sourceSpan":{"start":[20,1],"name":"/Users/daniel/Git/purescript-refined/src/Predicate.purs","end":[23,27]}},{"comments":null,"title":"predicateAnd","info":{"declType":"instance","dependencies":[{"constraintAnn":[],"constraintClass":[["Data","Refined","Predicate"],"Predicate"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"l"},{"annotation":[],"tag":"TypeVar","contents":"x"}],"constraintData":null},{"constraintAnn":[],"constraintClass":[["Data","Refined","Predicate"],"Predicate"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"r"},{"annotation":[],"tag":"TypeVar","contents":"x"}],"constraintData":null}],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Refined","Predicate"],"Predicate"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Refined","Predicate"],"And"]},{"annotation":[],"tag":"TypeVar","contents":"l"}]},{"annotation":[],"tag":"TypeVar","contents":"r"}]}]},{"annotation":[],"tag":"TypeVar","contents":"x"}]}},"sourceSpan":{"start":[28,1],"name":"/Users/daniel/Git/purescript-refined/src/Predicate.purs","end":[41,40]}},{"comments":null,"title":"predicateOr","info":{"declType":"instance","dependencies":[{"constraintAnn":[],"constraintClass":[["Data","Refined","Predicate"],"Predicate"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"l"},{"annotation":[],"tag":"TypeVar","contents":"x"}],"constraintData":null},{"constraintAnn":[],"constraintClass":[["Data","Refined","Predicate"],"Predicate"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"r"},{"annotation":[],"tag":"TypeVar","contents":"x"}],"constraintData":null}],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Refined","Predicate"],"Predicate"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Refined","Predicate"],"Or"]},{"annotation":[],"tag":"TypeVar","contents":"l"}]},{"annotation":[],"tag":"TypeVar","contents":"r"}]}]},{"annotation":[],"tag":"TypeVar","contents":"x"}]}},"sourceSpan":{"start":[46,1],"name":"/Users/daniel/Git/purescript-refined/src/Predicate.purs","end":[57,40]}},{"comments":null,"title":"predicateSizeEqualTo","info":{"declType":"instance","dependencies":[{"constraintAnn":[],"constraintClass":[["Data","Refined","Predicate"],"Predicate"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"a"},{"annotation":[],"tag":"TypeVar","contents":"x"}],"constraintData":null},{"constraintAnn":[],"constraintClass":[["Data","Foldable"],"Foldable"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"t"}],"constraintData":null},{"constraintAnn":[],"constraintClass":[["Data","Typelevel","Num","Sets"],"Nat"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"n"}],"constraintData":null}],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Refined","Predicate"],"Predicate"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Refined","Predicate"],"SizeEqualTo"]},{"annotation":[],"tag":"TypeVar","contents":"n"}]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeVar","contents":"t"},{"annotation":[],"tag":"TypeVar","contents":"a"}]}]}},"sourceSpan":{"start":[62,1],"name":"/Users/daniel/Git/purescript-refined/src/Predicate.purs","end":[71,37]}},{"comments":null,"title":"predicateSizeGreaterThan","info":{"declType":"instance","dependencies":[{"constraintAnn":[],"constraintClass":[["Data","Refined","Predicate"],"Predicate"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"a"},{"annotation":[],"tag":"TypeVar","contents":"x"}],"constraintData":null},{"constraintAnn":[],"constraintClass":[["Data","Foldable"],"Foldable"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"t"}],"constraintData":null},{"constraintAnn":[],"constraintClass":[["Data","Typelevel","Num","Sets"],"Nat"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"n"}],"constraintData":null}],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Refined","Predicate"],"Predicate"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Refined","Predicate"],"SizeGreaterThan"]},{"annotation":[],"tag":"TypeVar","contents":"n"}]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeVar","contents":"t"},{"annotation":[],"tag":"TypeVar","contents":"a"}]}]}},"sourceSpan":{"start":[76,1],"name":"/Users/daniel/Git/purescript-refined/src/Predicate.purs","end":[85,35]}},{"comments":null,"title":"predicateSizeLessThan","info":{"declType":"instance","dependencies":[{"constraintAnn":[],"constraintClass":[["Data","Refined","Predicate"],"Predicate"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"a"},{"annotation":[],"tag":"TypeVar","contents":"x"}],"constraintData":null},{"constraintAnn":[],"constraintClass":[["Data","Foldable"],"Foldable"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"t"}],"constraintData":null},{"constraintAnn":[],"constraintClass":[["Data","Typelevel","Num","Sets"],"Nat"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"n"}],"constraintData":null}],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Refined","Predicate"],"Predicate"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Refined","Predicate"],"SizeLessThan"]},{"annotation":[],"tag":"TypeVar","contents":"n"}]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeVar","contents":"t"},{"annotation":[],"tag":"TypeVar","contents":"a"}]}]}},"sourceSpan":{"start":[90,1],"name":"/Users/daniel/Git/purescript-refined/src/Predicate.purs","end":[99,35]}},{"comments":null,"title":"predicateNot","info":{"declType":"instance","dependencies":[{"constraintAnn":[],"constraintClass":[["Data","Refined","Predicate"],"Predicate"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"a"},{"annotation":[],"tag":"TypeVar","contents":"x"}],"constraintData":null}],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Refined","Predicate"],"Predicate"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Refined","Predicate"],"Not"]},{"annotation":[],"tag":"TypeVar","contents":"a"}]}]},{"annotation":[],"tag":"TypeVar","contents":"x"}]}},"sourceSpan":{"start":[104,1],"name":"/Users/daniel/Git/purescript-refined/src/Predicate.purs","end":[110,32]}},{"comments":null,"title":"predicateLessThan","info":{"declType":"instance","dependencies":[{"constraintAnn":[],"constraintClass":[["Data","Typelevel","Num","Sets"],"Nat"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"n"}],"constraintData":null},{"constraintAnn":[],"constraintClass":[["Data","Ord"],"Ord"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"x"}],"constraintData":null},{"constraintAnn":[],"constraintClass":[["Data","Ring"],"Ring"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"x"}],"constraintData":null}],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Refined","Predicate"],"Predicate"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Refined","Predicate"],"LessThan"]},{"annotation":[],"tag":"TypeVar","contents":"n"}]}]},{"annotation":[],"tag":"TypeVar","contents":"x"}]}},"sourceSpan":{"start":[115,1],"name":"/Users/daniel/Git/purescript-refined/src/Predicate.purs","end":[124,33]}},{"comments":null,"title":"predicateGreaterThan","info":{"declType":"instance","dependencies":[{"constraintAnn":[],"constraintClass":[["Data","Typelevel","Num","Sets"],"Nat"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"n"}],"constraintData":null},{"constraintAnn":[],"constraintClass":[["Data","Ord"],"Ord"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"x"}],"constraintData":null},{"constraintAnn":[],"constraintClass":[["Data","Ring"],"Ring"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"x"}],"constraintData":null}],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Refined","Predicate"],"Predicate"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Refined","Predicate"],"GreaterThan"]},{"annotation":[],"tag":"TypeVar","contents":"n"}]}]},{"annotation":[],"tag":"TypeVar","contents":"x"}]}},"sourceSpan":{"start":[129,1],"name":"/Users/daniel/Git/purescript-refined/src/Predicate.purs","end":[139,35]}},{"comments":null,"title":"predicateFrom","info":{"declType":"instance","dependencies":[{"constraintAnn":[],"constraintClass":[["Data","Typelevel","Num","Sets"],"Nat"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"n"}],"constraintData":null},{"constraintAnn":[],"constraintClass":[["Data","Ord"],"Ord"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"x"}],"constraintData":null},{"constraintAnn":[],"constraintClass":[["Data","Ring"],"Ring"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"x"}],"constraintData":null}],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Refined","Predicate"],"Predicate"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Refined","Predicate"],"From"]},{"annotation":[],"tag":"TypeVar","contents":"n"}]}]},{"annotation":[],"tag":"TypeVar","contents":"x"}]}},"sourceSpan":{"start":[144,1],"name":"/Users/daniel/Git/purescript-refined/src/Predicate.purs","end":[153,33]}},{"comments":null,"title":"predicateTo","info":{"declType":"instance","dependencies":[{"constraintAnn":[],"constraintClass":[["Data","Typelevel","Num","Sets"],"Nat"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"n"}],"constraintData":null},{"constraintAnn":[],"constraintClass":[["Data","Ord"],"Ord"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"x"}],"constraintData":null},{"constraintAnn":[],"constraintClass":[["Data","Ring"],"Ring"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"x"}],"constraintData":null}],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Refined","Predicate"],"Predicate"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Refined","Predicate"],"To"]},{"annotation":[],"tag":"TypeVar","contents":"n"}]}]},{"annotation":[],"tag":"TypeVar","contents":"x"}]}},"sourceSpan":{"start":[158,1],"name":"/Users/daniel/Git/purescript-refined/src/Predicate.purs","end":[167,33]}},{"comments":null,"title":"predicateFromTo","info":{"declType":"instance","dependencies":[{"constraintAnn":[],"constraintClass":[["Data","Typelevel","Num","Sets"],"Nat"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"n"}],"constraintData":null},{"constraintAnn":[],"constraintClass":[["Data","Typelevel","Num","Sets"],"Nat"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"m"}],"constraintData":null},{"constraintAnn":[],"constraintClass":[["Data","Ord"],"Ord"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"x"}],"constraintData":null},{"constraintAnn":[],"constraintClass":[["Data","Ring"],"Ring"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"x"}],"constraintData":null}],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Refined","Predicate"],"Predicate"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Refined","Predicate"],"FromTo"]},{"annotation":[],"tag":"TypeVar","contents":"m"}]},{"annotation":[],"tag":"TypeVar","contents":"n"}]}]},{"annotation":[],"tag":"TypeVar","contents":"x"}]}},"sourceSpan":{"start":[172,1],"name":"/Users/daniel/Git/purescript-refined/src/Predicate.purs","end":[183,33]}},{"comments":null,"title":"predicateEqualTo","info":{"declType":"instance","dependencies":[{"constraintAnn":[],"constraintClass":[["Data","Typelevel","Num","Sets"],"Nat"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"n"}],"constraintData":null},{"constraintAnn":[],"constraintClass":[["Data","Eq"],"Eq"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"x"}],"constraintData":null},{"constraintAnn":[],"constraintClass":[["Data","Ring"],"Ring"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"x"}],"constraintData":null}],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Refined","Predicate"],"Predicate"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Refined","Predicate"],"EqualTo"]},{"annotation":[],"tag":"TypeVar","contents":"n"}]}]},{"annotation":[],"tag":"TypeVar","contents":"x"}]}},"sourceSpan":{"start":[188,1],"name":"/Users/daniel/Git/purescript-refined/src/Predicate.purs","end":[197,33]}},{"comments":null,"title":"predicateNotEqualTo","info":{"declType":"instance","dependencies":[{"constraintAnn":[],"constraintClass":[["Data","Typelevel","Num","Sets"],"Nat"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"n"}],"constraintData":null},{"constraintAnn":[],"constraintClass":[["Data","Eq"],"Eq"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"x"}],"constraintData":null},{"constraintAnn":[],"constraintClass":[["Data","Ring"],"Ring"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"x"}],"constraintData":null}],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Refined","Predicate"],"Predicate"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Refined","Predicate"],"NotEqualTo"]},{"annotation":[],"tag":"TypeVar","contents":"n"}]}]},{"annotation":[],"tag":"TypeVar","contents":"x"}]}},"sourceSpan":{"start":[202,1],"name":"/Users/daniel/Git/purescript-refined/src/Predicate.purs","end":[211,33]}}],"comments":null,"title":"Predicate","info":{"fundeps":[],"arguments":[["p",null],["x",null]],"declType":"typeClass","superclasses":[]},"sourceSpan":{"start":[14,1],"name":"/Users/daniel/Git/purescript-refined/src/Predicate.purs","end":[15,50]}},{"children":[{"comments":null,"title":"predicateIdPred","info":{"declType":"instance","dependencies":[],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Refined","Predicate"],"Predicate"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Refined","Predicate"],"IdPred"]}]},{"annotation":[],"tag":"TypeVar","contents":"x"}]}},"sourceSpan":{"start":[20,1],"name":"/Users/daniel/Git/purescript-refined/src/Predicate.purs","end":[23,27]}}],"comments":"A 'Predicate' for which everything is valid\n","title":"IdPred","info":{"declType":"data","dataDeclType":"data","typeArguments":[]},"sourceSpan":{"start":[18,1],"name":"/Users/daniel/Git/purescript-refined/src/Predicate.purs","end":[18,12]}},{"children":[{"comments":null,"title":"predicateAnd","info":{"declType":"instance","dependencies":[{"constraintAnn":[],"constraintClass":[["Data","Refined","Predicate"],"Predicate"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"l"},{"annotation":[],"tag":"TypeVar","contents":"x"}],"constraintData":null},{"constraintAnn":[],"constraintClass":[["Data","Refined","Predicate"],"Predicate"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"r"},{"annotation":[],"tag":"TypeVar","contents":"x"}],"constraintData":null}],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Refined","Predicate"],"Predicate"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Refined","Predicate"],"And"]},{"annotation":[],"tag":"TypeVar","contents":"l"}]},{"annotation":[],"tag":"TypeVar","contents":"r"}]}]},{"annotation":[],"tag":"TypeVar","contents":"x"}]}},"sourceSpan":{"start":[28,1],"name":"/Users/daniel/Git/purescript-refined/src/Predicate.purs","end":[41,40]}}],"comments":"A 'Predicate' ensuring that both given Predicates are valid\n","title":"And","info":{"declType":"data","dataDeclType":"data","typeArguments":[["l",null],["r",null]]},"sourceSpan":{"start":[26,1],"name":"/Users/daniel/Git/purescript-refined/src/Predicate.purs","end":[26,13]}},{"children":[{"comments":null,"title":"predicateOr","info":{"declType":"instance","dependencies":[{"constraintAnn":[],"constraintClass":[["Data","Refined","Predicate"],"Predicate"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"l"},{"annotation":[],"tag":"TypeVar","contents":"x"}],"constraintData":null},{"constraintAnn":[],"constraintClass":[["Data","Refined","Predicate"],"Predicate"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"r"},{"annotation":[],"tag":"TypeVar","contents":"x"}],"constraintData":null}],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Refined","Predicate"],"Predicate"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Refined","Predicate"],"Or"]},{"annotation":[],"tag":"TypeVar","contents":"l"}]},{"annotation":[],"tag":"TypeVar","contents":"r"}]}]},{"annotation":[],"tag":"TypeVar","contents":"x"}]}},"sourceSpan":{"start":[46,1],"name":"/Users/daniel/Git/purescript-refined/src/Predicate.purs","end":[57,40]}}],"comments":"A 'Predicate' ensuring that one of two given Predicates is valid \n","title":"Or","info":{"declType":"data","dataDeclType":"data","typeArguments":[["l",null],["r",null]]},"sourceSpan":{"start":[44,1],"name":"/Users/daniel/Git/purescript-refined/src/Predicate.purs","end":[44,12]}},{"children":[{"comments":null,"title":"predicateSizeEqualTo","info":{"declType":"instance","dependencies":[{"constraintAnn":[],"constraintClass":[["Data","Refined","Predicate"],"Predicate"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"a"},{"annotation":[],"tag":"TypeVar","contents":"x"}],"constraintData":null},{"constraintAnn":[],"constraintClass":[["Data","Foldable"],"Foldable"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"t"}],"constraintData":null},{"constraintAnn":[],"constraintClass":[["Data","Typelevel","Num","Sets"],"Nat"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"n"}],"constraintData":null}],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Refined","Predicate"],"Predicate"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Refined","Predicate"],"SizeEqualTo"]},{"annotation":[],"tag":"TypeVar","contents":"n"}]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeVar","contents":"t"},{"annotation":[],"tag":"TypeVar","contents":"a"}]}]}},"sourceSpan":{"start":[62,1],"name":"/Users/daniel/Git/purescript-refined/src/Predicate.purs","end":[71,37]}}],"comments":"A 'Predicate' ensuring that the length of a foldable is equal to a given int\n","title":"SizeEqualTo","info":{"declType":"data","dataDeclType":"data","typeArguments":[["a",null]]},"sourceSpan":{"start":[60,1],"name":"/Users/daniel/Git/purescript-refined/src/Predicate.purs","end":[60,19]}},{"children":[{"comments":null,"title":"predicateSizeGreaterThan","info":{"declType":"instance","dependencies":[{"constraintAnn":[],"constraintClass":[["Data","Refined","Predicate"],"Predicate"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"a"},{"annotation":[],"tag":"TypeVar","contents":"x"}],"constraintData":null},{"constraintAnn":[],"constraintClass":[["Data","Foldable"],"Foldable"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"t"}],"constraintData":null},{"constraintAnn":[],"constraintClass":[["Data","Typelevel","Num","Sets"],"Nat"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"n"}],"constraintData":null}],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Refined","Predicate"],"Predicate"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Refined","Predicate"],"SizeGreaterThan"]},{"annotation":[],"tag":"TypeVar","contents":"n"}]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeVar","contents":"t"},{"annotation":[],"tag":"TypeVar","contents":"a"}]}]}},"sourceSpan":{"start":[76,1],"name":"/Users/daniel/Git/purescript-refined/src/Predicate.purs","end":[85,35]}}],"comments":"A 'Predicate' ensuring that the length of a foldable is greater than a given int\n","title":"SizeGreaterThan","info":{"declType":"data","dataDeclType":"data","typeArguments":[["a",null]]},"sourceSpan":{"start":[74,1],"name":"/Users/daniel/Git/purescript-refined/src/Predicate.purs","end":[74,23]}},{"children":[{"comments":null,"title":"predicateSizeLessThan","info":{"declType":"instance","dependencies":[{"constraintAnn":[],"constraintClass":[["Data","Refined","Predicate"],"Predicate"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"a"},{"annotation":[],"tag":"TypeVar","contents":"x"}],"constraintData":null},{"constraintAnn":[],"constraintClass":[["Data","Foldable"],"Foldable"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"t"}],"constraintData":null},{"constraintAnn":[],"constraintClass":[["Data","Typelevel","Num","Sets"],"Nat"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"n"}],"constraintData":null}],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Refined","Predicate"],"Predicate"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Refined","Predicate"],"SizeLessThan"]},{"annotation":[],"tag":"TypeVar","contents":"n"}]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeVar","contents":"t"},{"annotation":[],"tag":"TypeVar","contents":"a"}]}]}},"sourceSpan":{"start":[90,1],"name":"/Users/daniel/Git/purescript-refined/src/Predicate.purs","end":[99,35]}}],"comments":"A 'Predicate' ensuring that the length of a foldable is less than a given int\n","title":"SizeLessThan","info":{"declType":"data","dataDeclType":"data","typeArguments":[["a",null]]},"sourceSpan":{"start":[88,1],"name":"/Users/daniel/Git/purescript-refined/src/Predicate.purs","end":[88,20]}},{"children":[{"comments":null,"title":"predicateNot","info":{"declType":"instance","dependencies":[{"constraintAnn":[],"constraintClass":[["Data","Refined","Predicate"],"Predicate"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"a"},{"annotation":[],"tag":"TypeVar","contents":"x"}],"constraintData":null}],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Refined","Predicate"],"Predicate"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Refined","Predicate"],"Not"]},{"annotation":[],"tag":"TypeVar","contents":"a"}]}]},{"annotation":[],"tag":"TypeVar","contents":"x"}]}},"sourceSpan":{"start":[104,1],"name":"/Users/daniel/Git/purescript-refined/src/Predicate.purs","end":[110,32]}}],"comments":"A 'Predicate' ensuring that the opposite of another Predicate passes\n","title":"Not","info":{"declType":"data","dataDeclType":"data","typeArguments":[["a",null]]},"sourceSpan":{"start":[102,1],"name":"/Users/daniel/Git/purescript-refined/src/Predicate.purs","end":[102,11]}},{"children":[{"comments":null,"title":"predicateLessThan","info":{"declType":"instance","dependencies":[{"constraintAnn":[],"constraintClass":[["Data","Typelevel","Num","Sets"],"Nat"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"n"}],"constraintData":null},{"constraintAnn":[],"constraintClass":[["Data","Ord"],"Ord"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"x"}],"constraintData":null},{"constraintAnn":[],"constraintClass":[["Data","Ring"],"Ring"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"x"}],"constraintData":null}],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Refined","Predicate"],"Predicate"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Refined","Predicate"],"LessThan"]},{"annotation":[],"tag":"TypeVar","contents":"n"}]}]},{"annotation":[],"tag":"TypeVar","contents":"x"}]}},"sourceSpan":{"start":[115,1],"name":"/Users/daniel/Git/purescript-refined/src/Predicate.purs","end":[124,33]}}],"comments":"A 'Predicate' ensuring that the value is less than a given int\n","title":"LessThan","info":{"declType":"data","dataDeclType":"data","typeArguments":[["n",null]]},"sourceSpan":{"start":[113,1],"name":"/Users/daniel/Git/purescript-refined/src/Predicate.purs","end":[113,16]}},{"children":[{"comments":null,"title":"predicateGreaterThan","info":{"declType":"instance","dependencies":[{"constraintAnn":[],"constraintClass":[["Data","Typelevel","Num","Sets"],"Nat"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"n"}],"constraintData":null},{"constraintAnn":[],"constraintClass":[["Data","Ord"],"Ord"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"x"}],"constraintData":null},{"constraintAnn":[],"constraintClass":[["Data","Ring"],"Ring"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"x"}],"constraintData":null}],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Refined","Predicate"],"Predicate"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Refined","Predicate"],"GreaterThan"]},{"annotation":[],"tag":"TypeVar","contents":"n"}]}]},{"annotation":[],"tag":"TypeVar","contents":"x"}]}},"sourceSpan":{"start":[129,1],"name":"/Users/daniel/Git/purescript-refined/src/Predicate.purs","end":[139,35]}}],"comments":"A 'Predicate' ensuring that the value is greater than a given int\n","title":"GreaterThan","info":{"declType":"data","dataDeclType":"data","typeArguments":[["n",null]]},"sourceSpan":{"start":[127,1],"name":"/Users/daniel/Git/purescript-refined/src/Predicate.purs","end":[127,19]}},{"children":[{"comments":null,"title":"predicateFrom","info":{"declType":"instance","dependencies":[{"constraintAnn":[],"constraintClass":[["Data","Typelevel","Num","Sets"],"Nat"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"n"}],"constraintData":null},{"constraintAnn":[],"constraintClass":[["Data","Ord"],"Ord"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"x"}],"constraintData":null},{"constraintAnn":[],"constraintClass":[["Data","Ring"],"Ring"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"x"}],"constraintData":null}],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Refined","Predicate"],"Predicate"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Refined","Predicate"],"From"]},{"annotation":[],"tag":"TypeVar","contents":"n"}]}]},{"annotation":[],"tag":"TypeVar","contents":"x"}]}},"sourceSpan":{"start":[144,1],"name":"/Users/daniel/Git/purescript-refined/src/Predicate.purs","end":[153,33]}}],"comments":"A 'Predicate' ensuring that the value is equal to or greater than a given int\n","title":"From","info":{"declType":"data","dataDeclType":"data","typeArguments":[["n",null]]},"sourceSpan":{"start":[142,1],"name":"/Users/daniel/Git/purescript-refined/src/Predicate.purs","end":[142,12]}},{"children":[{"comments":null,"title":"predicateTo","info":{"declType":"instance","dependencies":[{"constraintAnn":[],"constraintClass":[["Data","Typelevel","Num","Sets"],"Nat"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"n"}],"constraintData":null},{"constraintAnn":[],"constraintClass":[["Data","Ord"],"Ord"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"x"}],"constraintData":null},{"constraintAnn":[],"constraintClass":[["Data","Ring"],"Ring"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"x"}],"constraintData":null}],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Refined","Predicate"],"Predicate"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Refined","Predicate"],"To"]},{"annotation":[],"tag":"TypeVar","contents":"n"}]}]},{"annotation":[],"tag":"TypeVar","contents":"x"}]}},"sourceSpan":{"start":[158,1],"name":"/Users/daniel/Git/purescript-refined/src/Predicate.purs","end":[167,33]}}],"comments":"A 'Predicate' ensuring that the value is up and including a given int\n","title":"To","info":{"declType":"data","dataDeclType":"data","typeArguments":[["n",null]]},"sourceSpan":{"start":[156,1],"name":"/Users/daniel/Git/purescript-refined/src/Predicate.purs","end":[156,10]}},{"children":[{"comments":null,"title":"predicateFromTo","info":{"declType":"instance","dependencies":[{"constraintAnn":[],"constraintClass":[["Data","Typelevel","Num","Sets"],"Nat"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"n"}],"constraintData":null},{"constraintAnn":[],"constraintClass":[["Data","Typelevel","Num","Sets"],"Nat"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"m"}],"constraintData":null},{"constraintAnn":[],"constraintClass":[["Data","Ord"],"Ord"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"x"}],"constraintData":null},{"constraintAnn":[],"constraintClass":[["Data","Ring"],"Ring"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"x"}],"constraintData":null}],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Refined","Predicate"],"Predicate"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Refined","Predicate"],"FromTo"]},{"annotation":[],"tag":"TypeVar","contents":"m"}]},{"annotation":[],"tag":"TypeVar","contents":"n"}]}]},{"annotation":[],"tag":"TypeVar","contents":"x"}]}},"sourceSpan":{"start":[172,1],"name":"/Users/daniel/Git/purescript-refined/src/Predicate.purs","end":[183,33]}}],"comments":"A 'Predicate' ensuring that the value is between two given ints (inclusive)\n","title":"FromTo","info":{"declType":"data","dataDeclType":"data","typeArguments":[["m",null],["n",null]]},"sourceSpan":{"start":[170,1],"name":"/Users/daniel/Git/purescript-refined/src/Predicate.purs","end":[170,16]}},{"children":[{"comments":null,"title":"predicateEqualTo","info":{"declType":"instance","dependencies":[{"constraintAnn":[],"constraintClass":[["Data","Typelevel","Num","Sets"],"Nat"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"n"}],"constraintData":null},{"constraintAnn":[],"constraintClass":[["Data","Eq"],"Eq"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"x"}],"constraintData":null},{"constraintAnn":[],"constraintClass":[["Data","Ring"],"Ring"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"x"}],"constraintData":null}],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Refined","Predicate"],"Predicate"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Refined","Predicate"],"EqualTo"]},{"annotation":[],"tag":"TypeVar","contents":"n"}]}]},{"annotation":[],"tag":"TypeVar","contents":"x"}]}},"sourceSpan":{"start":[188,1],"name":"/Users/daniel/Git/purescript-refined/src/Predicate.purs","end":[197,33]}}],"comments":"A 'Predicate' ensuring that the value is equal to a given int\n","title":"EqualTo","info":{"declType":"data","dataDeclType":"data","typeArguments":[["n",null]]},"sourceSpan":{"start":[186,1],"name":"/Users/daniel/Git/purescript-refined/src/Predicate.purs","end":[186,15]}},{"children":[{"comments":null,"title":"predicateNotEqualTo","info":{"declType":"instance","dependencies":[{"constraintAnn":[],"constraintClass":[["Data","Typelevel","Num","Sets"],"Nat"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"n"}],"constraintData":null},{"constraintAnn":[],"constraintClass":[["Data","Eq"],"Eq"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"x"}],"constraintData":null},{"constraintAnn":[],"constraintClass":[["Data","Ring"],"Ring"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"x"}],"constraintData":null}],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Refined","Predicate"],"Predicate"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Refined","Predicate"],"NotEqualTo"]},{"annotation":[],"tag":"TypeVar","contents":"n"}]}]},{"annotation":[],"tag":"TypeVar","contents":"x"}]}},"sourceSpan":{"start":[202,1],"name":"/Users/daniel/Git/purescript-refined/src/Predicate.purs","end":[211,33]}}],"comments":"A 'Predicate' ensuring that the value is not equal to a given int\n","title":"NotEqualTo","info":{"declType":"data","dataDeclType":"data","typeArguments":[["n",null]]},"sourceSpan":{"start":[200,1],"name":"/Users/daniel/Git/purescript-refined/src/Predicate.purs","end":[200,18]}},{"children":[],"comments":"A 'Predicate' ensuring that the value is greater than zero.\n","title":"Positive","info":{"arguments":[],"declType":"typeSynonym","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Refined","Predicate"],"GreaterThan"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Typelevel","Num","Reps"],"D0"]}]}},"sourceSpan":{"start":[214,1],"name":"/Users/daniel/Git/purescript-refined/src/Predicate.purs","end":[214,31]}},{"children":[],"comments":"A 'Predicate' ensuring that the value is less than or equal to zero.\n","title":"NonPositive","info":{"arguments":[],"declType":"typeSynonym","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Refined","Predicate"],"To"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Typelevel","Num","Reps"],"D0"]}]}},"sourceSpan":{"start":[217,1],"name":"/Users/daniel/Git/purescript-refined/src/Predicate.purs","end":[217,25]}},{"children":[],"comments":"A 'Predicate' ensuring that the value is less than zero.\n","title":"Negative","info":{"arguments":[],"declType":"typeSynonym","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Refined","Predicate"],"LessThan"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Typelevel","Num","Reps"],"D0"]}]}},"sourceSpan":{"start":[220,1],"name":"/Users/daniel/Git/purescript-refined/src/Predicate.purs","end":[220,28]}},{"children":[],"comments":"A 'Predicate' ensuring that the value is greater than or equal to zero.\n","title":"NonNegative","info":{"arguments":[],"declType":"typeSynonym","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Refined","Predicate"],"From"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Typelevel","Num","Reps"],"D0"]}]}},"sourceSpan":{"start":[223,1],"name":"/Users/daniel/Git/purescript-refined/src/Predicate.purs","end":[223,27]}},{"children":[],"comments":"An inclusive range of values from zero to one.\n","title":"ZeroToOne","info":{"arguments":[],"declType":"typeSynonym","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Refined","Predicate"],"FromTo"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Typelevel","Num","Reps"],"D0"]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Typelevel","Num","Reps"],"D1"]}]}},"sourceSpan":{"start":[226,1],"name":"/Users/daniel/Git/purescript-refined/src/Predicate.purs","end":[226,30]}},{"children":[],"comments":"A 'Predicate' ensuring that the value is not equal to zero.\n","title":"NonZero","info":{"arguments":[],"declType":"typeSynonym","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Refined","Predicate"],"NotEqualTo"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Typelevel","Num","Reps"],"D0"]}]}},"sourceSpan":{"start":[229,1],"name":"/Users/daniel/Git/purescript-refined/src/Predicate.purs","end":[229,29]}},{"children":[],"comments":"A 'Predicate' ensuring that the 'Foldable' is non-empty.\n","title":"NonEmpty","info":{"arguments":[],"declType":"typeSynonym","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Refined","Predicate"],"SizeGreaterThan"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Typelevel","Num","Reps"],"D0"]}]}},"sourceSpan":{"start":[232,1],"name":"/Users/daniel/Git/purescript-refined/src/Predicate.purs","end":[232,35]}}]}],"resolvedDependencies":{"purescript-free":"5.2.0","purescript-proxy":"3.0.0","purescript-exceptions":"4.0.0","purescript-newtype":"3.0.0","purescript-effect":"2.0.1","purescript-ordered-collections":"1.6.1","purescript-control":"4.2.0","purescript-console":"4.4.0","purescript-either":"4.1.1","purescript-profunctor":"4.1.0","purescript-arrays":"5.3.1","purescript-maybe":"4.0.1","purescript-argonaut":"7.0.0","purescript-profunctor-lenses":"6.3.0","purescript-type-equality":"3.0.0","purescript-js-timers":"4.0.1","purescript-exists":"4.0.0","purescript-distributive":"4.0.0","purescript-unfoldable":"4.1.0","purescript-invariant":"4.1.0","purescript-lcg":"2.0.0","purescript-argonaut-traversals":"8.0.0","purescript-argonaut-core":"5.0.2","purescript-typelevel":"5.0.0","purescript-lazy":"4.0.0","purescript-foreign-object":"2.0.3","purescript-aff":"5.1.2","purescript-foldable-traversable":"4.1.1","purescript-tailrec":"4.1.1","purescript-avar":"3.0.0","purescript-gen":"2.1.1","purescript-typelevel-prelude":"5.0.2","purescript-functors":"3.1.1","purescript-prelude":"4.1.1","purescript-st":"4.1.1","purescript-bifunctors":"4.0.0","purescript-nonempty":"5.0.0","purescript-contravariant":"4.0.1","purescript-unsafe-coerce":"4.0.0","purescript-refs":"4.1.0","purescript-integers":"4.0.0","purescript-argonaut-codecs":"7.0.0","purescript-test-unit":"15.0.0","purescript-orders":"4.0.0","purescript-const":"4.1.0","purescript-record":"2.0.2","purescript-transformers":"4.2.0","purescript-globals":"4.1.0","purescript-generics-rep":"6.1.1","purescript-math":"2.1.1","purescript-enums":"4.0.1","purescript-psci-support":"4.0.0","purescript-catenable-lists":"5.0.1","purescript-random":"4.0.0","purescript-parallel":"4.0.0","purescript-tuples":"5.1.0","purescript-partial":"2.0.1","purescript-quickcheck":"6.1.0","purescript-strings":"4.0.2","purescript-identity":"4.1.0","purescript-lists":"5.4.1","purescript-datetime":"4.1.1","purescript-functions":"4.0.0"},"version":"1.0.0","github":["danieljharvey","purescript-refined"],"versionTag":"v1.0.0","moduleMap":{"Data.BooleanAlgebra":"purescript-prelude","Data.Decide":"purescript-contravariant","Type.Data.Boolean":"purescript-typelevel-prelude","Data.Ring":"purescript-prelude","Record.ST":"purescript-record","Control.Monad.Trans.Class":"purescript-transformers","Record.Unsafe.Union":"purescript-record","Data.Functor.Product":"purescript-functors","Data.NonEmpty":"purescript-nonempty","Effect.Uncurried":"purescript-effect","Data.Char.Gen":"purescript-strings","Data.Typelevel.Undefined":"purescript-typelevel","Data.String.NonEmpty":"purescript-strings","Effect":"purescript-effect","Data.Traversable.Accum.Internal":"purescript-foldable-traversable","Data.Enum.Gen":"purescript-enums","Control.Comonad.Env":"purescript-transformers","Control.Comonad.Traced.Class":"purescript-transformers","Data.Functor.Compose":"purescript-functors","Foreign.Object.Gen":"purescript-foreign-object","Data.Typelevel.Num.Sets":"purescript-typelevel","Type.Row.Homogeneous":"purescript-typelevel-prelude","Data.Int.Bits":"purescript-integers","Data.DateTime":"purescript-datetime","Data.Argonaut.JCursor.Gen":"purescript-argonaut-traversals","Data.Bifunctor.Flip":"purescript-bifunctors","Data.String.CodePoints":"purescript-strings","Data.Ord":"purescript-prelude","Control.Monad.Gen":"purescript-gen","Data.Typelevel.Num.Reps":"purescript-typelevel","Control.Monad.Free.Class":"purescript-free","Type.Data.Row":"purescript-prelude","Data.Date":"purescript-datetime","Control.Comonad.Cofree.Class":"purescript-free","Data.Argonaut.Parser":"purescript-argonaut-core","Data.Argonaut.Encode.Combinators":"purescript-argonaut-codecs","Data.Monoid.Dual":"purescript-prelude","Data.Generic.Rep.Ring":"purescript-generics-rep","Control.Monad.Rec.Class":"purescript-tailrec","Data.Time.Component":"purescript-datetime","Data.Lens":"purescript-profunctor-lenses","Data.Bitraversable":"purescript-foldable-traversable","Data.Profunctor.Costar":"purescript-profunctor","Data.Profunctor.Cowrap":"purescript-profunctor","Record.Builder":"purescript-record","Test.Unit.Assert":"purescript-test-unit","Data.Boolean":"purescript-prelude","Data.Map":"purescript-ordered-collections","Control.Biapplicative":"purescript-bifunctors","Data.CatList":"purescript-catenable-lists","Effect.Exception.Unsafe":"purescript-exceptions","Control.Parallel.Class":"purescript-parallel","Data.Array.NonEmpty.Internal":"purescript-arrays","Type.Proxy":"purescript-proxy","Test.Unit.Output.Fancy":"purescript-test-unit","Data.Coyoneda":"purescript-free","Effect.Aff.Compat":"purescript-aff","Data.Array.ST.Iterator":"purescript-arrays","Data.DateTime.Gen":"purescript-datetime","Data.Lens.Prism.Maybe":"purescript-profunctor-lenses","Data.String.Pattern":"purescript-strings","Data.Bounded":"purescript-prelude","Control.Monad.State.Trans":"purescript-transformers","Data.TraversableWithIndex":"purescript-foldable-traversable","Data.Int":"purescript-integers","Data.Lens.Internal.Grating":"purescript-profunctor-lenses","Data.Profunctor.Cochoice":"purescript-profunctor","Data.Show":"purescript-prelude","Random.LCG":"purescript-lcg","Data.Bifunctor.Clown":"purescript-bifunctors","Data.Argonaut.JCursor":"purescript-argonaut-traversals","Control.Monad.Writer.Trans":"purescript-transformers","Data.Foldable":"purescript-foldable-traversable","Data.Divide":"purescript-contravariant","Control.Comonad.Store.Class":"purescript-transformers","Data.Enum":"purescript-enums","Control.Monad.Trampoline":"purescript-free","Foreign.Object":"purescript-foreign-object","Control.Apply":"purescript-prelude","Data.Functor.Contravariant":"purescript-contravariant","Data.Tuple.Nested":"purescript-tuples","Data.Generic.Rep.Semigroup":"purescript-generics-rep","Data.Lens.Lens.Product":"purescript-profunctor-lenses","Control.Monad":"purescript-prelude","Data.Typelevel.Num":"purescript-typelevel","Data.Lazy":"purescript-lazy","Data.Monoid":"purescript-prelude","Data.Profunctor.Closed":"purescript-profunctor","Control.Monad.List.Trans":"purescript-transformers","Control.Monad.RWS":"purescript-transformers","Data.String.Common":"purescript-strings","Data.Maybe.First":"purescript-maybe","Control.Bind":"purescript-prelude","Data.Profunctor.Split":"purescript-profunctor","Effect.Aff.Class":"purescript-aff","Data.Monoid.Additive":"purescript-prelude","Data.Symbol":"purescript-prelude","Data.Lens.Prism.Coproduct":"purescript-profunctor-lenses","Data.Map.Gen":"purescript-ordered-collections","Data.Lens.Lens":"purescript-profunctor-lenses","Data.String.Regex":"purescript-strings","Data.Profunctor.Join":"purescript-profunctor","Data.HeytingAlgebra":"purescript-prelude","Control.Alt":"purescript-control","Data.Date.Gen":"purescript-datetime","Control.Monad.Maybe.Trans":"purescript-transformers","Control.Monad.Cont":"purescript-transformers","Control.Monad.ST.Internal":"purescript-st","Type.Data.RowList":"purescript-prelude","Data.Time.Component.Gen":"purescript-datetime","Effect.Ref":"purescript-refs","Data.Either.Inject":"purescript-either","Foreign.Object.ST.Unsafe":"purescript-foreign-object","Data.Lens.Internal.Forget":"purescript-profunctor-lenses","Data.List.ZipList":"purescript-lists","Data.Ord.Min":"purescript-orders","Data.Functor.Coproduct.Nested":"purescript-functors","Data.Ord.Unsafe":"purescript-prelude","Data.Semigroup":"purescript-prelude","Data.Array.NonEmpty":"purescript-arrays","Control.Monad.Reader":"purescript-transformers","Test.Unit.QuickCheck":"purescript-test-unit","Data.Const":"purescript-const","Data.Generic.Rep.Enum":"purescript-generics-rep","Data.Generic.Rep.Bounded":"purescript-generics-rep","Control.Comonad.Traced.Trans":"purescript-transformers","Data.Argonaut.Encode.Class":"purescript-argonaut-codecs","Data.Lens.Indexed":"purescript-profunctor-lenses","Data.Ord.Down":"purescript-orders","Data.Array.ST.Partial":"purescript-arrays","Data.Generic.Rep.Show":"purescript-generics-rep","Effect.Unsafe":"purescript-effect","Data.Profunctor.Clown":"purescript-profunctor","Data.Lens.Zoom":"purescript-profunctor-lenses","Data.Lens.Iso.Newtype":"purescript-profunctor-lenses","Type.Data.Ordering":"purescript-typelevel-prelude","Data.Lens.Internal.Wander":"purescript-profunctor-lenses","Data.Tuple":"purescript-tuples","Data.Semigroup.Foldable":"purescript-foldable-traversable","Control.Biapply":"purescript-bifunctors","Data.Distributive":"purescript-distributive","Effect.Exception":"purescript-exceptions","Type.Equality":"purescript-type-equality","Control.Alternative":"purescript-control","Data.Lens.Lens.Tuple":"purescript-profunctor-lenses","Data.Semiring":"purescript-prelude","Data.Exists":"purescript-exists","Effect.Console":"purescript-console","Data.Traversable.Accum":"purescript-foldable-traversable","Data.CommutativeRing":"purescript-prelude","Data.NaturalTransformation":"purescript-prelude","Data.Monoid.Conj":"purescript-prelude","Data.Yoneda":"purescript-free","Data.Functor.App":"purescript-functors","Data.Lens.Internal.Exchange":"purescript-profunctor-lenses","Effect.Timer":"purescript-js-timers","Data.Profunctor.Star":"purescript-profunctor","Data.Unfoldable":"purescript-unfoldable","Data.Profunctor.Wrap":"purescript-profunctor","Data.Typelevel.Num.Aliases":"purescript-typelevel","Type.RowList":"purescript-typelevel-prelude","Control.Comonad.Store.Trans":"purescript-transformers","Foreign.Object.Unsafe":"purescript-foreign-object","Control.Monad.ST":"purescript-st","Control.Monad.State.Class":"purescript-transformers","Data.Lens.Internal.Shop":"purescript-profunctor-lenses","Data.Lens.Internal.Tagged":"purescript-profunctor-lenses","Data.Lens.Record":"purescript-profunctor-lenses","Data.Argonaut.Decode":"purescript-argonaut-codecs","Data.List.Types":"purescript-lists","Data.String.NonEmpty.CodeUnits":"purescript-strings","Data.Functor":"purescript-prelude","Unsafe.Coerce":"purescript-unsafe-coerce","Control.Monad.Writer.Class":"purescript-transformers","Data.Generic.Rep.Ord":"purescript-generics-rep","Data.Lens.Grate":"purescript-profunctor-lenses","Data.Profunctor.Strong":"purescript-profunctor","Data.Lens.Internal.Market":"purescript-profunctor-lenses","Data.CatQueue":"purescript-catenable-lists","Control.Monad.Except":"purescript-transformers","Data.Interval":"purescript-datetime","Data.List.Lazy.Types":"purescript-lists","Control.Category":"purescript-prelude","Test.QuickCheck.Arbitrary":"purescript-quickcheck","Data.Lens.Common":"purescript-profunctor-lenses","Data.Lens.Getter":"purescript-profunctor-lenses","Data.Interval.Duration":"purescript-datetime","Control.Monad.Gen.Common":"purescript-gen","Control.Monad.RWS.Trans":"purescript-transformers","Control.Monad.Cont.Trans":"purescript-transformers","Data.Maybe":"purescript-maybe","Type.Row":"purescript-typelevel-prelude","Data.String.Regex.Unsafe":"purescript-strings","Foreign.Object.ST":"purescript-foreign-object","Data.Set":"purescript-ordered-collections","Data.Profunctor":"purescript-profunctor","Control.Comonad":"purescript-control","Control.Monad.ST.Global":"purescript-st","Data.Function":"purescript-prelude","Data.List":"purescript-lists","Data.Lens.Traversal":"purescript-profunctor-lenses","Data.Field":"purescript-prelude","Data.List.Lazy":"purescript-lists","Data.Generic.Rep.Eq":"purescript-generics-rep","Test.Unit.Output.TAP":"purescript-test-unit","Data.EuclideanRing":"purescript-prelude","Data.Semigroup.Last":"purescript-prelude","Data.Semigroup.First":"purescript-prelude","Data.Functor.Invariant":"purescript-invariant","Control.Comonad.Traced":"purescript-transformers","Global.Unsafe":"purescript-globals","Data.Comparison":"purescript-contravariant","Data.String.Unsafe":"purescript-strings","Prelude":"purescript-prelude","Data.Argonaut.Decode.Error":"purescript-argonaut-codecs","Effect.Class":"purescript-effect","Data.Predicate":"purescript-contravariant","Partial.Unsafe":"purescript-partial","Data.Array":"purescript-arrays","Data.Bifunctor.Product":"purescript-bifunctors","Control.Extend":"purescript-control","Data.Unfoldable1":"purescript-unfoldable","Test.Unit.Console":"purescript-test-unit","Control.Lazy":"purescript-control","Data.Function.Uncurried":"purescript-functions","Control.Monad.Reader.Trans":"purescript-transformers","Data.Functor.Product.Nested":"purescript-functors","Data.Lens.Types":"purescript-profunctor-lenses","Test.Unit.Output.Simple":"purescript-test-unit","Control.Comonad.Env.Class":"purescript-transformers","Effect.Aff.AVar":"purescript-avar","Data.Interval.Duration.Iso":"purescript-datetime","Data.Eq":"purescript-prelude","Data.Either.Nested":"purescript-either","Control.Comonad.Cofree":"purescript-free","Data.Newtype":"purescript-newtype","Data.Semigroup.Traversable":"purescript-foldable-traversable","Data.Typelevel.Num.Ops":"purescript-typelevel","Data.Bifunctor":"purescript-bifunctors","Data.Argonaut.Encode.Encoders":"purescript-argonaut-codecs","Effect.Random":"purescript-random","Data.Argonaut.Decode.Decoders":"purescript-argonaut-codecs","Data.Monoid.Disj":"purescript-prelude","Control.Monad.Gen.Class":"purescript-gen","Data.Array.Partial":"purescript-arrays","Data.String.CaseInsensitive":"purescript-strings","Control.Monad.Free":"purescript-free","Control.Parallel":"purescript-parallel","Data.Lens.Index":"purescript-profunctor-lenses","Data.Lens.Internal.Re":"purescript-profunctor-lenses","Control.MonadPlus":"purescript-control","Data.Lens.Lens.Void":"purescript-profunctor-lenses","Data.Void":"purescript-prelude","Control.MonadZero":"purescript-control","Data.DateTime.Instant":"purescript-datetime","Data.Lens.Internal.Indexed":"purescript-profunctor-lenses","Data.Profunctor.Costrong":"purescript-profunctor","Data.Ord.Max":"purescript-orders","Effect.AVar":"purescript-avar","Control.Comonad.Store":"purescript-transformers","Control.Monad.Except.Trans":"purescript-transformers","Data.String.CodeUnits":"purescript-strings","Data.Bifunctor.Joker":"purescript-bifunctors","Data.FunctorWithIndex":"purescript-foldable-traversable","Data.Divisible":"purescript-contravariant","Data.Lens.Fold":"purescript-profunctor-lenses","Data.Lens.Setter":"purescript-profunctor-lenses","Data.DivisionRing":"purescript-prelude","Record":"purescript-record","Data.Bifunctor.Wrap":"purescript-bifunctors","Data.Lens.Prism.Either":"purescript-profunctor-lenses","PSCI.Support":"purescript-psci-support","Data.Equivalence":"purescript-contravariant","Data.Maybe.Last":"purescript-maybe","Data.Unit":"purescript-prelude","Data.Argonaut.Decode.Parser":"purescript-argonaut-codecs","Data.List.NonEmpty":"purescript-lists","Data.Generic.Rep.Semiring":"purescript-generics-rep","Data.List.Lazy.NonEmpty":"purescript-lists","Data.Ordering":"purescript-prelude","Data.Lens.Lens.Unit":"purescript-profunctor-lenses","Data.Functor.Coproduct":"purescript-functors","Control.Monad.Cont.Class":"purescript-transformers","Data.Argonaut.Decode.Combinators":"purescript-argonaut-codecs","Effect.Aff":"purescript-aff","Data.Typelevel.Bool":"purescript-typelevel","Data.Identity":"purescript-identity","Data.Lens.Fold.Partial":"purescript-profunctor-lenses","Math":"purescript-math","Data.Set.NonEmpty":"purescript-ordered-collections","Control.Comonad.Trans.Class":"purescript-transformers","Data.String":"purescript-strings","Data.Argonaut":"purescript-argonaut","Control.Plus":"purescript-control","Data.Profunctor.Joker":"purescript-profunctor","Data.Argonaut.Encode":"purescript-argonaut-codecs","Test.QuickCheck":"purescript-quickcheck","Test.Unit.Main":"purescript-test-unit","Data.Map.Internal":"purescript-ordered-collections","Data.Time":"purescript-datetime","Data.Time.Duration":"purescript-datetime","Data.Date.Component":"purescript-datetime","Partial":"purescript-partial","Control.Comonad.Env.Trans":"purescript-transformers","Data.Argonaut.Prisms":"purescript-argonaut-traversals","Global":"purescript-globals","Control.Monad.Reader.Class":"purescript-transformers","Data.String.NonEmpty.CodePoints":"purescript-strings","Data.Decidable":"purescript-contravariant","Data.String.NonEmpty.Internal":"purescript-strings","Data.Monoid.Multiplicative":"purescript-prelude","Data.String.NonEmpty.CaseInsensitive":"purescript-strings","Type.Data.Symbol":"purescript-typelevel-prelude","Data.Array.ST":"purescript-arrays","Control.Monad.Error.Class":"purescript-transformers","Data.Argonaut.Core":"purescript-argonaut-core","Test.Unit":"purescript-test-unit","Data.Generic.Rep.HeytingAlgebra":"purescript-generics-rep","Data.Generic.Rep.Monoid":"purescript-generics-rep","Control.Semigroupoid":"purescript-prelude","Data.Monoid.Alternate":"purescript-control","Data.Char":"purescript-strings","Data.Generic.Rep":"purescript-generics-rep","Data.Argonaut.Traversals":"purescript-argonaut-traversals","Effect.Class.Console":"purescript-console","Data.Bifunctor.Join":"purescript-bifunctors","Data.Lens.Internal.Zipping":"purescript-profunctor-lenses","Data.Bifoldable":"purescript-foldable-traversable","Data.Lens.Internal.Bazaar":"purescript-profunctor-lenses","Control.Monad.ST.Ref":"purescript-st","Data.Monoid.Endo":"purescript-prelude","Control.Monad.State":"purescript-transformers","Data.List.Partial":"purescript-lists","Data.Lens.Prism":"purescript-profunctor-lenses","Data.String.Regex.Flags":"purescript-strings","Data.Argonaut.Decode.Class":"purescript-argonaut-codecs","Data.Either":"purescript-either","Data.Time.Duration.Gen":"purescript-datetime","Data.Date.Component.Gen":"purescript-datetime","Type.Prelude":"purescript-typelevel-prelude","Control.Applicative":"purescript-prelude","Control.Monad.ST.Class":"purescript-st","Data.Lens.Internal.Focusing":"purescript-profunctor-lenses","Data.Lens.Iso":"purescript-profunctor-lenses","Data.FoldableWithIndex":"purescript-foldable-traversable","Data.Op":"purescript-contravariant","Record.Unsafe":"purescript-prelude","Test.QuickCheck.Gen":"purescript-quickcheck","Data.Lens.At":"purescript-profunctor-lenses","Control.Monad.Writer":"purescript-transformers","Data.Argonaut.Gen":"purescript-argonaut-core","Data.Functor.Coproduct.Inject":"purescript-functors","Data.Profunctor.Choice":"purescript-profunctor","Data.Time.Gen":"purescript-datetime","Data.Traversable":"purescript-foldable-traversable","Data.String.Gen":"purescript-strings"},"compilerVersion":"0.13.3"}