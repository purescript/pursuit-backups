{"uploader":"alvart","packageMeta":{"repository":{"url":"https://github.com/alvart/purescript-react-enzyme","type":"git"},"ignore":["**/.*","node_modules","bower_components","output"],"dependencies":{"purescript-effect":"^v2.0.1","purescript-console":"^v4.4.0","purescript-aff":"^v5.1.2","purescript-react":"^v8.0.0","purescript-psci-support":"^v4.0.0","purescript-foreign":"^v5.0.0"},"name":"purescript-react-enzyme","license":["MIT"]},"tagTime":"2021-01-20T16:53:08+0000","modules":[{"reExports":[{"moduleName":{"package":null,"item":["Enzyme","Full"]},"declarations":[{"children":[{"comments":null,"title":"wrapperReactWrapper","info":{"declType":"instance","dependencies":[],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Enzyme","Wrapper"],"Wrapper"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Enzyme","Full"],"ReactWrapper"]}]}},"sourceSpan":{"start":[40,1],"name":"/home/jon/Programming/purescript-react-enzyme/src/Enzyme/Full.purs","end":[85,34]}}],"comments":"Represents an Enzyme wrapper for components that may interact with DOM APIs\nor that are part of higher order components.\n","title":"ReactWrapper","info":{"kind":{"annotation":[],"tag":"NamedKind","contents":[["Prim"],"Type"]},"declType":"externData"},"sourceSpan":{"start":[36,1],"name":"/home/jon/Programming/purescript-react-enzyme/src/Enzyme/Full.purs","end":[36,41]}},{"children":[],"comments":"A method that re-mounts the component, if it is not currently mounted. This\ncan be used to simulate a component going through an unmount/mount\nlifecycle.\n","title":"remount","info":{"declType":"value","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Enzyme","Full"],"ReactWrapper"]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]}},"sourceSpan":{"start":[94,1],"name":"/home/jon/Programming/purescript-react-enzyme/src/Enzyme/Full.purs","end":[94,39]}},{"children":[],"comments":"Creates a `ReactWrapper` from a React element.\n","title":"mount","info":{"declType":"value","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["React"],"ReactElement"]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Enzyme","Full"],"ReactWrapper"]}]}]}},"sourceSpan":{"start":[88,1],"name":"/home/jon/Programming/purescript-react-enzyme/src/Enzyme/Full.purs","end":[88,45]}}]},{"moduleName":{"package":null,"item":["Enzyme","Shallow"]},"declarations":[{"children":[{"comments":null,"title":"wrapperShallowWrapper","info":{"declType":"instance","dependencies":[],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Enzyme","Wrapper"],"Wrapper"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Enzyme","Shallow"],"ShallowWrapper"]}]}},"sourceSpan":{"start":[38,1],"name":"/home/jon/Programming/purescript-react-enzyme/src/Enzyme/Shallow.purs","end":[83,34]}}],"comments":null,"title":"ShallowWrapper","info":{"kind":{"annotation":[],"tag":"NamedKind","contents":[["Prim"],"Type"]},"declType":"externData"},"sourceSpan":{"start":[34,1],"name":"/home/jon/Programming/purescript-react-enzyme/src/Enzyme/Shallow.purs","end":[34,43]}},{"children":[],"comments":"Creates a `ShallowWrapper` from a React element.\n","title":"shallow","info":{"declType":"value","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["React"],"ReactElement"]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Enzyme","Shallow"],"ShallowWrapper"]}]}]}},"sourceSpan":{"start":[91,1],"name":"/home/jon/Programming/purescript-react-enzyme/src/Enzyme/Shallow.purs","end":[91,49]}},{"children":[],"comments":"Shallow renders the root node and returns a shallow wrapper around it. It\nmust be a single-node wrapper.\n","title":"reshallow","info":{"declType":"value","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Enzyme","Shallow"],"ShallowWrapper"]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Enzyme","Shallow"],"ShallowWrapper"]}]}]}},"sourceSpan":{"start":[87,1],"name":"/home/jon/Programming/purescript-react-enzyme/src/Enzyme/Shallow.purs","end":[87,53]}}]},{"moduleName":{"package":null,"item":["Enzyme","Wrapper"]},"declarations":[{"children":[{"comments":"Returns a wrapper around the node at a given index of the current\nwrapper.\n","title":"at","info":{"declType":"typeClassMember","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeVar","contents":"w"}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"annotation":[],"tag":"TypeVar","contents":"w"}]}]}]}},"sourceSpan":{"start":[54,3],"name":"/home/jon/Programming/purescript-react-enzyme/src/Enzyme/Wrapper.purs","end":[54,29]}},{"comments":"Returns a new wrapper with all of the children of the node(s) in the\ncurrent wrapper.\n","title":"children","info":{"declType":"typeClassMember","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeVar","contents":"w"}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"annotation":[],"tag":"TypeVar","contents":"w"}]}]}},"sourceSpan":{"start":[58,3],"name":"/home/jon/Programming/purescript-react-enzyme/src/Enzyme/Wrapper.purs","end":[58,28]}},{"comments":"Returns an HTML-like string of the wrapper for debugging purposes. Useful\nto print out to the console when tests are not passing when you expect\nthem to.\n","title":"debug","info":{"declType":"typeClassMember","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"annotation":[],"tag":"RCons","contents":["ignoreProps",{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]},{"annotation":[],"tag":"RCons","contents":["verbose",{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]},{"annotation":[],"tag":"REmpty"}]}]}]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeVar","contents":"w"}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}]}]}},"sourceSpan":{"start":[63,3],"name":"/home/jon/Programming/purescript-react-enzyme/src/Enzyme/Wrapper.purs","end":[63,80]}},{"comments":"Finds every node in the render tree that returns true for the provided\npredicate function.\n","title":"findWhere","info":{"declType":"typeClassMember","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeVar","contents":"w"}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}]}}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeVar","contents":"w"}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"annotation":[],"tag":"TypeVar","contents":"w"}]}]}]}},"sourceSpan":{"start":[67,3],"name":"/home/jon/Programming/purescript-react-enzyme/src/Enzyme/Wrapper.purs","end":[67,54]}},{"comments":"Maps the current array of nodes to another array. Each node is passed in\nas a wrapper to the map function.\n","title":"forEach","info":{"declType":"typeClassMember","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeVar","contents":"w"}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]}]}}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeVar","contents":"w"}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]}]}},"sourceSpan":{"start":[71,3],"name":"/home/jon/Programming/purescript-react-enzyme/src/Enzyme/Wrapper.purs","end":[71,59]}},{"comments":"Returns the node at a given index of the current wrapper.\n","title":"get","info":{"declType":"typeClassMember","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeVar","contents":"w"}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"annotation":[],"tag":"TypeConstructor","contents":[["React"],"ReactElement"]}]}]}]}},"sourceSpan":{"start":[74,3],"name":"/home/jon/Programming/purescript-react-enzyme/src/Enzyme/Wrapper.purs","end":[74,41]}},{"comments":"Returns a new wrapper with only host nodes. When using React-dom, host\nnodes are HTML elements rather than custom React components, e.g. `<div>`\nversus `<MyComponent>`.\n","title":"hostNodes","info":{"declType":"typeClassMember","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeVar","contents":"w"}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"annotation":[],"tag":"TypeVar","contents":"w"}]}]}},"sourceSpan":{"start":[79,3],"name":"/home/jon/Programming/purescript-react-enzyme/src/Enzyme/Wrapper.purs","end":[79,29]}},{"comments":"Invokes a property as a function with an Array of arguments.\n","title":"invoke","info":{"declType":"typeClassMember","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeVar","contents":"w"}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Array"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Foreign"],"Foreign"]}]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]}]}]}},"sourceSpan":{"start":[82,3],"name":"/home/jon/Programming/purescript-react-enzyme/src/Enzyme/Wrapper.purs","end":[82,56]}},{"comments":"Returns whether or not the single wrapped node matches the provided\nselector. It must be a single-node wrapper.\n","title":"is","info":{"declType":"typeClassMember","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeVar","contents":"w"}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}]}]}},"sourceSpan":{"start":[86,3],"name":"/home/jon/Programming/purescript-react-enzyme/src/Enzyme/Wrapper.purs","end":[86,38]}},{"comments":"Returns the number of nodes inside the current wrapper.\n","title":"length","info":{"declType":"typeClassMember","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeVar","contents":"w"}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]}]}},"sourceSpan":{"start":[89,3],"name":"/home/jon/Programming/purescript-react-enzyme/src/Enzyme/Wrapper.purs","end":[89,28]}},{"comments":"Returns whether or not a patternNode React element matches any element in\nthe render tree. It must be a single-node wrapper, and only the root node\nis checked.\n","title":"matches","info":{"declType":"typeClassMember","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["React"],"ReactElement"]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeVar","contents":"w"}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}]}]}},"sourceSpan":{"start":[94,3],"name":"/home/jon/Programming/purescript-react-enzyme/src/Enzyme/Wrapper.purs","end":[94,49]}},{"comments":"Returns the name of the current node of this wrapper. If it's a composite\ncomponent, this will be the name of the component. If it's a native DOM\nit will be a string of the tag name.\n","title":"name","info":{"declType":"typeClassMember","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeVar","contents":"w"}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}]}},"sourceSpan":{"start":[99,3],"name":"/home/jon/Programming/purescript-react-enzyme/src/Enzyme/Wrapper.purs","end":[99,29]}},{"comments":"Returns a wrapper around all of the parents/ancestors of the single node\nin the wrapper. Does not include the node itself.\n","title":"parents","info":{"declType":"typeClassMember","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeVar","contents":"w"}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"annotation":[],"tag":"TypeVar","contents":"w"}]}]}},"sourceSpan":{"start":[103,3],"name":"/home/jon/Programming/purescript-react-enzyme/src/Enzyme/Wrapper.purs","end":[103,27]}},{"comments":"Returns the prop value for the root node of the wrapper with the provided\nkey. It must be a single-node wrapper.\n","title":"property","info":{"declType":"typeClassMember","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeVar","contents":"w"}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Foreign"],"Foreign"]}]}]}]}},"sourceSpan":{"start":[107,3],"name":"/home/jon/Programming/purescript-react-enzyme/src/Enzyme/Wrapper.purs","end":[107,44]}},{"comments":"Applies the provided reducing function to every node in the wrapper to\nreduce to a single value. Each node is passed in as a wrapper, and is\nprocessed from left to right.\n","title":"reduce","info":{"declType":"typeClassMember","type":{"annotation":[],"tag":"ForAll","contents":["a",{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeVar","contents":"a"}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeVar","contents":"w"}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"annotation":[],"tag":"TypeVar","contents":"a"}]}]}]}]}}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeVar","contents":"a"}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeVar","contents":"w"}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"annotation":[],"tag":"TypeVar","contents":"a"}]}]}]}]},null]}},"sourceSpan":{"start":[112,3],"name":"/home/jon/Programming/purescript-react-enzyme/src/Enzyme/Wrapper.purs","end":[112,73]}},{"comments":"A method that sets the property of the root component, and re-renders.\nUseful for when you are wanting to test how the component behaves over\ntime with changing props. Blocks until the operation completes.\n","title":"setProperty","info":{"declType":"typeClassMember","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Foreign"],"Foreign"]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeVar","contents":"w"}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Effect","Aff"],"Aff"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]}]}]}},"sourceSpan":{"start":[117,3],"name":"/home/jon/Programming/purescript-react-enzyme/src/Enzyme/Wrapper.purs","end":[117,52]}},{"comments":"Returns a new wrapper with a subset of the nodes of the original wrapper,\naccording to the rules of `Array#slice`.\n","title":"slice","info":{"declType":"typeClassMember","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeVar","contents":"w"}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"annotation":[],"tag":"TypeVar","contents":"w"}]}]}]}]}},"sourceSpan":{"start":[121,3],"name":"/home/jon/Programming/purescript-react-enzyme/src/Enzyme/Wrapper.purs","end":[121,39]}},{"comments":"Returns a string of the rendered text of the current render tree.\n","title":"text","info":{"declType":"typeClassMember","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeVar","contents":"w"}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}]}},"sourceSpan":{"start":[124,3],"name":"/home/jon/Programming/purescript-react-enzyme/src/Enzyme/Wrapper.purs","end":[124,29]}},{"comments":"A method that unmounts the component. This can be used to simulate a\ncomponent going through an unmount/mount lifecycle.\n","title":"unmount","info":{"declType":"typeClassMember","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeVar","contents":"w"}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]}},"sourceSpan":{"start":[128,3],"name":"/home/jon/Programming/purescript-react-enzyme/src/Enzyme/Wrapper.purs","end":[128,30]}}],"comments":"The `Wrapper` type class represents any Enzyme wrapper of React components\nwith an interface to manipulate or traverse them.\n","title":"Wrapper","info":{"fundeps":[],"arguments":[["w",null]],"declType":"typeClass","superclasses":[]},"sourceSpan":{"start":[50,1],"name":"/home/jon/Programming/purescript-react-enzyme/src/Enzyme/Wrapper.purs","end":[128,30]}},{"children":[],"comments":"Returns whether or not any of the nodes in the wrapper pass the provided\npredicate function.\n","title":"someWhere","info":{"declType":"value","type":{"annotation":[],"tag":"ForAll","contents":["w",{"annotation":[],"tag":"ConstrainedType","contents":[{"constraintAnn":[],"constraintClass":[["Enzyme","Wrapper"],"Wrapper"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"w"}],"constraintData":null},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeVar","contents":"w"}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}]}}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeVar","contents":"w"}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}]}]}]},null]}},"sourceSpan":{"start":[195,1],"name":"/home/jon/Programming/purescript-react-enzyme/src/Enzyme/Wrapper.purs","end":[196,74]}},{"children":[],"comments":"Returns whether or not any of the nodes in the wrapper match the provided\nselector.\n","title":"some","info":{"declType":"value","type":{"annotation":[],"tag":"ForAll","contents":["w",{"annotation":[],"tag":"ConstrainedType","contents":[{"constraintAnn":[],"constraintClass":[["Enzyme","Wrapper"],"Wrapper"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"w"}],"constraintData":null},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeVar","contents":"w"}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}]}]}]},null]}},"sourceSpan":{"start":[190,1],"name":"/home/jon/Programming/purescript-react-enzyme/src/Enzyme/Wrapper.purs","end":[190,62]}},{"children":[],"comments":"Returns a new wrapper with a subset of the nodes of the original wrapper\nafter skipping the first `n` nodes.\n","title":"skip","info":{"declType":"value","type":{"annotation":[],"tag":"ForAll","contents":["w",{"annotation":[],"tag":"ConstrainedType","contents":[{"constraintAnn":[],"constraintClass":[["Enzyme","Wrapper"],"Wrapper"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"w"}],"constraintData":null},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeVar","contents":"w"}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"annotation":[],"tag":"TypeVar","contents":"w"}]}]}]}]},null]}},"sourceSpan":{"start":[182,1],"name":"/home/jon/Programming/purescript-react-enzyme/src/Enzyme/Wrapper.purs","end":[182,53]}},{"children":[],"comments":"Returns a wrapper with the direct parent of the node in the current\nwrapper.\n","title":"parent","info":{"declType":"value","type":{"annotation":[],"tag":"ForAll","contents":["w",{"annotation":[],"tag":"ConstrainedType","contents":[{"constraintAnn":[],"constraintClass":[["Enzyme","Wrapper"],"Wrapper"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"w"}],"constraintData":null},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeVar","contents":"w"}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"annotation":[],"tag":"TypeVar","contents":"w"}]}]}]},null]}},"sourceSpan":{"start":[177,1],"name":"/home/jon/Programming/purescript-react-enzyme/src/Enzyme/Wrapper.purs","end":[177,48]}},{"children":[],"comments":"Reduce the set of matched nodes to the last in the set.\n","title":"last","info":{"declType":"value","type":{"annotation":[],"tag":"ForAll","contents":["w",{"annotation":[],"tag":"ConstrainedType","contents":[{"constraintAnn":[],"constraintClass":[["Enzyme","Wrapper"],"Wrapper"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"w"}],"constraintData":null},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeVar","contents":"w"}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"annotation":[],"tag":"TypeVar","contents":"w"}]}]}]},null]}},"sourceSpan":{"start":[169,1],"name":"/home/jon/Programming/purescript-react-enzyme/src/Enzyme/Wrapper.purs","end":[169,46]}},{"children":[],"comments":"Returns whether or not the wrapper is empty.\n","title":"isEmpty","info":{"declType":"value","type":{"annotation":[],"tag":"ForAll","contents":["w",{"annotation":[],"tag":"ConstrainedType","contents":[{"constraintAnn":[],"constraintClass":[["Enzyme","Wrapper"],"Wrapper"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"w"}],"constraintData":null},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeVar","contents":"w"}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}]}]},null]}},"sourceSpan":{"start":[162,1],"name":"/home/jon/Programming/purescript-react-enzyme/src/Enzyme/Wrapper.purs","end":[162,55]}},{"children":[],"comments":"Reduce the set of matched nodes to the first in the set, just like `at 0`.\n","title":"first","info":{"declType":"value","type":{"annotation":[],"tag":"ForAll","contents":["w",{"annotation":[],"tag":"ConstrainedType","contents":[{"constraintAnn":[],"constraintClass":[["Enzyme","Wrapper"],"Wrapper"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"w"}],"constraintData":null},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeVar","contents":"w"}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"annotation":[],"tag":"TypeVar","contents":"w"}]}]}]},null]}},"sourceSpan":{"start":[158,1],"name":"/home/jon/Programming/purescript-react-enzyme/src/Enzyme/Wrapper.purs","end":[158,47]}},{"children":[],"comments":"Finds every node in the render tree of the current wrapper that matches\nthe provided selector.\n","title":"find","info":{"declType":"value","type":{"annotation":[],"tag":"ForAll","contents":["w",{"annotation":[],"tag":"ConstrainedType","contents":[{"constraintAnn":[],"constraintClass":[["Enzyme","Wrapper"],"Wrapper"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"w"}],"constraintData":null},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeVar","contents":"w"}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"annotation":[],"tag":"TypeVar","contents":"w"}]}]}]}]},null]}},"sourceSpan":{"start":[154,1],"name":"/home/jon/Programming/purescript-react-enzyme/src/Enzyme/Wrapper.purs","end":[154,56]}},{"children":[],"comments":"Returns whether or not all of the nodes in the wrapper pass the provided\npredicate function.\n","title":"everyWhere","info":{"declType":"value","type":{"annotation":[],"tag":"ForAll","contents":["w",{"annotation":[],"tag":"ConstrainedType","contents":[{"constraintAnn":[],"constraintClass":[["Enzyme","Wrapper"],"Wrapper"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"w"}],"constraintData":null},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeVar","contents":"w"}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}]}}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeVar","contents":"w"}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}]}]}]},null]}},"sourceSpan":{"start":[145,1],"name":"/home/jon/Programming/purescript-react-enzyme/src/Enzyme/Wrapper.purs","end":[146,74]}},{"children":[],"comments":"Returns whether or not all of the nodes in the wrapper match the provided\nselector.\n","title":"every","info":{"declType":"value","type":{"annotation":[],"tag":"ForAll","contents":["w",{"annotation":[],"tag":"ConstrainedType","contents":[{"constraintAnn":[],"constraintClass":[["Enzyme","Wrapper"],"Wrapper"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"w"}],"constraintData":null},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeVar","contents":"w"}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}]}]}]},null]}},"sourceSpan":{"start":[140,1],"name":"/home/jon/Programming/purescript-react-enzyme/src/Enzyme/Wrapper.purs","end":[140,63]}},{"children":[],"comments":"Enumerates all the nodes in the current wrapper and their children.\n","title":"enumerate","info":{"declType":"value","type":{"annotation":[],"tag":"ForAll","contents":["w",{"annotation":[],"tag":"ConstrainedType","contents":[{"constraintAnn":[],"constraintClass":[["Enzyme","Wrapper"],"Wrapper"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"w"}],"constraintData":null},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeVar","contents":"w"}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"annotation":[],"tag":"TypeVar","contents":"w"}]}]}]},null]}},"sourceSpan":{"start":[135,1],"name":"/home/jon/Programming/purescript-react-enzyme/src/Enzyme/Wrapper.purs","end":[135,51]}},{"children":[],"comments":"Returns a new wrapper with child at the specified index.\n","title":"childAt","info":{"declType":"value","type":{"annotation":[],"tag":"ForAll","contents":["w",{"annotation":[],"tag":"ConstrainedType","contents":[{"constraintAnn":[],"constraintClass":[["Enzyme","Wrapper"],"Wrapper"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"w"}],"constraintData":null},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeVar","contents":"w"}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"annotation":[],"tag":"TypeVar","contents":"w"}]}]}]}]},null]}},"sourceSpan":{"start":[131,1],"name":"/home/jon/Programming/purescript-react-enzyme/src/Enzyme/Wrapper.purs","end":[131,56]}}]}],"name":"Enzyme","comments":null,"declarations":[{"children":[],"comments":"Configures the Enzyme adapter to provide compatibility with React.\n","title":"configure","info":{"declType":"value","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}},"sourceSpan":{"start":[55,1],"name":"/home/jon/Programming/purescript-react-enzyme/src/Enzyme.purs","end":[55,40]}},{"children":[],"comments":"Registers a global DOM so that Full Wrappers can be mounted.\n","title":"withGlobalDOM","info":{"declType":"value","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}},"sourceSpan":{"start":[58,1],"name":"/home/jon/Programming/purescript-react-enzyme/src/Enzyme.purs","end":[58,44]}}]},{"reExports":[],"name":"Enzyme.Full","comments":null,"declarations":[{"children":[{"comments":null,"title":"wrapperReactWrapper","info":{"declType":"instance","dependencies":[],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Enzyme","Wrapper"],"Wrapper"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Enzyme","Full"],"ReactWrapper"]}]}},"sourceSpan":{"start":[40,1],"name":"/home/jon/Programming/purescript-react-enzyme/src/Enzyme/Full.purs","end":[85,34]}}],"comments":"Represents an Enzyme wrapper for components that may interact with DOM APIs\nor that are part of higher order components.\n","title":"ReactWrapper","info":{"kind":{"annotation":[],"tag":"NamedKind","contents":[["Prim"],"Type"]},"declType":"externData"},"sourceSpan":{"start":[36,1],"name":"/home/jon/Programming/purescript-react-enzyme/src/Enzyme/Full.purs","end":[36,41]}},{"children":[],"comments":"Creates a `ReactWrapper` from a React element.\n","title":"mount","info":{"declType":"value","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["React"],"ReactElement"]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Enzyme","Full"],"ReactWrapper"]}]}]}},"sourceSpan":{"start":[88,1],"name":"/home/jon/Programming/purescript-react-enzyme/src/Enzyme/Full.purs","end":[88,45]}},{"children":[],"comments":"A method that re-mounts the component, if it is not currently mounted. This\ncan be used to simulate a component going through an unmount/mount\nlifecycle.\n","title":"remount","info":{"declType":"value","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Enzyme","Full"],"ReactWrapper"]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]}},"sourceSpan":{"start":[94,1],"name":"/home/jon/Programming/purescript-react-enzyme/src/Enzyme/Full.purs","end":[94,39]}}]},{"reExports":[],"name":"Enzyme.Shallow","comments":null,"declarations":[{"children":[{"comments":null,"title":"wrapperShallowWrapper","info":{"declType":"instance","dependencies":[],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Enzyme","Wrapper"],"Wrapper"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Enzyme","Shallow"],"ShallowWrapper"]}]}},"sourceSpan":{"start":[38,1],"name":"/home/jon/Programming/purescript-react-enzyme/src/Enzyme/Shallow.purs","end":[83,34]}}],"comments":null,"title":"ShallowWrapper","info":{"kind":{"annotation":[],"tag":"NamedKind","contents":[["Prim"],"Type"]},"declType":"externData"},"sourceSpan":{"start":[34,1],"name":"/home/jon/Programming/purescript-react-enzyme/src/Enzyme/Shallow.purs","end":[34,43]}},{"children":[],"comments":"Shallow renders the root node and returns a shallow wrapper around it. It\nmust be a single-node wrapper.\n","title":"reshallow","info":{"declType":"value","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Enzyme","Shallow"],"ShallowWrapper"]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Enzyme","Shallow"],"ShallowWrapper"]}]}]}},"sourceSpan":{"start":[87,1],"name":"/home/jon/Programming/purescript-react-enzyme/src/Enzyme/Shallow.purs","end":[87,53]}},{"children":[],"comments":"Creates a `ShallowWrapper` from a React element.\n","title":"shallow","info":{"declType":"value","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["React"],"ReactElement"]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Enzyme","Shallow"],"ShallowWrapper"]}]}]}},"sourceSpan":{"start":[91,1],"name":"/home/jon/Programming/purescript-react-enzyme/src/Enzyme/Shallow.purs","end":[91,49]}}]},{"reExports":[],"name":"Enzyme.Wrapper","comments":null,"declarations":[{"children":[{"comments":"Returns a wrapper around the node at a given index of the current\nwrapper.\n","title":"at","info":{"declType":"typeClassMember","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeVar","contents":"w"}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"annotation":[],"tag":"TypeVar","contents":"w"}]}]}]}},"sourceSpan":{"start":[54,3],"name":"/home/jon/Programming/purescript-react-enzyme/src/Enzyme/Wrapper.purs","end":[54,29]}},{"comments":"Returns a new wrapper with all of the children of the node(s) in the\ncurrent wrapper.\n","title":"children","info":{"declType":"typeClassMember","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeVar","contents":"w"}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"annotation":[],"tag":"TypeVar","contents":"w"}]}]}},"sourceSpan":{"start":[58,3],"name":"/home/jon/Programming/purescript-react-enzyme/src/Enzyme/Wrapper.purs","end":[58,28]}},{"comments":"Returns an HTML-like string of the wrapper for debugging purposes. Useful\nto print out to the console when tests are not passing when you expect\nthem to.\n","title":"debug","info":{"declType":"typeClassMember","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"annotation":[],"tag":"RCons","contents":["ignoreProps",{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]},{"annotation":[],"tag":"RCons","contents":["verbose",{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]},{"annotation":[],"tag":"REmpty"}]}]}]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeVar","contents":"w"}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}]}]}},"sourceSpan":{"start":[63,3],"name":"/home/jon/Programming/purescript-react-enzyme/src/Enzyme/Wrapper.purs","end":[63,80]}},{"comments":"Finds every node in the render tree that returns true for the provided\npredicate function.\n","title":"findWhere","info":{"declType":"typeClassMember","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeVar","contents":"w"}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}]}}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeVar","contents":"w"}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"annotation":[],"tag":"TypeVar","contents":"w"}]}]}]}},"sourceSpan":{"start":[67,3],"name":"/home/jon/Programming/purescript-react-enzyme/src/Enzyme/Wrapper.purs","end":[67,54]}},{"comments":"Maps the current array of nodes to another array. Each node is passed in\nas a wrapper to the map function.\n","title":"forEach","info":{"declType":"typeClassMember","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeVar","contents":"w"}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]}]}}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeVar","contents":"w"}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]}]}},"sourceSpan":{"start":[71,3],"name":"/home/jon/Programming/purescript-react-enzyme/src/Enzyme/Wrapper.purs","end":[71,59]}},{"comments":"Returns the node at a given index of the current wrapper.\n","title":"get","info":{"declType":"typeClassMember","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeVar","contents":"w"}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"annotation":[],"tag":"TypeConstructor","contents":[["React"],"ReactElement"]}]}]}]}},"sourceSpan":{"start":[74,3],"name":"/home/jon/Programming/purescript-react-enzyme/src/Enzyme/Wrapper.purs","end":[74,41]}},{"comments":"Returns a new wrapper with only host nodes. When using React-dom, host\nnodes are HTML elements rather than custom React components, e.g. `<div>`\nversus `<MyComponent>`.\n","title":"hostNodes","info":{"declType":"typeClassMember","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeVar","contents":"w"}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"annotation":[],"tag":"TypeVar","contents":"w"}]}]}},"sourceSpan":{"start":[79,3],"name":"/home/jon/Programming/purescript-react-enzyme/src/Enzyme/Wrapper.purs","end":[79,29]}},{"comments":"Invokes a property as a function with an Array of arguments.\n","title":"invoke","info":{"declType":"typeClassMember","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeVar","contents":"w"}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Array"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Foreign"],"Foreign"]}]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]}]}]}},"sourceSpan":{"start":[82,3],"name":"/home/jon/Programming/purescript-react-enzyme/src/Enzyme/Wrapper.purs","end":[82,56]}},{"comments":"Returns whether or not the single wrapped node matches the provided\nselector. It must be a single-node wrapper.\n","title":"is","info":{"declType":"typeClassMember","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeVar","contents":"w"}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}]}]}},"sourceSpan":{"start":[86,3],"name":"/home/jon/Programming/purescript-react-enzyme/src/Enzyme/Wrapper.purs","end":[86,38]}},{"comments":"Returns the number of nodes inside the current wrapper.\n","title":"length","info":{"declType":"typeClassMember","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeVar","contents":"w"}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]}]}},"sourceSpan":{"start":[89,3],"name":"/home/jon/Programming/purescript-react-enzyme/src/Enzyme/Wrapper.purs","end":[89,28]}},{"comments":"Returns whether or not a patternNode React element matches any element in\nthe render tree. It must be a single-node wrapper, and only the root node\nis checked.\n","title":"matches","info":{"declType":"typeClassMember","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["React"],"ReactElement"]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeVar","contents":"w"}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}]}]}},"sourceSpan":{"start":[94,3],"name":"/home/jon/Programming/purescript-react-enzyme/src/Enzyme/Wrapper.purs","end":[94,49]}},{"comments":"Returns the name of the current node of this wrapper. If it's a composite\ncomponent, this will be the name of the component. If it's a native DOM\nit will be a string of the tag name.\n","title":"name","info":{"declType":"typeClassMember","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeVar","contents":"w"}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}]}},"sourceSpan":{"start":[99,3],"name":"/home/jon/Programming/purescript-react-enzyme/src/Enzyme/Wrapper.purs","end":[99,29]}},{"comments":"Returns a wrapper around all of the parents/ancestors of the single node\nin the wrapper. Does not include the node itself.\n","title":"parents","info":{"declType":"typeClassMember","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeVar","contents":"w"}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"annotation":[],"tag":"TypeVar","contents":"w"}]}]}},"sourceSpan":{"start":[103,3],"name":"/home/jon/Programming/purescript-react-enzyme/src/Enzyme/Wrapper.purs","end":[103,27]}},{"comments":"Returns the prop value for the root node of the wrapper with the provided\nkey. It must be a single-node wrapper.\n","title":"property","info":{"declType":"typeClassMember","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeVar","contents":"w"}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Foreign"],"Foreign"]}]}]}]}},"sourceSpan":{"start":[107,3],"name":"/home/jon/Programming/purescript-react-enzyme/src/Enzyme/Wrapper.purs","end":[107,44]}},{"comments":"Applies the provided reducing function to every node in the wrapper to\nreduce to a single value. Each node is passed in as a wrapper, and is\nprocessed from left to right.\n","title":"reduce","info":{"declType":"typeClassMember","type":{"annotation":[],"tag":"ForAll","contents":["a",{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeVar","contents":"a"}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeVar","contents":"w"}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"annotation":[],"tag":"TypeVar","contents":"a"}]}]}]}]}}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeVar","contents":"a"}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeVar","contents":"w"}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"annotation":[],"tag":"TypeVar","contents":"a"}]}]}]}]},null]}},"sourceSpan":{"start":[112,3],"name":"/home/jon/Programming/purescript-react-enzyme/src/Enzyme/Wrapper.purs","end":[112,73]}},{"comments":"A method that sets the property of the root component, and re-renders.\nUseful for when you are wanting to test how the component behaves over\ntime with changing props. Blocks until the operation completes.\n","title":"setProperty","info":{"declType":"typeClassMember","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Foreign"],"Foreign"]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeVar","contents":"w"}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Effect","Aff"],"Aff"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]}]}]}},"sourceSpan":{"start":[117,3],"name":"/home/jon/Programming/purescript-react-enzyme/src/Enzyme/Wrapper.purs","end":[117,52]}},{"comments":"Returns a new wrapper with a subset of the nodes of the original wrapper,\naccording to the rules of `Array#slice`.\n","title":"slice","info":{"declType":"typeClassMember","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeVar","contents":"w"}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"annotation":[],"tag":"TypeVar","contents":"w"}]}]}]}]}},"sourceSpan":{"start":[121,3],"name":"/home/jon/Programming/purescript-react-enzyme/src/Enzyme/Wrapper.purs","end":[121,39]}},{"comments":"Returns a string of the rendered text of the current render tree.\n","title":"text","info":{"declType":"typeClassMember","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeVar","contents":"w"}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}]}},"sourceSpan":{"start":[124,3],"name":"/home/jon/Programming/purescript-react-enzyme/src/Enzyme/Wrapper.purs","end":[124,29]}},{"comments":"A method that unmounts the component. This can be used to simulate a\ncomponent going through an unmount/mount lifecycle.\n","title":"unmount","info":{"declType":"typeClassMember","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeVar","contents":"w"}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]}},"sourceSpan":{"start":[128,3],"name":"/home/jon/Programming/purescript-react-enzyme/src/Enzyme/Wrapper.purs","end":[128,30]}}],"comments":"The `Wrapper` type class represents any Enzyme wrapper of React components\nwith an interface to manipulate or traverse them.\n","title":"Wrapper","info":{"fundeps":[],"arguments":[["w",null]],"declType":"typeClass","superclasses":[]},"sourceSpan":{"start":[50,1],"name":"/home/jon/Programming/purescript-react-enzyme/src/Enzyme/Wrapper.purs","end":[128,30]}},{"children":[],"comments":"Returns a new wrapper with child at the specified index.\n","title":"childAt","info":{"declType":"value","type":{"annotation":[],"tag":"ForAll","contents":["w",{"annotation":[],"tag":"ConstrainedType","contents":[{"constraintAnn":[],"constraintClass":[["Enzyme","Wrapper"],"Wrapper"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"w"}],"constraintData":null},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeVar","contents":"w"}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"annotation":[],"tag":"TypeVar","contents":"w"}]}]}]}]},null]}},"sourceSpan":{"start":[131,1],"name":"/home/jon/Programming/purescript-react-enzyme/src/Enzyme/Wrapper.purs","end":[131,56]}},{"children":[],"comments":"Enumerates all the nodes in the current wrapper and their children.\n","title":"enumerate","info":{"declType":"value","type":{"annotation":[],"tag":"ForAll","contents":["w",{"annotation":[],"tag":"ConstrainedType","contents":[{"constraintAnn":[],"constraintClass":[["Enzyme","Wrapper"],"Wrapper"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"w"}],"constraintData":null},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeVar","contents":"w"}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"annotation":[],"tag":"TypeVar","contents":"w"}]}]}]},null]}},"sourceSpan":{"start":[135,1],"name":"/home/jon/Programming/purescript-react-enzyme/src/Enzyme/Wrapper.purs","end":[135,51]}},{"children":[],"comments":"Returns whether or not all of the nodes in the wrapper match the provided\nselector.\n","title":"every","info":{"declType":"value","type":{"annotation":[],"tag":"ForAll","contents":["w",{"annotation":[],"tag":"ConstrainedType","contents":[{"constraintAnn":[],"constraintClass":[["Enzyme","Wrapper"],"Wrapper"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"w"}],"constraintData":null},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeVar","contents":"w"}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}]}]}]},null]}},"sourceSpan":{"start":[140,1],"name":"/home/jon/Programming/purescript-react-enzyme/src/Enzyme/Wrapper.purs","end":[140,63]}},{"children":[],"comments":"Returns whether or not all of the nodes in the wrapper pass the provided\npredicate function.\n","title":"everyWhere","info":{"declType":"value","type":{"annotation":[],"tag":"ForAll","contents":["w",{"annotation":[],"tag":"ConstrainedType","contents":[{"constraintAnn":[],"constraintClass":[["Enzyme","Wrapper"],"Wrapper"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"w"}],"constraintData":null},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeVar","contents":"w"}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}]}}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeVar","contents":"w"}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}]}]}]},null]}},"sourceSpan":{"start":[145,1],"name":"/home/jon/Programming/purescript-react-enzyme/src/Enzyme/Wrapper.purs","end":[146,74]}},{"children":[],"comments":"Finds every node in the render tree of the current wrapper that matches\nthe provided selector.\n","title":"find","info":{"declType":"value","type":{"annotation":[],"tag":"ForAll","contents":["w",{"annotation":[],"tag":"ConstrainedType","contents":[{"constraintAnn":[],"constraintClass":[["Enzyme","Wrapper"],"Wrapper"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"w"}],"constraintData":null},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeVar","contents":"w"}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"annotation":[],"tag":"TypeVar","contents":"w"}]}]}]}]},null]}},"sourceSpan":{"start":[154,1],"name":"/home/jon/Programming/purescript-react-enzyme/src/Enzyme/Wrapper.purs","end":[154,56]}},{"children":[],"comments":"Reduce the set of matched nodes to the first in the set, just like `at 0`.\n","title":"first","info":{"declType":"value","type":{"annotation":[],"tag":"ForAll","contents":["w",{"annotation":[],"tag":"ConstrainedType","contents":[{"constraintAnn":[],"constraintClass":[["Enzyme","Wrapper"],"Wrapper"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"w"}],"constraintData":null},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeVar","contents":"w"}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"annotation":[],"tag":"TypeVar","contents":"w"}]}]}]},null]}},"sourceSpan":{"start":[158,1],"name":"/home/jon/Programming/purescript-react-enzyme/src/Enzyme/Wrapper.purs","end":[158,47]}},{"children":[],"comments":"Returns whether or not the wrapper is empty.\n","title":"isEmpty","info":{"declType":"value","type":{"annotation":[],"tag":"ForAll","contents":["w",{"annotation":[],"tag":"ConstrainedType","contents":[{"constraintAnn":[],"constraintClass":[["Enzyme","Wrapper"],"Wrapper"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"w"}],"constraintData":null},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeVar","contents":"w"}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}]}]},null]}},"sourceSpan":{"start":[162,1],"name":"/home/jon/Programming/purescript-react-enzyme/src/Enzyme/Wrapper.purs","end":[162,55]}},{"children":[],"comments":"Reduce the set of matched nodes to the last in the set.\n","title":"last","info":{"declType":"value","type":{"annotation":[],"tag":"ForAll","contents":["w",{"annotation":[],"tag":"ConstrainedType","contents":[{"constraintAnn":[],"constraintClass":[["Enzyme","Wrapper"],"Wrapper"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"w"}],"constraintData":null},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeVar","contents":"w"}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"annotation":[],"tag":"TypeVar","contents":"w"}]}]}]},null]}},"sourceSpan":{"start":[169,1],"name":"/home/jon/Programming/purescript-react-enzyme/src/Enzyme/Wrapper.purs","end":[169,46]}},{"children":[],"comments":"Returns a wrapper with the direct parent of the node in the current\nwrapper.\n","title":"parent","info":{"declType":"value","type":{"annotation":[],"tag":"ForAll","contents":["w",{"annotation":[],"tag":"ConstrainedType","contents":[{"constraintAnn":[],"constraintClass":[["Enzyme","Wrapper"],"Wrapper"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"w"}],"constraintData":null},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeVar","contents":"w"}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"annotation":[],"tag":"TypeVar","contents":"w"}]}]}]},null]}},"sourceSpan":{"start":[177,1],"name":"/home/jon/Programming/purescript-react-enzyme/src/Enzyme/Wrapper.purs","end":[177,48]}},{"children":[],"comments":"Returns a new wrapper with a subset of the nodes of the original wrapper\nafter skipping the first `n` nodes.\n","title":"skip","info":{"declType":"value","type":{"annotation":[],"tag":"ForAll","contents":["w",{"annotation":[],"tag":"ConstrainedType","contents":[{"constraintAnn":[],"constraintClass":[["Enzyme","Wrapper"],"Wrapper"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"w"}],"constraintData":null},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeVar","contents":"w"}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"annotation":[],"tag":"TypeVar","contents":"w"}]}]}]}]},null]}},"sourceSpan":{"start":[182,1],"name":"/home/jon/Programming/purescript-react-enzyme/src/Enzyme/Wrapper.purs","end":[182,53]}},{"children":[],"comments":"Returns whether or not any of the nodes in the wrapper match the provided\nselector.\n","title":"some","info":{"declType":"value","type":{"annotation":[],"tag":"ForAll","contents":["w",{"annotation":[],"tag":"ConstrainedType","contents":[{"constraintAnn":[],"constraintClass":[["Enzyme","Wrapper"],"Wrapper"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"w"}],"constraintData":null},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeVar","contents":"w"}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}]}]}]},null]}},"sourceSpan":{"start":[190,1],"name":"/home/jon/Programming/purescript-react-enzyme/src/Enzyme/Wrapper.purs","end":[190,62]}},{"children":[],"comments":"Returns whether or not any of the nodes in the wrapper pass the provided\npredicate function.\n","title":"someWhere","info":{"declType":"value","type":{"annotation":[],"tag":"ForAll","contents":["w",{"annotation":[],"tag":"ConstrainedType","contents":[{"constraintAnn":[],"constraintClass":[["Enzyme","Wrapper"],"Wrapper"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"w"}],"constraintData":null},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeVar","contents":"w"}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}]}}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeVar","contents":"w"}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}]}]}]},null]}},"sourceSpan":{"start":[195,1],"name":"/home/jon/Programming/purescript-react-enzyme/src/Enzyme/Wrapper.purs","end":[196,74]}}]}],"resolvedDependencies":{"purescript-free":"5.2.0","purescript-proxy":"3.0.2","purescript-exceptions":"4.0.0","purescript-newtype":"3.0.0","purescript-effect":"2.0.1","purescript-ordered-collections":"1.6.1","purescript-control":"4.2.0","purescript-console":"4.4.0","purescript-either":"4.1.1","purescript-arrays":"5.3.1","purescript-maybe":"4.0.1","purescript-type-equality":"3.0.0","purescript-exists":"4.0.0","purescript-distributive":"4.0.0","purescript-unfoldable":"4.1.0","purescript-invariant":"4.1.0","purescript-fork":"4.0.0","purescript-lazy":"4.0.0","purescript-now":"4.0.0","purescript-aff":"5.1.2","purescript-react":"8.0.0","purescript-foldable-traversable":"4.1.1","purescript-tailrec":"4.1.1","purescript-avar":"3.0.0","purescript-gen":"2.1.1","purescript-typelevel-prelude":"5.0.2","purescript-functors":"3.1.1","purescript-prelude":"4.1.1","purescript-st":"4.1.1","purescript-bifunctors":"4.0.0","purescript-pipes":"6.0.0","purescript-nonempty":"5.0.0","purescript-contravariant":"4.0.1","purescript-unsafe-coerce":"4.0.0","purescript-refs":"4.1.0","purescript-integers":"4.0.0","purescript-mmorph":"5.1.0","purescript-ansi":"5.0.0","purescript-orders":"4.0.0","purescript-const":"4.1.0","purescript-spec":"4.0.1","purescript-transformers":"4.2.0","purescript-globals":"4.1.0","purescript-generics-rep":"6.1.3","purescript-math":"2.1.1","purescript-enums":"4.0.1","purescript-psci-support":"4.0.0","purescript-catenable-lists":"5.0.1","purescript-parallel":"4.0.0","purescript-tuples":"5.1.0","purescript-partial":"2.0.1","purescript-strings":"4.0.2","purescript-identity":"4.1.0","purescript-foreign":"5.0.0","purescript-lists":"5.4.1","purescript-nullable":"4.1.1","purescript-datetime":"4.1.1","purescript-functions":"4.0.0"},"version":"1.1.1","github":["alvart","purescript-react-enzyme"],"versionTag":"v1.1.1","moduleMap":{"Data.BooleanAlgebra":"purescript-prelude","Ansi.Output":"purescript-ansi","Data.Decide":"purescript-contravariant","Type.Data.Boolean":"purescript-typelevel-prelude","Data.Ring":"purescript-prelude","Control.Monad.Trans.Class":"purescript-transformers","Data.Functor.Product":"purescript-functors","Foreign.Keys":"purescript-foreign","Data.NonEmpty":"purescript-nonempty","Test.Spec.Console":"purescript-spec","Effect.Uncurried":"purescript-effect","Data.Char.Gen":"purescript-strings","Test.Spec.Style":"purescript-spec","Effect.Now":"purescript-now","Data.String.NonEmpty":"purescript-strings","Effect":"purescript-effect","Data.Traversable.Accum.Internal":"purescript-foldable-traversable","Data.Enum.Gen":"purescript-enums","Data.Nullable":"purescript-nullable","Control.Comonad.Env":"purescript-transformers","Control.Comonad.Traced.Class":"purescript-transformers","Test.Spec.Summary":"purescript-spec","Data.Functor.Compose":"purescript-functors","Type.Row.Homogeneous":"purescript-typelevel-prelude","Data.Int.Bits":"purescript-integers","Data.DateTime":"purescript-datetime","Data.Bifunctor.Flip":"purescript-bifunctors","Data.String.CodePoints":"purescript-strings","Data.Ord":"purescript-prelude","Control.Monad.Gen":"purescript-gen","Control.Monad.Free.Class":"purescript-free","Type.Data.Row":"purescript-prelude","Data.Date":"purescript-datetime","Control.Comonad.Cofree.Class":"purescript-free","Data.Monoid.Dual":"purescript-prelude","Data.Generic.Rep.Ring":"purescript-generics-rep","Control.Monad.Rec.Class":"purescript-tailrec","Data.Time.Component":"purescript-datetime","Data.Bitraversable":"purescript-foldable-traversable","Data.Boolean":"purescript-prelude","Data.Map":"purescript-ordered-collections","Control.Biapplicative":"purescript-bifunctors","Data.CatList":"purescript-catenable-lists","Effect.Exception.Unsafe":"purescript-exceptions","Control.Parallel.Class":"purescript-parallel","Data.Array.NonEmpty.Internal":"purescript-arrays","Type.Proxy":"purescript-proxy","Pipes.Core":"purescript-pipes","Data.Coyoneda":"purescript-free","Effect.Aff.Compat":"purescript-aff","Data.Array.ST.Iterator":"purescript-arrays","Data.DateTime.Gen":"purescript-datetime","Data.String.Pattern":"purescript-strings","Data.Bounded":"purescript-prelude","Control.Monad.State.Trans":"purescript-transformers","Data.TraversableWithIndex":"purescript-foldable-traversable","Data.Int":"purescript-integers","React.DOM.SVG":"purescript-react","Data.Show":"purescript-prelude","Data.Bifunctor.Clown":"purescript-bifunctors","Control.Monad.Writer.Trans":"purescript-transformers","Data.Foldable":"purescript-foldable-traversable","Data.Divide":"purescript-contravariant","Control.Comonad.Store.Class":"purescript-transformers","Data.Enum":"purescript-enums","Control.Monad.Trampoline":"purescript-free","Test.Spec.Tree":"purescript-spec","Control.Apply":"purescript-prelude","Data.Functor.Contravariant":"purescript-contravariant","Data.Tuple.Nested":"purescript-tuples","Data.Generic.Rep.Semigroup":"purescript-generics-rep","Control.Monad":"purescript-prelude","Data.Lazy":"purescript-lazy","Data.Monoid":"purescript-prelude","Control.Monad.List.Trans":"purescript-transformers","Control.Monad.RWS":"purescript-transformers","Data.String.Common":"purescript-strings","Data.Maybe.First":"purescript-maybe","Control.Bind":"purescript-prelude","Effect.Aff.Class":"purescript-aff","Data.Monoid.Additive":"purescript-prelude","Data.Symbol":"purescript-prelude","Data.Map.Gen":"purescript-ordered-collections","Data.String.Regex":"purescript-strings","Data.HeytingAlgebra":"purescript-prelude","Control.Alt":"purescript-control","Data.Date.Gen":"purescript-datetime","Control.Monad.Maybe.Trans":"purescript-transformers","Control.Monad.Cont":"purescript-transformers","Control.Monad.ST.Internal":"purescript-st","Type.Data.RowList":"purescript-prelude","Data.Time.Component.Gen":"purescript-datetime","Effect.Ref":"purescript-refs","Data.Either.Inject":"purescript-either","Data.List.ZipList":"purescript-lists","Data.Ord.Min":"purescript-orders","Test.Spec.Runner":"purescript-spec","Data.Functor.Coproduct.Nested":"purescript-functors","Data.Ord.Unsafe":"purescript-prelude","Data.Semigroup":"purescript-prelude","Data.Array.NonEmpty":"purescript-arrays","Control.Monad.Reader":"purescript-transformers","Data.Const":"purescript-const","Data.Generic.Rep.Enum":"purescript-generics-rep","Data.Generic.Rep.Bounded":"purescript-generics-rep","Test.Spec.Reporter.Console":"purescript-spec","Control.Comonad.Traced.Trans":"purescript-transformers","Test.Spec.Reporter.Dot":"purescript-spec","Data.Ord.Down":"purescript-orders","Data.Array.ST.Partial":"purescript-arrays","Data.Generic.Rep.Show":"purescript-generics-rep","Effect.Unsafe":"purescript-effect","Pipes.Internal":"purescript-pipes","Control.Monad.Morph":"purescript-mmorph","Type.Data.Ordering":"purescript-typelevel-prelude","Data.Tuple":"purescript-tuples","Data.Semigroup.Foldable":"purescript-foldable-traversable","Control.Biapply":"purescript-bifunctors","Data.Distributive":"purescript-distributive","Effect.Exception":"purescript-exceptions","Type.Equality":"purescript-type-equality","Foreign.Index":"purescript-foreign","Control.Alternative":"purescript-control","Data.Semiring":"purescript-prelude","Pipes.Prelude":"purescript-pipes","Data.Exists":"purescript-exists","Effect.Console":"purescript-console","Data.Traversable.Accum":"purescript-foldable-traversable","Data.CommutativeRing":"purescript-prelude","Data.NaturalTransformation":"purescript-prelude","Data.Monoid.Conj":"purescript-prelude","React.DOM.SVG.Dynamic":"purescript-react","Data.Yoneda":"purescript-free","Data.Functor.App":"purescript-functors","Data.Unfoldable":"purescript-unfoldable","Type.RowList":"purescript-typelevel-prelude","React.DOM.Props":"purescript-react","Control.Comonad.Store.Trans":"purescript-transformers","Test.Spec.Assertions.String":"purescript-spec","Control.Monad.ST":"purescript-st","Control.Monad.State.Class":"purescript-transformers","Data.List.Types":"purescript-lists","Data.String.NonEmpty.CodeUnits":"purescript-strings","React":"purescript-react","Data.Functor":"purescript-prelude","Unsafe.Coerce":"purescript-unsafe-coerce","Control.Monad.Writer.Class":"purescript-transformers","Data.Generic.Rep.Ord":"purescript-generics-rep","Test.Spec.Reporter.Base":"purescript-spec","Data.CatQueue":"purescript-catenable-lists","Control.Monad.Except":"purescript-transformers","Data.Interval":"purescript-datetime","Data.List.Lazy.Types":"purescript-lists","Control.Category":"purescript-prelude","Test.Spec.Reporter.Tap":"purescript-spec","React.DOM":"purescript-react","Data.Interval.Duration":"purescript-datetime","Control.Monad.Gen.Common":"purescript-gen","Control.Monad.RWS.Trans":"purescript-transformers","Test.Spec.Speed":"purescript-spec","Control.Monad.Cont.Trans":"purescript-transformers","Data.Maybe":"purescript-maybe","Type.Row":"purescript-typelevel-prelude","Data.String.Regex.Unsafe":"purescript-strings","Data.Set":"purescript-ordered-collections","Control.Comonad":"purescript-control","Control.Monad.ST.Global":"purescript-st","Data.Function":"purescript-prelude","Data.List":"purescript-lists","Data.Field":"purescript-prelude","Data.List.Lazy":"purescript-lists","Data.Generic.Rep.Eq":"purescript-generics-rep","Data.EuclideanRing":"purescript-prelude","Data.Semigroup.Last":"purescript-prelude","Data.Semigroup.First":"purescript-prelude","Data.Functor.Invariant":"purescript-invariant","Control.Comonad.Traced":"purescript-transformers","Global.Unsafe":"purescript-globals","Data.Comparison":"purescript-contravariant","Data.String.Unsafe":"purescript-strings","Prelude":"purescript-prelude","Effect.Class":"purescript-effect","Data.Predicate":"purescript-contravariant","Partial.Unsafe":"purescript-partial","Data.Array":"purescript-arrays","Data.Bifunctor.Product":"purescript-bifunctors","Control.Extend":"purescript-control","Pipes":"purescript-pipes","Data.Unfoldable1":"purescript-unfoldable","Control.Lazy":"purescript-control","Data.Function.Uncurried":"purescript-functions","Control.Monad.Reader.Trans":"purescript-transformers","Data.Functor.Product.Nested":"purescript-functors","Pipes.ListT":"purescript-pipes","Control.Comonad.Env.Class":"purescript-transformers","Effect.Aff.AVar":"purescript-avar","Data.Interval.Duration.Iso":"purescript-datetime","Data.Eq":"purescript-prelude","Test.Spec.Result":"purescript-spec","Data.Either.Nested":"purescript-either","Control.Comonad.Cofree":"purescript-free","Data.Newtype":"purescript-newtype","Data.Semigroup.Traversable":"purescript-foldable-traversable","Test.Spec.Assertions":"purescript-spec","Data.Bifunctor":"purescript-bifunctors","Test.Spec.Reporter":"purescript-spec","Data.Monoid.Disj":"purescript-prelude","Control.Monad.Gen.Class":"purescript-gen","Data.Array.Partial":"purescript-arrays","Data.String.CaseInsensitive":"purescript-strings","Control.Monad.Free":"purescript-free","Control.Parallel":"purescript-parallel","Control.MonadPlus":"purescript-control","React.DOM.Dynamic":"purescript-react","Data.Void":"purescript-prelude","Control.MonadZero":"purescript-control","Data.DateTime.Instant":"purescript-datetime","Data.Ord.Max":"purescript-orders","Effect.AVar":"purescript-avar","Control.Comonad.Store":"purescript-transformers","Control.Monad.Except.Trans":"purescript-transformers","Data.String.CodeUnits":"purescript-strings","Ansi.Codes":"purescript-ansi","Test.Spec":"purescript-spec","Data.Bifunctor.Joker":"purescript-bifunctors","Data.FunctorWithIndex":"purescript-foldable-traversable","Data.Divisible":"purescript-contravariant","Data.DivisionRing":"purescript-prelude","Data.Bifunctor.Wrap":"purescript-bifunctors","PSCI.Support":"purescript-psci-support","Data.Equivalence":"purescript-contravariant","Data.Maybe.Last":"purescript-maybe","Data.Unit":"purescript-prelude","Data.List.NonEmpty":"purescript-lists","Data.Generic.Rep.Semiring":"purescript-generics-rep","Data.List.Lazy.NonEmpty":"purescript-lists","React.SyntheticEvent":"purescript-react","Data.Ordering":"purescript-prelude","Data.Functor.Coproduct":"purescript-functors","Control.Monad.Cont.Class":"purescript-transformers","Effect.Aff":"purescript-aff","Data.Identity":"purescript-identity","Math":"purescript-math","Data.Set.NonEmpty":"purescript-ordered-collections","Control.Comonad.Trans.Class":"purescript-transformers","Data.String":"purescript-strings","Control.Plus":"purescript-control","Data.Map.Internal":"purescript-ordered-collections","Data.Time":"purescript-datetime","Data.Time.Duration":"purescript-datetime","Data.Date.Component":"purescript-datetime","Partial":"purescript-partial","Control.Comonad.Env.Trans":"purescript-transformers","Global":"purescript-globals","Control.Monad.Reader.Class":"purescript-transformers","Data.String.NonEmpty.CodePoints":"purescript-strings","Data.Decidable":"purescript-contravariant","Data.String.NonEmpty.Internal":"purescript-strings","Data.Monoid.Multiplicative":"purescript-prelude","Data.String.NonEmpty.CaseInsensitive":"purescript-strings","Type.Data.Symbol":"purescript-typelevel-prelude","Data.Array.ST":"purescript-arrays","Foreign":"purescript-foreign","Control.Monad.Error.Class":"purescript-transformers","Data.Generic.Rep.HeytingAlgebra":"purescript-generics-rep","Data.Generic.Rep.Monoid":"purescript-generics-rep","Control.Semigroupoid":"purescript-prelude","Data.Monoid.Alternate":"purescript-control","Data.Char":"purescript-strings","Data.Generic.Rep":"purescript-generics-rep","Effect.Class.Console":"purescript-console","React.Ref":"purescript-react","Data.Bifunctor.Join":"purescript-bifunctors","Control.Monad.Fork.Class":"purescript-fork","Data.Bifoldable":"purescript-foldable-traversable","Control.Monad.ST.Ref":"purescript-st","Data.Monoid.Endo":"purescript-prelude","Control.Monad.State":"purescript-transformers","Data.List.Partial":"purescript-lists","Test.Spec.Runner.Event":"purescript-spec","Data.String.Regex.Flags":"purescript-strings","Data.Either":"purescript-either","Data.Time.Duration.Gen":"purescript-datetime","Data.Date.Component.Gen":"purescript-datetime","Type.Prelude":"purescript-typelevel-prelude","Control.Applicative":"purescript-prelude","Control.Monad.ST.Class":"purescript-st","Data.FoldableWithIndex":"purescript-foldable-traversable","Data.Op":"purescript-contravariant","Record.Unsafe":"purescript-prelude","Control.Monad.Writer":"purescript-transformers","Test.Spec.Reporter.Spec":"purescript-spec","Data.Functor.Coproduct.Inject":"purescript-functors","Data.Time.Gen":"purescript-datetime","Data.Traversable":"purescript-foldable-traversable","Data.String.Gen":"purescript-strings"},"compilerVersion":"0.13.3"}