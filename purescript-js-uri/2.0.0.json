{"uploader":"thomashoneyman","packageMeta":{"repository":{"url":"https://github.com/purescript-contrib/purescript-js-uri.git","type":"git"},"ignore":["**/.*","node_modules","bower_components","output"],"devDependencies":{"purescript-effect":"^3.0.0","purescript-assert":"^5.0.0"},"dependencies":{"purescript-maybe":"^5.0.0","purescript-functions":"^5.0.0"},"name":"purescript-js-uri","license":["MIT"]},"tagTime":"2021-02-26T19:27:27+0000","modules":[{"reExports":[],"name":"JSURI","comments":null,"declarations":[{"children":[],"comments":"URI-encode a string according to RFC3896. Implemented using JavaScript's\n`encodeURIComponent`.\n\n```purs\n> encodeURIComponent \"https://purescript.org\"\nJust \"https%3A%2F%2Fpurescript.org\"\n```\n\nEncoding a URI can fail with a `URIError` if the string contains malformed\ncharacters. If you are confident you are encoding a well-formed string then\nyou can run this function unsafely:\n\n```purs\nimport Partial.Unsafe (unsafePartial)\nimport Data.Maybe (fromJust)\n\nunsafeEncode :: String -> String\nunsafeEncode str = unsafePartial $ fromJust $ encodeURIComponent str\n```\n","title":"encodeURIComponent","info":{"declType":"value","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}]}},"sourceSpan":{"start":[34,1],"name":"/Users/trh/Desktop/release/purescript-js-uri/src/JSURI.purs","end":[34,45]}},{"children":[],"comments":"URI-encode a string according to RFC3896, except with spaces encoded using\n'+' instead of '%20' to comply with application/x-www-form-urlencoded.\n\n```purs\n> encodeURIComponent \"abc ABC\"\nJust \"abc%20ABC\"\n\n> encodeFormURLComponent \"abc ABC\"\nJust \"abc+ABC\"\n```\n","title":"encodeFormURLComponent","info":{"declType":"value","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}]}},"sourceSpan":{"start":[49,1],"name":"/Users/trh/Desktop/release/purescript-js-uri/src/JSURI.purs","end":[49,49]}},{"children":[],"comments":"Decode a URI string according to RFC3896. Implemented using JavaScript's\n`decodeURIComponent`.\n\n```purs\n> decodeURIComponent \"https%3A%2F%2Fpurescript.org\"\nJust \"https://purescript.org\"\n```\n\nDecoding a URI can fail with a `URIError` if the string contains malformed\ncharacters. If you are confident you are encoding a well-formed string then\nyou can run this function unsafely:\n\n```purs\nimport Partial.Unsafe (unsafePartial)\nimport Data.Maybe (fromJust)\n\nunsafeDecode :: String -> String\nunsafeDecode str = unsafePartial $ fromJust $ decodeURIComponent str\n```\n","title":"decodeURIComponent","info":{"declType":"value","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}]}},"sourceSpan":{"start":[73,1],"name":"/Users/trh/Desktop/release/purescript-js-uri/src/JSURI.purs","end":[73,45]}},{"children":[],"comments":"Decode a URI according to application/x-www-form-urlencoded (for example,\na string containing '+' for spaces or query parameters).\n\n```purs\n> decodeURIComponent \"https%3A%2F%2Fpurescript.org?search+query\"\nJust \"https://purescript.org?search+query\"\n\n> decodeFormURLComponent \"https%3A%2F%2Fpurescript.org?search+query\"\nJust \"https://purescript.org?search query\"\n```\n","title":"decodeFormURLComponent","info":{"declType":"value","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}]}},"sourceSpan":{"start":[88,1],"name":"/Users/trh/Desktop/release/purescript-js-uri/src/JSURI.purs","end":[88,49]}}]}],"resolvedDependencies":{"purescript-newtype":"4.0.0","purescript-effect":"3.0.0","purescript-control":"5.0.0","purescript-console":"5.0.0","purescript-maybe":"5.0.0","purescript-invariant":"5.0.0","purescript-prelude":"5.0.0","purescript-assert":"5.0.0","purescript-unsafe-coerce":"5.0.0","purescript-safe-coerce":"1.0.0","purescript-functions":"5.0.0"},"version":"2.0.0","github":["purescript-contrib","purescript-js-uri"],"versionTag":"v2.0.0","moduleMap":{"Data.BooleanAlgebra":"purescript-prelude","Data.Ring":"purescript-prelude","Data.Semigroup.Generic":"purescript-prelude","Effect.Uncurried":"purescript-effect","Data.Monoid.Generic":"purescript-prelude","Effect":"purescript-effect","Data.HeytingAlgebra.Generic":"purescript-prelude","Data.Ord":"purescript-prelude","Data.Bounded.Generic":"purescript-prelude","Type.Data.Row":"purescript-prelude","Safe.Coerce":"purescript-safe-coerce","Data.Monoid.Dual":"purescript-prelude","Data.Boolean":"purescript-prelude","Data.Show.Generic":"purescript-prelude","Type.Proxy":"purescript-prelude","Data.Bounded":"purescript-prelude","Data.Show":"purescript-prelude","Control.Apply":"purescript-prelude","Control.Monad":"purescript-prelude","Data.Monoid":"purescript-prelude","Data.Ord.Generic":"purescript-prelude","Data.Maybe.First":"purescript-maybe","Control.Bind":"purescript-prelude","Data.Monoid.Additive":"purescript-prelude","Data.Symbol":"purescript-prelude","Data.HeytingAlgebra":"purescript-prelude","Control.Alt":"purescript-control","Type.Data.RowList":"purescript-prelude","Data.Ring.Generic":"purescript-prelude","Data.Semigroup":"purescript-prelude","Effect.Unsafe":"purescript-effect","Control.Alternative":"purescript-control","Data.Semiring":"purescript-prelude","Effect.Console":"purescript-console","Data.CommutativeRing":"purescript-prelude","Data.NaturalTransformation":"purescript-prelude","Data.Monoid.Conj":"purescript-prelude","Data.Functor":"purescript-prelude","Unsafe.Coerce":"purescript-unsafe-coerce","Control.Category":"purescript-prelude","Data.Maybe":"purescript-maybe","Control.Comonad":"purescript-control","Data.Function":"purescript-prelude","Data.Field":"purescript-prelude","Data.EuclideanRing":"purescript-prelude","Data.Semigroup.Last":"purescript-prelude","Data.Semigroup.First":"purescript-prelude","Data.Functor.Invariant":"purescript-invariant","Prelude":"purescript-prelude","Effect.Class":"purescript-effect","Control.Extend":"purescript-control","Control.Lazy":"purescript-control","Data.Function.Uncurried":"purescript-functions","Data.Eq":"purescript-prelude","Data.Newtype":"purescript-newtype","Test.Assert":"purescript-assert","Data.Monoid.Disj":"purescript-prelude","Control.MonadPlus":"purescript-control","Data.Void":"purescript-prelude","Control.MonadZero":"purescript-control","Data.Eq.Generic":"purescript-prelude","Data.DivisionRing":"purescript-prelude","Data.Maybe.Last":"purescript-maybe","Data.Unit":"purescript-prelude","Data.Ordering":"purescript-prelude","Control.Plus":"purescript-control","Data.Monoid.Multiplicative":"purescript-prelude","Control.Semigroupoid":"purescript-prelude","Data.Monoid.Alternate":"purescript-control","Data.Generic.Rep":"purescript-prelude","Effect.Class.Console":"purescript-console","Data.Monoid.Endo":"purescript-prelude","Data.Semiring.Generic":"purescript-prelude","Control.Applicative":"purescript-prelude","Record.Unsafe":"purescript-prelude"},"compilerVersion":"0.14.0"}