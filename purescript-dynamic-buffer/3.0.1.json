{"compilerVersion":"0.15.10","github":["kritzcreek","purescript-dynamic-buffer"],"moduleMap":{"Control.Applicative":"purescript-prelude","Control.Apply":"purescript-prelude","Control.Bind":"purescript-prelude","Control.Category":"purescript-prelude","Control.Monad":"purescript-prelude","Control.Semigroupoid":"purescript-prelude","Data.ArrayBuffer.Types":"purescript-arraybuffer-types","Data.Boolean":"purescript-prelude","Data.BooleanAlgebra":"purescript-prelude","Data.Bounded":"purescript-prelude","Data.Bounded.Generic":"purescript-prelude","Data.CommutativeRing":"purescript-prelude","Data.DivisionRing":"purescript-prelude","Data.Eq":"purescript-prelude","Data.Eq.Generic":"purescript-prelude","Data.EuclideanRing":"purescript-prelude","Data.Field":"purescript-prelude","Data.Function":"purescript-prelude","Data.Functor":"purescript-prelude","Data.Generic.Rep":"purescript-prelude","Data.HeytingAlgebra":"purescript-prelude","Data.HeytingAlgebra.Generic":"purescript-prelude","Data.Monoid":"purescript-prelude","Data.Monoid.Additive":"purescript-prelude","Data.Monoid.Conj":"purescript-prelude","Data.Monoid.Disj":"purescript-prelude","Data.Monoid.Dual":"purescript-prelude","Data.Monoid.Endo":"purescript-prelude","Data.Monoid.Generic":"purescript-prelude","Data.Monoid.Multiplicative":"purescript-prelude","Data.NaturalTransformation":"purescript-prelude","Data.Ord":"purescript-prelude","Data.Ord.Generic":"purescript-prelude","Data.Ordering":"purescript-prelude","Data.Reflectable":"purescript-prelude","Data.Ring":"purescript-prelude","Data.Ring.Generic":"purescript-prelude","Data.Semigroup":"purescript-prelude","Data.Semigroup.First":"purescript-prelude","Data.Semigroup.Generic":"purescript-prelude","Data.Semigroup.Last":"purescript-prelude","Data.Semiring":"purescript-prelude","Data.Semiring.Generic":"purescript-prelude","Data.Show":"purescript-prelude","Data.Show.Generic":"purescript-prelude","Data.Symbol":"purescript-prelude","Data.Unit":"purescript-prelude","Data.Void":"purescript-prelude","Effect":"purescript-effect","Effect.Class":"purescript-effect","Effect.Ref":"purescript-refs","Effect.Uncurried":"purescript-effect","Effect.Unsafe":"purescript-effect","Prelude":"purescript-prelude","Record.Unsafe":"purescript-prelude","Type.Proxy":"purescript-prelude"},"modules":[{"comments":null,"declarations":[{"children":[],"comments":"A growable Buffer type for binary data\n","info":{"dataDeclType":"newtype","declType":"data","roles":[],"typeArguments":[]},"kind":null,"sourceSpan":{"end":[41,4],"name":"/tmp/tmp-2041-yeFAMo6lA5qK/purescript-dynamic-buffer/src/DynamicBuffer.purs","start":[34,1]},"title":"DBuffer"},{"children":[],"comments":"A byte-offset into a Buffer. Just an alias for documentation\npurposes.\n","info":{"arguments":[],"declType":"typeSynonym","type":{"annotation":[],"contents":[["Prim"],"Int"],"tag":"TypeConstructor"}},"kind":null,"sourceSpan":{"end":[31,18],"name":"/tmp/tmp-2041-yeFAMo6lA5qK/purescript-dynamic-buffer/src/DynamicBuffer.purs","start":[31,1]},"title":"Offset"},{"children":[],"comments":"Creates a new `DBuffer` with the given initial capacity.\n\nPicking a capacity in the order of magnitude you expect to write\nwill reduce the overall amount of allocation.\n","info":{"declType":"value","type":{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Prim"],"Int"],"tag":"TypeConstructor"}],"tag":"TypeApp"},{"annotation":[],"contents":[{"annotation":[],"contents":[["Effect"],"Effect"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["DynamicBuffer"],"DBuffer"],"tag":"TypeConstructor"}],"tag":"TypeApp"}],"tag":"TypeApp"}},"kind":null,"sourceSpan":{"end":[47,32],"name":"/tmp/tmp-2041-yeFAMo6lA5qK/purescript-dynamic-buffer/src/DynamicBuffer.purs","start":[47,1]},"title":"create"},{"children":[],"comments":"Writes a single byte into the DBuffer\n\nThrows an exception if you pass a value that's not within\n(0..255)\n","info":{"declType":"value","type":{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["DynamicBuffer"],"DBuffer"],"tag":"TypeConstructor"}],"tag":"TypeApp"},{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Prim"],"Int"],"tag":"TypeConstructor"}],"tag":"TypeApp"},{"annotation":[],"contents":[{"annotation":[],"contents":[["Effect"],"Effect"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Data","Unit"],"Unit"],"tag":"TypeConstructor"}],"tag":"TypeApp"}],"tag":"TypeApp"}],"tag":"TypeApp"}},"kind":null,"sourceSpan":{"end":[59,41],"name":"/tmp/tmp-2041-yeFAMo6lA5qK/purescript-dynamic-buffer/src/DynamicBuffer.purs","start":[59,1]},"title":"addByte"},{"children":[],"comments":"Adds the contents of the second buffer to the first. The contents\nare copied, so subsequent modifications to the second buffer\ndon't affect the first.\n\n```purescript\nimport Prelude\n\nimport DynamicBuffer as DBuffer\nimport Debug.Trace as Debug\n\nmain = do\n  b1 <- DBuffer.create 8\n  b2 <- DBuffer.create 8\n  DBuffer.addByte b1 10\n  DBuffer.addByte b2 20\n  DBuffer.addByte b2 30\n  DBuffer.addBuffer b1 b2\n\n  Debug.traceM =<< DBuffer.size b1 -- 3\n  Debug.traceM =<< DBuffer.contents b1 -- Uint8Array(3) [ 10, 20, 30 ]\n```\n","info":{"declType":"value","type":{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["DynamicBuffer"],"DBuffer"],"tag":"TypeConstructor"}],"tag":"TypeApp"},{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["DynamicBuffer"],"DBuffer"],"tag":"TypeConstructor"}],"tag":"TypeApp"},{"annotation":[],"contents":[{"annotation":[],"contents":[["Effect"],"Effect"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Data","Unit"],"Unit"],"tag":"TypeConstructor"}],"tag":"TypeApp"}],"tag":"TypeApp"}],"tag":"TypeApp"}},"kind":null,"sourceSpan":{"end":[93,47],"name":"/tmp/tmp-2041-yeFAMo6lA5qK/purescript-dynamic-buffer/src/DynamicBuffer.purs","start":[93,1]},"title":"addBuffer"},{"children":[],"comments":"Mutates the buffer at the given offset.\n\nThrows an exception if you pass an offset that's not within the\ncurrent Buffer's size. _Not capacity_.\n\nThrows an exception if you pass a value that's not within\n(0..255)\n","info":{"declType":"value","type":{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["DynamicBuffer"],"DBuffer"],"tag":"TypeConstructor"}],"tag":"TypeApp"},{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["DynamicBuffer"],"Offset"],"tag":"TypeConstructor"}],"tag":"TypeApp"},{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Prim"],"Int"],"tag":"TypeConstructor"}],"tag":"TypeApp"},{"annotation":[],"contents":[{"annotation":[],"contents":[["Effect"],"Effect"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Data","Unit"],"Unit"],"tag":"TypeConstructor"}],"tag":"TypeApp"}],"tag":"TypeApp"}],"tag":"TypeApp"}],"tag":"TypeApp"}},"kind":null,"sourceSpan":{"end":[149,51],"name":"/tmp/tmp-2041-yeFAMo6lA5qK/purescript-dynamic-buffer/src/DynamicBuffer.purs","start":[149,1]},"title":"setByte"},{"children":[],"comments":"Creates a DBuffer that contains the Utf8 encoding of the given\nString.\n","info":{"declType":"value","type":{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Prim"],"String"],"tag":"TypeConstructor"}],"tag":"TypeApp"},{"annotation":[],"contents":[{"annotation":[],"contents":[["Effect"],"Effect"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["DynamicBuffer"],"DBuffer"],"tag":"TypeConstructor"}],"tag":"TypeApp"}],"tag":"TypeApp"}},"kind":null,"sourceSpan":{"end":[110,37],"name":"/tmp/tmp-2041-yeFAMo6lA5qK/purescript-dynamic-buffer/src/DynamicBuffer.purs","start":[110,1]},"title":"fromUtf8"},{"children":[],"comments":"Extracts the contents of this DBuffer\n","info":{"declType":"value","type":{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["DynamicBuffer"],"DBuffer"],"tag":"TypeConstructor"}],"tag":"TypeApp"},{"annotation":[],"contents":[{"annotation":[],"contents":[["Effect"],"Effect"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Data","ArrayBuffer","Types"],"Uint8Array"],"tag":"TypeConstructor"}],"tag":"TypeApp"}],"tag":"TypeApp"}},"kind":null,"sourceSpan":{"end":[120,41],"name":"/tmp/tmp-2041-yeFAMo6lA5qK/purescript-dynamic-buffer/src/DynamicBuffer.purs","start":[120,1]},"title":"contents"},{"children":[],"comments":"Extracts the contents of this DBuffer without copying.\n\nCareful! Modifying the contents of the DBuffer afterwards will\nmodify the returned Uint8Array in place\n","info":{"declType":"value","type":{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["DynamicBuffer"],"DBuffer"],"tag":"TypeConstructor"}],"tag":"TypeApp"},{"annotation":[],"contents":[{"annotation":[],"contents":[["Effect"],"Effect"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Data","ArrayBuffer","Types"],"Uint8Array"],"tag":"TypeConstructor"}],"tag":"TypeApp"}],"tag":"TypeApp"}},"kind":null,"sourceSpan":{"end":[132,47],"name":"/tmp/tmp-2041-yeFAMo6lA5qK/purescript-dynamic-buffer/src/DynamicBuffer.purs","start":[132,1]},"title":"unsafeContents"},{"children":[],"comments":"Returns the current size of the DBuffer. _Not_ its capacity.\n","info":{"declType":"value","type":{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["DynamicBuffer"],"DBuffer"],"tag":"TypeConstructor"}],"tag":"TypeApp"},{"annotation":[],"contents":[{"annotation":[],"contents":[["Effect"],"Effect"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Prim"],"Int"],"tag":"TypeConstructor"}],"tag":"TypeApp"}],"tag":"TypeApp"}},"kind":null,"sourceSpan":{"end":[139,30],"name":"/tmp/tmp-2041-yeFAMo6lA5qK/purescript-dynamic-buffer/src/DynamicBuffer.purs","start":[139,1]},"title":"size"},{"children":[],"comments":"Displays the contents of the DBuffer for debugging purposes.\nDon't use this in \"production\", it's not referentially\ntransparent.\n\n```purescript\nimport Prelude\n\nimport DynamicBuffer as DBuffer\nimport Effect.Console as Console\n\nmain = do\n  b <- DBuffer.create 8\n  DBuffer.addByte b 10\n  DBuffer.addByte b 20\n  DBuffer.addByte b 30\n\n  Console.log (DBuffer.debugToString b) -- [0xA, 0x14, 0x1E]\n```\n","info":{"declType":"value","type":{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["DynamicBuffer"],"DBuffer"],"tag":"TypeConstructor"}],"tag":"TypeApp"},{"annotation":[],"contents":[["Prim"],"String"],"tag":"TypeConstructor"}],"tag":"TypeApp"}},"kind":null,"sourceSpan":{"end":[178,35],"name":"/tmp/tmp-2041-yeFAMo6lA5qK/purescript-dynamic-buffer/src/DynamicBuffer.purs","start":[178,1]},"title":"debugToString"}],"name":"DynamicBuffer","reExports":[]}],"packageMeta":{"dependencies":{"purescript-arraybuffer-types":">=3.0.0 <4.0.0","purescript-effect":">=4.0.0 <5.0.0","purescript-refs":">=6.0.0 <7.0.0"},"homepage":"https://github.com/kritzcreek/purescript-dynamic-buffer.git","license":["MPL-2.0"],"name":"purescript-dynamic-buffer","repository":{"type":"git","url":"https://github.com/kritzcreek/purescript-dynamic-buffer.git"}},"resolvedDependencies":{"purescript-arraybuffer-types":"3.0.2","purescript-effect":"4.0.0","purescript-prelude":"6.0.1","purescript-refs":"6.0.0"},"tagTime":"2022-05-06T08:23:20+0000","uploader":"pacchettibotti","version":"3.0.1","versionTag":"v3.0.1"}