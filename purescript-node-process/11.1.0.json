{"compilerVersion":"0.15.10","github":["purescript-node","purescript-node-process"],"moduleMap":{"Control.Alt":"purescript-control","Control.Alternative":"purescript-control","Control.Applicative":"purescript-prelude","Control.Apply":"purescript-prelude","Control.Biapplicative":"purescript-bifunctors","Control.Biapply":"purescript-bifunctors","Control.Bind":"purescript-prelude","Control.Category":"purescript-prelude","Control.Comonad":"purescript-control","Control.Comonad.Env":"purescript-transformers","Control.Comonad.Env.Class":"purescript-transformers","Control.Comonad.Env.Trans":"purescript-transformers","Control.Comonad.Store":"purescript-transformers","Control.Comonad.Store.Class":"purescript-transformers","Control.Comonad.Store.Trans":"purescript-transformers","Control.Comonad.Traced":"purescript-transformers","Control.Comonad.Traced.Class":"purescript-transformers","Control.Comonad.Traced.Trans":"purescript-transformers","Control.Comonad.Trans.Class":"purescript-transformers","Control.Extend":"purescript-control","Control.Lazy":"purescript-control","Control.Monad":"purescript-prelude","Control.Monad.Cont":"purescript-transformers","Control.Monad.Cont.Class":"purescript-transformers","Control.Monad.Cont.Trans":"purescript-transformers","Control.Monad.Error.Class":"purescript-transformers","Control.Monad.Except":"purescript-transformers","Control.Monad.Except.Trans":"purescript-transformers","Control.Monad.Gen":"purescript-gen","Control.Monad.Gen.Class":"purescript-gen","Control.Monad.Gen.Common":"purescript-gen","Control.Monad.Identity.Trans":"purescript-transformers","Control.Monad.List.Trans":"purescript-transformers","Control.Monad.Maybe.Trans":"purescript-transformers","Control.Monad.RWS":"purescript-transformers","Control.Monad.RWS.Trans":"purescript-transformers","Control.Monad.Reader":"purescript-transformers","Control.Monad.Reader.Class":"purescript-transformers","Control.Monad.Reader.Trans":"purescript-transformers","Control.Monad.Rec.Class":"purescript-tailrec","Control.Monad.ST":"purescript-st","Control.Monad.ST.Class":"purescript-st","Control.Monad.ST.Global":"purescript-st","Control.Monad.ST.Internal":"purescript-st","Control.Monad.ST.Ref":"purescript-st","Control.Monad.ST.Uncurried":"purescript-st","Control.Monad.State":"purescript-transformers","Control.Monad.State.Class":"purescript-transformers","Control.Monad.State.Trans":"purescript-transformers","Control.Monad.Trans.Class":"purescript-transformers","Control.Monad.Writer":"purescript-transformers","Control.Monad.Writer.Class":"purescript-transformers","Control.Monad.Writer.Trans":"purescript-transformers","Control.MonadPlus":"purescript-control","Control.Parallel":"purescript-parallel","Control.Parallel.Class":"purescript-parallel","Control.Plus":"purescript-control","Control.Semigroupoid":"purescript-prelude","Data.Array":"purescript-arrays","Data.Array.NonEmpty":"purescript-arrays","Data.Array.NonEmpty.Internal":"purescript-arrays","Data.Array.Partial":"purescript-arrays","Data.Array.ST":"purescript-arrays","Data.Array.ST.Iterator":"purescript-arrays","Data.Array.ST.Partial":"purescript-arrays","Data.ArrayBuffer.Types":"purescript-arraybuffer-types","Data.Bifoldable":"purescript-foldable-traversable","Data.Bifunctor":"purescript-bifunctors","Data.Bifunctor.Join":"purescript-bifunctors","Data.Bitraversable":"purescript-foldable-traversable","Data.Boolean":"purescript-prelude","Data.BooleanAlgebra":"purescript-prelude","Data.Bounded":"purescript-prelude","Data.Bounded.Generic":"purescript-prelude","Data.Char":"purescript-strings","Data.Char.Gen":"purescript-strings","Data.CommutativeRing":"purescript-prelude","Data.Comparison":"purescript-contravariant","Data.Const":"purescript-const","Data.Date":"purescript-datetime","Data.Date.Component":"purescript-datetime","Data.Date.Component.Gen":"purescript-datetime","Data.Date.Gen":"purescript-datetime","Data.DateTime":"purescript-datetime","Data.DateTime.Gen":"purescript-datetime","Data.DateTime.Instant":"purescript-datetime","Data.Decidable":"purescript-contravariant","Data.Decide":"purescript-contravariant","Data.Distributive":"purescript-distributive","Data.Divide":"purescript-contravariant","Data.Divisible":"purescript-contravariant","Data.DivisionRing":"purescript-prelude","Data.Either":"purescript-either","Data.Either.Inject":"purescript-either","Data.Either.Nested":"purescript-either","Data.Enum":"purescript-enums","Data.Enum.Gen":"purescript-enums","Data.Enum.Generic":"purescript-enums","Data.Eq":"purescript-prelude","Data.Eq.Generic":"purescript-prelude","Data.Equivalence":"purescript-contravariant","Data.EuclideanRing":"purescript-prelude","Data.Exists":"purescript-exists","Data.Field":"purescript-prelude","Data.Foldable":"purescript-foldable-traversable","Data.FoldableWithIndex":"purescript-foldable-traversable","Data.Function":"purescript-prelude","Data.Function.Uncurried":"purescript-functions","Data.Functor":"purescript-prelude","Data.Functor.App":"purescript-functors","Data.Functor.Clown":"purescript-functors","Data.Functor.Compose":"purescript-functors","Data.Functor.Contravariant":"purescript-contravariant","Data.Functor.Coproduct":"purescript-functors","Data.Functor.Coproduct.Inject":"purescript-functors","Data.Functor.Coproduct.Nested":"purescript-functors","Data.Functor.Costar":"purescript-functors","Data.Functor.Flip":"purescript-functors","Data.Functor.Invariant":"purescript-invariant","Data.Functor.Joker":"purescript-functors","Data.Functor.Product":"purescript-functors","Data.Functor.Product.Nested":"purescript-functors","Data.Functor.Product2":"purescript-functors","Data.FunctorWithIndex":"purescript-foldable-traversable","Data.Generic.Rep":"purescript-prelude","Data.HeytingAlgebra":"purescript-prelude","Data.HeytingAlgebra.Generic":"purescript-prelude","Data.Identity":"purescript-identity","Data.Int":"purescript-integers","Data.Int.Bits":"purescript-integers","Data.Interval":"purescript-datetime","Data.Interval.Duration":"purescript-datetime","Data.Interval.Duration.Iso":"purescript-datetime","Data.Lazy":"purescript-lazy","Data.List":"purescript-lists","Data.List.Internal":"purescript-lists","Data.List.Lazy":"purescript-lists","Data.List.Lazy.NonEmpty":"purescript-lists","Data.List.Lazy.Types":"purescript-lists","Data.List.NonEmpty":"purescript-lists","Data.List.Partial":"purescript-lists","Data.List.Types":"purescript-lists","Data.List.ZipList":"purescript-lists","Data.Map":"purescript-ordered-collections","Data.Map.Gen":"purescript-ordered-collections","Data.Map.Internal":"purescript-ordered-collections","Data.Maybe":"purescript-maybe","Data.Maybe.First":"purescript-maybe","Data.Maybe.Last":"purescript-maybe","Data.Monoid":"purescript-prelude","Data.Monoid.Additive":"purescript-prelude","Data.Monoid.Alternate":"purescript-control","Data.Monoid.Conj":"purescript-prelude","Data.Monoid.Disj":"purescript-prelude","Data.Monoid.Dual":"purescript-prelude","Data.Monoid.Endo":"purescript-prelude","Data.Monoid.Generic":"purescript-prelude","Data.Monoid.Multiplicative":"purescript-prelude","Data.NaturalTransformation":"purescript-prelude","Data.Newtype":"purescript-newtype","Data.NonEmpty":"purescript-nonempty","Data.Nullable":"purescript-nullable","Data.Number":"purescript-numbers","Data.Number.Approximate":"purescript-numbers","Data.Number.Format":"purescript-numbers","Data.Op":"purescript-contravariant","Data.Ord":"purescript-prelude","Data.Ord.Down":"purescript-orders","Data.Ord.Generic":"purescript-prelude","Data.Ord.Max":"purescript-orders","Data.Ord.Min":"purescript-orders","Data.Ordering":"purescript-prelude","Data.Posix":"purescript-posix-types","Data.Posix.Signal":"purescript-posix-types","Data.Predicate":"purescript-contravariant","Data.Profunctor":"purescript-profunctor","Data.Profunctor.Choice":"purescript-profunctor","Data.Profunctor.Closed":"purescript-profunctor","Data.Profunctor.Cochoice":"purescript-profunctor","Data.Profunctor.Costrong":"purescript-profunctor","Data.Profunctor.Join":"purescript-profunctor","Data.Profunctor.Split":"purescript-profunctor","Data.Profunctor.Star":"purescript-profunctor","Data.Profunctor.Strong":"purescript-profunctor","Data.Reflectable":"purescript-prelude","Data.Ring":"purescript-prelude","Data.Ring.Generic":"purescript-prelude","Data.Semigroup":"purescript-prelude","Data.Semigroup.First":"purescript-prelude","Data.Semigroup.Foldable":"purescript-foldable-traversable","Data.Semigroup.Generic":"purescript-prelude","Data.Semigroup.Last":"purescript-prelude","Data.Semigroup.Traversable":"purescript-foldable-traversable","Data.Semiring":"purescript-prelude","Data.Semiring.Generic":"purescript-prelude","Data.Set":"purescript-ordered-collections","Data.Set.NonEmpty":"purescript-ordered-collections","Data.Show":"purescript-prelude","Data.Show.Generic":"purescript-prelude","Data.String":"purescript-strings","Data.String.CaseInsensitive":"purescript-strings","Data.String.CodePoints":"purescript-strings","Data.String.CodeUnits":"purescript-strings","Data.String.Common":"purescript-strings","Data.String.Gen":"purescript-strings","Data.String.NonEmpty":"purescript-strings","Data.String.NonEmpty.CaseInsensitive":"purescript-strings","Data.String.NonEmpty.CodePoints":"purescript-strings","Data.String.NonEmpty.CodeUnits":"purescript-strings","Data.String.NonEmpty.Internal":"purescript-strings","Data.String.Pattern":"purescript-strings","Data.String.Regex":"purescript-strings","Data.String.Regex.Flags":"purescript-strings","Data.String.Regex.Unsafe":"purescript-strings","Data.String.Unsafe":"purescript-strings","Data.Symbol":"purescript-prelude","Data.Time":"purescript-datetime","Data.Time.Component":"purescript-datetime","Data.Time.Component.Gen":"purescript-datetime","Data.Time.Duration":"purescript-datetime","Data.Time.Duration.Gen":"purescript-datetime","Data.Time.Gen":"purescript-datetime","Data.Traversable":"purescript-foldable-traversable","Data.Traversable.Accum":"purescript-foldable-traversable","Data.Traversable.Accum.Internal":"purescript-foldable-traversable","Data.TraversableWithIndex":"purescript-foldable-traversable","Data.Tuple":"purescript-tuples","Data.Tuple.Nested":"purescript-tuples","Data.Unfoldable":"purescript-unfoldable","Data.Unfoldable1":"purescript-unfoldable","Data.Unit":"purescript-prelude","Data.Void":"purescript-prelude","Effect":"purescript-effect","Effect.Aff":"purescript-aff","Effect.Aff.Class":"purescript-aff","Effect.Aff.Compat":"purescript-aff","Effect.Class":"purescript-effect","Effect.Exception":"purescript-exceptions","Effect.Exception.Unsafe":"purescript-exceptions","Effect.Ref":"purescript-refs","Effect.Uncurried":"purescript-effect","Effect.Unsafe":"purescript-effect","Foreign":"purescript-foreign","Foreign.Index":"purescript-foreign","Foreign.Keys":"purescript-foreign","Foreign.Object":"purescript-foreign-object","Foreign.Object.Gen":"purescript-foreign-object","Foreign.Object.ST":"purescript-foreign-object","Foreign.Object.ST.Unsafe":"purescript-foreign-object","Foreign.Object.Unsafe":"purescript-foreign-object","Node.Buffer":"purescript-node-buffer","Node.Buffer.Class":"purescript-node-buffer","Node.Buffer.Constants":"purescript-node-buffer","Node.Buffer.Immutable":"purescript-node-buffer","Node.Buffer.ST":"purescript-node-buffer","Node.Buffer.Types":"purescript-node-buffer","Node.Encoding":"purescript-node-buffer","Node.EventEmitter":"purescript-node-event-emitter","Node.EventEmitter.UtilTypes":"purescript-node-event-emitter","Node.Stream":"purescript-node-streams","Node.Stream.Aff":"purescript-node-streams","Node.Symbol":"purescript-node-event-emitter","Partial":"purescript-partial","Partial.Unsafe":"purescript-partial","Prelude":"purescript-prelude","Record.Unsafe":"purescript-prelude","Safe.Coerce":"purescript-safe-coerce","Type.Data.Boolean":"purescript-typelevel-prelude","Type.Data.Ordering":"purescript-typelevel-prelude","Type.Data.Symbol":"purescript-typelevel-prelude","Type.Equality":"purescript-type-equality","Type.Function":"purescript-typelevel-prelude","Type.Prelude":"purescript-typelevel-prelude","Type.Proxy":"purescript-prelude","Type.Row":"purescript-typelevel-prelude","Type.Row.Homogeneous":"purescript-typelevel-prelude","Type.RowList":"purescript-typelevel-prelude","Unsafe.Coerce":"purescript-unsafe-coerce"},"modules":[{"comments":"This module defines data type for the different platforms supported by\nNode.js\n","declarations":[{"children":[{"comments":null,"info":{"arguments":[],"declType":"dataConstructor"},"sourceSpan":{"end":[10,8],"name":"/tmp/tmp-2037-yrcfoBYML8cX/purescript-node-process/src/Node/Platform.purs","start":[10,3]},"title":"AIX"},{"comments":null,"info":{"arguments":[],"declType":"dataConstructor"},"sourceSpan":{"end":[11,11],"name":"/tmp/tmp-2037-yrcfoBYML8cX/purescript-node-process/src/Node/Platform.purs","start":[11,3]},"title":"Darwin"},{"comments":null,"info":{"arguments":[],"declType":"dataConstructor"},"sourceSpan":{"end":[12,12],"name":"/tmp/tmp-2037-yrcfoBYML8cX/purescript-node-process/src/Node/Platform.purs","start":[12,3]},"title":"FreeBSD"},{"comments":null,"info":{"arguments":[],"declType":"dataConstructor"},"sourceSpan":{"end":[13,10],"name":"/tmp/tmp-2037-yrcfoBYML8cX/purescript-node-process/src/Node/Platform.purs","start":[13,3]},"title":"Linux"},{"comments":null,"info":{"arguments":[],"declType":"dataConstructor"},"sourceSpan":{"end":[14,12],"name":"/tmp/tmp-2037-yrcfoBYML8cX/purescript-node-process/src/Node/Platform.purs","start":[14,3]},"title":"OpenBSD"},{"comments":null,"info":{"arguments":[],"declType":"dataConstructor"},"sourceSpan":{"end":[15,10],"name":"/tmp/tmp-2037-yrcfoBYML8cX/purescript-node-process/src/Node/Platform.purs","start":[15,3]},"title":"SunOS"},{"comments":null,"info":{"arguments":[],"declType":"dataConstructor"},"sourceSpan":{"end":[16,10],"name":"/tmp/tmp-2037-yrcfoBYML8cX/purescript-node-process/src/Node/Platform.purs","start":[16,3]},"title":"Win32"},{"comments":null,"info":{"arguments":[],"declType":"dataConstructor"},"sourceSpan":{"end":[17,12],"name":"/tmp/tmp-2037-yrcfoBYML8cX/purescript-node-process/src/Node/Platform.purs","start":[17,3]},"title":"Android"},{"comments":null,"info":{"declType":"instance","dependencies":[],"type":{"annotation":[],"contents":[{"annotation":[],"contents":[["Data","Show"],"Show"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Node","Platform"],"Platform"],"tag":"TypeConstructor"}],"tag":"TypeApp"}},"sourceSpan":{"end":[51,27],"name":"/tmp/tmp-2037-yrcfoBYML8cX/purescript-node-process/src/Node/Platform.purs","start":[43,1]},"title":"showPlatform"},{"comments":null,"info":{"declType":"instance","dependencies":[],"type":{"annotation":[],"contents":[{"annotation":[],"contents":[["Data","Eq"],"Eq"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Node","Platform"],"Platform"],"tag":"TypeConstructor"}],"tag":"TypeApp"}},"sourceSpan":{"end":[53,42],"name":"/tmp/tmp-2037-yrcfoBYML8cX/purescript-node-process/src/Node/Platform.purs","start":[53,1]},"title":"eqPlatform"},{"comments":null,"info":{"declType":"instance","dependencies":[],"type":{"annotation":[],"contents":[{"annotation":[],"contents":[["Data","Ord"],"Ord"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Node","Platform"],"Platform"],"tag":"TypeConstructor"}],"tag":"TypeApp"}},"sourceSpan":{"end":[54,44],"name":"/tmp/tmp-2037-yrcfoBYML8cX/purescript-node-process/src/Node/Platform.purs","start":[54,1]},"title":"ordPlatform"}],"comments":"See [the Node docs](https://nodejs.org/dist/latest-v6.x/docs/api/os.html#os_os_platform).\n","info":{"dataDeclType":"data","declType":"data","roles":[],"typeArguments":[]},"kind":null,"sourceSpan":{"end":[17,12],"name":"/tmp/tmp-2037-yrcfoBYML8cX/purescript-node-process/src/Node/Platform.purs","start":[9,1]},"title":"Platform"},{"children":[],"comments":"The String representation for a platform, recognised by Node.js.\n","info":{"declType":"value","type":{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Node","Platform"],"Platform"],"tag":"TypeConstructor"}],"tag":"TypeApp"},{"annotation":[],"contents":[["Prim"],"String"],"tag":"TypeConstructor"}],"tag":"TypeApp"}},"kind":null,"sourceSpan":{"end":[20,31],"name":"/tmp/tmp-2037-yrcfoBYML8cX/purescript-node-process/src/Node/Platform.purs","start":[20,1]},"title":"toString"},{"children":[],"comments":"Attempt to parse a `Platform` value from a string, in the format returned\nby Node.js' `process.platform`.\n","info":{"declType":"value","type":{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Prim"],"String"],"tag":"TypeConstructor"}],"tag":"TypeApp"},{"annotation":[],"contents":[{"annotation":[],"contents":[["Data","Maybe"],"Maybe"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Node","Platform"],"Platform"],"tag":"TypeConstructor"}],"tag":"TypeApp"}],"tag":"TypeApp"}},"kind":null,"sourceSpan":{"end":[32,39],"name":"/tmp/tmp-2037-yrcfoBYML8cX/purescript-node-process/src/Node/Platform.purs","start":[32,1]},"title":"fromString"}],"name":"Node.Platform","reExports":[]},{"comments":"Bindings to the global `process` object in Node.js. See also [the Node API documentation](https://nodejs.org/api/process.html)\n","declarations":[{"children":[],"comments":null,"info":{"dataDeclType":"data","declType":"data","roles":[],"typeArguments":[]},"kind":null,"sourceSpan":{"end":[97,36],"name":"/tmp/tmp-2037-yrcfoBYML8cX/purescript-node-process/src/Node/Process.purs","start":[97,1]},"title":"Process"},{"children":[],"comments":null,"info":{"declType":"value","type":{"annotation":[],"contents":[["Node","Process"],"Process"],"tag":"TypeConstructor"}},"kind":null,"sourceSpan":{"end":[99,34],"name":"/tmp/tmp-2037-yrcfoBYML8cX/purescript-node-process/src/Node/Process.purs","start":[99,1]},"title":"process"},{"children":[],"comments":"The 'beforeExit' event is emitted when Node.js empties its event loop and has no additional work to schedule. \nNormally, the Node.js process will exit when there is no work scheduled, but a listener registered on the \n'beforeExit' event can make asynchronous calls, and thereby cause the Node.js process to continue.\n\nThe listener callback function is invoked with the value of process.exitCode passed as the only argument.\nThe 'beforeExit' event is not emitted for conditions causing explicit termination, \nsuch as calling `process.exit()` or uncaught exceptions.\nThe 'beforeExit' should not be used as an alternative to the 'exit' event unless the \nintention is to schedule additional work.\n","info":{"declType":"value","type":{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Node","EventEmitter","UtilTypes"],"EventHandle1"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Node","Process"],"Process"],"tag":"TypeConstructor"}],"tag":"TypeApp"},{"annotation":[],"contents":[["Prim"],"Int"],"tag":"TypeConstructor"}],"tag":"TypeApp"}},"kind":null,"sourceSpan":{"end":[110,40],"name":"/tmp/tmp-2037-yrcfoBYML8cX/purescript-node-process/src/Node/Process.purs","start":[110,1]},"title":"beforeExitH"},{"children":[],"comments":null,"info":{"declType":"value","type":{"annotation":[],"contents":[{"annotation":[],"contents":[["Node","EventEmitter","UtilTypes"],"EventHandle0"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Node","Process"],"Process"],"tag":"TypeConstructor"}],"tag":"TypeApp"}},"kind":null,"sourceSpan":{"end":[113,36],"name":"/tmp/tmp-2037-yrcfoBYML8cX/purescript-node-process/src/Node/Process.purs","start":[113,1]},"title":"disconnectH"},{"children":[],"comments":"The 'exit' event is emitted when the Node.js process is about to exit as a result of either:\n- The process.exit() method being called explicitly;\n- The Node.js event loop no longer having any additional work to perform.\n\nListener functions **must** only perform **synchronous** operations. \nThe Node.js process will exit immediately after calling the 'exit' event listeners causing \nany additional work still queued in the event loop to be abandoned.\n(Maintainer note: I believe the above translates to\n\"Only synchronous (i.e. `Effect`) code can be run in the resulting handler.\nIf you need asynchronous (i.e. `Aff`) code, use `beforeExitH`.\")\n\nThere is no way to prevent the exiting of the event loop at this point, and once all 'exit' \nlisteners have finished running the Node.js process will terminate.\nThe listener callback function is invoked with the exit code specified either by the \n`process.exitCode` property, or the exitCode argument passed to the `process.exit()` method.\n","info":{"declType":"value","type":{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Node","EventEmitter","UtilTypes"],"EventHandle1"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Node","Process"],"Process"],"tag":"TypeConstructor"}],"tag":"TypeApp"},{"annotation":[],"contents":[["Prim"],"Int"],"tag":"TypeConstructor"}],"tag":"TypeApp"}},"kind":null,"sourceSpan":{"end":[131,34],"name":"/tmp/tmp-2037-yrcfoBYML8cX/purescript-node-process/src/Node/Process.purs","start":[131,1]},"title":"exitH"},{"children":[],"comments":null,"info":{"declType":"value","type":{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Node","EventEmitter"],"EventHandle"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Node","Process"],"Process"],"tag":"TypeConstructor"}],"tag":"TypeApp"},{"annotation":[],"contents":{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Foreign"],"Foreign"],"tag":"TypeConstructor"}],"tag":"TypeApp"},{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[{"annotation":[],"contents":[["Data","Maybe"],"Maybe"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Foreign"],"Foreign"],"tag":"TypeConstructor"}],"tag":"TypeApp"}],"tag":"TypeApp"},{"annotation":[],"contents":[{"annotation":[],"contents":[["Effect"],"Effect"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Data","Unit"],"Unit"],"tag":"TypeConstructor"}],"tag":"TypeApp"}],"tag":"TypeApp"}],"tag":"TypeApp"},"tag":"ParensInType"}],"tag":"TypeApp"},{"annotation":[],"contents":{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Effect","Uncurried"],"EffectFn2"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Foreign"],"Foreign"],"tag":"TypeConstructor"}],"tag":"TypeApp"},{"annotation":[],"contents":{"annotation":[],"contents":[{"annotation":[],"contents":[["Data","Nullable"],"Nullable"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Foreign"],"Foreign"],"tag":"TypeConstructor"}],"tag":"TypeApp"},"tag":"ParensInType"}],"tag":"TypeApp"},{"annotation":[],"contents":[["Data","Unit"],"Unit"],"tag":"TypeConstructor"}],"tag":"TypeApp"},"tag":"ParensInType"}],"tag":"TypeApp"}},"kind":null,"sourceSpan":{"end":[134,118],"name":"/tmp/tmp-2037-yrcfoBYML8cX/purescript-node-process/src/Node/Process.purs","start":[134,1]},"title":"messageH"},{"children":[],"comments":"The 'rejectionHandled' event is emitted whenever a Promise has been rejected and an error handler was attached to it (using promise.catch(), for example) later than one turn of the Node.js event loop.\n\nThe Promise object would have previously been emitted in an 'unhandledRejection' event, but during the course of processing gained a rejection handler.\n\nThere is no notion of a top level for a Promise chain at which rejections can always be handled. Being inherently asynchronous in nature, a Promise rejection can be handled at a future point in time, possibly much later than the event loop turn it takes for the 'unhandledRejection' event to be emitted.\n\nAnother way of stating this is that, unlike in synchronous code where there is an ever-growing list of unhandled exceptions, with Promises there can be a growing-and-shrinking list of unhandled rejections.\n\nIn synchronous code, the 'uncaughtException' event is emitted when the list of unhandled exceptions grows.\n\nIn asynchronous code, the 'unhandledRejection' event is emitted when the list of unhandled rejections grows, and the 'rejectionHandled' event is emitted when the list of unhandled rejections shrinks.\n","info":{"declType":"value","type":{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Node","EventEmitter","UtilTypes"],"EventHandle1"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Node","Process"],"Process"],"tag":"TypeConstructor"}],"tag":"TypeApp"},{"annotation":[],"contents":[["Foreign"],"Foreign"],"tag":"TypeConstructor"}],"tag":"TypeApp"}},"kind":null,"sourceSpan":{"end":[148,50],"name":"/tmp/tmp-2037-yrcfoBYML8cX/purescript-node-process/src/Node/Process.purs","start":[148,1]},"title":"rejectionHandledH"},{"children":[],"comments":"Args:\n- `err` <Error> The uncaught exception.\n- `origin` <string> Indicates if the exception originates from an unhandled rejection or from a synchronous error. \n   Can either be 'uncaughtException' or 'unhandledRejection'. \n   The latter is used when an exception happens in a Promise based async context (or if a Promise is rejected) \n   and `--unhandled-rejections` flag set to `strict` or `throw` (which is the default) and \n   the rejection is not handled, or when a rejection happens during the command line entry point's \n   ES module static loading phase.\n\nThe 'uncaughtException' event is emitted when an uncaught JavaScript exception bubbles \nall the way back to the event loop. By default, Node.js handles such exceptions \nby printing the stack trace to `stderr` and exiting with code 1, \noverriding any previously set `process.exitCode`. \nAdding a handler for the 'uncaughtException' event overrides this default behavior. \nAlternatively, change the process.exitCode in the 'uncaughtException' handler which will \nresult in the process exiting with the provided exit code. Otherwise, in the presence of \nsuch handler the process will exit with 0.\n\n'uncaughtException' is a crude mechanism for exception handling intended to be used only as a last resort. The event should not be used as an equivalent to On Error Resume Next. Unhandled exceptions inherently mean that an application is in an undefined state. Attempting to resume application code without properly recovering from the exception can cause additional unforeseen and unpredictable issues.\n\nExceptions thrown from within the event handler will not be caught. Instead the process will exit with a non-zero exit code and the stack trace will be printed. This is to avoid infinite recursion.\n\nAttempting to resume normally after an uncaught exception can be similar to pulling out the power cord when upgrading a computer. Nine out of ten times, nothing happens. But the tenth time, the system becomes corrupted.\n\nThe correct use of 'uncaughtException' is to perform synchronous cleanup of allocated resources (e.g. file descriptors, handles, etc) before shutting down the process. It is not safe to resume normal operation after 'uncaughtException'.\n\nTo restart a crashed application in a more reliable way, whether 'uncaughtException' is emitted or not, an external monitor should be employed in a separate process to detect application failures and recover or restart as needed.\n","info":{"declType":"value","type":{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Node","EventEmitter","UtilTypes"],"EventHandle2"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Node","Process"],"Process"],"tag":"TypeConstructor"}],"tag":"TypeApp"},{"annotation":[],"contents":[["Effect","Exception"],"Error"],"tag":"TypeConstructor"}],"tag":"TypeApp"},{"annotation":[],"contents":[["Prim"],"String"],"tag":"TypeConstructor"}],"tag":"TypeApp"}},"kind":null,"sourceSpan":{"end":[178,56],"name":"/tmp/tmp-2037-yrcfoBYML8cX/purescript-node-process/src/Node/Process.purs","start":[178,1]},"title":"uncaughtExceptionH"},{"children":[],"comments":"Args:\n- `reason` <Error> | <any> The object with which the promise was rejected (typically an Error object).\n- `promise` <Promise> The rejected promise.\n\nThe 'unhandledRejection' event is emitted whenever a Promise is rejected and no error handler is attached to the promise within a turn of the event loop. When programming with Promises, exceptions are encapsulated as \"rejected promises\". Rejections can be caught and handled using promise.catch() and are propagated through a Promise chain. The 'unhandledRejection' event is useful for detecting and keeping track of promises that were rejected whose rejections have not yet been handled.\n","info":{"declType":"value","type":{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Node","EventEmitter","UtilTypes"],"EventHandle2"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Node","Process"],"Process"],"tag":"TypeConstructor"}],"tag":"TypeApp"},{"annotation":[],"contents":[["Foreign"],"Foreign"],"tag":"TypeConstructor"}],"tag":"TypeApp"},{"annotation":[],"contents":[["Foreign"],"Foreign"],"tag":"TypeConstructor"}],"tag":"TypeApp"}},"kind":null,"sourceSpan":{"end":[186,60],"name":"/tmp/tmp-2037-yrcfoBYML8cX/purescript-node-process/src/Node/Process.purs","start":[186,1]},"title":"unhandledRejectionH"},{"children":[],"comments":"Rather than support an `EventHandle` for every possible `Signal`,\nthis function provides one a convenient way for constructing one for any given signal.\n\nSee Node docs: https://nodejs.org/dist/latest-v18.x/docs/api/process.html#signal-events\n","info":{"declType":"value","type":{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Data","Posix","Signal"],"Signal"],"tag":"TypeConstructor"}],"tag":"TypeApp"},{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Node","EventEmitter"],"EventHandle"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Node","Process"],"Process"],"tag":"TypeConstructor"}],"tag":"TypeApp"},{"annotation":[],"contents":{"annotation":[],"contents":[{"annotation":[],"contents":[["Effect"],"Effect"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Data","Unit"],"Unit"],"tag":"TypeConstructor"}],"tag":"TypeApp"},"tag":"ParensInType"}],"tag":"TypeApp"},{"annotation":[],"contents":{"annotation":[],"contents":[{"annotation":[],"contents":[["Effect"],"Effect"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Data","Unit"],"Unit"],"tag":"TypeConstructor"}],"tag":"TypeApp"},"tag":"ParensInType"}],"tag":"TypeApp"}],"tag":"TypeApp"}},"kind":null,"sourceSpan":{"end":[213,71],"name":"/tmp/tmp-2037-yrcfoBYML8cX/purescript-node-process/src/Node/Process.purs","start":[213,1]},"title":"mkSignalH"},{"children":[],"comments":"Same as `mkSignalH` but allows for more options in case the `Signal` ADT is missing any.\n\nSee Node docs: https://nodejs.org/dist/latest-v18.x/docs/api/process.html#signal-events\n","info":{"declType":"value","type":{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Prim"],"String"],"tag":"TypeConstructor"}],"tag":"TypeApp"},{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Node","EventEmitter"],"EventHandle"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Node","Process"],"Process"],"tag":"TypeConstructor"}],"tag":"TypeApp"},{"annotation":[],"contents":{"annotation":[],"contents":[{"annotation":[],"contents":[["Effect"],"Effect"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Data","Unit"],"Unit"],"tag":"TypeConstructor"}],"tag":"TypeApp"},"tag":"ParensInType"}],"tag":"TypeApp"},{"annotation":[],"contents":{"annotation":[],"contents":[{"annotation":[],"contents":[["Effect"],"Effect"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Data","Unit"],"Unit"],"tag":"TypeConstructor"}],"tag":"TypeApp"},"tag":"ParensInType"}],"tag":"TypeApp"}],"tag":"TypeApp"}},"kind":null,"sourceSpan":{"end":[219,72],"name":"/tmp/tmp-2037-yrcfoBYML8cX/purescript-node-process/src/Node/Process.purs","start":[219,1]},"title":"mkSignalH'"},{"children":[],"comments":"Args:\n- `warning` <Error> Key properties of the warning are:\n  - `name` <string> The name of the warning. Default: 'Warning'.\n  - `message` <string> A system-provided description of the warning.\n  - `stack` <string> A stack trace to the location in the code where the warning was issued.\n\nThe 'warning' event is emitted whenever Node.js emits a process warning.\n\nA process warning is similar to an error in that it describes exceptional conditions that are being brought to the user's attention. However, warnings are not part of the normal Node.js and JavaScript error handling flow. Node.js can emit warnings whenever it detects bad coding practices that could lead to sub-optimal application performance, bugs, or security vulnerabilities.\nBy default, Node.js will print process warnings to stderr. The --no-warnings command-line option can be used to suppress the default console output but the 'warning' event will still be emitted by the process object.\n","info":{"declType":"value","type":{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Node","EventEmitter","UtilTypes"],"EventHandle1"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Node","Process"],"Process"],"tag":"TypeConstructor"}],"tag":"TypeApp"},{"annotation":[],"contents":[["Effect","Exception"],"Error"],"tag":"TypeConstructor"}],"tag":"TypeApp"}},"kind":null,"sourceSpan":{"end":[199,39],"name":"/tmp/tmp-2037-yrcfoBYML8cX/purescript-node-process/src/Node/Process.purs","start":[199,1]},"title":"warningH"},{"children":[],"comments":"Args:\n- `worker` <Worker> The <Worker> that was created.\n\nThe 'worker' event is emitted after a new <Worker> thread has been created.\n","info":{"declType":"value","type":{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Node","EventEmitter","UtilTypes"],"EventHandle1"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Node","Process"],"Process"],"tag":"TypeConstructor"}],"tag":"TypeApp"},{"annotation":[],"contents":[["Foreign"],"Foreign"],"tag":"TypeConstructor"}],"tag":"TypeApp"}},"kind":null,"sourceSpan":{"end":[206,40],"name":"/tmp/tmp-2037-yrcfoBYML8cX/purescript-node-process/src/Node/Process.purs","start":[206,1]},"title":"workerH"},{"children":[],"comments":"The `process.abort()` method causes the Node.js process to exit immediately and generate a core file.\nThis feature is not available in Worker threads.\n","info":{"declType":"value","type":{"annotation":[],"contents":[{"annotation":[],"contents":[["Data","Maybe"],"Maybe"],"tag":"TypeConstructor"},{"annotation":[],"contents":{"annotation":[],"contents":[{"annotation":[],"contents":[["Effect"],"Effect"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Data","Unit"],"Unit"],"tag":"TypeConstructor"}],"tag":"TypeApp"},"tag":"ParensInType"}],"tag":"TypeApp"}},"kind":null,"sourceSpan":{"end":[224,29],"name":"/tmp/tmp-2037-yrcfoBYML8cX/purescript-node-process/src/Node/Process.purs","start":[224,1]},"title":"abort"},{"children":[],"comments":"Get a copy of the array containing the command line arguments.\n","info":{"declType":"value","type":{"annotation":[],"contents":[{"annotation":[],"contents":[["Effect"],"Effect"],"tag":"TypeConstructor"},{"annotation":[],"contents":{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Array"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Prim"],"String"],"tag":"TypeConstructor"}],"tag":"TypeApp"},"tag":"ParensInType"}],"tag":"TypeApp"}},"kind":null,"sourceSpan":{"end":[230,45],"name":"/tmp/tmp-2037-yrcfoBYML8cX/purescript-node-process/src/Node/Process.purs","start":[230,1]},"title":"argv"},{"children":[],"comments":"The process.argv0 property stores a read-only copy of the original value of argv[0] passed when Node.js starts.\n","info":{"declType":"value","type":{"annotation":[],"contents":[{"annotation":[],"contents":[["Effect"],"Effect"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Prim"],"String"],"tag":"TypeConstructor"}],"tag":"TypeApp"}},"kind":null,"sourceSpan":{"end":[233,38],"name":"/tmp/tmp-2037-yrcfoBYML8cX/purescript-node-process/src/Node/Process.purs","start":[233,1]},"title":"argv0"},{"children":[],"comments":"This method makes the IPC channel keep the event loop of the process running if .unref() has been called before.\nTypically, this is managed through the number of 'disconnect' and 'message' listeners on the process object. \nHowever, this method can be used to explicitly request a specific behavior.\n\nContext: if the Node.js process was spawned with an IPC channel (see the Child Process documentation), \nthe process.channel property is a reference to the IPC channel. If no IPC channel exists, this property is undefined.\n","info":{"declType":"value","type":{"annotation":[],"contents":[{"annotation":[],"contents":[["Data","Maybe"],"Maybe"],"tag":"TypeConstructor"},{"annotation":[],"contents":{"annotation":[],"contents":[{"annotation":[],"contents":[["Effect"],"Effect"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Data","Unit"],"Unit"],"tag":"TypeConstructor"}],"tag":"TypeApp"},"tag":"ParensInType"}],"tag":"TypeApp"}},"kind":null,"sourceSpan":{"end":[241,34],"name":"/tmp/tmp-2037-yrcfoBYML8cX/purescript-node-process/src/Node/Process.purs","start":[241,1]},"title":"channelRef"},{"children":[],"comments":"This method makes the IPC channel not keep the event loop of the process running, \nand lets it finish even while the channel is open.\nTypically, this is managed through the number of 'disconnect' and 'message' listeners on the process object. \nHowever, this method can be used to explicitly request a specific behavior.\n\nContext: if the Node.js process was spawned with an IPC channel (see the Child Process documentation), \nthe process.channel property is a reference to the IPC channel. If no IPC channel exists, this property is undefined.\n","info":{"declType":"value","type":{"annotation":[],"contents":[{"annotation":[],"contents":[["Data","Maybe"],"Maybe"],"tag":"TypeConstructor"},{"annotation":[],"contents":{"annotation":[],"contents":[{"annotation":[],"contents":[["Effect"],"Effect"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Data","Unit"],"Unit"],"tag":"TypeConstructor"}],"tag":"TypeApp"},"tag":"ParensInType"}],"tag":"TypeApp"}},"kind":null,"sourceSpan":{"end":[253,36],"name":"/tmp/tmp-2037-yrcfoBYML8cX/purescript-node-process/src/Node/Process.purs","start":[253,1]},"title":"channelUnref"},{"children":[],"comments":"Change the current working directory of the process. If the current\ndirectory could not be changed, an exception will be thrown.\n","info":{"declType":"value","type":{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Prim"],"String"],"tag":"TypeConstructor"}],"tag":"TypeApp"},{"annotation":[],"contents":[{"annotation":[],"contents":[["Effect"],"Effect"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Data","Unit"],"Unit"],"tag":"TypeConstructor"}],"tag":"TypeApp"}],"tag":"TypeApp"}},"kind":null,"sourceSpan":{"end":[260,31],"name":"/tmp/tmp-2037-yrcfoBYML8cX/purescript-node-process/src/Node/Process.purs","start":[260,1]},"title":"chdir"},{"children":[],"comments":"Returns a copy of the Config value.\nThe process.config property returns an Object containing the JavaScript representation of the configure options used to compile the current Node.js executable. \nThis is the same as the config.gypi file that was produced when running the ./configure script.\n","info":{"declType":"value","type":{"annotation":[],"contents":[{"annotation":[],"contents":[["Effect"],"Effect"],"tag":"TypeConstructor"},{"annotation":[],"contents":{"annotation":[],"contents":[["Foreign"],"Foreign"],"tag":"TypeConstructor"},"tag":"ParensInType"}],"tag":"TypeApp"}},"kind":null,"sourceSpan":{"end":[268,42],"name":"/tmp/tmp-2037-yrcfoBYML8cX/purescript-node-process/src/Node/Process.purs","start":[268,1]},"title":"config"},{"children":[],"comments":"If the Node.js process is spawned with an IPC channel (see the Child Process and Cluster documentation), the process.connected property will return true so long as the IPC channel is connected and will return false after process.disconnect() is called.\nOnce process.connected is false, it is no longer possible to send messages over the IPC channel using process.send().\n","info":{"declType":"value","type":{"annotation":[],"contents":[{"annotation":[],"contents":[["Effect"],"Effect"],"tag":"TypeConstructor"},{"annotation":[],"contents":{"annotation":[],"contents":[["Prim"],"Boolean"],"tag":"TypeConstructor"},"tag":"ParensInType"}],"tag":"TypeApp"}},"kind":null,"sourceSpan":{"end":[272,45],"name":"/tmp/tmp-2037-yrcfoBYML8cX/purescript-node-process/src/Node/Process.purs","start":[272,1]},"title":"connected"},{"children":[{"comments":null,"info":{"declType":"instance","dependencies":[],"type":{"annotation":[],"contents":[{"annotation":[],"contents":[["Data","Eq"],"Eq"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Node","Process"],"CpuUsage"],"tag":"TypeConstructor"}],"tag":"TypeApp"}},"sourceSpan":{"end":[276,28],"name":"/tmp/tmp-2037-yrcfoBYML8cX/purescript-node-process/src/Node/Process.purs","start":[276,1]},"title":"<anonymous>"},{"comments":null,"info":{"declType":"instance","dependencies":[],"type":{"annotation":[],"contents":[{"annotation":[],"contents":[["Data","Show"],"Show"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Node","Process"],"CpuUsage"],"tag":"TypeConstructor"}],"tag":"TypeApp"}},"sourceSpan":{"end":[278,52],"name":"/tmp/tmp-2037-yrcfoBYML8cX/purescript-node-process/src/Node/Process.purs","start":[277,1]},"title":"<anonymous>"}],"comments":null,"info":{"dataDeclType":"newtype","declType":"data","roles":[],"typeArguments":[]},"kind":null,"sourceSpan":{"end":[274,59],"name":"/tmp/tmp-2037-yrcfoBYML8cX/purescript-node-process/src/Node/Process.purs","start":[274,1]},"title":"CpuUsage"},{"children":[],"comments":null,"info":{"declType":"value","type":{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Node","Process"],"CpuUsage"],"tag":"TypeConstructor"}],"tag":"TypeApp"},{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Record"],"tag":"TypeConstructor"},{"annotation":[],"contents":["user",{"annotation":[],"contents":[["Prim"],"Int"],"tag":"TypeConstructor"},{"annotation":[],"contents":["system",{"annotation":[],"contents":[["Prim"],"Int"],"tag":"TypeConstructor"},{"annotation":[],"tag":"REmpty"}],"tag":"RCons"}],"tag":"RCons"}],"tag":"TypeApp"}],"tag":"TypeApp"}},"kind":null,"sourceSpan":{"end":[280,63],"name":"/tmp/tmp-2037-yrcfoBYML8cX/purescript-node-process/src/Node/Process.purs","start":[280,1]},"title":"cpuUsageToRecord"},{"children":[],"comments":null,"info":{"declType":"value","type":{"annotation":[],"contents":[{"annotation":[],"contents":[["Effect"],"Effect"],"tag":"TypeConstructor"},{"annotation":[],"contents":{"annotation":[],"contents":[["Node","Process"],"CpuUsage"],"tag":"TypeConstructor"},"tag":"ParensInType"}],"tag":"TypeApp"}},"kind":null,"sourceSpan":{"end":[283,45],"name":"/tmp/tmp-2037-yrcfoBYML8cX/purescript-node-process/src/Node/Process.purs","start":[283,1]},"title":"cpuUsage"},{"children":[],"comments":null,"info":{"declType":"value","type":{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Node","Process"],"CpuUsage"],"tag":"TypeConstructor"}],"tag":"TypeApp"},{"annotation":[],"contents":[{"annotation":[],"contents":[["Effect"],"Effect"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Node","Process"],"CpuUsage"],"tag":"TypeConstructor"}],"tag":"TypeApp"}],"tag":"TypeApp"}},"kind":null,"sourceSpan":{"end":[285,44],"name":"/tmp/tmp-2037-yrcfoBYML8cX/purescript-node-process/src/Node/Process.purs","start":[285,1]},"title":"cpuUsageDiff"},{"children":[],"comments":"Get the current working directory of the process.\n","info":{"declType":"value","type":{"annotation":[],"contents":[{"annotation":[],"contents":[["Effect"],"Effect"],"tag":"TypeConstructor"},{"annotation":[],"contents":{"annotation":[],"contents":[["Prim"],"String"],"tag":"TypeConstructor"},"tag":"ParensInType"}],"tag":"TypeApp"}},"kind":null,"sourceSpan":{"end":[291,38],"name":"/tmp/tmp-2037-yrcfoBYML8cX/purescript-node-process/src/Node/Process.purs","start":[291,1]},"title":"cwd"},{"children":[],"comments":null,"info":{"declType":"value","type":{"annotation":[],"contents":[["Prim"],"Int"],"tag":"TypeConstructor"}},"kind":null,"sourceSpan":{"end":[293,32],"name":"/tmp/tmp-2037-yrcfoBYML8cX/purescript-node-process/src/Node/Process.purs","start":[293,1]},"title":"debugPort"},{"children":[],"comments":"If the Node.js process is spawned with an IPC channel (see the Child Process and Cluster documentation), the process.disconnect() method will close the IPC channel to the parent process, allowing the child process to exit gracefully once there are no other connections keeping it alive.\nThe effect of calling process.disconnect() is the same as calling ChildProcess.disconnect() from the parent process.\n\nIf the Node.js process was not spawned with an IPC channel, process.disconnect() will be undefined.\n","info":{"declType":"value","type":{"annotation":[],"contents":[{"annotation":[],"contents":[["Data","Maybe"],"Maybe"],"tag":"TypeConstructor"},{"annotation":[],"contents":{"annotation":[],"contents":[{"annotation":[],"contents":[["Effect"],"Effect"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Data","Unit"],"Unit"],"tag":"TypeConstructor"}],"tag":"TypeApp"},"tag":"ParensInType"}],"tag":"TypeApp"}},"kind":null,"sourceSpan":{"end":[299,34],"name":"/tmp/tmp-2037-yrcfoBYML8cX/purescript-node-process/src/Node/Process.purs","start":[299,1]},"title":"disconnect"},{"children":[],"comments":"Get a copy of the current environment.\nIf you only want to look up a value without paying\nfor the overhead of the copy, use `lookupEnv`.\n","info":{"declType":"value","type":{"annotation":[],"contents":[{"annotation":[],"contents":[["Effect"],"Effect"],"tag":"TypeConstructor"},{"annotation":[],"contents":{"annotation":[],"contents":[{"annotation":[],"contents":[["Foreign","Object"],"Object"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Prim"],"String"],"tag":"TypeConstructor"}],"tag":"TypeApp"},"tag":"ParensInType"}],"tag":"TypeApp"}},"kind":null,"sourceSpan":{"end":[307,51],"name":"/tmp/tmp-2037-yrcfoBYML8cX/purescript-node-process/src/Node/Process.purs","start":[307,1]},"title":"getEnv"},{"children":[],"comments":"Lookup a particular environment variable.\n","info":{"declType":"value","type":{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Prim"],"String"],"tag":"TypeConstructor"}],"tag":"TypeApp"},{"annotation":[],"contents":[{"annotation":[],"contents":[["Effect"],"Effect"],"tag":"TypeConstructor"},{"annotation":[],"contents":{"annotation":[],"contents":[{"annotation":[],"contents":[["Data","Maybe"],"Maybe"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Prim"],"String"],"tag":"TypeConstructor"}],"tag":"TypeApp"},"tag":"ParensInType"}],"tag":"TypeApp"}],"tag":"TypeApp"}},"kind":null,"sourceSpan":{"end":[319,45],"name":"/tmp/tmp-2037-yrcfoBYML8cX/purescript-node-process/src/Node/Process.purs","start":[319,1]},"title":"lookupEnv"},{"children":[],"comments":"Set an environment variable.\n","info":{"declType":"value","type":{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Prim"],"String"],"tag":"TypeConstructor"}],"tag":"TypeApp"},{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Prim"],"String"],"tag":"TypeConstructor"}],"tag":"TypeApp"},{"annotation":[],"contents":[{"annotation":[],"contents":[["Effect"],"Effect"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Data","Unit"],"Unit"],"tag":"TypeConstructor"}],"tag":"TypeApp"}],"tag":"TypeApp"}],"tag":"TypeApp"}},"kind":null,"sourceSpan":{"end":[323,42],"name":"/tmp/tmp-2037-yrcfoBYML8cX/purescript-node-process/src/Node/Process.purs","start":[323,1]},"title":"setEnv"},{"children":[],"comments":"Delete an environment variable.\nUse case: to hide secret environment variable from child processes.\n","info":{"declType":"value","type":{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Prim"],"String"],"tag":"TypeConstructor"}],"tag":"TypeApp"},{"annotation":[],"contents":[{"annotation":[],"contents":[["Effect"],"Effect"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Data","Unit"],"Unit"],"tag":"TypeConstructor"}],"tag":"TypeApp"}],"tag":"TypeApp"}},"kind":null,"sourceSpan":{"end":[330,34],"name":"/tmp/tmp-2037-yrcfoBYML8cX/purescript-node-process/src/Node/Process.purs","start":[330,1]},"title":"unsetEnv"},{"children":[],"comments":"Get a copy of the Node-specific options passed to the `node` executable.\n","info":{"declType":"value","type":{"annotation":[],"contents":[{"annotation":[],"contents":[["Effect"],"Effect"],"tag":"TypeConstructor"},{"annotation":[],"contents":{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Array"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Prim"],"String"],"tag":"TypeConstructor"}],"tag":"TypeApp"},"tag":"ParensInType"}],"tag":"TypeApp"}},"kind":null,"sourceSpan":{"end":[336,49],"name":"/tmp/tmp-2037-yrcfoBYML8cX/purescript-node-process/src/Node/Process.purs","start":[336,1]},"title":"execArgv"},{"children":[],"comments":"The absolute pathname of the `node` executable that started the\nprocess.\n","info":{"declType":"value","type":{"annotation":[],"contents":[{"annotation":[],"contents":[["Effect"],"Effect"],"tag":"TypeConstructor"},{"annotation":[],"contents":{"annotation":[],"contents":[["Prim"],"String"],"tag":"TypeConstructor"},"tag":"ParensInType"}],"tag":"TypeApp"}},"kind":null,"sourceSpan":{"end":[340,43],"name":"/tmp/tmp-2037-yrcfoBYML8cX/purescript-node-process/src/Node/Process.purs","start":[340,1]},"title":"execPath"},{"children":[],"comments":"Cause the process to exit immediately without completing any pending asynchronous operations\nincluding I/O operations to `process.stdout` and `process.stderr`.\nProcess will exit with the `process.exitCode` value if it has been set\nor `0` (i.e. exit successfully) otherwise.\n\nRather than using this function to exit, one should set `process.exitCode` and\nlet Node gracefully exit once all pending asynchronous operations have completed.\nIf it is necessary to terminate the Node.js process due to an error condition, \nthrowing an uncaught error and allowing the process to terminate accordingly \nis safer than calling process.exit().\n","info":{"declType":"value","type":{"annotation":[],"contents":{"identifier":"a","kind":null,"skolem":null,"type":{"annotation":[],"contents":[{"annotation":[],"contents":[["Effect"],"Effect"],"tag":"TypeConstructor"},{"annotation":[],"contents":"a","tag":"TypeVar"}],"tag":"TypeApp"},"visibility":"TypeVarInvisible"},"tag":"ForAll"}},"kind":null,"sourceSpan":{"end":[352,42],"name":"/tmp/tmp-2037-yrcfoBYML8cX/purescript-node-process/src/Node/Process.purs","start":[352,1]},"title":"exit"},{"children":[],"comments":"Cause the process to exit immediately without completing any pending asynchronous operations\nincluding I/O operations to `process.stdout` and `process.stderr`.\nAn exit code of 0 is normally considered successful, and anything else is considered a\nfailure.\n\nRather than using this function to exit, one should set `process.exitCode` and\nlet Node gracefully exit once all pending asynchronous operations have completed.\nIf it is necessary to terminate the Node.js process due to an error condition, \nthrowing an uncaught error and allowing the process to terminate accordingly \nis safer than calling process.exit().\n","info":{"declType":"value","type":{"annotation":[],"contents":{"identifier":"a","kind":null,"skolem":null,"type":{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Prim"],"Int"],"tag":"TypeConstructor"}],"tag":"TypeApp"},{"annotation":[],"contents":[{"annotation":[],"contents":[["Effect"],"Effect"],"tag":"TypeConstructor"},{"annotation":[],"contents":"a","tag":"TypeVar"}],"tag":"TypeApp"}],"tag":"TypeApp"},"visibility":"TypeVarInvisible"},"tag":"ForAll"}},"kind":null,"sourceSpan":{"end":[364,35],"name":"/tmp/tmp-2037-yrcfoBYML8cX/purescript-node-process/src/Node/Process.purs","start":[364,1]},"title":"exit'"},{"children":[],"comments":"Sets the exit code to use when the process exits.\nAn exit code of 0 is normally considered successful, and anything else is considered a\nfailure.\n\nIn comparison to `exit`/`exit'`, this is the safer way \nto exit a Node.js process because any pending asynchronous operations\nincluding I/O operations to `process.stdout` and `process.stderr`\nwill complete before the `Node.js` process exits.\n","info":{"declType":"value","type":{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Prim"],"Int"],"tag":"TypeConstructor"}],"tag":"TypeApp"},{"annotation":[],"contents":[{"annotation":[],"contents":[["Effect"],"Effect"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Data","Unit"],"Unit"],"tag":"TypeConstructor"}],"tag":"TypeApp"}],"tag":"TypeApp"}},"kind":null,"sourceSpan":{"end":[377,34],"name":"/tmp/tmp-2037-yrcfoBYML8cX/purescript-node-process/src/Node/Process.purs","start":[377,1]},"title":"setExitCode"},{"children":[],"comments":"Gets the currently set exit code. This will be `Nothing`\nif the exit code has not been previously set.\n","info":{"declType":"value","type":{"annotation":[],"contents":[{"annotation":[],"contents":[["Effect"],"Effect"],"tag":"TypeConstructor"},{"annotation":[],"contents":{"annotation":[],"contents":[{"annotation":[],"contents":[["Data","Maybe"],"Maybe"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Prim"],"Int"],"tag":"TypeConstructor"}],"tag":"TypeApp"},"tag":"ParensInType"}],"tag":"TypeApp"}},"kind":null,"sourceSpan":{"end":[384,34],"name":"/tmp/tmp-2037-yrcfoBYML8cX/purescript-node-process/src/Node/Process.purs","start":[384,1]},"title":"getExitCode"},{"children":[],"comments":null,"info":{"declType":"value","type":{"annotation":[],"contents":[{"annotation":[],"contents":[["Effect"],"Effect"],"tag":"TypeConstructor"},{"annotation":[],"contents":{"annotation":[],"contents":[{"annotation":[],"contents":[["Data","Maybe"],"Maybe"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Data","Posix"],"Gid"],"tag":"TypeConstructor"}],"tag":"TypeApp"},"tag":"ParensInType"}],"tag":"TypeApp"}},"kind":null,"sourceSpan":{"end":[389,29],"name":"/tmp/tmp-2037-yrcfoBYML8cX/purescript-node-process/src/Node/Process.purs","start":[389,1]},"title":"getGid"},{"children":[],"comments":null,"info":{"declType":"value","type":{"annotation":[],"contents":[{"annotation":[],"contents":[["Effect"],"Effect"],"tag":"TypeConstructor"},{"annotation":[],"contents":{"annotation":[],"contents":[{"annotation":[],"contents":[["Data","Maybe"],"Maybe"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Data","Posix"],"Uid"],"tag":"TypeConstructor"}],"tag":"TypeApp"},"tag":"ParensInType"}],"tag":"TypeApp"}},"kind":null,"sourceSpan":{"end":[394,29],"name":"/tmp/tmp-2037-yrcfoBYML8cX/purescript-node-process/src/Node/Process.purs","start":[394,1]},"title":"getUid"},{"children":[],"comments":null,"info":{"declType":"value","type":{"annotation":[],"contents":[{"annotation":[],"contents":[["Effect"],"Effect"],"tag":"TypeConstructor"},{"annotation":[],"contents":{"annotation":[],"contents":[["Prim"],"Boolean"],"tag":"TypeConstructor"},"tag":"ParensInType"}],"tag":"TypeApp"}},"kind":null,"sourceSpan":{"end":[399,71],"name":"/tmp/tmp-2037-yrcfoBYML8cX/purescript-node-process/src/Node/Process.purs","start":[399,1]},"title":"hasUncaughtExceptionCaptureCallback"},{"children":[],"comments":null,"info":{"declType":"value","type":{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Data","Posix"],"Pid"],"tag":"TypeConstructor"}],"tag":"TypeApp"},{"annotation":[],"contents":[{"annotation":[],"contents":[["Effect"],"Effect"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Data","Unit"],"Unit"],"tag":"TypeConstructor"}],"tag":"TypeApp"}],"tag":"TypeApp"}},"kind":null,"sourceSpan":{"end":[401,27],"name":"/tmp/tmp-2037-yrcfoBYML8cX/purescript-node-process/src/Node/Process.purs","start":[401,1]},"title":"kill"},{"children":[],"comments":null,"info":{"declType":"value","type":{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Data","Posix"],"Pid"],"tag":"TypeConstructor"}],"tag":"TypeApp"},{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Prim"],"String"],"tag":"TypeConstructor"}],"tag":"TypeApp"},{"annotation":[],"contents":[{"annotation":[],"contents":[["Effect"],"Effect"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Data","Unit"],"Unit"],"tag":"TypeConstructor"}],"tag":"TypeApp"}],"tag":"TypeApp"}],"tag":"TypeApp"}},"kind":null,"sourceSpan":{"end":[406,40],"name":"/tmp/tmp-2037-yrcfoBYML8cX/purescript-node-process/src/Node/Process.purs","start":[406,1]},"title":"killStr"},{"children":[],"comments":null,"info":{"declType":"value","type":{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Data","Posix"],"Pid"],"tag":"TypeConstructor"}],"tag":"TypeApp"},{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Prim"],"Int"],"tag":"TypeConstructor"}],"tag":"TypeApp"},{"annotation":[],"contents":[{"annotation":[],"contents":[["Effect"],"Effect"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Data","Unit"],"Unit"],"tag":"TypeConstructor"}],"tag":"TypeApp"}],"tag":"TypeApp"}],"tag":"TypeApp"}},"kind":null,"sourceSpan":{"end":[411,37],"name":"/tmp/tmp-2037-yrcfoBYML8cX/purescript-node-process/src/Node/Process.purs","start":[411,1]},"title":"killInt"},{"children":[],"comments":"- `heapTotal` and `heapUsed` refer to V8's memory usage.\n- `external` refers to the memory usage of C++ objects bound to JavaScript objects managed by V8.\n- `rss`, Resident Set Size, is the amount of space occupied in the main memory device (that is a subset of the total allocated memory) for the process, including all C++ and JavaScript objects and code.\n- `arrayBuffers` refers to memory allocated for ArrayBuffers and SharedArrayBuffers, including all Node.js Buffers. This is also included in the external value. When Node.js is used as an embedded library, this value may be 0 because allocations for ArrayBuffers may not be tracked in that case.\n","info":{"arguments":[],"declType":"typeSynonym","type":{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Record"],"tag":"TypeConstructor"},{"annotation":[],"contents":["rss",{"annotation":[],"contents":[["Prim"],"Int"],"tag":"TypeConstructor"},{"annotation":[],"contents":["heapTotal",{"annotation":[],"contents":[["Prim"],"Int"],"tag":"TypeConstructor"},{"annotation":[],"contents":["heapUsed",{"annotation":[],"contents":[["Prim"],"Int"],"tag":"TypeConstructor"},{"annotation":[],"contents":["external",{"annotation":[],"contents":[["Prim"],"Int"],"tag":"TypeConstructor"},{"annotation":[],"contents":["arrayBuffers",{"annotation":[],"contents":[["Prim"],"Int"],"tag":"TypeConstructor"},{"annotation":[],"tag":"REmpty"}],"tag":"RCons"}],"tag":"RCons"}],"tag":"RCons"}],"tag":"RCons"}],"tag":"RCons"}],"tag":"TypeApp"}},"kind":null,"sourceSpan":{"end":[426,4],"name":"/tmp/tmp-2037-yrcfoBYML8cX/purescript-node-process/src/Node/Process.purs","start":[420,1]},"title":"MemoryUsage"},{"children":[],"comments":"Returns an object describing the memory usage of the Node.js process measured in bytes.\nWhen using Worker threads, `rss` will be a value that is valid for the entire process, while the other fields will only refer to the current thread.\nThe process.memoryUsage() method iterates over each page to gather information about memory usage which might be slow depending on the program memory allocations.\n\nNote: if one just wants the `rss` value, use `memoryUsageRss`, which is faster to compute.\n","info":{"declType":"value","type":{"annotation":[],"contents":[{"annotation":[],"contents":[["Effect"],"Effect"],"tag":"TypeConstructor"},{"annotation":[],"contents":{"annotation":[],"contents":[["Node","Process"],"MemoryUsage"],"tag":"TypeConstructor"},"tag":"ParensInType"}],"tag":"TypeApp"}},"kind":null,"sourceSpan":{"end":[433,51],"name":"/tmp/tmp-2037-yrcfoBYML8cX/purescript-node-process/src/Node/Process.purs","start":[433,1]},"title":"memoryUsage"},{"children":[],"comments":"The process.memoryUsage.rss() method returns an integer representing the Resident Set Size (RSS) in bytes.\nThe Resident Set Size, is the amount of space occupied in the main memory device (that is a subset of the total allocated memory) for the process, including all C++ and JavaScript objects and code.\nThis is the same value as the rss property provided by process.memoryUsage() but process.memoryUsage.rss() is faster.\n","info":{"declType":"value","type":{"annotation":[],"contents":[{"annotation":[],"contents":[["Effect"],"Effect"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Prim"],"Int"],"tag":"TypeConstructor"}],"tag":"TypeApp"}},"kind":null,"sourceSpan":{"end":[438,44],"name":"/tmp/tmp-2037-yrcfoBYML8cX/purescript-node-process/src/Node/Process.purs","start":[438,1]},"title":"memoryUsageRss"},{"children":[],"comments":"Register a callback to run as soon as the current event loop runs to\ncompletion.\nOne should use `queueMicroTask` instead for most situations instead of `nextTick`. \nSee Node docs for more info.\n","info":{"declType":"value","type":{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[{"annotation":[],"contents":[["Effect"],"Effect"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Data","Unit"],"Unit"],"tag":"TypeConstructor"}],"tag":"TypeApp"}],"tag":"TypeApp"},{"annotation":[],"contents":[{"annotation":[],"contents":[["Effect"],"Effect"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Data","Unit"],"Unit"],"tag":"TypeConstructor"}],"tag":"TypeApp"}],"tag":"TypeApp"}},"kind":null,"sourceSpan":{"end":[444,39],"name":"/tmp/tmp-2037-yrcfoBYML8cX/purescript-node-process/src/Node/Process.purs","start":[444,1]},"title":"nextTick"},{"children":[],"comments":"Register a callback that will receive the record arg as an argument\nto run as soon as the current event loop runs to completion.\nOne should use `queueMicroTask` instead for most situations instead of `nextTick`. \nSee Node docs for more info.\n","info":{"declType":"value","type":{"annotation":[],"contents":{"identifier":"r","kind":null,"skolem":null,"type":{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Record"],"tag":"TypeConstructor"},{"annotation":[],"contents":"r","tag":"TypeVar"}],"tag":"TypeApp"}],"tag":"TypeApp"},{"annotation":[],"contents":[{"annotation":[],"contents":[["Effect"],"Effect"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Data","Unit"],"Unit"],"tag":"TypeConstructor"}],"tag":"TypeApp"}],"tag":"TypeApp"},"tag":"ParensInType"}],"tag":"TypeApp"},{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Record"],"tag":"TypeConstructor"},{"annotation":[],"contents":"r","tag":"TypeVar"}],"tag":"TypeApp"}],"tag":"TypeApp"},{"annotation":[],"contents":[{"annotation":[],"contents":[["Effect"],"Effect"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Data","Unit"],"Unit"],"tag":"TypeConstructor"}],"tag":"TypeApp"}],"tag":"TypeApp"}],"tag":"TypeApp"},"visibility":"TypeVarInvisible"},"tag":"ForAll"}},"kind":null,"sourceSpan":{"end":[453,74],"name":"/tmp/tmp-2037-yrcfoBYML8cX/purescript-node-process/src/Node/Process.purs","start":[453,1]},"title":"nextTick'"},{"children":[],"comments":"Returns the PID of the current process.\n","info":{"declType":"value","type":{"annotation":[],"contents":[["Data","Posix"],"Pid"],"tag":"TypeConstructor"}},"kind":null,"sourceSpan":{"end":[459,26],"name":"/tmp/tmp-2037-yrcfoBYML8cX/purescript-node-process/src/Node/Process.purs","start":[459,1]},"title":"pid"},{"children":[],"comments":null,"info":{"declType":"value","type":{"annotation":[],"contents":[{"annotation":[],"contents":[["Data","Maybe"],"Maybe"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Node","Platform"],"Platform"],"tag":"TypeConstructor"}],"tag":"TypeApp"}},"kind":null,"sourceSpan":{"end":[461,27],"name":"/tmp/tmp-2037-yrcfoBYML8cX/purescript-node-process/src/Node/Process.purs","start":[461,1]},"title":"platform"},{"children":[],"comments":null,"info":{"declType":"value","type":{"annotation":[],"contents":[["Prim"],"String"],"tag":"TypeConstructor"}},"kind":null,"sourceSpan":{"end":[464,37],"name":"/tmp/tmp-2037-yrcfoBYML8cX/purescript-node-process/src/Node/Process.purs","start":[464,1]},"title":"platformStr"},{"children":[],"comments":"Returns the PID of the parent of the current process.\n","info":{"declType":"value","type":{"annotation":[],"contents":[["Data","Posix"],"Pid"],"tag":"TypeConstructor"}},"kind":null,"sourceSpan":{"end":[467,27],"name":"/tmp/tmp-2037-yrcfoBYML8cX/purescript-node-process/src/Node/Process.purs","start":[467,1]},"title":"ppid"},{"children":[],"comments":"- `userCPUTime` <integer> maps to ru_utime computed in microseconds. It is the same value as process.cpuUsage().user.\n- `systemCPUTime` <integer> maps to ru_stime computed in microseconds. It is the same value as process.cpuUsage().system.\n- `maxRSS` <integer> maps to ru_maxrss which is the maximum resident set size used in kilobytes.\n- `sharedMemorySize` <integer> maps to ru_ixrss but is not supported by any platform.\n- `unsharedDataSize` <integer> maps to ru_idrss but is not supported by any platform.\n- `unsharedStackSize` <integer> maps to ru_isrss but is not supported by any platform.\n- `minorPageFault` <integer> maps to ru_minflt which is the number of minor page faults for the process, see this article for more details.\n- `majorPageFault` <integer> maps to ru_majflt which is the number of major page faults for the process, see this article for more details. This field is not supported on Windows.\n- `swappedOut` <integer> maps to ru_nswap but is not supported by any platform.\n- `fsRead` <integer> maps to ru_inblock which is the number of times the file system had to perform input.\n- `fsWrite` <integer> maps to ru_oublock which is the number of times the file system had to perform output.\n- `ipcSent` <integer> maps to ru_msgsnd but is not supported by any platform.\n- `ipcReceived` <integer> maps to ru_msgrcv but is not supported by any platform.\n- `signalsCount` <integer> maps to ru_nsignals but is not supported by any platform.\n- `voluntaryContextSwitches` <integer> maps to ru_nvcsw which is the number of times a CPU context switch resulted due to a process voluntarily giving up the processor before its time slice was completed (usually to await availability of a resource). This field is not supported on Windows.\n- `involuntaryContextSwitches` <integer> maps to ru_nivcsw which is the number of times a CPU context switch resulted due to a higher priority process becoming runnable or because the current process exceeded its time slice. This field is not supported on Windows.\n","info":{"arguments":[],"declType":"typeSynonym","type":{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Record"],"tag":"TypeConstructor"},{"annotation":[],"contents":["userCPUTime",{"annotation":[],"contents":[["Prim"],"Int"],"tag":"TypeConstructor"},{"annotation":[],"contents":["systemCPUTime",{"annotation":[],"contents":[["Prim"],"Int"],"tag":"TypeConstructor"},{"annotation":[],"contents":["maxRSS",{"annotation":[],"contents":[["Prim"],"Int"],"tag":"TypeConstructor"},{"annotation":[],"contents":["sharedMemorySize",{"annotation":[],"contents":[["Prim"],"Int"],"tag":"TypeConstructor"},{"annotation":[],"contents":["unsharedDataSize",{"annotation":[],"contents":[["Prim"],"Int"],"tag":"TypeConstructor"},{"annotation":[],"contents":["unsharedStackSize",{"annotation":[],"contents":[["Prim"],"Int"],"tag":"TypeConstructor"},{"annotation":[],"contents":["minorPageFault",{"annotation":[],"contents":[["Prim"],"Int"],"tag":"TypeConstructor"},{"annotation":[],"contents":["majorPageFault",{"annotation":[],"contents":[["Prim"],"Int"],"tag":"TypeConstructor"},{"annotation":[],"contents":["swappedOut",{"annotation":[],"contents":[["Prim"],"Int"],"tag":"TypeConstructor"},{"annotation":[],"contents":["fsRead",{"annotation":[],"contents":[["Prim"],"Int"],"tag":"TypeConstructor"},{"annotation":[],"contents":["fsWrite",{"annotation":[],"contents":[["Prim"],"Int"],"tag":"TypeConstructor"},{"annotation":[],"contents":["ipcSent",{"annotation":[],"contents":[["Prim"],"Int"],"tag":"TypeConstructor"},{"annotation":[],"contents":["ipcReceived",{"annotation":[],"contents":[["Prim"],"Int"],"tag":"TypeConstructor"},{"annotation":[],"contents":["signalsCount",{"annotation":[],"contents":[["Prim"],"Int"],"tag":"TypeConstructor"},{"annotation":[],"contents":["voluntaryContextSwitches",{"annotation":[],"contents":[["Prim"],"Int"],"tag":"TypeConstructor"},{"annotation":[],"contents":["involuntaryContextSwitches",{"annotation":[],"contents":[["Prim"],"Int"],"tag":"TypeConstructor"},{"annotation":[],"tag":"REmpty"}],"tag":"RCons"}],"tag":"RCons"}],"tag":"RCons"}],"tag":"RCons"}],"tag":"RCons"}],"tag":"RCons"}],"tag":"RCons"}],"tag":"RCons"}],"tag":"RCons"}],"tag":"RCons"}],"tag":"RCons"}],"tag":"RCons"}],"tag":"RCons"}],"tag":"RCons"}],"tag":"RCons"}],"tag":"RCons"}],"tag":"TypeApp"}},"kind":null,"sourceSpan":{"end":[503,4],"name":"/tmp/tmp-2037-yrcfoBYML8cX/purescript-node-process/src/Node/Process.purs","start":[486,1]},"title":"ResourceUsage"},{"children":[],"comments":null,"info":{"declType":"value","type":{"annotation":[],"contents":[{"annotation":[],"contents":[["Effect"],"Effect"],"tag":"TypeConstructor"},{"annotation":[],"contents":{"annotation":[],"contents":[["Node","Process"],"ResourceUsage"],"tag":"TypeConstructor"},"tag":"ParensInType"}],"tag":"TypeApp"}},"kind":null,"sourceSpan":{"end":[505,55],"name":"/tmp/tmp-2037-yrcfoBYML8cX/purescript-node-process/src/Node/Process.purs","start":[505,1]},"title":"resourceUsage"},{"children":[],"comments":"Unsafe because child process must be a Node child process and an IPC channel must exist.\n","info":{"declType":"value","type":{"annotation":[],"contents":{"identifier":"messageRows","kind":null,"skolem":null,"type":{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Record"],"tag":"TypeConstructor"},{"annotation":[],"contents":"messageRows","tag":"TypeVar"}],"tag":"TypeApp"}],"tag":"TypeApp"},{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[{"annotation":[],"contents":[["Data","Nullable"],"Nullable"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Foreign"],"Foreign"],"tag":"TypeConstructor"}],"tag":"TypeApp"}],"tag":"TypeApp"},{"annotation":[],"contents":[{"annotation":[],"contents":[["Effect"],"Effect"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Prim"],"Boolean"],"tag":"TypeConstructor"}],"tag":"TypeApp"}],"tag":"TypeApp"}],"tag":"TypeApp"},"visibility":"TypeVarInvisible"},"tag":"ForAll"}},"kind":null,"sourceSpan":{"end":[508,90],"name":"/tmp/tmp-2037-yrcfoBYML8cX/purescript-node-process/src/Node/Process.purs","start":[508,1]},"title":"unsafeSend"},{"children":[],"comments":"- `keepAlive` <boolean> A value that can be used when passing instances of `net.Socket` as the `Handle`. When true, the socket is kept open in the sending process. Default: false.\n","info":{"arguments":[],"declType":"typeSynonym","type":{"annotation":[],"contents":["keepAlive",{"annotation":[],"contents":[["Prim"],"Boolean"],"tag":"TypeConstructor"},{"annotation":[],"tag":"REmpty"}],"tag":"RCons"}},"kind":{"keyword":"type","kind":{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Row"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Prim"],"Type"],"tag":"TypeConstructor"}],"tag":"TypeApp"}},"sourceSpan":{"end":[516,4],"name":"/tmp/tmp-2037-yrcfoBYML8cX/purescript-node-process/src/Node/Process.purs","start":[514,1]},"title":"JsSendOptions"},{"children":[],"comments":"Unsafe because process must be a Node child process and an IPC channel must exist.\n","info":{"declType":"value","type":{"annotation":[],"contents":{"identifier":"r","kind":null,"skolem":null,"type":{"annotation":[],"contents":{"identifier":"trash","kind":null,"skolem":null,"type":{"annotation":[],"contents":{"identifier":"messageRows","kind":null,"skolem":null,"type":{"annotation":[],"contents":[{"constraintAnn":[],"constraintArgs":[{"annotation":[],"contents":"r","tag":"TypeVar"},{"annotation":[],"contents":"trash","tag":"TypeVar"},{"annotation":[],"contents":[["Node","Process"],"JsSendOptions"],"tag":"TypeConstructor"}],"constraintClass":[["Prim","Row"],"Union"],"constraintData":null,"constraintKindArgs":[]},{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Record"],"tag":"TypeConstructor"},{"annotation":[],"contents":"messageRows","tag":"TypeVar"}],"tag":"TypeApp"}],"tag":"TypeApp"},{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[{"annotation":[],"contents":[["Data","Nullable"],"Nullable"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Foreign"],"Foreign"],"tag":"TypeConstructor"}],"tag":"TypeApp"}],"tag":"TypeApp"},{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Record"],"tag":"TypeConstructor"},{"annotation":[],"contents":"r","tag":"TypeVar"}],"tag":"TypeApp"}],"tag":"TypeApp"},{"annotation":[],"contents":[{"annotation":[],"contents":[["Effect"],"Effect"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Prim"],"Boolean"],"tag":"TypeConstructor"}],"tag":"TypeApp"}],"tag":"TypeApp"}],"tag":"TypeApp"}],"tag":"TypeApp"}],"tag":"ConstrainedType"},"visibility":"TypeVarInvisible"},"tag":"ForAll"},"visibility":"TypeVarInvisible"},"tag":"ForAll"},"visibility":"TypeVarInvisible"},"tag":"ForAll"}},"kind":null,"sourceSpan":{"end":[525,20],"name":"/tmp/tmp-2037-yrcfoBYML8cX/purescript-node-process/src/Node/Process.purs","start":[519,1]},"title":"unsafeSendOpts"},{"children":[],"comments":"Unsafe because process must be a Node child process and an IPC channel must exist.\n","info":{"declType":"value","type":{"annotation":[],"contents":{"identifier":"messageRows","kind":null,"skolem":null,"type":{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Record"],"tag":"TypeConstructor"},{"annotation":[],"contents":"messageRows","tag":"TypeVar"}],"tag":"TypeApp"}],"tag":"TypeApp"},{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[{"annotation":[],"contents":[["Data","Nullable"],"Nullable"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Foreign"],"Foreign"],"tag":"TypeConstructor"}],"tag":"TypeApp"}],"tag":"TypeApp"},{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[{"annotation":[],"contents":[["Data","Maybe"],"Maybe"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Effect","Exception"],"Error"],"tag":"TypeConstructor"}],"tag":"TypeApp"}],"tag":"TypeApp"},{"annotation":[],"contents":[{"annotation":[],"contents":[["Effect"],"Effect"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Data","Unit"],"Unit"],"tag":"TypeConstructor"}],"tag":"TypeApp"}],"tag":"TypeApp"},"tag":"ParensInType"}],"tag":"TypeApp"},{"annotation":[],"contents":[{"annotation":[],"contents":[["Effect"],"Effect"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Prim"],"Boolean"],"tag":"TypeConstructor"}],"tag":"TypeApp"}],"tag":"TypeApp"}],"tag":"TypeApp"}],"tag":"TypeApp"},"visibility":"TypeVarInvisible"},"tag":"ForAll"}},"kind":null,"sourceSpan":{"end":[536,20],"name":"/tmp/tmp-2037-yrcfoBYML8cX/purescript-node-process/src/Node/Process.purs","start":[531,1]},"title":"unsafeSendCb"},{"children":[],"comments":"Unsafe because process must be a Node child process and an IPC channel must exist.\n","info":{"declType":"value","type":{"annotation":[],"contents":{"identifier":"r","kind":null,"skolem":null,"type":{"annotation":[],"contents":{"identifier":"trash","kind":null,"skolem":null,"type":{"annotation":[],"contents":{"identifier":"messageRows","kind":null,"skolem":null,"type":{"annotation":[],"contents":[{"constraintAnn":[],"constraintArgs":[{"annotation":[],"contents":"r","tag":"TypeVar"},{"annotation":[],"contents":"trash","tag":"TypeVar"},{"annotation":[],"contents":[["Node","Process"],"JsSendOptions"],"tag":"TypeConstructor"}],"constraintClass":[["Prim","Row"],"Union"],"constraintData":null,"constraintKindArgs":[]},{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Record"],"tag":"TypeConstructor"},{"annotation":[],"contents":"messageRows","tag":"TypeVar"}],"tag":"TypeApp"}],"tag":"TypeApp"},{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[{"annotation":[],"contents":[["Data","Nullable"],"Nullable"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Foreign"],"Foreign"],"tag":"TypeConstructor"}],"tag":"TypeApp"}],"tag":"TypeApp"},{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Record"],"tag":"TypeConstructor"},{"annotation":[],"contents":"r","tag":"TypeVar"}],"tag":"TypeApp"}],"tag":"TypeApp"},{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[{"annotation":[],"contents":[["Data","Maybe"],"Maybe"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Effect","Exception"],"Error"],"tag":"TypeConstructor"}],"tag":"TypeApp"}],"tag":"TypeApp"},{"annotation":[],"contents":[{"annotation":[],"contents":[["Effect"],"Effect"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Data","Unit"],"Unit"],"tag":"TypeConstructor"}],"tag":"TypeApp"}],"tag":"TypeApp"},"tag":"ParensInType"}],"tag":"TypeApp"},{"annotation":[],"contents":[{"annotation":[],"contents":[["Effect"],"Effect"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Prim"],"Boolean"],"tag":"TypeConstructor"}],"tag":"TypeApp"}],"tag":"TypeApp"}],"tag":"TypeApp"}],"tag":"TypeApp"}],"tag":"TypeApp"}],"tag":"ConstrainedType"},"visibility":"TypeVarInvisible"},"tag":"ForAll"},"visibility":"TypeVarInvisible"},"tag":"ForAll"},"visibility":"TypeVarInvisible"},"tag":"ForAll"}},"kind":null,"sourceSpan":{"end":[549,20],"name":"/tmp/tmp-2037-yrcfoBYML8cX/purescript-node-process/src/Node/Process.purs","start":[542,1]},"title":"unsafeSendOptsCb"},{"children":[],"comments":null,"info":{"declType":"value","type":{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[{"annotation":[],"contents":[["Effect"],"Effect"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Data","Unit"],"Unit"],"tag":"TypeConstructor"}],"tag":"TypeApp"}],"tag":"TypeApp"},{"annotation":[],"contents":[{"annotation":[],"contents":[["Effect"],"Effect"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Data","Unit"],"Unit"],"tag":"TypeConstructor"}],"tag":"TypeApp"}],"tag":"TypeApp"}},"kind":null,"sourceSpan":{"end":[554,66],"name":"/tmp/tmp-2037-yrcfoBYML8cX/purescript-node-process/src/Node/Process.purs","start":[554,1]},"title":"setUncaughtExceptionCaptureCallback"},{"children":[],"comments":null,"info":{"declType":"value","type":{"annotation":[],"contents":[{"annotation":[],"contents":[["Effect"],"Effect"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Data","Unit"],"Unit"],"tag":"TypeConstructor"}],"tag":"TypeApp"}},"kind":null,"sourceSpan":{"end":[559,68],"name":"/tmp/tmp-2037-yrcfoBYML8cX/purescript-node-process/src/Node/Process.purs","start":[559,1]},"title":"clearUncaughtExceptionCaptureCallback"},{"children":[],"comments":"The standard input stream. Note that this stream will never emit an `end`\nevent, so any handlers attached via `onEnd` will never be called.\n","info":{"declType":"value","type":{"annotation":[],"contents":[{"annotation":[],"contents":[["Node","Stream"],"Readable"],"tag":"TypeConstructor"},{"annotation":[],"tag":"REmpty"}],"tag":"TypeApp"}},"kind":null,"sourceSpan":{"end":[563,36],"name":"/tmp/tmp-2037-yrcfoBYML8cX/purescript-node-process/src/Node/Process.purs","start":[563,1]},"title":"stdin"},{"children":[],"comments":"The standard output stream. Note that this stream cannot be closed; calling\n`end` will result in an exception being thrown.\n","info":{"declType":"value","type":{"annotation":[],"contents":[{"annotation":[],"contents":[["Node","Stream"],"Writable"],"tag":"TypeConstructor"},{"annotation":[],"tag":"REmpty"}],"tag":"TypeApp"}},"kind":null,"sourceSpan":{"end":[567,37],"name":"/tmp/tmp-2037-yrcfoBYML8cX/purescript-node-process/src/Node/Process.purs","start":[567,1]},"title":"stdout"},{"children":[],"comments":"The standard error stream. Note that this stream cannot be closed; calling\n`end` will result in an exception being thrown.\n","info":{"declType":"value","type":{"annotation":[],"contents":[{"annotation":[],"contents":[["Node","Stream"],"Writable"],"tag":"TypeConstructor"},{"annotation":[],"tag":"REmpty"}],"tag":"TypeApp"}},"kind":null,"sourceSpan":{"end":[571,37],"name":"/tmp/tmp-2037-yrcfoBYML8cX/purescript-node-process/src/Node/Process.purs","start":[571,1]},"title":"stderr"},{"children":[],"comments":"Check whether the standard input stream appears to be attached to a TTY.\nIt is a good idea to check this before processing the input data from stdin.\n","info":{"declType":"value","type":{"annotation":[],"contents":[["Prim"],"Boolean"],"tag":"TypeConstructor"}},"kind":null,"sourceSpan":{"end":[575,37],"name":"/tmp/tmp-2037-yrcfoBYML8cX/purescript-node-process/src/Node/Process.purs","start":[575,1]},"title":"stdinIsTTY"},{"children":[],"comments":"Check whether the standard output stream appears to be attached to a TTY.\nIt is a good idea to check this before printing ANSI codes to stdout\n(e.g. for coloured text in the terminal).\n","info":{"declType":"value","type":{"annotation":[],"contents":[["Prim"],"Boolean"],"tag":"TypeConstructor"}},"kind":null,"sourceSpan":{"end":[580,38],"name":"/tmp/tmp-2037-yrcfoBYML8cX/purescript-node-process/src/Node/Process.purs","start":[580,1]},"title":"stdoutIsTTY"},{"children":[],"comments":"Check whether the standard error stream appears to be attached to a TTY.\nIt is a good idea to check this before printing ANSI codes to stderr\n(e.g. for coloured text in the terminal).\n","info":{"declType":"value","type":{"annotation":[],"contents":[["Prim"],"Boolean"],"tag":"TypeConstructor"}},"kind":null,"sourceSpan":{"end":[585,38],"name":"/tmp/tmp-2037-yrcfoBYML8cX/purescript-node-process/src/Node/Process.purs","start":[585,1]},"title":"stderrIsTTY"},{"children":[],"comments":"The process.title property returns the current process title (i.e. returns the current value of ps). \n","info":{"declType":"value","type":{"annotation":[],"contents":[{"annotation":[],"contents":[["Effect"],"Effect"],"tag":"TypeConstructor"},{"annotation":[],"contents":{"annotation":[],"contents":[["Prim"],"String"],"tag":"TypeConstructor"},"tag":"ParensInType"}],"tag":"TypeApp"}},"kind":null,"sourceSpan":{"end":[588,43],"name":"/tmp/tmp-2037-yrcfoBYML8cX/purescript-node-process/src/Node/Process.purs","start":[588,1]},"title":"getTitle"},{"children":[],"comments":"The process.title property returns the current process title (i.e. returns the current value of ps). \nAssigning a new value to process.title modifies the current value of ps.\n\nWhen a new value is assigned, different platforms will impose different maximum length restrictions \non the title. Usually such restrictions are quite limited. For instance, on Linux and macOS, \nprocess.title is limited to the size of the binary name plus the length of the command-line arguments \nbecause setting the process.title overwrites the argv memory of the process. \nNode.js v0.8 allowed for longer process title strings by also overwriting the environ memory but \nthat was potentially insecure and confusing in some (rather obscure) cases.\n\nAssigning a value to process.title might not result in an accurate label within process manager \napplications such as macOS Activity Monitor or Windows Services Manager.\n","info":{"declType":"value","type":{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Prim"],"String"],"tag":"TypeConstructor"}],"tag":"TypeApp"},{"annotation":[],"contents":[{"annotation":[],"contents":[["Effect"],"Effect"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Data","Unit"],"Unit"],"tag":"TypeConstructor"}],"tag":"TypeApp"}],"tag":"TypeApp"}},"kind":null,"sourceSpan":{"end":[602,34],"name":"/tmp/tmp-2037-yrcfoBYML8cX/purescript-node-process/src/Node/Process.purs","start":[602,1]},"title":"setTitle"},{"children":[],"comments":"The process.uptime() method returns the number of seconds the current Node.js process has been running.\nThe return value includes fractions of a second. Use `Data.Int.floor` to get whole seconds.\n","info":{"declType":"value","type":{"annotation":[],"contents":[{"annotation":[],"contents":[["Effect"],"Effect"],"tag":"TypeConstructor"},{"annotation":[],"contents":{"annotation":[],"contents":[["Prim"],"Number"],"tag":"TypeConstructor"},"tag":"ParensInType"}],"tag":"TypeApp"}},"kind":null,"sourceSpan":{"end":[609,41],"name":"/tmp/tmp-2037-yrcfoBYML8cX/purescript-node-process/src/Node/Process.purs","start":[609,1]},"title":"uptime"},{"children":[],"comments":"Get the Node.js version.\n","info":{"declType":"value","type":{"annotation":[],"contents":[["Prim"],"String"],"tag":"TypeConstructor"}},"kind":null,"sourceSpan":{"end":[612,33],"name":"/tmp/tmp-2037-yrcfoBYML8cX/purescript-node-process/src/Node/Process.purs","start":[612,1]},"title":"version"}],"name":"Node.Process","reExports":[]}],"packageMeta":{"dependencies":{"purescript-effect":">=4.0.0 <5.0.0","purescript-foreign":">=7.0.0 <8.0.0","purescript-foreign-object":">=4.0.0 <5.0.0","purescript-maybe":">=6.0.0 <7.0.0","purescript-node-event-emitter":">=3.0.0 <4.0.0","purescript-node-streams":">=8.0.0 <9.0.0","purescript-posix-types":">=6.0.0 <7.0.0","purescript-prelude":">=6.0.0 <7.0.0","purescript-unsafe-coerce":">=6.0.0 <7.0.0"},"homepage":"https://github.com/purescript-node/purescript-node-process.git","license":["MIT"],"name":"purescript-node-process","repository":{"type":"git","url":"https://github.com/purescript-node/purescript-node-process.git"}},"resolvedDependencies":{"purescript-aff":"7.1.0","purescript-arraybuffer-types":"3.0.2","purescript-arrays":"7.2.1","purescript-bifunctors":"6.0.0","purescript-const":"6.0.0","purescript-contravariant":"6.0.0","purescript-control":"6.0.0","purescript-datetime":"6.1.0","purescript-distributive":"6.0.0","purescript-effect":"4.0.0","purescript-either":"6.1.0","purescript-enums":"6.0.1","purescript-exceptions":"6.0.0","purescript-exists":"6.0.0","purescript-foldable-traversable":"6.0.0","purescript-foreign":"7.0.0","purescript-foreign-object":"4.1.0","purescript-functions":"6.0.0","purescript-functors":"5.0.0","purescript-gen":"4.0.0","purescript-identity":"6.0.0","purescript-integers":"6.0.0","purescript-invariant":"6.0.0","purescript-lazy":"6.0.0","purescript-lists":"7.0.0","purescript-maybe":"6.0.0","purescript-newtype":"5.0.0","purescript-node-buffer":"9.0.0","purescript-node-event-emitter":"3.0.0","purescript-node-streams":"8.0.0","purescript-nonempty":"7.0.0","purescript-nullable":"6.0.0","purescript-numbers":"9.0.1","purescript-ordered-collections":"3.0.0","purescript-orders":"6.0.0","purescript-parallel":"6.0.0","purescript-partial":"4.0.0","purescript-posix-types":"6.0.0","purescript-prelude":"6.0.1","purescript-profunctor":"6.0.0","purescript-refs":"6.0.0","purescript-safe-coerce":"2.0.0","purescript-st":"6.2.0","purescript-strings":"6.0.1","purescript-tailrec":"6.1.0","purescript-transformers":"6.0.0","purescript-tuples":"7.0.0","purescript-type-equality":"4.0.1","purescript-typelevel-prelude":"7.0.0","purescript-unfoldable":"6.0.0","purescript-unsafe-coerce":"6.0.0"},"tagTime":"2023-07-25T04:42:21+0000","uploader":"pacchettibotti","version":"11.1.0","versionTag":"v11.1.0"}