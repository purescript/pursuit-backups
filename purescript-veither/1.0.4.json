{"uploader":"JordanMartinez","packageMeta":{"homepage":"https://github.com/JordanMartinez/purescript-veither","repository":{"url":"https://github.com/JordanMartinez/purescript-veither.git","type":"git"},"private":true,"ignore":["**/.*","node_modules","output","test","bower.json","package.json",".spago"],"devDependencies":{"purescript-quickcheck-laws":"v6.0.0","purescript-spec":"v5.0.0","purescript-psci-support":"v5.0.0"},"authors":[{"email":"jordanalex.martinez@gmail.com","name":"Jordan Martinez"}],"dependencies":{"purescript-control":"v5.0.0","purescript-variant":"v7.0.2","purescript-maybe":"v5.0.0","purescript-transformers":"v5.0.0","purescript-enums":"v5.0.0","purescript-quickcheck":"v7.0.0"},"name":"purescript-veither","keywords":["variant","purescript","sum","type","either"],"license":["MIT"],"description":"A `Variant`-based `Either`"},"tagTime":"2021-05-05T19:53:15+0000","modules":[{"reExports":[],"name":"Data.Veither","comments":null,"declarations":[{"children":[{"comments":null,"title":"Veither","info":{"arguments":[{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Variant"],"Variant"]},{"annotation":[],"tag":"RCons","contents":["_",{"annotation":[],"tag":"TypeVar","contents":"a"},{"annotation":[],"tag":"TypeVar","contents":"errorRows"}]}]}}],"declType":"dataConstructor"},"sourceSpan":null},{"comments":null,"title":"newtypeVeither","info":{"declType":"instance","dependencies":[],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Newtype"],"Newtype"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Veither"],"Veither"]},{"annotation":[],"tag":"TypeVar","contents":"errorRows"}]},{"annotation":[],"tag":"TypeVar","contents":"a"}]}]},{"annotation":[],"tag":"TypeWildcard","contents":null}]}},"sourceSpan":{"start":[111,1],"name":"/home/jordan/Programming/Projects/purescript-veither/src/Data/Veither.purs","end":[111,65]}},{"comments":null,"title":"foldableVeither","info":{"declType":"instance","dependencies":[],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Foldable"],"Foldable"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Veither"],"Veither"]},{"annotation":[],"tag":"TypeVar","contents":"errorRows"}]}]}},"sourceSpan":{"start":[113,1],"name":"/home/jordan/Programming/Projects/purescript-veither/src/Data/Veither.purs","end":[116,43]}},{"comments":null,"title":"traversableVeither","info":{"declType":"instance","dependencies":[],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Traversable"],"Traversable"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Veither"],"Veither"]},{"annotation":[],"tag":"TypeVar","contents":"errorRows"}]}]}},"sourceSpan":{"start":[118,1],"name":"/home/jordan/Programming/Projects/purescript-veither/src/Data/Veither.purs","end":[129,29]}},{"comments":null,"title":"invariantVeither","info":{"declType":"instance","dependencies":[],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Functor","Invariant"],"Invariant"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Veither"],"Veither"]},{"annotation":[],"tag":"TypeVar","contents":"errorRows"}]}]}},"sourceSpan":{"start":[131,1],"name":"/home/jordan/Programming/Projects/purescript-veither/src/Data/Veither.purs","end":[132,15]}},{"comments":null,"title":"functorVeither","info":{"declType":"instance","dependencies":[],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Functor"],"Functor"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Veither"],"Veither"]},{"annotation":[],"tag":"TypeVar","contents":"errorRows"}]}]}},"sourceSpan":{"start":[134,1],"name":"/home/jordan/Programming/Projects/purescript-veither/src/Data/Veither.purs","end":[145,27]}},{"comments":null,"title":"functorWithIndexVeither","info":{"declType":"instance","dependencies":[],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","FunctorWithIndex"],"FunctorWithIndex"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Veither"],"Veither"]},{"annotation":[],"tag":"TypeVar","contents":"errorRows"}]}]}},"sourceSpan":{"start":[147,1],"name":"/home/jordan/Programming/Projects/purescript-veither/src/Data/Veither.purs","end":[148,32]}},{"comments":null,"title":"applyVeither","info":{"declType":"instance","dependencies":[],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Control","Apply"],"Apply"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Veither"],"Veither"]},{"annotation":[],"tag":"TypeVar","contents":"errorRows"}]}]}},"sourceSpan":{"start":[150,1],"name":"/home/jordan/Programming/Projects/purescript-veither/src/Data/Veither.purs","end":[161,27]}},{"comments":null,"title":"applicativeVeither","info":{"declType":"instance","dependencies":[],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Control","Applicative"],"Applicative"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Veither"],"Veither"]},{"annotation":[],"tag":"TypeVar","contents":"errorRows"}]}]}},"sourceSpan":{"start":[163,1],"name":"/home/jordan/Programming/Projects/purescript-veither/src/Data/Veither.purs","end":[165,40]}},{"comments":null,"title":"bindVeither","info":{"declType":"instance","dependencies":[],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Control","Bind"],"Bind"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Veither"],"Veither"]},{"annotation":[],"tag":"TypeVar","contents":"errorRows"}]}]}},"sourceSpan":{"start":[167,1],"name":"/home/jordan/Programming/Projects/purescript-veither/src/Data/Veither.purs","end":[178,27]}},{"comments":null,"title":"monadVeither","info":{"declType":"instance","dependencies":[],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Control","Monad"],"Monad"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Veither"],"Veither"]},{"annotation":[],"tag":"TypeVar","contents":"errorRows"}]}]}},"sourceSpan":{"start":[180,1],"name":"/home/jordan/Programming/Projects/purescript-veither/src/Data/Veither.purs","end":[180,50]}},{"comments":null,"title":"altVeither","info":{"declType":"instance","dependencies":[],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Control","Alt"],"Alt"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Veither"],"Veither"]},{"annotation":[],"tag":"TypeVar","contents":"errorRows"}]}]}},"sourceSpan":{"start":[182,1],"name":"/home/jordan/Programming/Projects/purescript-veither/src/Data/Veither.purs","end":[189,29]}},{"comments":null,"title":"extendVeither","info":{"declType":"instance","dependencies":[],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Control","Extend"],"Extend"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Veither"],"Veither"]},{"annotation":[],"tag":"TypeVar","contents":"errorRows"}]}]}},"sourceSpan":{"start":[191,1],"name":"/home/jordan/Programming/Projects/purescript-veither/src/Data/Veither.purs","end":[193,35]}},{"comments":null,"title":"showVeither","info":{"declType":"instance","dependencies":[{"constraintAnn":[],"constraintClass":[["Data","Show"],"Show"],"constraintArgs":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Variant"],"Variant"]},{"annotation":[],"tag":"RCons","contents":["_",{"annotation":[],"tag":"TypeVar","contents":"a"},{"annotation":[],"tag":"TypeVar","contents":"errorRows"}]}]}],"constraintKindArgs":[],"constraintData":null}],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Show"],"Show"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Veither"],"Veither"]},{"annotation":[],"tag":"TypeVar","contents":"errorRows"}]},{"annotation":[],"tag":"TypeVar","contents":"a"}]}]}},"sourceSpan":{"start":[195,1],"name":"/home/jordan/Programming/Projects/purescript-veither/src/Data/Veither.purs","end":[195,107]}},{"comments":null,"title":"eqVeither","info":{"declType":"instance","dependencies":[{"constraintAnn":[],"constraintClass":[["Data","Eq"],"Eq"],"constraintArgs":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Variant"],"Variant"]},{"annotation":[],"tag":"RCons","contents":["_",{"annotation":[],"tag":"TypeVar","contents":"a"},{"annotation":[],"tag":"TypeVar","contents":"errorRows"}]}]}],"constraintKindArgs":[],"constraintData":null}],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Eq"],"Eq"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Veither"],"Veither"]},{"annotation":[],"tag":"TypeVar","contents":"errorRows"}]},{"annotation":[],"tag":"TypeVar","contents":"a"}]}]}},"sourceSpan":{"start":[197,1],"name":"/home/jordan/Programming/Projects/purescript-veither/src/Data/Veither.purs","end":[197,101]}},{"comments":null,"title":"ordVeither","info":{"declType":"instance","dependencies":[{"constraintAnn":[],"constraintClass":[["Data","Ord"],"Ord"],"constraintArgs":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Variant"],"Variant"]},{"annotation":[],"tag":"RCons","contents":["_",{"annotation":[],"tag":"TypeVar","contents":"a"},{"annotation":[],"tag":"TypeVar","contents":"errorRows"}]}]}],"constraintKindArgs":[],"constraintData":null}],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Ord"],"Ord"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Veither"],"Veither"]},{"annotation":[],"tag":"TypeVar","contents":"errorRows"}]},{"annotation":[],"tag":"TypeVar","contents":"a"}]}]}},"sourceSpan":{"start":[201,1],"name":"/home/jordan/Programming/Projects/purescript-veither/src/Data/Veither.purs","end":[201,104]}},{"comments":null,"title":"boundedVeither","info":{"declType":"instance","dependencies":[{"constraintAnn":[],"constraintClass":[["Data","Bounded"],"Bounded"],"constraintArgs":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Variant"],"Variant"]},{"annotation":[],"tag":"RCons","contents":["_",{"annotation":[],"tag":"TypeVar","contents":"a"},{"annotation":[],"tag":"TypeVar","contents":"errorRows"}]}]}],"constraintKindArgs":[],"constraintData":null}],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Bounded"],"Bounded"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Veither"],"Veither"]},{"annotation":[],"tag":"TypeVar","contents":"errorRows"}]},{"annotation":[],"tag":"TypeVar","contents":"a"}]}]}},"sourceSpan":{"start":[205,1],"name":"/home/jordan/Programming/Projects/purescript-veither/src/Data/Veither.purs","end":[205,116]}},{"comments":null,"title":"enumVeither","info":{"declType":"instance","dependencies":[{"constraintAnn":[],"constraintClass":[["Data","Enum"],"Enum"],"constraintArgs":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Variant"],"Variant"]},{"annotation":[],"tag":"RCons","contents":["_",{"annotation":[],"tag":"TypeVar","contents":"a"},{"annotation":[],"tag":"TypeVar","contents":"errorRows"}]}]}],"constraintKindArgs":[],"constraintData":null}],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Enum"],"Enum"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Veither"],"Veither"]},{"annotation":[],"tag":"TypeVar","contents":"errorRows"}]},{"annotation":[],"tag":"TypeVar","contents":"a"}]}]}},"sourceSpan":{"start":[207,1],"name":"/home/jordan/Programming/Projects/purescript-veither/src/Data/Veither.purs","end":[207,107]}},{"comments":null,"title":"boundedEnumVeither","info":{"declType":"instance","dependencies":[{"constraintAnn":[],"constraintClass":[["Data","Enum"],"BoundedEnum"],"constraintArgs":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Variant"],"Variant"]},{"annotation":[],"tag":"RCons","contents":["_",{"annotation":[],"tag":"TypeVar","contents":"a"},{"annotation":[],"tag":"TypeVar","contents":"errorRows"}]}]}],"constraintKindArgs":[],"constraintData":null}],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Enum"],"BoundedEnum"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Veither"],"Veither"]},{"annotation":[],"tag":"TypeVar","contents":"errorRows"}]},{"annotation":[],"tag":"TypeVar","contents":"a"}]}]}},"sourceSpan":{"start":[209,1],"name":"/home/jordan/Programming/Projects/purescript-veither/src/Data/Veither.purs","end":[209,128]}},{"comments":null,"title":"semigroupVeither","info":{"declType":"instance","dependencies":[{"constraintAnn":[],"constraintClass":[["Data","Semigroup"],"Semigroup"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"b"}],"constraintKindArgs":[],"constraintData":null}],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Semigroup"],"Semigroup"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Veither"],"Veither"]},{"annotation":[],"tag":"TypeVar","contents":"errorRows"}]},{"annotation":[],"tag":"TypeVar","contents":"b"}]}]}},"sourceSpan":{"start":[211,1],"name":"/home/jordan/Programming/Projects/purescript-veither/src/Data/Veither.purs","end":[212,34]}},{"comments":null,"title":"arbitraryVeither","info":{"declType":"instance","dependencies":[{"constraintAnn":[],"constraintClass":[["Prim","RowList"],"RowToList"],"constraintArgs":[{"annotation":[],"tag":"RCons","contents":["_",{"annotation":[],"tag":"TypeVar","contents":"a"},{"annotation":[],"tag":"TypeVar","contents":"errorRows"}]},{"annotation":[],"tag":"TypeVar","contents":"rowList"}],"constraintKindArgs":[],"constraintData":null},{"constraintAnn":[],"constraintClass":[["Data","Veither"],"VariantArbitrarys"],"constraintArgs":[{"annotation":[],"tag":"RCons","contents":["_",{"annotation":[],"tag":"TypeVar","contents":"a"},{"annotation":[],"tag":"TypeVar","contents":"errorRows"}]},{"annotation":[],"tag":"TypeVar","contents":"rowList"}],"constraintKindArgs":[],"constraintData":null}],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Test","QuickCheck","Arbitrary"],"Arbitrary"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Veither"],"Veither"]},{"annotation":[],"tag":"TypeVar","contents":"errorRows"}]},{"annotation":[],"tag":"TypeVar","contents":"a"}]}]}},"sourceSpan":{"start":[531,1],"name":"/home/jordan/Programming/Projects/purescript-veither/src/Data/Veither.purs","end":[547,33]}},{"comments":null,"title":"coarbitraryVeither","info":{"declType":"instance","dependencies":[{"constraintAnn":[],"constraintClass":[["Prim","RowList"],"RowToList"],"constraintArgs":[{"annotation":[],"tag":"RCons","contents":["_",{"annotation":[],"tag":"TypeVar","contents":"a"},{"annotation":[],"tag":"TypeVar","contents":"errorRows"}]},{"annotation":[],"tag":"TypeVar","contents":"rl"}],"constraintKindArgs":[],"constraintData":null},{"constraintAnn":[],"constraintClass":[["Data","Veither"],"VariantCoarbitrarys"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"rl"}],"constraintKindArgs":[],"constraintData":null}],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Test","QuickCheck","Arbitrary"],"Coarbitrary"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Veither"],"Veither"]},{"annotation":[],"tag":"TypeVar","contents":"errorRows"}]},{"annotation":[],"tag":"TypeVar","contents":"a"}]}]}},"sourceSpan":{"start":[578,1],"name":"/home/jordan/Programming/Projects/purescript-veither/src/Data/Veither.purs","end":[587,29]}}],"comments":null,"title":"Veither","info":{"declType":"data","dataDeclType":"newtype","typeArguments":[["errorRows",null],["a",null]]},"sourceSpan":{"start":[103,1],"name":"/home/jordan/Programming/Projects/purescript-veither/src/Data/Veither.purs","end":[103,70]}},{"children":[],"comments":"Proxy type for `Veither`'s happy path (e.g. `Either`'s `Right` constructor).\n\nNote: the label `\"_\"` intentionally doesn't match the name of this value (i.e. '_veither').\n","title":"_veither","info":{"declType":"value","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Type","Proxy"],"Proxy"]},{"annotation":[],"tag":"TypeLevelString","contents":"_"}]}},"sourceSpan":{"start":[108,1],"name":"/home/jordan/Programming/Projects/purescript-veither/src/Data/Veither.purs","end":[108,21]}},{"children":[],"comments":"Convert a `Veither` into a value by defining how to handle each possible value.\nBelow is an example of the typical usage.\n\n```\nconsume :: Veither (a :: Int, b :: String, c :: Boolean) Number -> String\nconsume v = veither handleError handleSuccess v\n  where\n  handleError :: Variant (a :: Int, b :: String, c :: Boolean)\n  handleError =\n    case_\n      # on (Proxy :: Proxy \"a\") show\n      # on (Proxy :: Proxy \"b\") show\n      # on (Proxy :: Proxy \"c\") show\n\n  handleSuccess :: Number -> String\n  handleSuccess = show\n```\n","title":"veither","info":{"declType":"value","type":{"annotation":[],"tag":"ForAll","contents":["errorRows",{"annotation":[],"tag":"ForAll","contents":["a",{"annotation":[],"tag":"ForAll","contents":["b",{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Variant"],"Variant"]},{"annotation":[],"tag":"TypeVar","contents":"errorRows"}]}]},{"annotation":[],"tag":"TypeVar","contents":"b"}]}}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeVar","contents":"a"}]},{"annotation":[],"tag":"TypeVar","contents":"b"}]}}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Veither"],"Veither"]},{"annotation":[],"tag":"TypeVar","contents":"errorRows"}]},{"annotation":[],"tag":"TypeVar","contents":"a"}]}]},{"annotation":[],"tag":"TypeVar","contents":"b"}]}]}]},null]},null]},null]}},"sourceSpan":{"start":[231,1],"name":"/home/jordan/Programming/Projects/purescript-veither/src/Data/Veither.purs","end":[231,92]}},{"children":[],"comments":"Extract the value out of the `Veither` when there are no other possible values\n\n```\nvsafe (pure x) == x\n```\n","title":"vsafe","info":{"declType":"value","type":{"annotation":[],"tag":"ForAll","contents":["a",{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Veither"],"Veither"]},{"annotation":[],"tag":"REmpty"}]},{"annotation":[],"tag":"TypeVar","contents":"a"}]}]},{"annotation":[],"tag":"TypeVar","contents":"a"}]},null]}},"sourceSpan":{"start":[247,1],"name":"/home/jordan/Programming/Projects/purescript-veither/src/Data/Veither.purs","end":[247,35]}},{"children":[],"comments":"Removes one of the possible error types in the `Veither` by converting its value\nto a value of type `a`, the 'happy path' type. This can be useful for gradually\npicking off some of the errors the `Veither` value could have by handling only\nsome of them at a given point in your code.\n\nIf the number of errors in your `Veither` are small and can all be handled via `vhandle`,\none can use `vsafe` to extract the value of the 'happy path' `a` type.\n\n```\nfoo :: Veither (b :: Int) String\nfoo = pure \"2\"\n\n_b :: Proxy \"b\"\n_b = Proxy\n\nbar :: Veither (b :: Int) String\nbar = Veither (inj_ _b 3)\n\nvhandle _b show bar == ((pure \"3\") :: Veither () String)\nvhandle _b show foo == ((pure \"2\") :: Veither () String)\n\nsafe (vhandle _b show bar) == \"3\"\nsafe (vhandle _b show foo) == \"2\"\n````\n","title":"vhandle","info":{"declType":"value","type":{"annotation":[],"tag":"ForAll","contents":["sym",{"annotation":[],"tag":"ForAll","contents":["b",{"annotation":[],"tag":"ForAll","contents":["otherErrorRows",{"annotation":[],"tag":"ForAll","contents":["errorRows",{"annotation":[],"tag":"ForAll","contents":["a",{"annotation":[],"tag":"ConstrainedType","contents":[{"constraintAnn":[],"constraintClass":[["Data","Symbol"],"IsSymbol"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"sym"}],"constraintKindArgs":[],"constraintData":null},{"annotation":[],"tag":"ConstrainedType","contents":[{"constraintAnn":[],"constraintClass":[["Prim","Row"],"Cons"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"sym"},{"annotation":[],"tag":"TypeVar","contents":"b"},{"annotation":[],"tag":"TypeVar","contents":"otherErrorRows"},{"annotation":[],"tag":"TypeVar","contents":"errorRows"}],"constraintKindArgs":[],"constraintData":null},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Type","Proxy"],"Proxy"]},{"annotation":[],"tag":"TypeVar","contents":"sym"}]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeVar","contents":"b"}]},{"annotation":[],"tag":"TypeVar","contents":"a"}]}}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Veither"],"Veither"]},{"annotation":[],"tag":"TypeVar","contents":"errorRows"}]},{"annotation":[],"tag":"TypeVar","contents":"a"}]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Veither"],"Veither"]},{"annotation":[],"tag":"TypeVar","contents":"otherErrorRows"}]},{"annotation":[],"tag":"TypeVar","contents":"a"}]}]}]}]}]}]},null]},null]},null]},null]},null]}},"sourceSpan":{"start":[274,1],"name":"/home/jordan/Programming/Projects/purescript-veither/src/Data/Veither.purs","end":[277,77]}},{"children":[],"comments":"Removes one, some, or all of the possible error types in the `Veither`\nby converting its value to a value of type `a`, the 'happy path' type.\n\nNote: you will get a compiler error unless you add annotations\nto the record argument. You can do this by defining defining the record\nusing a `let` statement or by annotating it inline\n(e.g. { a: identity} :: { a :: Int -> Int }`).\n\nIf all errors are handled via `vhandleErrors`,\none can use `vsafe` to extract the value of the 'happy path' `a` type.\n\nDoing something like `vhandleErrors {\"_\": \\(i :: Int) -> i} v` will\nfail to compile. If you want to handle all possible values in the\n`Veither`, use `veither` or `Data.Variant.onMatch` directly\n(e.g. `onMatch record <<< un Veither`) instead of this function.\n\nExample usage:\n```\n_a :: Proxy \"a\"\n_a = Proxy\n\n_b :: Proxy \"b\"\n_b = Proxy\n\nva :: Veither (a :: Int, b :: Boolean, c :: List String) String\nva = Veither $ inj _a 4\n\nvb :: Veither (a :: Int, b :: Boolean, c :: List String) String\nvb = Veither $ inj _b false\n\nhandlers :: Record (a :: Int -> String, b :: Boolean -> String)\nhandlers = { a: show, b: show }\n\nvhandleErrors handlers va == ((pure \"4\") :: Veither (c :: List String) String)\nvhandleErrors handlers vb == ((pure \"false\") :: Veither (c :: List String) String)\n````\n","title":"vhandleErrors","info":{"declType":"value","type":{"annotation":[],"tag":"ForAll","contents":["handlers",{"annotation":[],"tag":"ForAll","contents":["rlHandlers",{"annotation":[],"tag":"ForAll","contents":["handledRows",{"annotation":[],"tag":"ForAll","contents":["remainingErrorRows",{"annotation":[],"tag":"ForAll","contents":["allErrorRows",{"annotation":[],"tag":"ForAll","contents":["a",{"annotation":[],"tag":"ConstrainedType","contents":[{"constraintAnn":[],"constraintClass":[["Prim","RowList"],"RowToList"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"handlers"},{"annotation":[],"tag":"TypeVar","contents":"rlHandlers"}],"constraintKindArgs":[],"constraintData":null},{"annotation":[],"tag":"ConstrainedType","contents":[{"constraintAnn":[],"constraintClass":[["Data","Variant","Internal"],"VariantMatchCases"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"rlHandlers"},{"annotation":[],"tag":"TypeVar","contents":"handledRows"},{"annotation":[],"tag":"TypeVar","contents":"a"}],"constraintKindArgs":[],"constraintData":null},{"annotation":[],"tag":"ConstrainedType","contents":[{"constraintAnn":[],"constraintClass":[["Prim","Row"],"Union"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"handledRows"},{"annotation":[],"tag":"RCons","contents":["_",{"annotation":[],"tag":"TypeVar","contents":"a"},{"annotation":[],"tag":"TypeVar","contents":"remainingErrorRows"}]},{"annotation":[],"tag":"RCons","contents":["_",{"annotation":[],"tag":"TypeVar","contents":"a"},{"annotation":[],"tag":"TypeVar","contents":"allErrorRows"}]}],"constraintKindArgs":[],"constraintData":null},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"annotation":[],"tag":"TypeVar","contents":"handlers"}]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Veither"],"Veither"]},{"annotation":[],"tag":"TypeVar","contents":"allErrorRows"}]},{"annotation":[],"tag":"TypeVar","contents":"a"}]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Veither"],"Veither"]},{"annotation":[],"tag":"TypeVar","contents":"remainingErrorRows"}]},{"annotation":[],"tag":"TypeVar","contents":"a"}]}]}]}]}]}]},null]},null]},null]},null]},null]},null]}},"sourceSpan":{"start":[324,1],"name":"/home/jordan/Programming/Projects/purescript-veither/src/Data/Veither.purs","end":[328,77]}},{"children":[],"comments":"Convert an `Either` into a `Veither`.\n\n```\np :: Proxy \"foo\"\np = Proxy\n\nvfromEither p (Left Int)  :: forall a. Variant (foo :: Int) a\nvfromEither p (Right Int) :: forall a. Variant (foo :: a  ) Int\n```\n","title":"vfromEither","info":{"declType":"value","type":{"annotation":[],"tag":"ForAll","contents":["sym",{"annotation":[],"tag":"ForAll","contents":["otherRows",{"annotation":[],"tag":"ForAll","contents":["errorRows",{"annotation":[],"tag":"ForAll","contents":["a",{"annotation":[],"tag":"ForAll","contents":["b",{"annotation":[],"tag":"ConstrainedType","contents":[{"constraintAnn":[],"constraintClass":[["Data","Symbol"],"IsSymbol"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"sym"}],"constraintKindArgs":[],"constraintData":null},{"annotation":[],"tag":"ConstrainedType","contents":[{"constraintAnn":[],"constraintClass":[["Prim","Row"],"Cons"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"sym"},{"annotation":[],"tag":"TypeVar","contents":"a"},{"annotation":[],"tag":"TypeVar","contents":"otherRows"},{"annotation":[],"tag":"RCons","contents":["_",{"annotation":[],"tag":"TypeVar","contents":"b"},{"annotation":[],"tag":"TypeVar","contents":"errorRows"}]}],"constraintKindArgs":[],"constraintData":null},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Type","Proxy"],"Proxy"]},{"annotation":[],"tag":"TypeVar","contents":"sym"}]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Either"],"Either"]},{"annotation":[],"tag":"TypeVar","contents":"a"}]},{"annotation":[],"tag":"TypeVar","contents":"b"}]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Veither"],"Veither"]},{"annotation":[],"tag":"TypeVar","contents":"errorRows"}]},{"annotation":[],"tag":"TypeVar","contents":"b"}]}]}]}]}]},null]},null]},null]},null]},null]}},"sourceSpan":{"start":[349,1],"name":"/home/jordan/Programming/Projects/purescript-veither/src/Data/Veither.purs","end":[352,52]}},{"children":[],"comments":"Extract the value from a `Veither`, using a default value in case the underlying\n`Variant` is storing one of the error rows' values.\n\n```\nvError :: Veither (foo :: Int) String\nvError = Veither (inj (Proxy :: Proxy \"foo\") 4)\n\nvSuccess :: Veither (foo :: Int) String\nvSuccess = pure \"yay\"\n\nvfromRight \"\" vError   == \"\"\nvfromRight \"\" vSuccess == \"yay\"\n```\n","title":"vfromRight","info":{"declType":"value","type":{"annotation":[],"tag":"ForAll","contents":["errorRows",{"annotation":[],"tag":"ForAll","contents":["a",{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeVar","contents":"a"}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Veither"],"Veither"]},{"annotation":[],"tag":"TypeVar","contents":"errorRows"}]},{"annotation":[],"tag":"TypeVar","contents":"a"}]}]},{"annotation":[],"tag":"TypeVar","contents":"a"}]}]},null]},null]}},"sourceSpan":{"start":[368,1],"name":"/home/jordan/Programming/Projects/purescript-veither/src/Data/Veither.purs","end":[368,61]}},{"children":[],"comments":"Same as `vfromRight` but the default value is lazy.\n","title":"vfromRight'","info":{"declType":"value","type":{"annotation":[],"tag":"ForAll","contents":["errorRows",{"annotation":[],"tag":"ForAll","contents":["a",{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]},{"annotation":[],"tag":"TypeVar","contents":"a"}]}}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Veither"],"Veither"]},{"annotation":[],"tag":"TypeVar","contents":"errorRows"}]},{"annotation":[],"tag":"TypeVar","contents":"a"}]}]},{"annotation":[],"tag":"TypeVar","contents":"a"}]}]},null]},null]}},"sourceSpan":{"start":[377,1],"name":"/home/jordan/Programming/Projects/purescript-veither/src/Data/Veither.purs","end":[377,71]}},{"children":[],"comments":"Extract the error value from a `Veither`, using a default value in case the underlying\n`Variant` is storing the `(\"_\" :: a)` rows' values.\n\n```\nvError :: Veither (foo :: Int) String\nvError = Veither (inj (Proxy :: Proxy \"foo\") 4)\n\nvSuccess :: Veither (foo :: Int) String\nvSuccess = pure \"yay\"\n\nvfromLeft  8 (case_ # on (Proxy :: Proxy \"foo\") identity) vError   == 4\nvfromRight 8 (case_ # on (Proxy :: Proxy \"foo\") identity) vSuccess == 8\n```\n","title":"vfromLeft","info":{"declType":"value","type":{"annotation":[],"tag":"ForAll","contents":["errorRows",{"annotation":[],"tag":"ForAll","contents":["a",{"annotation":[],"tag":"ForAll","contents":["b",{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeVar","contents":"b"}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Variant"],"Variant"]},{"annotation":[],"tag":"TypeVar","contents":"errorRows"}]}]},{"annotation":[],"tag":"TypeVar","contents":"b"}]}}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Veither"],"Veither"]},{"annotation":[],"tag":"TypeVar","contents":"errorRows"}]},{"annotation":[],"tag":"TypeVar","contents":"a"}]}]},{"annotation":[],"tag":"TypeVar","contents":"b"}]}]}]},null]},null]},null]}},"sourceSpan":{"start":[398,1],"name":"/home/jordan/Programming/Projects/purescript-veither/src/Data/Veither.purs","end":[398,88]}},{"children":[],"comments":"Same as `vfromLeft` but the default value is lazy.\n","title":"vfromLeft'","info":{"declType":"value","type":{"annotation":[],"tag":"ForAll","contents":["errorRows",{"annotation":[],"tag":"ForAll","contents":["a",{"annotation":[],"tag":"ForAll","contents":["b",{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]},{"annotation":[],"tag":"TypeVar","contents":"b"}]}}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Variant"],"Variant"]},{"annotation":[],"tag":"TypeVar","contents":"errorRows"}]}]},{"annotation":[],"tag":"TypeVar","contents":"b"}]}}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Veither"],"Veither"]},{"annotation":[],"tag":"TypeVar","contents":"errorRows"}]},{"annotation":[],"tag":"TypeVar","contents":"a"}]}]},{"annotation":[],"tag":"TypeVar","contents":"b"}]}]}]},null]},null]},null]}},"sourceSpan":{"start":[403,1],"name":"/home/jordan/Programming/Projects/purescript-veither/src/Data/Veither.purs","end":[403,98]}},{"children":[],"comments":"Convert a `Maybe` value into a `Veither` value using a default value when the `Maybe` value is `Nothing`.\n\n```\nmJust :: Maybe String\nmJust = Just \"x\"\n\nmNothing :: Maybe String\nmNothing = Nothing\n\n_foo :: Proxy \"foo\"\n_foo = Proxy\n\nvnote _foo 2 mJust    == (pure \"y\")             :: Veither (foo :: Int) String\nvnote _foo 2 mNothing == (Veither (inj _foo 2)) :: Veither (foo :: Int) String\n```\n","title":"vnote","info":{"declType":"value","type":{"annotation":[],"tag":"ForAll","contents":["otherErrorRows",{"annotation":[],"tag":"ForAll","contents":["errorRows",{"annotation":[],"tag":"ForAll","contents":["s",{"annotation":[],"tag":"ForAll","contents":["a",{"annotation":[],"tag":"ForAll","contents":["b",{"annotation":[],"tag":"ConstrainedType","contents":[{"constraintAnn":[],"constraintClass":[["Prim","Row"],"Cons"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"s"},{"annotation":[],"tag":"TypeVar","contents":"a"},{"annotation":[],"tag":"TypeVar","contents":"otherErrorRows"},{"annotation":[],"tag":"RCons","contents":["_",{"annotation":[],"tag":"TypeVar","contents":"b"},{"annotation":[],"tag":"TypeVar","contents":"errorRows"}]}],"constraintKindArgs":[],"constraintData":null},{"annotation":[],"tag":"ConstrainedType","contents":[{"constraintAnn":[],"constraintClass":[["Data","Symbol"],"IsSymbol"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"s"}],"constraintKindArgs":[],"constraintData":null},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Type","Proxy"],"Proxy"]},{"annotation":[],"tag":"TypeVar","contents":"s"}]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeVar","contents":"a"}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"annotation":[],"tag":"TypeVar","contents":"b"}]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Veither"],"Veither"]},{"annotation":[],"tag":"TypeVar","contents":"errorRows"}]},{"annotation":[],"tag":"TypeVar","contents":"b"}]}]}]}]}]}]},null]},null]},null]},null]},null]}},"sourceSpan":{"start":[422,1],"name":"/home/jordan/Programming/Projects/purescript-veither/src/Data/Veither.purs","end":[425,49]}},{"children":[],"comments":"Same as `vnote` but the default value is lazy.\n","title":"vnote'","info":{"declType":"value","type":{"annotation":[],"tag":"ForAll","contents":["otherErrorRows",{"annotation":[],"tag":"ForAll","contents":["errorRows",{"annotation":[],"tag":"ForAll","contents":["s",{"annotation":[],"tag":"ForAll","contents":["a",{"annotation":[],"tag":"ForAll","contents":["b",{"annotation":[],"tag":"ConstrainedType","contents":[{"constraintAnn":[],"constraintClass":[["Prim","Row"],"Cons"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"s"},{"annotation":[],"tag":"TypeVar","contents":"a"},{"annotation":[],"tag":"TypeVar","contents":"otherErrorRows"},{"annotation":[],"tag":"RCons","contents":["_",{"annotation":[],"tag":"TypeVar","contents":"b"},{"annotation":[],"tag":"TypeVar","contents":"errorRows"}]}],"constraintKindArgs":[],"constraintData":null},{"annotation":[],"tag":"ConstrainedType","contents":[{"constraintAnn":[],"constraintClass":[["Data","Symbol"],"IsSymbol"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"s"}],"constraintKindArgs":[],"constraintData":null},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Type","Proxy"],"Proxy"]},{"annotation":[],"tag":"TypeVar","contents":"s"}]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]},{"annotation":[],"tag":"TypeVar","contents":"a"}]}}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"annotation":[],"tag":"TypeVar","contents":"b"}]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Veither"],"Veither"]},{"annotation":[],"tag":"TypeVar","contents":"errorRows"}]},{"annotation":[],"tag":"TypeVar","contents":"b"}]}]}]}]}]}]},null]},null]},null]},null]},null]}},"sourceSpan":{"start":[429,1],"name":"/home/jordan/Programming/Projects/purescript-veither/src/Data/Veither.purs","end":[432,58]}},{"children":[],"comments":"Convert a `Veither` value into a `Maybe` value.\n","title":"vhush","info":{"declType":"value","type":{"annotation":[],"tag":"ForAll","contents":["errorRows",{"annotation":[],"tag":"ForAll","contents":["a",{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Veither"],"Veither"]},{"annotation":[],"tag":"TypeVar","contents":"errorRows"}]},{"annotation":[],"tag":"TypeVar","contents":"a"}]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"annotation":[],"tag":"TypeVar","contents":"a"}]}]},null]},null]}},"sourceSpan":{"start":[436,1],"name":"/home/jordan/Programming/Projects/purescript-veither/src/Data/Veither.purs","end":[436,58]}},{"children":[],"comments":"Generate `Veither` with uniform probability given a record whose\ngenerators' labels correspond to the `Veither`'s labels\n\n```\n-- Note: type annotations are needed! Otherwise, you'll get compiler errors.\nquickCheckGen do\n  v <- genVeitherUniform\n     -- first approach: annotate inline\n     { \"_\": genHappyPath :: Gen Int\n     , x: genXValues :: Gen (Maybe String)\n     , y: pure \"foo\" :: Gen String\n     }\n  -- rest of test...\n\nquickCheckGen do\n  let\n    -- second approach: use a let with annotations before usage\n    r :: { \"_\" :: Gen Int, x :: Gen (Maybe String), y :: Gen String }\n    r = { \"_\": genHappyPath, x: genXValues, y: pure \"foo\" }\n  v <- genVeitherUniform r\n  -- rest of test...\n```\n","title":"genVeitherUniform","info":{"declType":"value","type":{"annotation":[],"tag":"ForAll","contents":["a",{"annotation":[],"tag":"ForAll","contents":["errorRows",{"annotation":[],"tag":"ForAll","contents":["otherGenRows",{"annotation":[],"tag":"ForAll","contents":["rowList",{"annotation":[],"tag":"ConstrainedType","contents":[{"constraintAnn":[],"constraintClass":[["Prim","RowList"],"RowToList"],"constraintArgs":[{"annotation":[],"tag":"RCons","contents":["_",{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Test","QuickCheck","Gen"],"Gen"]},{"annotation":[],"tag":"TypeVar","contents":"a"}]},{"annotation":[],"tag":"TypeVar","contents":"otherGenRows"}]},{"annotation":[],"tag":"TypeVar","contents":"rowList"}],"constraintKindArgs":[],"constraintData":null},{"annotation":[],"tag":"ConstrainedType","contents":[{"constraintAnn":[],"constraintClass":[["Data","Veither"],"GenVariantUniform"],"constraintArgs":[{"annotation":[],"tag":"RCons","contents":["_",{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Test","QuickCheck","Gen"],"Gen"]},{"annotation":[],"tag":"TypeVar","contents":"a"}]},{"annotation":[],"tag":"TypeVar","contents":"otherGenRows"}]},{"annotation":[],"tag":"TypeVar","contents":"rowList"},{"annotation":[],"tag":"RCons","contents":["_",{"annotation":[],"tag":"TypeVar","contents":"a"},{"annotation":[],"tag":"TypeVar","contents":"errorRows"}]}],"constraintKindArgs":[],"constraintData":null},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"annotation":[],"tag":"RCons","contents":["_",{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Test","QuickCheck","Gen"],"Gen"]},{"annotation":[],"tag":"TypeVar","contents":"a"}]},{"annotation":[],"tag":"TypeVar","contents":"otherGenRows"}]}]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Test","QuickCheck","Gen"],"Gen"]},{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Veither"],"Veither"]},{"annotation":[],"tag":"TypeVar","contents":"errorRows"}]},{"annotation":[],"tag":"TypeVar","contents":"a"}]}}]}]}]}]},null]},null]},null]},null]}},"sourceSpan":{"start":[461,1],"name":"/home/jordan/Programming/Projects/purescript-veither/src/Data/Veither.purs","end":[468,31]}},{"children":[],"comments":"Generate `Veither` with user-specified probability given a record whose\ngenerators' labels correspond to the `Veither`'s labels\n\n```\n-- Note: type annotations are needed! Otherwise, you'll get compiler errors.\nquickCheckGen do\n  v <- genVeitherFrequency\n     -- first approach: annotate inline\n     { \"_\": genHappyPath :: Gen Int\n     , x: genXValues :: Gen (Maybe String)\n     , y: pure \"foo\" :: Gen String\n     }\n  -- rest of test...\n\nquickCheckGen do\n  let\n    -- second approach: use a let with annotations before usage\n    r :: { \"_\" :: Gen Int, x :: Gen (Maybe String), y :: Gen String }\n    r = { \"_\": genHappyPath, x: genXValues, y: pure \"foo\" }\n  v <- genVeitherFrequency r\n  -- rest of test...\n```\n","title":"genVeitherFrequncy","info":{"declType":"value","type":{"annotation":[],"tag":"ForAll","contents":["a",{"annotation":[],"tag":"ForAll","contents":["errorRows",{"annotation":[],"tag":"ForAll","contents":["otherGenRows",{"annotation":[],"tag":"ForAll","contents":["rowList",{"annotation":[],"tag":"ConstrainedType","contents":[{"constraintAnn":[],"constraintClass":[["Prim","RowList"],"RowToList"],"constraintArgs":[{"annotation":[],"tag":"RCons","contents":["_",{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Tuple"],"Tuple"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Number"]}]},{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Test","QuickCheck","Gen"],"Gen"]},{"annotation":[],"tag":"TypeVar","contents":"a"}]}}]},{"annotation":[],"tag":"TypeVar","contents":"otherGenRows"}]},{"annotation":[],"tag":"TypeVar","contents":"rowList"}],"constraintKindArgs":[],"constraintData":null},{"annotation":[],"tag":"ConstrainedType","contents":[{"constraintAnn":[],"constraintClass":[["Data","Veither"],"GenVariantFrequency"],"constraintArgs":[{"annotation":[],"tag":"RCons","contents":["_",{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Tuple"],"Tuple"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Number"]}]},{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Test","QuickCheck","Gen"],"Gen"]},{"annotation":[],"tag":"TypeVar","contents":"a"}]}}]},{"annotation":[],"tag":"TypeVar","contents":"otherGenRows"}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Number"]},{"annotation":[],"tag":"TypeVar","contents":"rowList"},{"annotation":[],"tag":"RCons","contents":["_",{"annotation":[],"tag":"TypeVar","contents":"a"},{"annotation":[],"tag":"TypeVar","contents":"errorRows"}]}],"constraintKindArgs":[],"constraintData":null},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"annotation":[],"tag":"RCons","contents":["_",{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Tuple"],"Tuple"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Number"]}]},{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Test","QuickCheck","Gen"],"Gen"]},{"annotation":[],"tag":"TypeVar","contents":"a"}]}}]},{"annotation":[],"tag":"TypeVar","contents":"otherGenRows"}]}]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Test","QuickCheck","Gen"],"Gen"]},{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Veither"],"Veither"]},{"annotation":[],"tag":"TypeVar","contents":"errorRows"}]},{"annotation":[],"tag":"TypeVar","contents":"a"}]}}]}]}]}]},null]},null]},null]},null]}},"sourceSpan":{"start":[505,1],"name":"/home/jordan/Programming/Projects/purescript-veither/src/Data/Veither.purs","end":[515,31]}},{"children":[{"comments":null,"title":"variantArbitrarys","info":{"declType":"typeClassMember","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Type","Proxy"],"Proxy"]},{"annotation":[],"tag":"TypeVar","contents":"finalRow"}]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Type","Proxy"],"Proxy"]},{"annotation":[],"tag":"TypeVar","contents":"currentRL"}]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","List","Types"],"List"]},{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Test","QuickCheck","Gen"],"Gen"]},{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Variant"],"Variant"]},{"annotation":[],"tag":"TypeVar","contents":"finalRow"}]}}]}}]}]}]}},"sourceSpan":{"start":[553,3],"name":"/home/jordan/Programming/Projects/purescript-veither/src/Data/Veither.purs","end":[553,92]}},{"comments":null,"title":"variantArbitrarysNil","info":{"declType":"instance","dependencies":[],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Veither"],"VariantArbitrarys"]},{"annotation":[],"tag":"TypeVar","contents":"ignore"}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim","RowList"],"Nil"]}]}},"sourceSpan":{"start":[555,1],"name":"/home/jordan/Programming/Projects/purescript-veither/src/Data/Veither.purs","end":[556,32]}},{"comments":null,"title":"variantArbitrarysCons","info":{"declType":"instance","dependencies":[{"constraintAnn":[],"constraintClass":[["Data","Symbol"],"IsSymbol"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"sym"}],"constraintKindArgs":[],"constraintData":null},{"constraintAnn":[],"constraintClass":[["Data","Veither"],"VariantArbitrarys"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"final"},{"annotation":[],"tag":"TypeVar","contents":"rlTail"}],"constraintKindArgs":[],"constraintData":null},{"constraintAnn":[],"constraintClass":[["Prim","Row"],"Cons"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"sym"},{"annotation":[],"tag":"TypeVar","contents":"a"},{"annotation":[],"tag":"TypeVar","contents":"rowTail"},{"annotation":[],"tag":"TypeVar","contents":"final"}],"constraintKindArgs":[],"constraintData":null},{"constraintAnn":[],"constraintClass":[["Test","QuickCheck","Arbitrary"],"Arbitrary"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"a"}],"constraintKindArgs":[],"constraintData":null}],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Veither"],"VariantArbitrarys"]},{"annotation":[],"tag":"TypeVar","contents":"final"}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim","RowList"],"Cons"]},{"annotation":[],"tag":"TypeVar","contents":"sym"}]},{"annotation":[],"tag":"TypeVar","contents":"a"}]},{"annotation":[],"tag":"TypeVar","contents":"rlTail"}]}]}},"sourceSpan":{"start":[558,1],"name":"/home/jordan/Programming/Projects/purescript-veither/src/Data/Veither.purs","end":[574,80]}}],"comments":null,"title":"VariantArbitrarys","info":{"fundeps":[],"arguments":[["finalRow",null],["currentRL",null]],"declType":"typeClass","superclasses":[]},"sourceSpan":{"start":[552,1],"name":"/home/jordan/Programming/Projects/purescript-veither/src/Data/Veither.purs","end":[553,92]}},{"children":[],"comments":null,"title":"UnknownVariantValue","info":{"kind":{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Type"]},"declType":"externData"},"sourceSpan":{"start":[576,1],"name":"/home/jordan/Programming/Projects/purescript-veither/src/Data/Veither.purs","end":[576,48]}},{"children":[{"comments":null,"title":"variantCoarbitrarys","info":{"declType":"typeClassMember","type":{"annotation":[],"tag":"ForAll","contents":["r",{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Type","Proxy"],"Proxy"]},{"annotation":[],"tag":"TypeVar","contents":"currentRL"}]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"annotation":[],"tag":"RCons","contents":["type",{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"String"]},{"annotation":[],"tag":"RCons","contents":["value",{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Veither"],"UnknownVariantValue"]},{"annotation":[],"tag":"REmpty"}]}]}]}]},{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Test","QuickCheck","Gen"],"Gen"]},{"annotation":[],"tag":"TypeVar","contents":"r"}]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Test","QuickCheck","Gen"],"Gen"]},{"annotation":[],"tag":"TypeVar","contents":"r"}]}]}}]}]},null]}},"sourceSpan":{"start":[591,3],"name":"/home/jordan/Programming/Projects/purescript-veither/src/Data/Veither.purs","end":[591,123]}},{"comments":null,"title":"variantCoarbitrarysNil","info":{"declType":"instance","dependencies":[],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Veither"],"VariantCoarbitrarys"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim","RowList"],"Nil"]}]}},"sourceSpan":{"start":[593,1],"name":"/home/jordan/Programming/Projects/purescript-veither/src/Data/Veither.purs","end":[594,53]}},{"comments":null,"title":"variantCoarbitrarysCons","info":{"declType":"instance","dependencies":[{"constraintAnn":[],"constraintClass":[["Data","Symbol"],"IsSymbol"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"sym"}],"constraintKindArgs":[],"constraintData":null},{"constraintAnn":[],"constraintClass":[["Test","QuickCheck","Arbitrary"],"Coarbitrary"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"a"}],"constraintKindArgs":[],"constraintData":null},{"constraintAnn":[],"constraintClass":[["Data","Veither"],"VariantCoarbitrarys"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"tail"}],"constraintKindArgs":[],"constraintData":null}],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Veither"],"VariantCoarbitrarys"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim","RowList"],"Cons"]},{"annotation":[],"tag":"TypeVar","contents":"sym"}]},{"annotation":[],"tag":"TypeVar","contents":"a"}]},{"annotation":[],"tag":"TypeVar","contents":"tail"}]}]}},"sourceSpan":{"start":[596,1],"name":"/home/jordan/Programming/Projects/purescript-veither/src/Data/Veither.purs","end":[606,29]}}],"comments":null,"title":"VariantCoarbitrarys","info":{"fundeps":[],"arguments":[["currentRL",null]],"declType":"typeClass","superclasses":[]},"sourceSpan":{"start":[590,1],"name":"/home/jordan/Programming/Projects/purescript-veither/src/Data/Veither.purs","end":[591,123]}},{"children":[{"comments":null,"title":"mkUniformList","info":{"declType":"typeClassMember","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"annotation":[],"tag":"TypeVar","contents":"recordRows"}]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Type","Proxy"],"Proxy"]},{"annotation":[],"tag":"TypeVar","contents":"rl"}]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","List","Types"],"List"]},{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Test","QuickCheck","Gen"],"Gen"]},{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Variant"],"Variant"]},{"annotation":[],"tag":"TypeVar","contents":"variantRows"}]}}]}}]}]}]}},"sourceSpan":{"start":[610,3],"name":"/home/jordan/Programming/Projects/purescript-veither/src/Data/Veither.purs","end":[610,87]}},{"comments":null,"title":"genVariantUniformNil","info":{"declType":"instance","dependencies":[],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Veither"],"GenVariantUniform"]},{"annotation":[],"tag":"TypeVar","contents":"ignore1"}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim","RowList"],"Nil"]}]},{"annotation":[],"tag":"TypeVar","contents":"ignore2"}]}},"sourceSpan":{"start":[612,1],"name":"/home/jordan/Programming/Projects/purescript-veither/src/Data/Veither.purs","end":[613,28]}},{"comments":null,"title":"genVariantUniformCons","info":{"declType":"instance","dependencies":[{"constraintAnn":[],"constraintClass":[["Prim","Row"],"Cons"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"sym"},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Test","QuickCheck","Gen"],"Gen"]},{"annotation":[],"tag":"TypeVar","contents":"a"}]},{"annotation":[],"tag":"TypeVar","contents":"other"},{"annotation":[],"tag":"TypeVar","contents":"recordRows"}],"constraintKindArgs":[],"constraintData":null},{"constraintAnn":[],"constraintClass":[["Data","Symbol"],"IsSymbol"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"sym"}],"constraintKindArgs":[],"constraintData":null},{"constraintAnn":[],"constraintClass":[["Prim","Row"],"Cons"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"sym"},{"annotation":[],"tag":"TypeVar","contents":"a"},{"annotation":[],"tag":"TypeVar","contents":"otherVariantRows"},{"annotation":[],"tag":"TypeVar","contents":"variantRows"}],"constraintKindArgs":[],"constraintData":null},{"constraintAnn":[],"constraintClass":[["Data","Veither"],"GenVariantUniform"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"recordRows"},{"annotation":[],"tag":"TypeVar","contents":"tail"},{"annotation":[],"tag":"TypeVar","contents":"variantRows"}],"constraintKindArgs":[],"constraintData":null}],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Veither"],"GenVariantUniform"]},{"annotation":[],"tag":"TypeVar","contents":"recordRows"}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim","RowList"],"Cons"]},{"annotation":[],"tag":"TypeVar","contents":"sym"}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Test","QuickCheck","Gen"],"Gen"]},{"annotation":[],"tag":"TypeVar","contents":"a"}]}]},{"annotation":[],"tag":"TypeVar","contents":"tail"}]}]},{"annotation":[],"tag":"TypeVar","contents":"variantRows"}]}},"sourceSpan":{"start":[615,1],"name":"/home/jordan/Programming/Projects/purescript-veither/src/Data/Veither.purs","end":[633,58]}}],"comments":null,"title":"GenVariantUniform","info":{"fundeps":[[["recordRows"],["variantRows"]]],"arguments":[["recordRows",null],["rl",null],["variantRows",null]],"declType":"typeClass","superclasses":[]},"sourceSpan":{"start":[609,1],"name":"/home/jordan/Programming/Projects/purescript-veither/src/Data/Veither.purs","end":[610,87]}},{"children":[{"comments":null,"title":"mkFrequencyList","info":{"declType":"typeClassMember","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"annotation":[],"tag":"TypeVar","contents":"recordRows"}]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Type","Proxy"],"Proxy"]},{"annotation":[],"tag":"TypeVar","contents":"rl"}]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","List","Types"],"List"]},{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Tuple"],"Tuple"]},{"annotation":[],"tag":"TypeVar","contents":"b"}]},{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Test","QuickCheck","Gen"],"Gen"]},{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Variant"],"Variant"]},{"annotation":[],"tag":"TypeVar","contents":"variantRows"}]}}]}}]}}]}]}]}},"sourceSpan":{"start":[637,3],"name":"/home/jordan/Programming/Projects/purescript-veither/src/Data/Veither.purs","end":[637,99]}},{"comments":null,"title":"genVariantFrequencyNil","info":{"declType":"instance","dependencies":[],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Veither"],"GenVariantFrequency"]},{"annotation":[],"tag":"TypeVar","contents":"ignore1"}]},{"annotation":[],"tag":"TypeVar","contents":"ignore2"}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim","RowList"],"Nil"]}]},{"annotation":[],"tag":"TypeVar","contents":"ignore3"}]}},"sourceSpan":{"start":[639,1],"name":"/home/jordan/Programming/Projects/purescript-veither/src/Data/Veither.purs","end":[640,30]}},{"comments":null,"title":"genVariantFrequencyCons","info":{"declType":"instance","dependencies":[{"constraintAnn":[],"constraintClass":[["Prim","Row"],"Cons"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"sym"},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Tuple"],"Tuple"]},{"annotation":[],"tag":"TypeVar","contents":"b"}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Test","QuickCheck","Gen"],"Gen"]},{"annotation":[],"tag":"TypeVar","contents":"a"}]}]},{"annotation":[],"tag":"TypeVar","contents":"other"},{"annotation":[],"tag":"TypeVar","contents":"recordRows"}],"constraintKindArgs":[],"constraintData":null},{"constraintAnn":[],"constraintClass":[["Data","Symbol"],"IsSymbol"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"sym"}],"constraintKindArgs":[],"constraintData":null},{"constraintAnn":[],"constraintClass":[["Prim","Row"],"Cons"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"sym"},{"annotation":[],"tag":"TypeVar","contents":"a"},{"annotation":[],"tag":"TypeVar","contents":"otherVariantRows"},{"annotation":[],"tag":"TypeVar","contents":"variantRows"}],"constraintKindArgs":[],"constraintData":null},{"constraintAnn":[],"constraintClass":[["Data","Veither"],"GenVariantFrequency"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"recordRows"},{"annotation":[],"tag":"TypeVar","contents":"b"},{"annotation":[],"tag":"TypeVar","contents":"tail"},{"annotation":[],"tag":"TypeVar","contents":"variantRows"}],"constraintKindArgs":[],"constraintData":null}],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Veither"],"GenVariantFrequency"]},{"annotation":[],"tag":"TypeVar","contents":"recordRows"}]},{"annotation":[],"tag":"TypeVar","contents":"b"}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim","RowList"],"Cons"]},{"annotation":[],"tag":"TypeVar","contents":"sym"}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Tuple"],"Tuple"]},{"annotation":[],"tag":"TypeVar","contents":"b"}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Test","QuickCheck","Gen"],"Gen"]},{"annotation":[],"tag":"TypeVar","contents":"a"}]}]}]},{"annotation":[],"tag":"TypeVar","contents":"tail"}]}]},{"annotation":[],"tag":"TypeVar","contents":"variantRows"}]}},"sourceSpan":{"start":[642,1],"name":"/home/jordan/Programming/Projects/purescript-veither/src/Data/Veither.purs","end":[660,75]}}],"comments":null,"title":"GenVariantFrequency","info":{"fundeps":[[["recordRows"],["b","variantRows"]]],"arguments":[["recordRows",null],["b",null],["rl",null],["variantRows",null]],"declType":"typeClass","superclasses":[]},"sourceSpan":{"start":[636,1],"name":"/home/jordan/Programming/Projects/purescript-veither/src/Data/Veither.purs","end":[637,99]}}]}],"resolvedDependencies":{"purescript-free":"6.0.0","purescript-exceptions":"5.0.0","purescript-newtype":"4.0.0","purescript-effect":"3.0.0","purescript-ordered-collections":"2.0.0","purescript-quickcheck-laws":"6.0.0","purescript-control":"5.0.0","purescript-variant":"7.0.2","purescript-console":"5.0.0","purescript-either":"5.0.0","purescript-profunctor":"5.0.0","purescript-arrays":"6.0.0","purescript-maybe":"5.0.0","purescript-type-equality":"4.0.0","purescript-exists":"5.0.0","purescript-distributive":"5.0.0","purescript-unfoldable":"5.0.0","purescript-invariant":"5.0.0","purescript-fork":"5.0.0","purescript-lcg":"3.0.0","purescript-lazy":"5.0.0","purescript-now":"5.0.0","purescript-aff":"6.0.0","purescript-foldable-traversable":"5.0.0","purescript-tailrec":"5.0.0","purescript-avar":"4.0.0","purescript-gen":"3.0.0","purescript-functors":"4.1.0","purescript-prelude":"5.0.0","purescript-st":"5.0.0","purescript-bifunctors":"5.0.0","purescript-pipes":"7.0.0","purescript-nonempty":"6.0.0","purescript-contravariant":"5.0.0","purescript-unsafe-coerce":"5.0.0","purescript-refs":"5.0.0","purescript-integers":"5.0.0","purescript-mmorph":"6.0.0","purescript-ansi":"6.0.0","purescript-orders":"5.0.0","purescript-const":"5.0.0","purescript-spec":"5.0.0","purescript-record":"3.0.0","purescript-transformers":"5.0.0","purescript-numbers":"8.0.0","purescript-math":"3.0.0","purescript-enums":"5.0.0","purescript-psci-support":"5.0.0","purescript-catenable-lists":"6.0.0","purescript-random":"5.0.0","purescript-parallel":"5.0.0","purescript-tuples":"6.0.0","purescript-partial":"3.0.0","purescript-quickcheck":"7.0.0","purescript-strings":"5.0.0","purescript-identity":"5.0.0","purescript-safe-coerce":"1.0.0","purescript-lists":"6.0.0","purescript-datetime":"5.0.0","purescript-functions":"5.0.0"},"version":"1.0.4","github":["JordanMartinez","purescript-veither"],"versionTag":"v1.0.4","moduleMap":{"Data.BooleanAlgebra":"purescript-prelude","Ansi.Output":"purescript-ansi","Test.QuickCheck.Laws.Control.Semigroupoid":"purescript-quickcheck-laws","Data.Decide":"purescript-contravariant","Data.Ring":"purescript-prelude","Data.Semigroup.Generic":"purescript-prelude","Control.Monad.Trans.Class":"purescript-transformers","Record.Unsafe.Union":"purescript-record","Data.Functor.Product":"purescript-functors","Data.Functor.Flip":"purescript-functors","Data.NonEmpty":"purescript-nonempty","Test.Spec.Console":"purescript-spec","Effect.Uncurried":"purescript-effect","Control.Monad.Identity.Trans":"purescript-transformers","Data.Char.Gen":"purescript-strings","Test.Spec.Style":"purescript-spec","Effect.Now":"purescript-now","Data.Monoid.Generic":"purescript-prelude","Data.String.NonEmpty":"purescript-strings","Effect":"purescript-effect","Test.QuickCheck.Laws.Data.Foldable":"purescript-quickcheck-laws","Data.Traversable.Accum.Internal":"purescript-foldable-traversable","Test.QuickCheck.Laws.Data.Bounded":"purescript-quickcheck-laws","Data.Enum.Gen":"purescript-enums","Control.Comonad.Env":"purescript-transformers","Control.Comonad.Traced.Class":"purescript-transformers","Data.Functor.Costar":"purescript-functors","Test.Spec.Summary":"purescript-spec","Data.HeytingAlgebra.Generic":"purescript-prelude","Data.Functor.Compose":"purescript-functors","Data.Int.Bits":"purescript-integers","Data.DateTime":"purescript-datetime","Data.String.CodePoints":"purescript-strings","Data.Ord":"purescript-prelude","Test.QuickCheck.Laws.Control.Apply":"purescript-quickcheck-laws","Control.Monad.Gen":"purescript-gen","Data.Bounded.Generic":"purescript-prelude","Control.Monad.Free.Class":"purescript-free","Test.QuickCheck.Laws.Control.Alt":"purescript-quickcheck-laws","Test.QuickCheck.Laws.Data.Monoid":"purescript-quickcheck-laws","Type.Data.Row":"purescript-prelude","Data.Date":"purescript-datetime","Control.Comonad.Cofree.Class":"purescript-free","Test.QuickCheck.Laws.Data.HeytingAlgebra":"purescript-quickcheck-laws","Test.QuickCheck.Laws.Data":"purescript-quickcheck-laws","Safe.Coerce":"purescript-safe-coerce","Data.Monoid.Dual":"purescript-prelude","Control.Monad.Rec.Class":"purescript-tailrec","Test.QuickCheck.Laws.Control.Bind":"purescript-quickcheck-laws","Data.Time.Component":"purescript-datetime","Data.Bitraversable":"purescript-foldable-traversable","Record.Builder":"purescript-record","Data.Boolean":"purescript-prelude","Data.Show.Generic":"purescript-prelude","Data.Map":"purescript-ordered-collections","Control.Biapplicative":"purescript-bifunctors","Test.QuickCheck.Laws.Control.Monad":"purescript-quickcheck-laws","Data.CatList":"purescript-catenable-lists","Effect.Exception.Unsafe":"purescript-exceptions","Control.Parallel.Class":"purescript-parallel","Data.Array.NonEmpty.Internal":"purescript-arrays","Type.Proxy":"purescript-prelude","Pipes.Core":"purescript-pipes","Data.Coyoneda":"purescript-free","Effect.Aff.Compat":"purescript-aff","Data.Array.ST.Iterator":"purescript-arrays","Data.Enum.Generic":"purescript-enums","Data.DateTime.Gen":"purescript-datetime","Test.QuickCheck.Laws.Data.Ord":"purescript-quickcheck-laws","Data.String.Pattern":"purescript-strings","Data.Bounded":"purescript-prelude","Test.QuickCheck.Laws.Control":"purescript-quickcheck-laws","Control.Monad.State.Trans":"purescript-transformers","Data.TraversableWithIndex":"purescript-foldable-traversable","Data.Int":"purescript-integers","Data.Profunctor.Cochoice":"purescript-profunctor","Data.Show":"purescript-prelude","Random.LCG":"purescript-lcg","Control.Monad.Writer.Trans":"purescript-transformers","Data.Foldable":"purescript-foldable-traversable","Data.Divide":"purescript-contravariant","Control.Comonad.Store.Class":"purescript-transformers","Data.Number":"purescript-numbers","Data.Enum":"purescript-enums","Control.Monad.Trampoline":"purescript-free","Test.Spec.Tree":"purescript-spec","Control.Apply":"purescript-prelude","Data.Functor.Contravariant":"purescript-contravariant","Data.Tuple.Nested":"purescript-tuples","Data.List.Internal":"purescript-lists","Control.Monad":"purescript-prelude","Data.Lazy":"purescript-lazy","Data.Monoid":"purescript-prelude","Data.Profunctor.Closed":"purescript-profunctor","Control.Monad.List.Trans":"purescript-transformers","Data.Ord.Generic":"purescript-prelude","Control.Monad.RWS":"purescript-transformers","Data.String.Common":"purescript-strings","Data.Maybe.First":"purescript-maybe","Control.Bind":"purescript-prelude","Data.Profunctor.Split":"purescript-profunctor","Data.Number.Format":"purescript-numbers","Effect.Aff.Class":"purescript-aff","Data.Monoid.Additive":"purescript-prelude","Data.Symbol":"purescript-prelude","Data.Map.Gen":"purescript-ordered-collections","Data.String.Regex":"purescript-strings","Data.Profunctor.Join":"purescript-profunctor","Data.HeytingAlgebra":"purescript-prelude","Control.Alt":"purescript-control","Data.Date.Gen":"purescript-datetime","Control.Monad.Maybe.Trans":"purescript-transformers","Control.Monad.Cont":"purescript-transformers","Control.Monad.ST.Internal":"purescript-st","Type.Data.RowList":"purescript-prelude","Data.Time.Component.Gen":"purescript-datetime","Effect.Ref":"purescript-refs","Data.Either.Inject":"purescript-either","Data.List.ZipList":"purescript-lists","Data.Ord.Min":"purescript-orders","Test.Spec.Runner":"purescript-spec","Data.Functor.Coproduct.Nested":"purescript-functors","Data.Ring.Generic":"purescript-prelude","Data.Semigroup":"purescript-prelude","Test.QuickCheck.Laws.Data.Functor":"purescript-quickcheck-laws","Test.QuickCheck.Laws.Control.Category":"purescript-quickcheck-laws","Data.Array.NonEmpty":"purescript-arrays","Control.Monad.Reader":"purescript-transformers","Data.Const":"purescript-const","Test.Spec.Reporter.Console":"purescript-spec","Control.Comonad.Traced.Trans":"purescript-transformers","Test.Spec.Reporter.Dot":"purescript-spec","Data.Ord.Down":"purescript-orders","Data.Number.Approximate":"purescript-numbers","Data.Array.ST.Partial":"purescript-arrays","Effect.Unsafe":"purescript-effect","Pipes.Internal":"purescript-pipes","Control.Monad.Morph":"purescript-mmorph","Data.Tuple":"purescript-tuples","Data.Functor.Clown":"purescript-functors","Data.Semigroup.Foldable":"purescript-foldable-traversable","Control.Biapply":"purescript-bifunctors","Data.Distributive":"purescript-distributive","Effect.Exception":"purescript-exceptions","Type.Equality":"purescript-type-equality","Control.Alternative":"purescript-control","Data.Semiring":"purescript-prelude","Pipes.Prelude":"purescript-pipes","Data.Functor.Product2":"purescript-functors","Data.Exists":"purescript-exists","Effect.Console":"purescript-console","Data.Traversable.Accum":"purescript-foldable-traversable","Data.CommutativeRing":"purescript-prelude","Data.NaturalTransformation":"purescript-prelude","Data.Monoid.Conj":"purescript-prelude","Test.QuickCheck.Laws.Data.EuclideanRing":"purescript-quickcheck-laws","Data.Yoneda":"purescript-free","Test.QuickCheck.Laws.Data.Field":"purescript-quickcheck-laws","Data.Functor.App":"purescript-functors","Data.Profunctor.Star":"purescript-profunctor","Data.Unfoldable":"purescript-unfoldable","Test.QuickCheck.Laws.Control.Comonad":"purescript-quickcheck-laws","Control.Comonad.Store.Trans":"purescript-transformers","Test.Spec.Assertions.String":"purescript-spec","Control.Monad.ST":"purescript-st","Control.Monad.State.Class":"purescript-transformers","Data.List.Types":"purescript-lists","Data.String.NonEmpty.CodeUnits":"purescript-strings","Data.Functor":"purescript-prelude","Unsafe.Coerce":"purescript-unsafe-coerce","Control.Monad.Writer.Class":"purescript-transformers","Data.Profunctor.Strong":"purescript-profunctor","Test.Spec.Reporter.Base":"purescript-spec","Test.QuickCheck.Laws.Data.Semigroup":"purescript-quickcheck-laws","Data.CatQueue":"purescript-catenable-lists","Control.Monad.Except":"purescript-transformers","Data.Interval":"purescript-datetime","Data.List.Lazy.Types":"purescript-lists","Control.Category":"purescript-prelude","Test.Spec.Reporter.Tap":"purescript-spec","Test.QuickCheck.Arbitrary":"purescript-quickcheck","Data.Interval.Duration":"purescript-datetime","Control.Monad.Gen.Common":"purescript-gen","Control.Monad.RWS.Trans":"purescript-transformers","Test.QuickCheck.Laws":"purescript-quickcheck-laws","Test.Spec.Speed":"purescript-spec","Test.QuickCheck.Laws.Data.CommutativeRing":"purescript-quickcheck-laws","Control.Monad.Cont.Trans":"purescript-transformers","Data.Maybe":"purescript-maybe","Data.String.Regex.Unsafe":"purescript-strings","Test.QuickCheck.Laws.Control.Alternative":"purescript-quickcheck-laws","Data.Set":"purescript-ordered-collections","Data.Profunctor":"purescript-profunctor","Control.Comonad":"purescript-control","Control.Monad.ST.Global":"purescript-st","Data.Function":"purescript-prelude","Data.List":"purescript-lists","Test.QuickCheck.Laws.Data.Semiring":"purescript-quickcheck-laws","Data.Field":"purescript-prelude","Test.QuickCheck.Laws.Data.BoundedEnum":"purescript-quickcheck-laws","Data.List.Lazy":"purescript-lists","Data.EuclideanRing":"purescript-prelude","Data.Semigroup.Last":"purescript-prelude","Data.Semigroup.First":"purescript-prelude","Data.Functor.Invariant":"purescript-invariant","Control.Comonad.Traced":"purescript-transformers","Data.Comparison":"purescript-contravariant","Data.String.Unsafe":"purescript-strings","Test.QuickCheck.Laws.Data.DivisionRing":"purescript-quickcheck-laws","Prelude":"purescript-prelude","Effect.Class":"purescript-effect","Data.Predicate":"purescript-contravariant","Partial.Unsafe":"purescript-partial","Data.Array":"purescript-arrays","Control.Extend":"purescript-control","Pipes":"purescript-pipes","Data.Unfoldable1":"purescript-unfoldable","Control.Lazy":"purescript-control","Data.Function.Uncurried":"purescript-functions","Control.Monad.Reader.Trans":"purescript-transformers","Data.Functor.Product.Nested":"purescript-functors","Test.QuickCheck.Laws.Data.FunctorWithIndex":"purescript-quickcheck-laws","Pipes.ListT":"purescript-pipes","Control.Comonad.Env.Class":"purescript-transformers","Effect.Aff.AVar":"purescript-avar","Data.Interval.Duration.Iso":"purescript-datetime","Data.Eq":"purescript-prelude","Test.Spec.Result":"purescript-spec","Data.Either.Nested":"purescript-either","Control.Comonad.Cofree":"purescript-free","Data.Newtype":"purescript-newtype","Data.Semigroup.Traversable":"purescript-foldable-traversable","Test.Spec.Assertions":"purescript-spec","Data.Bifunctor":"purescript-bifunctors","Effect.Random":"purescript-random","Test.Spec.Reporter":"purescript-spec","Data.Monoid.Disj":"purescript-prelude","Control.Monad.Gen.Class":"purescript-gen","Data.Array.Partial":"purescript-arrays","Data.String.CaseInsensitive":"purescript-strings","Control.Monad.Free":"purescript-free","Control.Parallel":"purescript-parallel","Control.MonadPlus":"purescript-control","Data.Void":"purescript-prelude","Control.MonadZero":"purescript-control","Data.DateTime.Instant":"purescript-datetime","Data.Profunctor.Costrong":"purescript-profunctor","Data.Ord.Max":"purescript-orders","Effect.AVar":"purescript-avar","Control.Comonad.Store":"purescript-transformers","Control.Monad.Except.Trans":"purescript-transformers","Data.String.CodeUnits":"purescript-strings","Test.QuickCheck.Laws.Control.Extend":"purescript-quickcheck-laws","Ansi.Codes":"purescript-ansi","Test.Spec":"purescript-spec","Data.FunctorWithIndex":"purescript-foldable-traversable","Data.Divisible":"purescript-contravariant","Data.Eq.Generic":"purescript-prelude","Data.DivisionRing":"purescript-prelude","Record":"purescript-record","Test.QuickCheck.Laws.Control.MonadPlus":"purescript-quickcheck-laws","PSCI.Support":"purescript-psci-support","Data.Equivalence":"purescript-contravariant","Data.Maybe.Last":"purescript-maybe","Data.Unit":"purescript-prelude","Test.QuickCheck.Laws.Control.MonadZero":"purescript-quickcheck-laws","Data.List.NonEmpty":"purescript-lists","Data.List.Lazy.NonEmpty":"purescript-lists","Data.Ordering":"purescript-prelude","Data.Functor.Variant":"purescript-variant","Data.Functor.Coproduct":"purescript-functors","Data.Variant.Internal":"purescript-variant","Control.Monad.Cont.Class":"purescript-transformers","Effect.Aff":"purescript-aff","Data.Identity":"purescript-identity","Test.QuickCheck.Laws.Data.Eq":"purescript-quickcheck-laws","Math":"purescript-math","Data.Set.NonEmpty":"purescript-ordered-collections","Control.Comonad.Trans.Class":"purescript-transformers","Data.String":"purescript-strings","Control.Plus":"purescript-control","Test.QuickCheck":"purescript-quickcheck","Data.Map.Internal":"purescript-ordered-collections","Data.Time":"purescript-datetime","Data.Time.Duration":"purescript-datetime","Data.Date.Component":"purescript-datetime","Partial":"purescript-partial","Control.Comonad.Env.Trans":"purescript-transformers","Test.QuickCheck.Laws.Control.Applicative":"purescript-quickcheck-laws","Control.Monad.Reader.Class":"purescript-transformers","Data.String.NonEmpty.CodePoints":"purescript-strings","Data.Decidable":"purescript-contravariant","Test.QuickCheck.Laws.Data.BooleanAlgebra":"purescript-quickcheck-laws","Data.String.NonEmpty.Internal":"purescript-strings","Data.Monoid.Multiplicative":"purescript-prelude","Data.String.NonEmpty.CaseInsensitive":"purescript-strings","Data.Functor.Joker":"purescript-functors","Data.Array.ST":"purescript-arrays","Test.QuickCheck.Laws.Data.Ring":"purescript-quickcheck-laws","Control.Monad.Error.Class":"purescript-transformers","Control.Semigroupoid":"purescript-prelude","Data.Monoid.Alternate":"purescript-control","Data.Char":"purescript-strings","Data.Generic.Rep":"purescript-prelude","Effect.Class.Console":"purescript-console","Data.Bifunctor.Join":"purescript-bifunctors","Control.Monad.Fork.Class":"purescript-fork","Data.Bifoldable":"purescript-foldable-traversable","Control.Monad.ST.Ref":"purescript-st","Data.Monoid.Endo":"purescript-prelude","Control.Monad.State":"purescript-transformers","Data.List.Partial":"purescript-lists","Data.Semiring.Generic":"purescript-prelude","Test.Spec.Runner.Event":"purescript-spec","Data.String.Regex.Flags":"purescript-strings","Test.QuickCheck.Laws.Control.Plus":"purescript-quickcheck-laws","Data.Either":"purescript-either","Data.Time.Duration.Gen":"purescript-datetime","Data.Date.Component.Gen":"purescript-datetime","Control.Applicative":"purescript-prelude","Control.Monad.ST.Class":"purescript-st","Data.FoldableWithIndex":"purescript-foldable-traversable","Data.Op":"purescript-contravariant","Data.Variant":"purescript-variant","Record.Unsafe":"purescript-prelude","Test.QuickCheck.Gen":"purescript-quickcheck","Control.Monad.Writer":"purescript-transformers","Test.Spec.Reporter.Spec":"purescript-spec","Data.Functor.Coproduct.Inject":"purescript-functors","Data.Profunctor.Choice":"purescript-profunctor","Data.Time.Gen":"purescript-datetime","Data.Traversable":"purescript-foldable-traversable","Data.String.Gen":"purescript-strings"},"compilerVersion":"0.14.0"}