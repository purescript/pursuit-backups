{"compilerVersion":"0.15.10","github":["thomashoneyman","purescript-slug"],"moduleMap":{"Control.Alt":"purescript-control","Control.Alternative":"purescript-control","Control.Applicative":"purescript-prelude","Control.Apply":"purescript-prelude","Control.Biapplicative":"purescript-bifunctors","Control.Biapply":"purescript-bifunctors","Control.Bind":"purescript-prelude","Control.Category":"purescript-prelude","Control.Comonad":"purescript-control","Control.Extend":"purescript-control","Control.Lazy":"purescript-control","Control.Monad":"purescript-prelude","Control.Monad.Gen":"purescript-gen","Control.Monad.Gen.Class":"purescript-gen","Control.Monad.Gen.Common":"purescript-gen","Control.Monad.Rec.Class":"purescript-tailrec","Control.Monad.ST":"purescript-st","Control.Monad.ST.Class":"purescript-st","Control.Monad.ST.Global":"purescript-st","Control.Monad.ST.Internal":"purescript-st","Control.Monad.ST.Ref":"purescript-st","Control.Monad.ST.Uncurried":"purescript-st","Control.MonadPlus":"purescript-control","Control.Plus":"purescript-control","Control.Semigroupoid":"purescript-prelude","Data.Argonaut.Core":"purescript-argonaut-core","Data.Argonaut.Decode":"purescript-argonaut-codecs","Data.Argonaut.Decode.Class":"purescript-argonaut-codecs","Data.Argonaut.Decode.Combinators":"purescript-argonaut-codecs","Data.Argonaut.Decode.Decoders":"purescript-argonaut-codecs","Data.Argonaut.Decode.Error":"purescript-argonaut-codecs","Data.Argonaut.Decode.Parser":"purescript-argonaut-codecs","Data.Argonaut.Encode":"purescript-argonaut-codecs","Data.Argonaut.Encode.Class":"purescript-argonaut-codecs","Data.Argonaut.Encode.Combinators":"purescript-argonaut-codecs","Data.Argonaut.Encode.Encoders":"purescript-argonaut-codecs","Data.Argonaut.Gen":"purescript-argonaut-core","Data.Argonaut.Parser":"purescript-argonaut-core","Data.Array":"purescript-arrays","Data.Array.NonEmpty":"purescript-arrays","Data.Array.NonEmpty.Internal":"purescript-arrays","Data.Array.Partial":"purescript-arrays","Data.Array.ST":"purescript-arrays","Data.Array.ST.Iterator":"purescript-arrays","Data.Array.ST.Partial":"purescript-arrays","Data.Bifoldable":"purescript-foldable-traversable","Data.Bifunctor":"purescript-bifunctors","Data.Bifunctor.Join":"purescript-bifunctors","Data.Bitraversable":"purescript-foldable-traversable","Data.Boolean":"purescript-prelude","Data.BooleanAlgebra":"purescript-prelude","Data.Bounded":"purescript-prelude","Data.Bounded.Generic":"purescript-prelude","Data.Char":"purescript-strings","Data.Char.Gen":"purescript-strings","Data.CodePoint.Unicode":"purescript-unicode","Data.CodePoint.Unicode.Internal":"purescript-unicode","Data.CodePoint.Unicode.Internal.Casing":"purescript-unicode","Data.CommutativeRing":"purescript-prelude","Data.Comparison":"purescript-contravariant","Data.Const":"purescript-const","Data.Decidable":"purescript-contravariant","Data.Decide":"purescript-contravariant","Data.Distributive":"purescript-distributive","Data.Divide":"purescript-contravariant","Data.Divisible":"purescript-contravariant","Data.DivisionRing":"purescript-prelude","Data.Either":"purescript-either","Data.Either.Inject":"purescript-either","Data.Either.Nested":"purescript-either","Data.Enum":"purescript-enums","Data.Enum.Gen":"purescript-enums","Data.Enum.Generic":"purescript-enums","Data.Eq":"purescript-prelude","Data.Eq.Generic":"purescript-prelude","Data.Equivalence":"purescript-contravariant","Data.EuclideanRing":"purescript-prelude","Data.Exists":"purescript-exists","Data.Field":"purescript-prelude","Data.Foldable":"purescript-foldable-traversable","Data.FoldableWithIndex":"purescript-foldable-traversable","Data.Function":"purescript-prelude","Data.Function.Uncurried":"purescript-functions","Data.Functor":"purescript-prelude","Data.Functor.App":"purescript-functors","Data.Functor.Clown":"purescript-functors","Data.Functor.Compose":"purescript-functors","Data.Functor.Contravariant":"purescript-contravariant","Data.Functor.Coproduct":"purescript-functors","Data.Functor.Coproduct.Inject":"purescript-functors","Data.Functor.Coproduct.Nested":"purescript-functors","Data.Functor.Costar":"purescript-functors","Data.Functor.Flip":"purescript-functors","Data.Functor.Invariant":"purescript-invariant","Data.Functor.Joker":"purescript-functors","Data.Functor.Product":"purescript-functors","Data.Functor.Product.Nested":"purescript-functors","Data.Functor.Product2":"purescript-functors","Data.FunctorWithIndex":"purescript-foldable-traversable","Data.Generic.Rep":"purescript-prelude","Data.HeytingAlgebra":"purescript-prelude","Data.HeytingAlgebra.Generic":"purescript-prelude","Data.Identity":"purescript-identity","Data.Int":"purescript-integers","Data.Int.Bits":"purescript-integers","Data.Lazy":"purescript-lazy","Data.List":"purescript-lists","Data.List.Internal":"purescript-lists","Data.List.Lazy":"purescript-lists","Data.List.Lazy.NonEmpty":"purescript-lists","Data.List.Lazy.Types":"purescript-lists","Data.List.NonEmpty":"purescript-lists","Data.List.Partial":"purescript-lists","Data.List.Types":"purescript-lists","Data.List.ZipList":"purescript-lists","Data.Map":"purescript-ordered-collections","Data.Map.Gen":"purescript-ordered-collections","Data.Map.Internal":"purescript-ordered-collections","Data.Maybe":"purescript-maybe","Data.Maybe.First":"purescript-maybe","Data.Maybe.Last":"purescript-maybe","Data.Monoid":"purescript-prelude","Data.Monoid.Additive":"purescript-prelude","Data.Monoid.Alternate":"purescript-control","Data.Monoid.Conj":"purescript-prelude","Data.Monoid.Disj":"purescript-prelude","Data.Monoid.Dual":"purescript-prelude","Data.Monoid.Endo":"purescript-prelude","Data.Monoid.Generic":"purescript-prelude","Data.Monoid.Multiplicative":"purescript-prelude","Data.NaturalTransformation":"purescript-prelude","Data.Newtype":"purescript-newtype","Data.NonEmpty":"purescript-nonempty","Data.Number":"purescript-numbers","Data.Number.Approximate":"purescript-numbers","Data.Number.Format":"purescript-numbers","Data.Op":"purescript-contravariant","Data.Ord":"purescript-prelude","Data.Ord.Down":"purescript-orders","Data.Ord.Generic":"purescript-prelude","Data.Ord.Max":"purescript-orders","Data.Ord.Min":"purescript-orders","Data.Ordering":"purescript-prelude","Data.Predicate":"purescript-contravariant","Data.Profunctor":"purescript-profunctor","Data.Profunctor.Choice":"purescript-profunctor","Data.Profunctor.Closed":"purescript-profunctor","Data.Profunctor.Cochoice":"purescript-profunctor","Data.Profunctor.Costrong":"purescript-profunctor","Data.Profunctor.Join":"purescript-profunctor","Data.Profunctor.Split":"purescript-profunctor","Data.Profunctor.Star":"purescript-profunctor","Data.Profunctor.Strong":"purescript-profunctor","Data.Reflectable":"purescript-prelude","Data.Ring":"purescript-prelude","Data.Ring.Generic":"purescript-prelude","Data.Semigroup":"purescript-prelude","Data.Semigroup.First":"purescript-prelude","Data.Semigroup.Foldable":"purescript-foldable-traversable","Data.Semigroup.Generic":"purescript-prelude","Data.Semigroup.Last":"purescript-prelude","Data.Semigroup.Traversable":"purescript-foldable-traversable","Data.Semiring":"purescript-prelude","Data.Semiring.Generic":"purescript-prelude","Data.Set":"purescript-ordered-collections","Data.Set.NonEmpty":"purescript-ordered-collections","Data.Show":"purescript-prelude","Data.Show.Generic":"purescript-prelude","Data.String":"purescript-strings","Data.String.CaseInsensitive":"purescript-strings","Data.String.CodePoints":"purescript-strings","Data.String.CodeUnits":"purescript-strings","Data.String.Common":"purescript-strings","Data.String.Gen":"purescript-strings","Data.String.NonEmpty":"purescript-strings","Data.String.NonEmpty.CaseInsensitive":"purescript-strings","Data.String.NonEmpty.CodePoints":"purescript-strings","Data.String.NonEmpty.CodeUnits":"purescript-strings","Data.String.NonEmpty.Internal":"purescript-strings","Data.String.Pattern":"purescript-strings","Data.String.Regex":"purescript-strings","Data.String.Regex.Flags":"purescript-strings","Data.String.Regex.Unsafe":"purescript-strings","Data.String.Unicode":"purescript-unicode","Data.String.Unsafe":"purescript-strings","Data.Symbol":"purescript-prelude","Data.Traversable":"purescript-foldable-traversable","Data.Traversable.Accum":"purescript-foldable-traversable","Data.Traversable.Accum.Internal":"purescript-foldable-traversable","Data.TraversableWithIndex":"purescript-foldable-traversable","Data.Tuple":"purescript-tuples","Data.Tuple.Nested":"purescript-tuples","Data.Unfoldable":"purescript-unfoldable","Data.Unfoldable1":"purescript-unfoldable","Data.Unit":"purescript-prelude","Data.Void":"purescript-prelude","Effect":"purescript-effect","Effect.Class":"purescript-effect","Effect.Ref":"purescript-refs","Effect.Uncurried":"purescript-effect","Effect.Unsafe":"purescript-effect","Foreign.Object":"purescript-foreign-object","Foreign.Object.Gen":"purescript-foreign-object","Foreign.Object.ST":"purescript-foreign-object","Foreign.Object.ST.Unsafe":"purescript-foreign-object","Foreign.Object.Unsafe":"purescript-foreign-object","Partial":"purescript-partial","Partial.Unsafe":"purescript-partial","Prelude":"purescript-prelude","Record":"purescript-record","Record.Builder":"purescript-record","Record.Unsafe":"purescript-prelude","Record.Unsafe.Union":"purescript-record","Safe.Coerce":"purescript-safe-coerce","Type.Data.Boolean":"purescript-typelevel-prelude","Type.Data.Ordering":"purescript-typelevel-prelude","Type.Data.Symbol":"purescript-typelevel-prelude","Type.Equality":"purescript-type-equality","Type.Function":"purescript-typelevel-prelude","Type.Prelude":"purescript-typelevel-prelude","Type.Proxy":"purescript-prelude","Type.Row":"purescript-typelevel-prelude","Type.Row.Homogeneous":"purescript-typelevel-prelude","Type.RowList":"purescript-typelevel-prelude","Unsafe.Coerce":"purescript-unsafe-coerce"},"modules":[{"comments":null,"declarations":[{"children":[{"comments":null,"info":{"declType":"instance","dependencies":[],"type":{"annotation":[],"contents":[{"annotation":[],"contents":[["Data","Eq"],"Eq"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Slug"],"Slug"],"tag":"TypeConstructor"}],"tag":"TypeApp"}},"sourceSpan":{"end":[48,32],"name":"/tmp/tmp-7457-kHz6v1PDqujP/purescript-slug/src/Slug.purs","start":[48,1]},"title":"<anonymous>"},{"comments":null,"info":{"declType":"instance","dependencies":[],"type":{"annotation":[],"contents":[{"annotation":[],"contents":[["Data","Ord"],"Ord"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Slug"],"Slug"],"tag":"TypeConstructor"}],"tag":"TypeApp"}},"sourceSpan":{"end":[49,33],"name":"/tmp/tmp-7457-kHz6v1PDqujP/purescript-slug/src/Slug.purs","start":[49,1]},"title":"<anonymous>"},{"comments":null,"info":{"declType":"instance","dependencies":[],"type":{"annotation":[],"contents":[{"annotation":[],"contents":[["Data","Semigroup"],"Semigroup"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Slug"],"Slug"],"tag":"TypeConstructor"}],"tag":"TypeApp"}},"sourceSpan":{"end":[50,39],"name":"/tmp/tmp-7457-kHz6v1PDqujP/purescript-slug/src/Slug.purs","start":[50,1]},"title":"<anonymous>"},{"comments":null,"info":{"declType":"instance","dependencies":[],"type":{"annotation":[],"contents":[{"annotation":[],"contents":[["Data","Show"],"Show"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Slug"],"Slug"],"tag":"TypeConstructor"}],"tag":"TypeApp"}},"sourceSpan":{"end":[53,48],"name":"/tmp/tmp-7457-kHz6v1PDqujP/purescript-slug/src/Slug.purs","start":[52,1]},"title":"<anonymous>"},{"comments":null,"info":{"declType":"instance","dependencies":[],"type":{"annotation":[],"contents":[{"annotation":[],"contents":[["Data","Argonaut","Encode","Class"],"EncodeJson"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Slug"],"Slug"],"tag":"TypeConstructor"}],"tag":"TypeApp"}},"sourceSpan":{"end":[56,37],"name":"/tmp/tmp-7457-kHz6v1PDqujP/purescript-slug/src/Slug.purs","start":[55,1]},"title":"<anonymous>"},{"comments":null,"info":{"declType":"instance","dependencies":[],"type":{"annotation":[],"contents":[{"annotation":[],"contents":[["Data","Argonaut","Decode","Class"],"DecodeJson"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Slug"],"Slug"],"tag":"TypeConstructor"}],"tag":"TypeApp"}},"sourceSpan":{"end":[59,67],"name":"/tmp/tmp-7457-kHz6v1PDqujP/purescript-slug/src/Slug.purs","start":[58,1]},"title":"<anonymous>"}],"comments":"A `Slug` is usually created for article titles and other resources\nwhich need a human-readable resource name in a URL, typically with\nspaces replaced by a dash separator and all other non-alphanumeric\ncharacters removed.\n\nA `Slug` is guaranteed to be non-empty, and when generated using\nthe `generate` function is also guaranteed to have the following\nqualities:\n\n- it consists of alphanumeric groups of characters separated by `-`\n  dashes, where the slug cannot begin or end with a dash, and there\n  can never be two dashes in a row.\n- every character with a defined notion of case is lower-cased\n- its string value (got by `toString`) can be successfully parsed\n  with the `parse` function\n\nExample: `Slug \"this-is-an-article-slug\"`\n\nSee `generateWithOptions` and `parseWithOptions` if you need to\ncustomize the behavior of `Slug` generation and parsing.\n","info":{"dataDeclType":"newtype","declType":"data","roles":[],"typeArguments":[]},"kind":null,"sourceSpan":{"end":[46,27],"name":"/tmp/tmp-7457-kHz6v1PDqujP/purescript-slug/src/Slug.purs","start":[46,1]},"title":"Slug"},{"children":[],"comments":"Configure `generateWithOptions` and `parseWithOptions` to create a\n`Slug` from a string with custom options.\n\n- `replacement` is used to replace spaces (default is `\"-\"`).\n- `keepIf` is a function that determines which characters are\n  allowed in the slug (default is `isAlphaNum && isLatin1`).\n- `lowerCase` determines whether the slug should be lower-cased\n  (default is `true`).\n- `stripApostrophes` determines whether apostrophes should be\n  removed before generating the slug (default is `true`).\n","info":{"arguments":[],"declType":"typeSynonym","type":{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Record"],"tag":"TypeConstructor"},{"annotation":[],"contents":["replacement",{"annotation":[],"contents":[["Prim"],"String"],"tag":"TypeConstructor"},{"annotation":[],"contents":["keepIf",{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Data","String","CodePoints"],"CodePoint"],"tag":"TypeConstructor"}],"tag":"TypeApp"},{"annotation":[],"contents":[["Prim"],"Boolean"],"tag":"TypeConstructor"}],"tag":"TypeApp"},{"annotation":[],"contents":["lowerCase",{"annotation":[],"contents":[["Prim"],"Boolean"],"tag":"TypeConstructor"},{"annotation":[],"contents":["stripApostrophes",{"annotation":[],"contents":[["Prim"],"Boolean"],"tag":"TypeConstructor"},{"annotation":[],"tag":"REmpty"}],"tag":"RCons"}],"tag":"RCons"}],"tag":"RCons"}],"tag":"RCons"}],"tag":"TypeApp"}},"kind":null,"sourceSpan":{"end":[130,4],"name":"/tmp/tmp-7457-kHz6v1PDqujP/purescript-slug/src/Slug.purs","start":[125,1]},"title":"Options"},{"children":[],"comments":null,"info":{"declType":"value","type":{"annotation":[],"contents":[["Slug"],"Options"],"tag":"TypeConstructor"}},"kind":null,"sourceSpan":{"end":[132,26],"name":"/tmp/tmp-7457-kHz6v1PDqujP/purescript-slug/src/Slug.purs","start":[132,1]},"title":"defaultOptions"},{"children":[],"comments":"Create a `Slug` from a string. This will transform the input string\nto be a valid slug (if it is possible to do so) by separating words\nwith `-` dashes, ensuring the string does not begin or end with a\ndash, and ensuring there are never two dashes in a row.\n\n\n```purescript\n> Slug.generate \"My article title!\"\n> Just (Slug \"my-article-title\")\n\n> Slug.generate \"¬¬¬{}¬¬¬\"\n> Nothing\n```\n","info":{"declType":"value","type":{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Prim"],"String"],"tag":"TypeConstructor"}],"tag":"TypeApp"},{"annotation":[],"contents":[{"annotation":[],"contents":[["Data","Maybe"],"Maybe"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Slug"],"Slug"],"tag":"TypeConstructor"}],"tag":"TypeApp"}],"tag":"TypeApp"}},"kind":null,"sourceSpan":{"end":[74,33],"name":"/tmp/tmp-7457-kHz6v1PDqujP/purescript-slug/src/Slug.purs","start":[74,1]},"title":"generate"},{"children":[],"comments":"Create a `Slug` from a string with custom options.\n\n```purescript\n> slugifyOptions = Slug.defaultOptions { keepIf = isLatin1, lowerCase = false, stripApostrophes = false }\n> slugify = Slug.generateWithOptions slugifyOptions\n\n> slugify \"This is my article's title!\"\n> Just (Slug \"This-is-my-article's-title!\")\n```\n","info":{"declType":"value","type":{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Slug"],"Options"],"tag":"TypeConstructor"}],"tag":"TypeApp"},{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Prim"],"String"],"tag":"TypeConstructor"}],"tag":"TypeApp"},{"annotation":[],"contents":[{"annotation":[],"contents":[["Data","Maybe"],"Maybe"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Slug"],"Slug"],"tag":"TypeConstructor"}],"tag":"TypeApp"}],"tag":"TypeApp"}],"tag":"TypeApp"}},"kind":null,"sourceSpan":{"end":[149,55],"name":"/tmp/tmp-7457-kHz6v1PDqujP/purescript-slug/src/Slug.purs","start":[149,1]},"title":"generateWithOptions"},{"children":[],"comments":"Parse a valid slug (as a string) into a `Slug`. This will fail if the\nstring is not a valid slug and does not provide the same behavior as\n`generate`.\n\n```purescript\n> Slug.parse \"my-article-title\"\n> Just (Slug \"my-article-title\")\n\n> Slug.parse \"My article\"\n> Nothing\n```\n","info":{"declType":"value","type":{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Prim"],"String"],"tag":"TypeConstructor"}],"tag":"TypeApp"},{"annotation":[],"contents":[{"annotation":[],"contents":[["Data","Maybe"],"Maybe"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Slug"],"Slug"],"tag":"TypeConstructor"}],"tag":"TypeApp"}],"tag":"TypeApp"}},"kind":null,"sourceSpan":{"end":[88,30],"name":"/tmp/tmp-7457-kHz6v1PDqujP/purescript-slug/src/Slug.purs","start":[88,1]},"title":"parse"},{"children":[],"comments":"Parse a valid slug (as a string) into a `Slug` with custom options.\nThis will fail if the string is not a valid slug and does not\nprovide the same behavior as `generateWithOptions` given the same\n`Options`.\n\n```purescript\n> myOptions = Slug.defaultOptions { replacement = \"_\" }\n> Slug.parseWithOptions myOptions \"my_article_title\"\n> Just (Slug \"my_article_title\")\n\n> Slug.parseWithOptions myOptions \"My article\"\n> Nothing\n```\n","info":{"declType":"value","type":{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Slug"],"Options"],"tag":"TypeConstructor"}],"tag":"TypeApp"},{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Prim"],"String"],"tag":"TypeConstructor"}],"tag":"TypeApp"},{"annotation":[],"contents":[{"annotation":[],"contents":[["Data","Maybe"],"Maybe"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Slug"],"Slug"],"tag":"TypeConstructor"}],"tag":"TypeApp"}],"tag":"TypeApp"}],"tag":"TypeApp"}},"kind":null,"sourceSpan":{"end":[184,52],"name":"/tmp/tmp-7457-kHz6v1PDqujP/purescript-slug/src/Slug.purs","start":[184,1]},"title":"parseWithOptions"},{"children":[],"comments":"Unwrap a `Slug` into the string contained within, without performing\nany transformations.\n\n```purescript\n> Slug.toString (mySlug :: Slug)\n> \"my-slug-i-generated\"\n```\n","info":{"declType":"value","type":{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Slug"],"Slug"],"tag":"TypeConstructor"}],"tag":"TypeApp"},{"annotation":[],"contents":[["Prim"],"String"],"tag":"TypeConstructor"}],"tag":"TypeApp"}},"kind":null,"sourceSpan":{"end":[98,27],"name":"/tmp/tmp-7457-kHz6v1PDqujP/purescript-slug/src/Slug.purs","start":[98,1]},"title":"toString"},{"children":[],"comments":"Ensure a `Slug` is no longer than a given number of characters. If the last\ncharacter is a dash, it will also be removed. Providing a non-positive\nnumber as the length will return `Nothing`.\n\n```purescript\n> Slug.generate \"My article title is long!\" >>= Slug.truncate 3\n> Just (Slug \"my\")\n```\n","info":{"declType":"value","type":{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Prim"],"Int"],"tag":"TypeConstructor"}],"tag":"TypeApp"},{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Slug"],"Slug"],"tag":"TypeConstructor"}],"tag":"TypeApp"},{"annotation":[],"contents":[{"annotation":[],"contents":[["Data","Maybe"],"Maybe"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Slug"],"Slug"],"tag":"TypeConstructor"}],"tag":"TypeApp"}],"tag":"TypeApp"}],"tag":"TypeApp"}},"kind":null,"sourceSpan":{"end":[109,38],"name":"/tmp/tmp-7457-kHz6v1PDqujP/purescript-slug/src/Slug.purs","start":[109,1]},"title":"truncate"}],"name":"Slug","reExports":[]}],"packageMeta":{"dependencies":{"purescript-argonaut-codecs":">=9.0.0 <10.0.0","purescript-arrays":">=7.0.0 <8.0.0","purescript-either":">=6.1.0 <7.0.0","purescript-maybe":">=6.0.0 <7.0.0","purescript-prelude":">=6.0.0 <7.0.0","purescript-strings":">=6.0.0 <7.0.0","purescript-unicode":">=6.0.0 <7.0.0"},"homepage":"https://github.com/thomashoneyman/purescript-slug.git","license":["MIT"],"name":"purescript-slug","repository":{"type":"git","url":"https://github.com/thomashoneyman/purescript-slug.git"}},"resolvedDependencies":{"purescript-argonaut-codecs":"9.1.0","purescript-argonaut-core":"7.0.0","purescript-arrays":"7.3.0","purescript-bifunctors":"6.0.0","purescript-const":"6.0.0","purescript-contravariant":"6.0.0","purescript-control":"6.0.0","purescript-distributive":"6.0.0","purescript-effect":"4.0.0","purescript-either":"6.1.0","purescript-enums":"6.0.1","purescript-exists":"6.0.0","purescript-foldable-traversable":"6.0.0","purescript-foreign-object":"4.1.0","purescript-functions":"6.0.0","purescript-functors":"5.0.0","purescript-gen":"4.0.0","purescript-identity":"6.0.0","purescript-integers":"6.0.0","purescript-invariant":"6.0.0","purescript-lazy":"6.0.0","purescript-lists":"7.0.0","purescript-maybe":"6.0.0","purescript-newtype":"5.0.0","purescript-nonempty":"7.0.0","purescript-numbers":"9.0.1","purescript-ordered-collections":"3.2.0","purescript-orders":"6.0.0","purescript-partial":"4.0.0","purescript-prelude":"6.0.1","purescript-profunctor":"6.0.1","purescript-record":"4.0.0","purescript-refs":"6.0.0","purescript-safe-coerce":"2.0.0","purescript-st":"6.2.0","purescript-strings":"6.0.1","purescript-tailrec":"6.1.0","purescript-tuples":"7.0.0","purescript-type-equality":"4.0.1","purescript-typelevel-prelude":"7.0.0","purescript-unfoldable":"6.0.0","purescript-unicode":"6.0.0","purescript-unsafe-coerce":"6.0.0"},"tagTime":"2024-07-30T00:35:52+0000","uploader":"pacchettibotti","version":"3.1.0","versionTag":"v3.1.0"}