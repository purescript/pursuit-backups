{"compilerVersion":"0.15.10","github":["shamansir","purescript-play"],"moduleMap":{"Control.Alt":"purescript-control","Control.Alternative":"purescript-control","Control.Applicative":"purescript-prelude","Control.Apply":"purescript-prelude","Control.Biapplicative":"purescript-bifunctors","Control.Biapply":"purescript-bifunctors","Control.Bind":"purescript-prelude","Control.Category":"purescript-prelude","Control.Comonad":"purescript-control","Control.Comonad.Cofree":"purescript-free","Control.Comonad.Cofree.Class":"purescript-free","Control.Comonad.Env":"purescript-transformers","Control.Comonad.Env.Class":"purescript-transformers","Control.Comonad.Env.Trans":"purescript-transformers","Control.Comonad.Store":"purescript-transformers","Control.Comonad.Store.Class":"purescript-transformers","Control.Comonad.Store.Trans":"purescript-transformers","Control.Comonad.Traced":"purescript-transformers","Control.Comonad.Traced.Class":"purescript-transformers","Control.Comonad.Traced.Trans":"purescript-transformers","Control.Comonad.Trans.Class":"purescript-transformers","Control.Extend":"purescript-control","Control.Lazy":"purescript-control","Control.Monad":"purescript-prelude","Control.Monad.Cont":"purescript-transformers","Control.Monad.Cont.Class":"purescript-transformers","Control.Monad.Cont.Trans":"purescript-transformers","Control.Monad.Error.Class":"purescript-transformers","Control.Monad.Except":"purescript-transformers","Control.Monad.Except.Trans":"purescript-transformers","Control.Monad.Free":"purescript-free","Control.Monad.Free.Class":"purescript-free","Control.Monad.Gen":"purescript-gen","Control.Monad.Gen.Class":"purescript-gen","Control.Monad.Gen.Common":"purescript-gen","Control.Monad.Identity.Trans":"purescript-transformers","Control.Monad.List.Trans":"purescript-transformers","Control.Monad.Maybe.Trans":"purescript-transformers","Control.Monad.RWS":"purescript-transformers","Control.Monad.RWS.Trans":"purescript-transformers","Control.Monad.Reader":"purescript-transformers","Control.Monad.Reader.Class":"purescript-transformers","Control.Monad.Reader.Trans":"purescript-transformers","Control.Monad.Rec.Class":"purescript-tailrec","Control.Monad.ST":"purescript-st","Control.Monad.ST.Class":"purescript-st","Control.Monad.ST.Global":"purescript-st","Control.Monad.ST.Internal":"purescript-st","Control.Monad.ST.Ref":"purescript-st","Control.Monad.ST.Uncurried":"purescript-st","Control.Monad.State":"purescript-transformers","Control.Monad.State.Class":"purescript-transformers","Control.Monad.State.Trans":"purescript-transformers","Control.Monad.Trampoline":"purescript-free","Control.Monad.Trans.Class":"purescript-transformers","Control.Monad.Writer":"purescript-transformers","Control.Monad.Writer.Class":"purescript-transformers","Control.Monad.Writer.Trans":"purescript-transformers","Control.MonadPlus":"purescript-control","Control.Plus":"purescript-control","Control.Semigroupoid":"purescript-prelude","Data.Array":"purescript-arrays","Data.Array.NonEmpty":"purescript-arrays","Data.Array.NonEmpty.Internal":"purescript-arrays","Data.Array.Partial":"purescript-arrays","Data.Array.ST":"purescript-arrays","Data.Array.ST.Iterator":"purescript-arrays","Data.Array.ST.Partial":"purescript-arrays","Data.Bifoldable":"purescript-foldable-traversable","Data.Bifunctor":"purescript-bifunctors","Data.Bifunctor.Join":"purescript-bifunctors","Data.Bitraversable":"purescript-foldable-traversable","Data.Boolean":"purescript-prelude","Data.BooleanAlgebra":"purescript-prelude","Data.Bounded":"purescript-prelude","Data.Bounded.Generic":"purescript-prelude","Data.CatList":"purescript-catenable-lists","Data.CatQueue":"purescript-catenable-lists","Data.Char":"purescript-strings","Data.Char.Gen":"purescript-strings","Data.CodePoint.Unicode":"purescript-unicode","Data.CodePoint.Unicode.Internal":"purescript-unicode","Data.CodePoint.Unicode.Internal.Casing":"purescript-unicode","Data.CommutativeRing":"purescript-prelude","Data.Comparison":"purescript-contravariant","Data.Const":"purescript-const","Data.Coyoneda":"purescript-free","Data.Date":"purescript-datetime","Data.Date.Component":"purescript-datetime","Data.Date.Component.Gen":"purescript-datetime","Data.Date.Gen":"purescript-datetime","Data.DateTime":"purescript-datetime","Data.DateTime.Gen":"purescript-datetime","Data.DateTime.Instant":"purescript-datetime","Data.Decidable":"purescript-contravariant","Data.Decide":"purescript-contravariant","Data.Distributive":"purescript-distributive","Data.Divide":"purescript-contravariant","Data.Divisible":"purescript-contravariant","Data.DivisionRing":"purescript-prelude","Data.Either":"purescript-either","Data.Either.Inject":"purescript-either","Data.Either.Nested":"purescript-either","Data.Enum":"purescript-enums","Data.Enum.Gen":"purescript-enums","Data.Enum.Generic":"purescript-enums","Data.Eq":"purescript-prelude","Data.Eq.Generic":"purescript-prelude","Data.Equivalence":"purescript-contravariant","Data.EuclideanRing":"purescript-prelude","Data.Exists":"purescript-exists","Data.Field":"purescript-prelude","Data.Foldable":"purescript-foldable-traversable","Data.FoldableWithIndex":"purescript-foldable-traversable","Data.Function":"purescript-prelude","Data.Function.Uncurried":"purescript-functions","Data.Functor":"purescript-prelude","Data.Functor.App":"purescript-functors","Data.Functor.Clown":"purescript-functors","Data.Functor.Compose":"purescript-functors","Data.Functor.Contravariant":"purescript-contravariant","Data.Functor.Coproduct":"purescript-functors","Data.Functor.Coproduct.Inject":"purescript-functors","Data.Functor.Coproduct.Nested":"purescript-functors","Data.Functor.Costar":"purescript-functors","Data.Functor.Flip":"purescript-functors","Data.Functor.Invariant":"purescript-invariant","Data.Functor.Joker":"purescript-functors","Data.Functor.Product":"purescript-functors","Data.Functor.Product.Nested":"purescript-functors","Data.Functor.Product2":"purescript-functors","Data.Functor.Variant":"purescript-variant","Data.FunctorWithIndex":"purescript-foldable-traversable","Data.Generic.Rep":"purescript-prelude","Data.Graph":"purescript-graphs","Data.HeytingAlgebra":"purescript-prelude","Data.HeytingAlgebra.Generic":"purescript-prelude","Data.Identity":"purescript-identity","Data.Int":"purescript-integers","Data.Int.Bits":"purescript-integers","Data.Interval":"purescript-datetime","Data.Interval.Duration":"purescript-datetime","Data.Interval.Duration.Iso":"purescript-datetime","Data.JSDate":"purescript-js-date","Data.Lazy":"purescript-lazy","Data.List":"purescript-lists","Data.List.Internal":"purescript-lists","Data.List.Lazy":"purescript-lists","Data.List.Lazy.NonEmpty":"purescript-lists","Data.List.Lazy.Types":"purescript-lists","Data.List.NonEmpty":"purescript-lists","Data.List.Partial":"purescript-lists","Data.List.Types":"purescript-lists","Data.List.ZipList":"purescript-lists","Data.Map":"purescript-ordered-collections","Data.Map.Gen":"purescript-ordered-collections","Data.Map.Internal":"purescript-ordered-collections","Data.Maybe":"purescript-maybe","Data.Maybe.First":"purescript-maybe","Data.Maybe.Last":"purescript-maybe","Data.Monoid":"purescript-prelude","Data.Monoid.Additive":"purescript-prelude","Data.Monoid.Alternate":"purescript-control","Data.Monoid.Conj":"purescript-prelude","Data.Monoid.Disj":"purescript-prelude","Data.Monoid.Dual":"purescript-prelude","Data.Monoid.Endo":"purescript-prelude","Data.Monoid.Generic":"purescript-prelude","Data.Monoid.Multiplicative":"purescript-prelude","Data.NaturalTransformation":"purescript-prelude","Data.Newtype":"purescript-newtype","Data.NonEmpty":"purescript-nonempty","Data.Nullable":"purescript-nullable","Data.Number":"purescript-numbers","Data.Number.Approximate":"purescript-numbers","Data.Number.Format":"purescript-numbers","Data.Op":"purescript-contravariant","Data.Ord":"purescript-prelude","Data.Ord.Down":"purescript-orders","Data.Ord.Generic":"purescript-prelude","Data.Ord.Max":"purescript-orders","Data.Ord.Min":"purescript-orders","Data.Ordering":"purescript-prelude","Data.Predicate":"purescript-contravariant","Data.Profunctor":"purescript-profunctor","Data.Profunctor.Choice":"purescript-profunctor","Data.Profunctor.Closed":"purescript-profunctor","Data.Profunctor.Cochoice":"purescript-profunctor","Data.Profunctor.Costrong":"purescript-profunctor","Data.Profunctor.Join":"purescript-profunctor","Data.Profunctor.Split":"purescript-profunctor","Data.Profunctor.Star":"purescript-profunctor","Data.Profunctor.Strong":"purescript-profunctor","Data.Reflectable":"purescript-prelude","Data.Ring":"purescript-prelude","Data.Ring.Generic":"purescript-prelude","Data.Semigroup":"purescript-prelude","Data.Semigroup.First":"purescript-prelude","Data.Semigroup.Foldable":"purescript-foldable-traversable","Data.Semigroup.Generic":"purescript-prelude","Data.Semigroup.Last":"purescript-prelude","Data.Semigroup.Traversable":"purescript-foldable-traversable","Data.Semiring":"purescript-prelude","Data.Semiring.Generic":"purescript-prelude","Data.Set":"purescript-ordered-collections","Data.Set.NonEmpty":"purescript-ordered-collections","Data.Show":"purescript-prelude","Data.Show.Generic":"purescript-prelude","Data.String":"purescript-strings","Data.String.CaseInsensitive":"purescript-strings","Data.String.CodePoints":"purescript-strings","Data.String.CodeUnits":"purescript-strings","Data.String.Common":"purescript-strings","Data.String.Gen":"purescript-strings","Data.String.NonEmpty":"purescript-strings","Data.String.NonEmpty.CaseInsensitive":"purescript-strings","Data.String.NonEmpty.CodePoints":"purescript-strings","Data.String.NonEmpty.CodeUnits":"purescript-strings","Data.String.NonEmpty.Internal":"purescript-strings","Data.String.Pattern":"purescript-strings","Data.String.Regex":"purescript-strings","Data.String.Regex.Flags":"purescript-strings","Data.String.Regex.Unsafe":"purescript-strings","Data.String.Unicode":"purescript-unicode","Data.String.Unsafe":"purescript-strings","Data.Symbol":"purescript-prelude","Data.Time":"purescript-datetime","Data.Time.Component":"purescript-datetime","Data.Time.Component.Gen":"purescript-datetime","Data.Time.Duration":"purescript-datetime","Data.Time.Duration.Gen":"purescript-datetime","Data.Time.Gen":"purescript-datetime","Data.Traversable":"purescript-foldable-traversable","Data.Traversable.Accum":"purescript-foldable-traversable","Data.Traversable.Accum.Internal":"purescript-foldable-traversable","Data.TraversableWithIndex":"purescript-foldable-traversable","Data.Tuple":"purescript-tuples","Data.Tuple.Nested":"purescript-tuples","Data.Unfoldable":"purescript-unfoldable","Data.Unfoldable1":"purescript-unfoldable","Data.Unit":"purescript-prelude","Data.Variant":"purescript-variant","Data.Variant.Internal":"purescript-variant","Data.Void":"purescript-prelude","Data.Yoneda":"purescript-free","Effect":"purescript-effect","Effect.Class":"purescript-effect","Effect.Exception":"purescript-exceptions","Effect.Exception.Unsafe":"purescript-exceptions","Effect.Now":"purescript-now","Effect.Ref":"purescript-refs","Effect.Uncurried":"purescript-effect","Effect.Unsafe":"purescript-effect","Foreign":"purescript-foreign","Foreign.Index":"purescript-foreign","Foreign.Keys":"purescript-foreign","Foreign.Object":"purescript-foreign-object","Foreign.Object.Gen":"purescript-foreign-object","Foreign.Object.ST":"purescript-foreign-object","Foreign.Object.ST.Unsafe":"purescript-foreign-object","Foreign.Object.Unsafe":"purescript-foreign-object","JS.BigInt":"purescript-js-bigints","Partial":"purescript-partial","Partial.Unsafe":"purescript-partial","Prelude":"purescript-prelude","Record":"purescript-record","Record.Builder":"purescript-record","Record.Unsafe":"purescript-prelude","Record.Unsafe.Union":"purescript-record","Safe.Coerce":"purescript-safe-coerce","Type.Data.Boolean":"purescript-typelevel-prelude","Type.Data.Ordering":"purescript-typelevel-prelude","Type.Data.Symbol":"purescript-typelevel-prelude","Type.Equality":"purescript-type-equality","Type.Function":"purescript-typelevel-prelude","Type.Prelude":"purescript-typelevel-prelude","Type.Proxy":"purescript-prelude","Type.Row":"purescript-typelevel-prelude","Type.Row.Homogeneous":"purescript-typelevel-prelude","Type.RowList":"purescript-typelevel-prelude","Unsafe.Coerce":"purescript-unsafe-coerce","Yoga.JSON":"purescript-yoga-json","Yoga.JSON.Derive":"purescript-yoga-json","Yoga.JSON.Error":"purescript-yoga-json","Yoga.JSON.Generics":"purescript-yoga-json","Yoga.JSON.Generics.EnumSumRep":"purescript-yoga-json","Yoga.JSON.Generics.TaggedSumRep":"purescript-yoga-json","Yoga.JSON.Generics.UntaggedProductRep":"purescript-yoga-json","Yoga.JSON.Generics.UntaggedSumRep":"purescript-yoga-json","Yoga.JSON.Variant":"purescript-yoga-json","Yoga.Tree":"purescript-yoga-tree","Yoga.Tree.Extended":"purescript-yoga-tree-utils","Yoga.Tree.Extended.Convert":"purescript-yoga-tree-utils","Yoga.Tree.Extended.Graph":"purescript-yoga-tree-utils","Yoga.Tree.Extended.Path":"purescript-yoga-tree-utils","Yoga.Tree.Zipper":"purescript-yoga-tree"},"modules":[{"comments":"The Play API provides a way to define declarative layout for creating flexible,\nresponsive user interfaces in PureScript.\n\nIt is inspired by Clay UI layouting system for C++ by Nic Baker. It inherits its simple yet powerful design.\n\nThe API supports:\n- Flexbox-like layout with direction control (horizontal/vertical)\n- Size constraints (fixed, fit-to-content, grow-to-fill, ...)\n- Padding and gaps between elements\n- Automatic size calculation and positioning\n\n","declarations":[{"children":[{"comments":null,"info":{"declType":"instance","dependencies":[],"type":{"annotation":[],"contents":[{"annotation":[],"contents":[["Data","Functor"],"Functor"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Play"],"Play"],"tag":"TypeConstructor"}],"tag":"TypeApp"}},"sourceSpan":{"end":[65,29],"name":"/tmp/tmp-2802391-pi7M5zWwcLpp/purescript-play/src/Play/Play.purs","start":[65,1]},"title":"<anonymous>"},{"comments":null,"info":{"declType":"instance","dependencies":[],"type":{"annotation":[],"contents":[{"annotation":[],"contents":[["Data","Foldable"],"Foldable"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Play"],"Play"],"tag":"TypeConstructor"}],"tag":"TypeApp"}},"sourceSpan":{"end":[66,30],"name":"/tmp/tmp-2802391-pi7M5zWwcLpp/purescript-play/src/Play/Play.purs","start":[66,1]},"title":"<anonymous>"},{"comments":null,"info":{"declType":"instance","dependencies":[],"type":{"annotation":[],"contents":[{"annotation":[],"contents":[["Data","Traversable"],"Traversable"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Play"],"Play"],"tag":"TypeConstructor"}],"tag":"TypeApp"}},"sourceSpan":{"end":[67,33],"name":"/tmp/tmp-2802391-pi7M5zWwcLpp/purescript-play/src/Play/Play.purs","start":[67,1]},"title":"<anonymous>"}],"comments":"A layout tree containing elements of type `a` with layout definitions.\nThis is the primary type for building layouts before they are computed.\n\nEach element contains:\n- User data of type `a`\n- Layout definition (sizing, padding, direction, etc.)\n- Zero or more child elements\n\nThe only required properties for an element to be visible are the way its width / height calculated.\n\nExample:\n```purescript\nmyLayout\n  = P.i \"content\"\n  ~* P.widthGrow\n  ~* P.height 100.0\n  ~* P.padding (P.all 5.0)\n  ~* P.with [ P.i \"child1\", P.i \"child2\" ]\n  :: Play String\n```\n","info":{"dataDeclType":"newtype","declType":"data","roles":["Nominal"],"typeArguments":[["a",null]]},"kind":null,"sourceSpan":{"end":[62,31],"name":"/tmp/tmp-2802391-pi7M5zWwcLpp/purescript-play/src/Play/Play.purs","start":[61,1]},"title":"Play"},{"children":[{"comments":null,"info":{"declType":"instance","dependencies":[],"type":{"annotation":[],"contents":[{"annotation":[],"contents":[["Data","Functor"],"Functor"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Play"],"Layout"],"tag":"TypeConstructor"}],"tag":"TypeApp"}},"sourceSpan":{"end":[80,31],"name":"/tmp/tmp-2802391-pi7M5zWwcLpp/purescript-play/src/Play/Play.purs","start":[80,1]},"title":"<anonymous>"},{"comments":null,"info":{"declType":"instance","dependencies":[],"type":{"annotation":[],"contents":[{"annotation":[],"contents":[["Data","Foldable"],"Foldable"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Play"],"Layout"],"tag":"TypeConstructor"}],"tag":"TypeApp"}},"sourceSpan":{"end":[81,32],"name":"/tmp/tmp-2802391-pi7M5zWwcLpp/purescript-play/src/Play/Play.purs","start":[81,1]},"title":"<anonymous>"},{"comments":null,"info":{"declType":"instance","dependencies":[],"type":{"annotation":[],"contents":[{"annotation":[],"contents":[["Data","Traversable"],"Traversable"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Play"],"Layout"],"tag":"TypeConstructor"}],"tag":"TypeApp"}},"sourceSpan":{"end":[82,35],"name":"/tmp/tmp-2802391-pi7M5zWwcLpp/purescript-play/src/Play/Play.purs","start":[82,1]},"title":"<anonymous>"}],"comments":"A computed layout tree with final positioning and sizes.\nThis is the result of running layout computation on a `Play` definition using `Play.layout` function.\n\nEach element contains:\n- User data of type `a`\n- Layout definition (preserved for potential rollback)\n- Computed rectangular bounds (position and size)\n","info":{"dataDeclType":"newtype","declType":"data","roles":["Nominal"],"typeArguments":[["a",null]]},"kind":null,"sourceSpan":{"end":[77,37],"name":"/tmp/tmp-2802391-pi7M5zWwcLpp/purescript-play/src/Play/Play.purs","start":[76,1]},"title":"Layout"},{"children":[],"comments":"Set the layout direction for arranging child elements.\n\n- `TopToBottom`: Stack children vertically\n- `LeftToRight`: Arrange children horizontally (default)\n\nExample:\n```purescript\nverticalLayout = P.i \"container\" ~* P.direction P.TopToBottom\n```\n","info":{"declType":"value","type":{"annotation":[],"contents":{"identifier":"a","kind":null,"skolem":null,"type":{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Play","Types"],"Direction"],"tag":"TypeConstructor"}],"tag":"TypeApp"},{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[{"annotation":[],"contents":[["Play"],"Play"],"tag":"TypeConstructor"},{"annotation":[],"contents":"a","tag":"TypeVar"}],"tag":"TypeApp"}],"tag":"TypeApp"},{"annotation":[],"contents":[{"annotation":[],"contents":[["Play"],"Play"],"tag":"TypeConstructor"},{"annotation":[],"contents":"a","tag":"TypeVar"}],"tag":"TypeApp"}],"tag":"TypeApp"}],"tag":"TypeApp"},"visibility":"TypeVarInvisible"},"tag":"ForAll"}},"kind":null,"sourceSpan":{"end":[382,56],"name":"/tmp/tmp-2802391-pi7M5zWwcLpp/purescript-play/src/Play/Play.purs","start":[382,1]},"title":"direction"},{"children":[],"comments":"Set padding (inner spacing) on all four sides of an element.\nPadding creates space between the element's border and its children.\n\nExample:\n```purescript\npaddedContainer = P.i \"content\" ~* P.padding (P.all 10.0)\n```\n","info":{"declType":"value","type":{"annotation":[],"contents":{"identifier":"a","kind":null,"skolem":null,"type":{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Play","Types"],"Padding"],"tag":"TypeConstructor"}],"tag":"TypeApp"},{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[{"annotation":[],"contents":[["Play"],"Play"],"tag":"TypeConstructor"},{"annotation":[],"contents":"a","tag":"TypeVar"}],"tag":"TypeApp"}],"tag":"TypeApp"},{"annotation":[],"contents":[{"annotation":[],"contents":[["Play"],"Play"],"tag":"TypeConstructor"},{"annotation":[],"contents":"a","tag":"TypeVar"}],"tag":"TypeApp"}],"tag":"TypeApp"}],"tag":"TypeApp"},"visibility":"TypeVarInvisible"},"tag":"ForAll"}},"kind":null,"sourceSpan":{"end":[392,52],"name":"/tmp/tmp-2802391-pi7M5zWwcLpp/purescript-play/src/Play/Play.purs","start":[392,1]},"title":"padding"},{"children":[],"comments":"Set the spacing between child elements.\nThis creates gaps between adjacent children in the layout direction.\n\nExample:\n```purescript\nspacedContainer = P.p \"menu\" buttons ~* P.childGap 5.0\nspacedContainer2 = P.i \"menu\" ~* P.childGap 5.0 ~* P.with buttons\n```\n","info":{"declType":"value","type":{"annotation":[],"contents":{"identifier":"a","kind":null,"skolem":null,"type":{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Prim"],"Number"],"tag":"TypeConstructor"}],"tag":"TypeApp"},{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[{"annotation":[],"contents":[["Play"],"Play"],"tag":"TypeConstructor"},{"annotation":[],"contents":"a","tag":"TypeVar"}],"tag":"TypeApp"}],"tag":"TypeApp"},{"annotation":[],"contents":[{"annotation":[],"contents":[["Play"],"Play"],"tag":"TypeConstructor"},{"annotation":[],"contents":"a","tag":"TypeVar"}],"tag":"TypeApp"}],"tag":"TypeApp"}],"tag":"TypeApp"},"visibility":"TypeVarInvisible"},"tag":"ForAll"}},"kind":null,"sourceSpan":{"end":[423,49],"name":"/tmp/tmp-2802391-pi7M5zWwcLpp/purescript-play/src/Play/Play.purs","start":[423,1]},"title":"childGap"},{"children":[],"comments":"Set the width sizing constraint for an element.\nSee `Sizing` type for available options (None, Fixed, Fit, Grow, FitGrow).\n","info":{"declType":"value","type":{"annotation":[],"contents":{"identifier":"a","kind":null,"skolem":null,"type":{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Play","Types"],"Sizing"],"tag":"TypeConstructor"}],"tag":"TypeApp"},{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[{"annotation":[],"contents":[["Play"],"Play"],"tag":"TypeConstructor"},{"annotation":[],"contents":"a","tag":"TypeVar"}],"tag":"TypeApp"}],"tag":"TypeApp"},{"annotation":[],"contents":[{"annotation":[],"contents":[["Play"],"Play"],"tag":"TypeConstructor"},{"annotation":[],"contents":"a","tag":"TypeVar"}],"tag":"TypeApp"}],"tag":"TypeApp"}],"tag":"TypeApp"},"visibility":"TypeVarInvisible"},"tag":"ForAll"}},"kind":null,"sourceSpan":{"end":[429,45],"name":"/tmp/tmp-2802391-pi7M5zWwcLpp/purescript-play/src/Play/Play.purs","start":[429,1]},"title":"w"},{"children":[],"comments":"Set the height sizing constraint for an element.\nSee `Sizing` type for available options (None, Fixed, Fit, Grow, FitGrow).\n","info":{"declType":"value","type":{"annotation":[],"contents":{"identifier":"a","kind":null,"skolem":null,"type":{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Play","Types"],"Sizing"],"tag":"TypeConstructor"}],"tag":"TypeApp"},{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[{"annotation":[],"contents":[["Play"],"Play"],"tag":"TypeConstructor"},{"annotation":[],"contents":"a","tag":"TypeVar"}],"tag":"TypeApp"}],"tag":"TypeApp"},{"annotation":[],"contents":[{"annotation":[],"contents":[["Play"],"Play"],"tag":"TypeConstructor"},{"annotation":[],"contents":"a","tag":"TypeVar"}],"tag":"TypeApp"}],"tag":"TypeApp"}],"tag":"TypeApp"},"visibility":"TypeVarInvisible"},"tag":"ForAll"}},"kind":null,"sourceSpan":{"end":[434,45],"name":"/tmp/tmp-2802391-pi7M5zWwcLpp/purescript-play/src/Play/Play.purs","start":[434,1]},"title":"h"},{"children":[],"comments":"Add additional children to an existing element.\nThe new children are appended to the existing children list.\n\nExample:\n```purescript\ncontainer = P.i \"base\"\n  ~* P.with [child1, child2]\ncontainer2 = P.p \"base\" [child1, child2]\n  ~* P.with [child3, child4]  -- Now has 4 children total\n```\n","info":{"declType":"value","type":{"annotation":[],"contents":{"identifier":"a","kind":null,"skolem":null,"type":{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Array"],"tag":"TypeConstructor"},{"annotation":[],"contents":{"annotation":[],"contents":[{"annotation":[],"contents":[["Play"],"Play"],"tag":"TypeConstructor"},{"annotation":[],"contents":"a","tag":"TypeVar"}],"tag":"TypeApp"},"tag":"ParensInType"}],"tag":"TypeApp"}],"tag":"TypeApp"},{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[{"annotation":[],"contents":[["Play"],"Play"],"tag":"TypeConstructor"},{"annotation":[],"contents":"a","tag":"TypeVar"}],"tag":"TypeApp"}],"tag":"TypeApp"},{"annotation":[],"contents":[{"annotation":[],"contents":[["Play"],"Play"],"tag":"TypeConstructor"},{"annotation":[],"contents":"a","tag":"TypeVar"}],"tag":"TypeApp"}],"tag":"TypeApp"}],"tag":"TypeApp"},"visibility":"TypeVarInvisible"},"tag":"ForAll"}},"kind":null,"sourceSpan":{"end":[447,53],"name":"/tmp/tmp-2802391-pi7M5zWwcLpp/purescript-play/src/Play/Play.purs","start":[447,1]},"title":"with"},{"children":[],"comments":"Set padding for the top side only.\nOther padding values remain unchanged.\n","info":{"declType":"value","type":{"annotation":[],"contents":{"identifier":"a","kind":null,"skolem":null,"type":{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Prim"],"Number"],"tag":"TypeConstructor"}],"tag":"TypeApp"},{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[{"annotation":[],"contents":[["Play"],"Play"],"tag":"TypeConstructor"},{"annotation":[],"contents":"a","tag":"TypeVar"}],"tag":"TypeApp"}],"tag":"TypeApp"},{"annotation":[],"contents":[{"annotation":[],"contents":[["Play"],"Play"],"tag":"TypeConstructor"},{"annotation":[],"contents":"a","tag":"TypeVar"}],"tag":"TypeApp"}],"tag":"TypeApp"}],"tag":"TypeApp"},"visibility":"TypeVarInvisible"},"tag":"ForAll"}},"kind":null,"sourceSpan":{"end":[397,51],"name":"/tmp/tmp-2802391-pi7M5zWwcLpp/purescript-play/src/Play/Play.purs","start":[397,1]},"title":"paddingTop"},{"children":[],"comments":"Set padding for the left side only.\nOther padding values remain unchanged.\n","info":{"declType":"value","type":{"annotation":[],"contents":{"identifier":"a","kind":null,"skolem":null,"type":{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Prim"],"Number"],"tag":"TypeConstructor"}],"tag":"TypeApp"},{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[{"annotation":[],"contents":[["Play"],"Play"],"tag":"TypeConstructor"},{"annotation":[],"contents":"a","tag":"TypeVar"}],"tag":"TypeApp"}],"tag":"TypeApp"},{"annotation":[],"contents":[{"annotation":[],"contents":[["Play"],"Play"],"tag":"TypeConstructor"},{"annotation":[],"contents":"a","tag":"TypeVar"}],"tag":"TypeApp"}],"tag":"TypeApp"}],"tag":"TypeApp"},"visibility":"TypeVarInvisible"},"tag":"ForAll"}},"kind":null,"sourceSpan":{"end":[402,52],"name":"/tmp/tmp-2802391-pi7M5zWwcLpp/purescript-play/src/Play/Play.purs","start":[402,1]},"title":"paddingLeft"},{"children":[],"comments":"Set padding for the bottom side only.\nOther padding values remain unchanged.\n","info":{"declType":"value","type":{"annotation":[],"contents":{"identifier":"a","kind":null,"skolem":null,"type":{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Prim"],"Number"],"tag":"TypeConstructor"}],"tag":"TypeApp"},{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[{"annotation":[],"contents":[["Play"],"Play"],"tag":"TypeConstructor"},{"annotation":[],"contents":"a","tag":"TypeVar"}],"tag":"TypeApp"}],"tag":"TypeApp"},{"annotation":[],"contents":[{"annotation":[],"contents":[["Play"],"Play"],"tag":"TypeConstructor"},{"annotation":[],"contents":"a","tag":"TypeVar"}],"tag":"TypeApp"}],"tag":"TypeApp"}],"tag":"TypeApp"},"visibility":"TypeVarInvisible"},"tag":"ForAll"}},"kind":null,"sourceSpan":{"end":[407,54],"name":"/tmp/tmp-2802391-pi7M5zWwcLpp/purescript-play/src/Play/Play.purs","start":[407,1]},"title":"paddingBottom"},{"children":[],"comments":"Set padding for the right side only.\nOther padding values remain unchanged.\n","info":{"declType":"value","type":{"annotation":[],"contents":{"identifier":"a","kind":null,"skolem":null,"type":{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Prim"],"Number"],"tag":"TypeConstructor"}],"tag":"TypeApp"},{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[{"annotation":[],"contents":[["Play"],"Play"],"tag":"TypeConstructor"},{"annotation":[],"contents":"a","tag":"TypeVar"}],"tag":"TypeApp"}],"tag":"TypeApp"},{"annotation":[],"contents":[{"annotation":[],"contents":[["Play"],"Play"],"tag":"TypeConstructor"},{"annotation":[],"contents":"a","tag":"TypeVar"}],"tag":"TypeApp"}],"tag":"TypeApp"}],"tag":"TypeApp"},"visibility":"TypeVarInvisible"},"tag":"ForAll"}},"kind":null,"sourceSpan":{"end":[412,53],"name":"/tmp/tmp-2802391-pi7M5zWwcLpp/purescript-play/src/Play/Play.purs","start":[412,1]},"title":"paddingRight"},{"children":[],"comments":"Default layout definition with sensible defaults.\n\n- Direction: `LeftToRight`\n- Padding: All sides set to 0\n- Child gap: 0\n- Sizing: Both width and height set to `None`\n\nThis is the starting point for all layout definitions and can be\nmodified using the various property functions.\n","info":{"declType":"value","type":{"annotation":[],"contents":[["Play","Types"],"Def"],"tag":"TypeConstructor"}},"kind":null,"sourceSpan":{"end":[295,18],"name":"/tmp/tmp-2802391-pi7M5zWwcLpp/purescript-play/src/Play/Play.purs","start":[295,1]},"title":"default"},{"children":[],"comments":"Create padding with the same value on all four sides.\nThis is a convenience function for uniform padding.\n","info":{"declType":"value","type":{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Prim"],"Number"],"tag":"TypeConstructor"}],"tag":"TypeApp"},{"annotation":[],"contents":[["Play","Types"],"Padding"],"tag":"TypeConstructor"}],"tag":"TypeApp"}},"kind":null,"sourceSpan":{"end":[452,28],"name":"/tmp/tmp-2802391-pi7M5zWwcLpp/purescript-play/src/Play/Play.purs","start":[452,1]},"title":"all"},{"children":[],"comments":"Create padding for top and bottom sides only (vertical padding).\nLeft and right padding are set to 0.\n","info":{"declType":"value","type":{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Prim"],"Number"],"tag":"TypeConstructor"}],"tag":"TypeApp"},{"annotation":[],"contents":[["Play","Types"],"Padding"],"tag":"TypeConstructor"}],"tag":"TypeApp"}},"kind":null,"sourceSpan":{"end":[458,27],"name":"/tmp/tmp-2802391-pi7M5zWwcLpp/purescript-play/src/Play/Play.purs","start":[458,1]},"title":"tb"},{"children":[],"comments":"Create padding for left and right sides only (horizontal padding).\nTop and bottom padding are set to 0.\n","info":{"declType":"value","type":{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Prim"],"Number"],"tag":"TypeConstructor"}],"tag":"TypeApp"},{"annotation":[],"contents":[["Play","Types"],"Padding"],"tag":"TypeConstructor"}],"tag":"TypeApp"}},"kind":null,"sourceSpan":{"end":[464,27],"name":"/tmp/tmp-2802391-pi7M5zWwcLpp/purescript-play/src/Play/Play.purs","start":[464,1]},"title":"lr"},{"children":[],"comments":"Create a layout element that has children (parent).\n\nParameters:\n- `a`: The user data/content for this element\n- `Array (Play a)`: Array of child elements\n\nThe created element uses the default layout definition, which can be\nmodified using property functions and the `~*` operator.\n\nExample:\n```purescript\ncontainer = P.p \"header\"\n  [ P.i \"logo\"\n  , P.i \"navigation\"\n  ]\n```\n","info":{"declType":"value","type":{"annotation":[],"contents":{"identifier":"a","kind":null,"skolem":null,"type":{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":"a","tag":"TypeVar"}],"tag":"TypeApp"},{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Array"],"tag":"TypeConstructor"},{"annotation":[],"contents":{"annotation":[],"contents":[{"annotation":[],"contents":[["Play"],"Play"],"tag":"TypeConstructor"},{"annotation":[],"contents":"a","tag":"TypeVar"}],"tag":"TypeApp"},"tag":"ParensInType"}],"tag":"TypeApp"}],"tag":"TypeApp"},{"annotation":[],"contents":[{"annotation":[],"contents":[["Play"],"Play"],"tag":"TypeConstructor"},{"annotation":[],"contents":"a","tag":"TypeVar"}],"tag":"TypeApp"}],"tag":"TypeApp"}],"tag":"TypeApp"},"visibility":"TypeVarInvisible"},"tag":"ForAll"}},"kind":null,"sourceSpan":{"end":[320,45],"name":"/tmp/tmp-2802391-pi7M5zWwcLpp/purescript-play/src/Play/Play.purs","start":[320,1]},"title":"p"},{"children":[],"comments":"Create a leaf layout element with no children (item).\n\nThis is the primary constructor for creating layout hierarchies and\na convenience function equivalent to `P.p a []`, the children could\nbe added later using `~* P.with [ child1, child2, ... ]` .\n\nExample:\n```purescript\nelement = P.i \"Hello World\"\n```\n","info":{"declType":"value","type":{"annotation":[],"contents":{"identifier":"a","kind":null,"skolem":null,"type":{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":"a","tag":"TypeVar"}],"tag":"TypeApp"},{"annotation":[],"contents":[{"annotation":[],"contents":[["Play"],"Play"],"tag":"TypeConstructor"},{"annotation":[],"contents":"a","tag":"TypeVar"}],"tag":"TypeApp"}],"tag":"TypeApp"},"visibility":"TypeVarInvisible"},"tag":"ForAll"}},"kind":null,"sourceSpan":{"end":[333,27],"name":"/tmp/tmp-2802391-pi7M5zWwcLpp/purescript-play/src/Play/Play.purs","start":[333,1]},"title":"i"},{"children":[],"comments":"Extract the underlying tree structure from a Play layout.\nThis is useful for low-level tree operations.\n","info":{"declType":"value","type":{"annotation":[],"contents":{"identifier":"a","kind":null,"skolem":null,"type":{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[{"annotation":[],"contents":[["Play"],"Play"],"tag":"TypeConstructor"},{"annotation":[],"contents":"a","tag":"TypeVar"}],"tag":"TypeApp"}],"tag":"TypeApp"},{"annotation":[],"contents":[{"annotation":[],"contents":[["Yoga","Tree"],"Tree"],"tag":"TypeConstructor"},{"annotation":[],"contents":{"annotation":[],"contents":[{"annotation":[],"contents":[["Play","Types"],"WithDef"],"tag":"TypeConstructor"},{"annotation":[],"contents":"a","tag":"TypeVar"}],"tag":"TypeApp"},"tag":"ParensInType"}],"tag":"TypeApp"}],"tag":"TypeApp"},"visibility":"TypeVarInvisible"},"tag":"ForAll"}},"kind":null,"sourceSpan":{"end":[272,50],"name":"/tmp/tmp-2802391-pi7M5zWwcLpp/purescript-play/src/Play/Play.purs","start":[272,1]},"title":"toTree"},{"children":[],"comments":"Wrap a tree structure as a Play layout.\nThis is the inverse of `toTree` and is useful when constructing Play layouts\nfrom external tree structures.\n\nTakes the compiled elements definitions and wraps them in a Play definition (internal representation is the very same `Tree`).\n","info":{"declType":"value","type":{"annotation":[],"contents":{"identifier":"a","kind":null,"skolem":null,"type":{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[{"annotation":[],"contents":[["Yoga","Tree"],"Tree"],"tag":"TypeConstructor"},{"annotation":[],"contents":{"annotation":[],"contents":[{"annotation":[],"contents":[["Play","Types"],"WithDef"],"tag":"TypeConstructor"},{"annotation":[],"contents":"a","tag":"TypeVar"}],"tag":"TypeApp"},"tag":"ParensInType"}],"tag":"TypeApp"}],"tag":"TypeApp"},{"annotation":[],"contents":[{"annotation":[],"contents":[["Play"],"Play"],"tag":"TypeConstructor"},{"annotation":[],"contents":"a","tag":"TypeVar"}],"tag":"TypeApp"}],"tag":"TypeApp"},"visibility":"TypeVarInvisible"},"tag":"ForAll"}},"kind":null,"sourceSpan":{"end":[280,52],"name":"/tmp/tmp-2802391-pi7M5zWwcLpp/purescript-play/src/Play/Play.purs","start":[280,1]},"title":"fromTree"},{"children":[],"comments":"Compute the final layout from a Play tree specification.\nThis performs a three-phase layout computation:\n\n1. **Fit Sizing**: Calculate minimum required sizes based on content and constraints\n2. **Grow Sizing**: Distribute remaining space to elements with grow constraints\n3. **Positioning**: Calculate final positions for all elements\n\nThe result is a `Layout` containing all the elements with their computed bounds (positions and rectangles).\n\nExample:\n```purescript\nmyPlay = Play.i \"root\" ~* Play.with [ Play.i \"child1\", Play.i \"child2\" ] :: Play String\ncomputedLayout = Play.layout myPlay :: Layout String\n```\n","info":{"declType":"value","type":{"annotation":[],"contents":{"identifier":"a","kind":null,"skolem":null,"type":{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[{"annotation":[],"contents":[["Play"],"Play"],"tag":"TypeConstructor"},{"annotation":[],"contents":"a","tag":"TypeVar"}],"tag":"TypeApp"}],"tag":"TypeApp"},{"annotation":[],"contents":[{"annotation":[],"contents":[["Play"],"Layout"],"tag":"TypeConstructor"},{"annotation":[],"contents":"a","tag":"TypeVar"}],"tag":"TypeApp"}],"tag":"TypeApp"},"visibility":"TypeVarInvisible"},"tag":"ForAll"}},"kind":null,"sourceSpan":{"end":[119,39],"name":"/tmp/tmp-2802391-pi7M5zWwcLpp/purescript-play/src/Play/Play.purs","start":[119,1]},"title":"layout"},{"children":[],"comments":"Extract the tree structure from a Layout, removing layout definitions.\nThe result contains only the user data and computed rectangular bounds.\nThis is useful for rendering with keeping hierarchy or hit-testing operations.\n","info":{"declType":"value","type":{"annotation":[],"contents":{"identifier":"a","kind":null,"skolem":null,"type":{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[{"annotation":[],"contents":[["Play"],"Layout"],"tag":"TypeConstructor"},{"annotation":[],"contents":"a","tag":"TypeVar"}],"tag":"TypeApp"}],"tag":"TypeApp"},{"annotation":[],"contents":[{"annotation":[],"contents":[["Yoga","Tree"],"Tree"],"tag":"TypeConstructor"},{"annotation":[],"contents":{"annotation":[],"contents":[{"annotation":[],"contents":[["Play","Types"],"WithRect"],"tag":"TypeConstructor"},{"annotation":[],"contents":"a","tag":"TypeVar"}],"tag":"TypeApp"},"tag":"ParensInType"}],"tag":"TypeApp"}],"tag":"TypeApp"},"visibility":"TypeVarInvisible"},"tag":"ForAll"}},"kind":null,"sourceSpan":{"end":[486,59],"name":"/tmp/tmp-2802391-pi7M5zWwcLpp/purescript-play/src/Play/Play.purs","start":[486,1]},"title":"layoutToTree"},{"children":[],"comments":"Flatten a Layout into an array of all elements with their computed bounds.\nThis provides a simple list of all elements for rendering or processing.\nThe tree hierarchy is flattened but positioning information is preserved,\nso it is completely safe to iterate the resulting array and place the elements\nin the corresponding bounds. The parents are followed by their children, so z-index\nis also preserved.\n","info":{"declType":"value","type":{"annotation":[],"contents":{"identifier":"a","kind":null,"skolem":null,"type":{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[{"annotation":[],"contents":[["Play"],"Layout"],"tag":"TypeConstructor"},{"annotation":[],"contents":"a","tag":"TypeVar"}],"tag":"TypeApp"}],"tag":"TypeApp"},{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Array"],"tag":"TypeConstructor"},{"annotation":[],"contents":{"annotation":[],"contents":[{"annotation":[],"contents":[["Play","Types"],"WithRect"],"tag":"TypeConstructor"},{"annotation":[],"contents":"a","tag":"TypeVar"}],"tag":"TypeApp"},"tag":"ParensInType"}],"tag":"TypeApp"}],"tag":"TypeApp"},"visibility":"TypeVarInvisible"},"tag":"ForAll"}},"kind":null,"sourceSpan":{"end":[495,61],"name":"/tmp/tmp-2802391-pi7M5zWwcLpp/purescript-play/src/Play/Play.purs","start":[495,1]},"title":"flattenLayout"},{"children":[],"comments":"Convert a computed Layout back to a Play specification.\nThis removes the computed positioning information but preserves\nthe layout definitions, allowing for re-computation with modifications.\n\nExample:\n```purescript\nmyPlay = P.i \"root\" ~* P.with [ P.i \"child1\", P.i \"child2\" ] :: Play String\ncomputedLayout = P.layout myPlay :: P.Layout String\noriginalPlay = P.rollback computedLayout :: Play String\nmodifiedPlay = originalPlay ~* P.padding (P.all 5.0) :: Play String\nnewLayout = P.layout modifiedPlay :: P.Layout String\n```\n","info":{"declType":"value","type":{"annotation":[],"contents":{"identifier":"a","kind":null,"skolem":null,"type":{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[{"annotation":[],"contents":[["Play"],"Layout"],"tag":"TypeConstructor"},{"annotation":[],"contents":"a","tag":"TypeVar"}],"tag":"TypeApp"}],"tag":"TypeApp"},{"annotation":[],"contents":[{"annotation":[],"contents":[["Play"],"Play"],"tag":"TypeConstructor"},{"annotation":[],"contents":"a","tag":"TypeVar"}],"tag":"TypeApp"}],"tag":"TypeApp"},"visibility":"TypeVarInvisible"},"tag":"ForAll"}},"kind":null,"sourceSpan":{"end":[480,41],"name":"/tmp/tmp-2802391-pi7M5zWwcLpp/purescript-play/src/Play/Play.purs","start":[480,1]},"title":"rollback"},{"children":[],"comments":"Get the total size of the root element in a computed Layout.\nThis represents the minimum bounding box containing all elements.\n","info":{"declType":"value","type":{"annotation":[],"contents":{"identifier":"a","kind":null,"skolem":null,"type":{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[{"annotation":[],"contents":[["Play"],"Layout"],"tag":"TypeConstructor"},{"annotation":[],"contents":"a","tag":"TypeVar"}],"tag":"TypeApp"}],"tag":"TypeApp"},{"annotation":[],"contents":[["Play","Types"],"Size"],"tag":"TypeConstructor"}],"tag":"TypeApp"},"visibility":"TypeVarInvisible"},"tag":"ForAll"}},"kind":null,"sourceSpan":{"end":[500,44],"name":"/tmp/tmp-2802391-pi7M5zWwcLpp/purescript-play/src/Play/Play.purs","start":[500,1]},"title":"layoutSize"},{"children":[],"comments":"Set width to fit content (minimum required space).\n","info":{"declType":"value","type":{"annotation":[],"contents":{"identifier":"a","kind":{"annotation":[],"contents":[["Prim"],"Type"],"tag":"TypeConstructor"},"skolem":160,"type":{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[{"annotation":[],"contents":[["Play"],"Play"],"tag":"TypeConstructor"},{"annotation":[],"contents":"a","tag":"TypeVar"}],"tag":"TypeApp"}],"tag":"TypeApp"},{"annotation":[],"contents":[{"annotation":[],"contents":[["Play"],"Play"],"tag":"TypeConstructor"},{"annotation":[],"contents":"a","tag":"TypeVar"}],"tag":"TypeApp"}],"tag":"TypeApp"},"visibility":"TypeVarInvisible"},"tag":"ForAll"}},"kind":null,"sourceSpan":{"end":[511,51],"name":"/tmp/tmp-2802391-pi7M5zWwcLpp/purescript-play/src/Play/Play.purs","start":[511,1]},"title":"widthFit"},{"children":[],"comments":"Set width to grow and fill available horizontal space.\n","info":{"declType":"value","type":{"annotation":[],"contents":{"identifier":"a","kind":{"annotation":[],"contents":[["Prim"],"Type"],"tag":"TypeConstructor"},"skolem":164,"type":{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[{"annotation":[],"contents":[["Play"],"Play"],"tag":"TypeConstructor"},{"annotation":[],"contents":"a","tag":"TypeVar"}],"tag":"TypeApp"}],"tag":"TypeApp"},{"annotation":[],"contents":[{"annotation":[],"contents":[["Play"],"Play"],"tag":"TypeConstructor"},{"annotation":[],"contents":"a","tag":"TypeVar"}],"tag":"TypeApp"}],"tag":"TypeApp"},"visibility":"TypeVarInvisible"},"tag":"ForAll"}},"kind":null,"sourceSpan":{"end":[514,51],"name":"/tmp/tmp-2802391-pi7M5zWwcLpp/purescript-play/src/Play/Play.purs","start":[514,1]},"title":"widthGrow"},{"children":[],"comments":"Set width to fit content but grow if extra space is available.\n","info":{"declType":"value","type":{"annotation":[],"contents":{"identifier":"a","kind":{"annotation":[],"contents":[["Prim"],"Type"],"tag":"TypeConstructor"},"skolem":162,"type":{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[{"annotation":[],"contents":[["Play"],"Play"],"tag":"TypeConstructor"},{"annotation":[],"contents":"a","tag":"TypeVar"}],"tag":"TypeApp"}],"tag":"TypeApp"},{"annotation":[],"contents":[{"annotation":[],"contents":[["Play"],"Play"],"tag":"TypeConstructor"},{"annotation":[],"contents":"a","tag":"TypeVar"}],"tag":"TypeApp"}],"tag":"TypeApp"},"visibility":"TypeVarInvisible"},"tag":"ForAll"}},"kind":null,"sourceSpan":{"end":[517,51],"name":"/tmp/tmp-2802391-pi7M5zWwcLpp/purescript-play/src/Play/Play.purs","start":[517,1]},"title":"widthFitGrow"},{"children":[],"comments":"Set width to a fixed pixel value.\n","info":{"declType":"value","type":{"annotation":[],"contents":{"identifier":"a","kind":null,"skolem":null,"type":{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Prim"],"Number"],"tag":"TypeConstructor"}],"tag":"TypeApp"},{"annotation":[],"contents":[{"annotation":[],"contents":[["Play"],"PropF"],"tag":"TypeConstructor"},{"annotation":[],"contents":"a","tag":"TypeVar"}],"tag":"TypeApp"}],"tag":"TypeApp"},"visibility":"TypeVarInvisible"},"tag":"ForAll"}},"kind":null,"sourceSpan":{"end":[520,51],"name":"/tmp/tmp-2802391-pi7M5zWwcLpp/purescript-play/src/Play/Play.purs","start":[520,1]},"title":"width"},{"children":[],"comments":"Set height to fit content (minimum required space).\n","info":{"declType":"value","type":{"annotation":[],"contents":{"identifier":"a","kind":{"annotation":[],"contents":[["Prim"],"Type"],"tag":"TypeConstructor"},"skolem":140,"type":{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[{"annotation":[],"contents":[["Play"],"Play"],"tag":"TypeConstructor"},{"annotation":[],"contents":"a","tag":"TypeVar"}],"tag":"TypeApp"}],"tag":"TypeApp"},{"annotation":[],"contents":[{"annotation":[],"contents":[["Play"],"Play"],"tag":"TypeConstructor"},{"annotation":[],"contents":"a","tag":"TypeVar"}],"tag":"TypeApp"}],"tag":"TypeApp"},"visibility":"TypeVarInvisible"},"tag":"ForAll"}},"kind":null,"sourceSpan":{"end":[524,52],"name":"/tmp/tmp-2802391-pi7M5zWwcLpp/purescript-play/src/Play/Play.purs","start":[524,1]},"title":"heightFit"},{"children":[],"comments":"Set height to grow and fill available vertical space.\n","info":{"declType":"value","type":{"annotation":[],"contents":{"identifier":"a","kind":{"annotation":[],"contents":[["Prim"],"Type"],"tag":"TypeConstructor"},"skolem":144,"type":{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[{"annotation":[],"contents":[["Play"],"Play"],"tag":"TypeConstructor"},{"annotation":[],"contents":"a","tag":"TypeVar"}],"tag":"TypeApp"}],"tag":"TypeApp"},{"annotation":[],"contents":[{"annotation":[],"contents":[["Play"],"Play"],"tag":"TypeConstructor"},{"annotation":[],"contents":"a","tag":"TypeVar"}],"tag":"TypeApp"}],"tag":"TypeApp"},"visibility":"TypeVarInvisible"},"tag":"ForAll"}},"kind":null,"sourceSpan":{"end":[527,52],"name":"/tmp/tmp-2802391-pi7M5zWwcLpp/purescript-play/src/Play/Play.purs","start":[527,1]},"title":"heightGrow"},{"children":[],"comments":"Set height to fit content but grow if extra space is available.\n","info":{"declType":"value","type":{"annotation":[],"contents":{"identifier":"a","kind":{"annotation":[],"contents":[["Prim"],"Type"],"tag":"TypeConstructor"},"skolem":142,"type":{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[{"annotation":[],"contents":[["Play"],"Play"],"tag":"TypeConstructor"},{"annotation":[],"contents":"a","tag":"TypeVar"}],"tag":"TypeApp"}],"tag":"TypeApp"},{"annotation":[],"contents":[{"annotation":[],"contents":[["Play"],"Play"],"tag":"TypeConstructor"},{"annotation":[],"contents":"a","tag":"TypeVar"}],"tag":"TypeApp"}],"tag":"TypeApp"},"visibility":"TypeVarInvisible"},"tag":"ForAll"}},"kind":null,"sourceSpan":{"end":[530,52],"name":"/tmp/tmp-2802391-pi7M5zWwcLpp/purescript-play/src/Play/Play.purs","start":[530,1]},"title":"heightFitGrow"},{"children":[],"comments":"Set height to a fixed pixel value.\n","info":{"declType":"value","type":{"annotation":[],"contents":{"identifier":"a","kind":null,"skolem":null,"type":{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Prim"],"Number"],"tag":"TypeConstructor"}],"tag":"TypeApp"},{"annotation":[],"contents":[{"annotation":[],"contents":[["Play"],"PropF"],"tag":"TypeConstructor"},{"annotation":[],"contents":"a","tag":"TypeVar"}],"tag":"TypeApp"}],"tag":"TypeApp"},"visibility":"TypeVarInvisible"},"tag":"ForAll"}},"kind":null,"sourceSpan":{"end":[533,52],"name":"/tmp/tmp-2802391-pi7M5zWwcLpp/purescript-play/src/Play/Play.purs","start":[533,1]},"title":"height"},{"children":[],"comments":"Set layout direction to arrange children vertically (top to bottom).\n","info":{"declType":"value","type":{"annotation":[],"contents":{"identifier":"a","kind":{"annotation":[],"contents":[["Prim"],"Type"],"tag":"TypeConstructor"},"skolem":134,"type":{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[{"annotation":[],"contents":[["Play"],"Play"],"tag":"TypeConstructor"},{"annotation":[],"contents":"a","tag":"TypeVar"}],"tag":"TypeApp"}],"tag":"TypeApp"},{"annotation":[],"contents":[{"annotation":[],"contents":[["Play"],"Play"],"tag":"TypeConstructor"},{"annotation":[],"contents":"a","tag":"TypeVar"}],"tag":"TypeApp"}],"tag":"TypeApp"},"visibility":"TypeVarInvisible"},"tag":"ForAll"}},"kind":null,"sourceSpan":{"end":[537,60],"name":"/tmp/tmp-2802391-pi7M5zWwcLpp/purescript-play/src/Play/Play.purs","start":[537,1]},"title":"topToBottom"},{"children":[],"comments":"Set layout direction to arrange children horizontally (left to right).\nThis is the default direction.\n","info":{"declType":"value","type":{"annotation":[],"contents":{"identifier":"a","kind":{"annotation":[],"contents":[["Prim"],"Type"],"tag":"TypeConstructor"},"skolem":132,"type":{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[{"annotation":[],"contents":[["Play"],"Play"],"tag":"TypeConstructor"},{"annotation":[],"contents":"a","tag":"TypeVar"}],"tag":"TypeApp"}],"tag":"TypeApp"},{"annotation":[],"contents":[{"annotation":[],"contents":[["Play"],"Play"],"tag":"TypeConstructor"},{"annotation":[],"contents":"a","tag":"TypeVar"}],"tag":"TypeApp"}],"tag":"TypeApp"},"visibility":"TypeVarInvisible"},"tag":"ForAll"}},"kind":null,"sourceSpan":{"end":[541,60],"name":"/tmp/tmp-2802391-pi7M5zWwcLpp/purescript-play/src/Play/Play.purs","start":[541,1]},"title":"leftToRight"},{"children":[],"comments":"Property application operator for chaining layout modifications.\nThis is an alias for flipped function application just to distinguish layout-related calls from other ones.\nSo it could be replaces with `(#)` operator at any place.\n\nSee the example of usage at `Play a` type above.\n","info":{"alias":[["Play"],{"Right":{"Left":{"Ident":"playProp"}}}],"declType":"alias","fixity":{"associativity":"infixl","precedence":1}},"kind":null,"sourceSpan":{"end":[90,24],"name":"/tmp/tmp-2802391-pi7M5zWwcLpp/purescript-play/src/Play/Play.purs","start":[90,1]},"title":"(~*)"},{"children":[],"comments":"function\n","info":{"declType":"value","type":{"annotation":[],"contents":{"identifier":"x","kind":null,"skolem":null,"type":{"annotation":[],"contents":{"identifier":"a","kind":null,"skolem":null,"type":{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":"x","tag":"TypeVar"}],"tag":"TypeApp"},{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":"x","tag":"TypeVar"}],"tag":"TypeApp"},{"annotation":[],"contents":[{"annotation":[],"contents":[["Play"],"Play"],"tag":"TypeConstructor"},{"annotation":[],"contents":"a","tag":"TypeVar"}],"tag":"TypeApp"}],"tag":"TypeApp"},"tag":"ParensInType"}],"tag":"TypeApp"},{"annotation":[],"contents":[{"annotation":[],"contents":[["Play"],"Play"],"tag":"TypeConstructor"},{"annotation":[],"contents":"a","tag":"TypeVar"}],"tag":"TypeApp"}],"tag":"TypeApp"}],"tag":"TypeApp"},"visibility":"TypeVarInvisible"},"tag":"ForAll"},"visibility":"TypeVarInvisible"},"tag":"ForAll"}},"kind":null,"sourceSpan":{"end":[93,53],"name":"/tmp/tmp-2802391-pi7M5zWwcLpp/purescript-play/src/Play/Play.purs","start":[93,1]},"title":"playProp"}],"name":"Play","reExports":[{"declarations":[{"children":[],"comments":"An element with its final computed rectangular bounds.\nThe final result of layout computation, so holds `Def` data no more.\n","info":{"arguments":[["a",null]],"declType":"typeSynonym","type":{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Record"],"tag":"TypeConstructor"},{"annotation":[],"contents":["v",{"annotation":[],"contents":"a","tag":"TypeVar"},{"annotation":[],"contents":["rect",{"annotation":[],"contents":[["Play","Types"],"Rect"],"tag":"TypeConstructor"},{"annotation":[],"tag":"REmpty"}],"tag":"RCons"}],"tag":"RCons"}],"tag":"TypeApp"}},"kind":null,"sourceSpan":{"end":[95,46],"name":"/tmp/tmp-2802391-pi7M5zWwcLpp/purescript-play/src/Play/Types.purs","start":[95,1]},"title":"WithRect"},{"children":[],"comments":"An element with layout definition and computed size.\nIntermediate state during layout computation.\n","info":{"arguments":[["a",null]],"declType":"typeSynonym","type":{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Record"],"tag":"TypeConstructor"},{"annotation":[],"contents":["v",{"annotation":[],"contents":"a","tag":"TypeVar"},{"annotation":[],"contents":["def",{"annotation":[],"contents":[["Play","Types"],"Def"],"tag":"TypeConstructor"},{"annotation":[],"contents":["size",{"annotation":[],"contents":[["Play","Types"],"Size"],"tag":"TypeConstructor"},{"annotation":[],"tag":"REmpty"}],"tag":"RCons"}],"tag":"RCons"}],"tag":"RCons"}],"tag":"TypeApp"}},"kind":null,"sourceSpan":{"end":[91,58],"name":"/tmp/tmp-2802391-pi7M5zWwcLpp/purescript-play/src/Play/Types.purs","start":[91,1]},"title":"WithDefSize"},{"children":[],"comments":"An element with both layout definition and computed rectangular bounds.\nContains complete layout information for potential rollback operations.\n","info":{"arguments":[["a",null]],"declType":"typeSynonym","type":{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Record"],"tag":"TypeConstructor"},{"annotation":[],"contents":["v",{"annotation":[],"contents":"a","tag":"TypeVar"},{"annotation":[],"contents":["def",{"annotation":[],"contents":[["Play","Types"],"Def"],"tag":"TypeConstructor"},{"annotation":[],"contents":["rect",{"annotation":[],"contents":[["Play","Types"],"Rect"],"tag":"TypeConstructor"},{"annotation":[],"tag":"REmpty"}],"tag":"RCons"}],"tag":"RCons"}],"tag":"RCons"}],"tag":"TypeApp"}},"kind":null,"sourceSpan":{"end":[99,58],"name":"/tmp/tmp-2802391-pi7M5zWwcLpp/purescript-play/src/Play/Types.purs","start":[99,1]},"title":"WithDefRect"},{"children":[],"comments":"An element with its layout definition.\nUsed during the initial layout specification phase.\n","info":{"arguments":[["a",null]],"declType":"typeSynonym","type":{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Record"],"tag":"TypeConstructor"},{"annotation":[],"contents":["v",{"annotation":[],"contents":"a","tag":"TypeVar"},{"annotation":[],"contents":["def",{"annotation":[],"contents":[["Play","Types"],"Def"],"tag":"TypeConstructor"},{"annotation":[],"tag":"REmpty"}],"tag":"RCons"}],"tag":"RCons"}],"tag":"TypeApp"}},"kind":null,"sourceSpan":{"end":[87,44],"name":"/tmp/tmp-2802391-pi7M5zWwcLpp/purescript-play/src/Play/Types.purs","start":[87,1]},"title":"WithDef"},{"children":[{"comments":null,"info":{"arguments":[],"declType":"dataConstructor"},"sourceSpan":{"end":[26,11],"name":"/tmp/tmp-2802391-pi7M5zWwcLpp/purescript-play/src/Play/Types.purs","start":[26,5]},"title":"None"},{"comments":null,"info":{"arguments":[{"annotation":[],"contents":[["Prim"],"Number"],"tag":"TypeConstructor"}],"declType":"dataConstructor"},"sourceSpan":{"end":[27,12],"name":"/tmp/tmp-2802391-pi7M5zWwcLpp/purescript-play/src/Play/Types.purs","start":[27,5]},"title":"Fixed"},{"comments":null,"info":{"arguments":[],"declType":"dataConstructor"},"sourceSpan":{"end":[28,10],"name":"/tmp/tmp-2802391-pi7M5zWwcLpp/purescript-play/src/Play/Types.purs","start":[28,5]},"title":"Fit"},{"comments":null,"info":{"arguments":[],"declType":"dataConstructor"},"sourceSpan":{"end":[29,11],"name":"/tmp/tmp-2802391-pi7M5zWwcLpp/purescript-play/src/Play/Types.purs","start":[29,5]},"title":"Grow"},{"comments":null,"info":{"arguments":[],"declType":"dataConstructor"},"sourceSpan":{"end":[30,14],"name":"/tmp/tmp-2802391-pi7M5zWwcLpp/purescript-play/src/Play/Types.purs","start":[30,5]},"title":"FitGrow"},{"comments":"FixedPct Percentage\nFitMin { min :: Number }\nFitMax { max :: Number }\nFitMinMax { min :: Number, max :: Number }\n","info":{"declType":"instance","dependencies":[],"type":{"annotation":[],"contents":[{"annotation":[],"contents":[["Data","Eq"],"Eq"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Play","Types"],"Sizing"],"tag":"TypeConstructor"}],"tag":"TypeApp"}},"sourceSpan":{"end":[37,26],"name":"/tmp/tmp-2802391-pi7M5zWwcLpp/purescript-play/src/Play/Types.purs","start":[37,1]},"title":"<anonymous>"}],"comments":"Defines how an element should size itself along a particular axis.\n\n- `None`: No specific sizing constraint\n- `Fixed Number`: Fixed size in pixels\n- `Fit`: Size to fit the content (minimum required space)\n- `Grow`: Expand to fill available space\n- `FitGrow`: If fitting the content requires more space than growing, then fit anyway, else grow to fill the available space\n","info":{"dataDeclType":"data","declType":"data","roles":[],"typeArguments":[]},"kind":null,"sourceSpan":{"end":[30,14],"name":"/tmp/tmp-2802391-pi7M5zWwcLpp/purescript-play/src/Play/Types.purs","start":[25,1]},"title":"Sizing"},{"children":[],"comments":"Dimensions of a rectangular area the item occupies.\nAll values are in pixels.\n","info":{"arguments":[],"declType":"typeSynonym","type":{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Record"],"tag":"TypeConstructor"},{"annotation":[],"contents":["width",{"annotation":[],"contents":[["Prim"],"Number"],"tag":"TypeConstructor"},{"annotation":[],"contents":["height",{"annotation":[],"contents":[["Prim"],"Number"],"tag":"TypeConstructor"},{"annotation":[],"tag":"REmpty"}],"tag":"RCons"}],"tag":"RCons"}],"tag":"TypeApp"}},"kind":null,"sourceSpan":{"end":[83,6],"name":"/tmp/tmp-2802391-pi7M5zWwcLpp/purescript-play/src/Play/Types.purs","start":[80,1]},"title":"Size"},{"children":[],"comments":"A rectangular area defined by position and size.\nRepresents the final computed layout bounds of an element.\n","info":{"arguments":[],"declType":"typeSynonym","type":{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Record"],"tag":"TypeConstructor"},{"annotation":[],"contents":["pos",{"annotation":[],"contents":[["Play","Types"],"Pos"],"tag":"TypeConstructor"},{"annotation":[],"contents":["size",{"annotation":[],"contents":[["Play","Types"],"Size"],"tag":"TypeConstructor"},{"annotation":[],"tag":"REmpty"}],"tag":"RCons"}],"tag":"RCons"}],"tag":"TypeApp"}},"kind":null,"sourceSpan":{"end":[67,6],"name":"/tmp/tmp-2802391-pi7M5zWwcLpp/purescript-play/src/Play/Types.purs","start":[64,1]},"title":"Rect"},{"children":[],"comments":"A 2D position of the element's top-left corner.\n","info":{"arguments":[],"declType":"typeSynonym","type":{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Record"],"tag":"TypeConstructor"},{"annotation":[],"contents":["x",{"annotation":[],"contents":[["Prim"],"Number"],"tag":"TypeConstructor"},{"annotation":[],"contents":["y",{"annotation":[],"contents":[["Prim"],"Number"],"tag":"TypeConstructor"},{"annotation":[],"tag":"REmpty"}],"tag":"RCons"}],"tag":"RCons"}],"tag":"TypeApp"}},"kind":null,"sourceSpan":{"end":[73,6],"name":"/tmp/tmp-2802391-pi7M5zWwcLpp/purescript-play/src/Play/Types.purs","start":[70,1]},"title":"Pos"},{"children":[],"comments":"Defines padding (inner spacing) for all four sides of an item.\nMeans the space between the border of the item and its children on the corresponding sides.\nAll values are in pixels.\n","info":{"arguments":[],"declType":"typeSynonym","type":{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Record"],"tag":"TypeConstructor"},{"annotation":[],"contents":["top",{"annotation":[],"contents":[["Prim"],"Number"],"tag":"TypeConstructor"},{"annotation":[],"contents":["left",{"annotation":[],"contents":[["Prim"],"Number"],"tag":"TypeConstructor"},{"annotation":[],"contents":["bottom",{"annotation":[],"contents":[["Prim"],"Number"],"tag":"TypeConstructor"},{"annotation":[],"contents":["right",{"annotation":[],"contents":[["Prim"],"Number"],"tag":"TypeConstructor"},{"annotation":[],"tag":"REmpty"}],"tag":"RCons"}],"tag":"RCons"}],"tag":"RCons"}],"tag":"RCons"}],"tag":"TypeApp"}},"kind":null,"sourceSpan":{"end":[47,6],"name":"/tmp/tmp-2802391-pi7M5zWwcLpp/purescript-play/src/Play/Types.purs","start":[42,1]},"title":"Padding"},{"children":[],"comments":"An alias for `Pos`, used to represent relative offsets or displacements.\n","info":{"arguments":[],"declType":"typeSynonym","type":{"annotation":[],"contents":[["Play","Types"],"Pos"],"tag":"TypeConstructor"}},"kind":null,"sourceSpan":{"end":[76,18],"name":"/tmp/tmp-2802391-pi7M5zWwcLpp/purescript-play/src/Play/Types.purs","start":[76,1]},"title":"Offset"},{"children":[{"comments":null,"info":{"arguments":[],"declType":"dataConstructor"},"sourceSpan":{"end":[12,18],"name":"/tmp/tmp-2802391-pi7M5zWwcLpp/purescript-play/src/Play/Types.purs","start":[12,5]},"title":"TopToBottom"},{"comments":null,"info":{"arguments":[],"declType":"dataConstructor"},"sourceSpan":{"end":[13,18],"name":"/tmp/tmp-2802391-pi7M5zWwcLpp/purescript-play/src/Play/Types.purs","start":[13,5]},"title":"LeftToRight"},{"comments":null,"info":{"declType":"instance","dependencies":[],"type":{"annotation":[],"contents":[{"annotation":[],"contents":[["Data","Eq"],"Eq"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Play","Types"],"Direction"],"tag":"TypeConstructor"}],"tag":"TypeApp"}},"sourceSpan":{"end":[16,29],"name":"/tmp/tmp-2802391-pi7M5zWwcLpp/purescript-play/src/Play/Types.purs","start":[16,1]},"title":"<anonymous>"}],"comments":"Defines the layout direction for arranging child elements.\n\n- `TopToBottom`: Children are arranged vertically from top to bottom\n- `LeftToRight`: Children are arranged horizontally from left to right\n","info":{"dataDeclType":"data","declType":"data","roles":[],"typeArguments":[]},"kind":null,"sourceSpan":{"end":[13,18],"name":"/tmp/tmp-2802391-pi7M5zWwcLpp/purescript-play/src/Play/Types.purs","start":[11,1]},"title":"Direction"},{"children":[],"comments":"The compiled definition from user-specified with API layout properties.\nNot intented to be constructed manually.\n","info":{"arguments":[],"declType":"typeSynonym","type":{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Record"],"tag":"TypeConstructor"},{"annotation":[],"contents":["direction",{"annotation":[],"contents":[["Play","Types"],"Direction"],"tag":"TypeConstructor"},{"annotation":[],"contents":["padding",{"annotation":[],"contents":[["Play","Types"],"Padding"],"tag":"TypeConstructor"},{"annotation":[],"contents":["childGap",{"annotation":[],"contents":[["Prim"],"Number"],"tag":"TypeConstructor"},{"annotation":[],"contents":["sizing",{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Record"],"tag":"TypeConstructor"},{"annotation":[],"contents":["width",{"annotation":[],"contents":[["Play","Types"],"Sizing"],"tag":"TypeConstructor"},{"annotation":[],"contents":["height",{"annotation":[],"contents":[["Play","Types"],"Sizing"],"tag":"TypeConstructor"},{"annotation":[],"tag":"REmpty"}],"tag":"RCons"}],"tag":"RCons"}],"tag":"TypeApp"},{"annotation":[],"tag":"REmpty"}],"tag":"RCons"}],"tag":"RCons"}],"tag":"RCons"}],"tag":"RCons"}],"tag":"TypeApp"}},"kind":null,"sourceSpan":{"end":[60,6],"name":"/tmp/tmp-2802391-pi7M5zWwcLpp/purescript-play/src/Play/Types.purs","start":[52,1]},"title":"Def"}],"moduleName":{"item":["Play","Types"],"package":null}}]},{"comments":null,"declarations":[{"children":[],"comments":"A path to a specific item in the layout tree.\nRepresented as an array of child indices, where each number indicates\nwhich child to follow at each level of the tree.\n\nExample: `[0, 2, 1]` means \"first child, then its third child, then its second child\"\n","info":{"arguments":[],"declType":"typeSynonym","type":{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Array"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Prim"],"Int"],"tag":"TypeConstructor"}],"tag":"TypeApp"}},"kind":null,"sourceSpan":{"end":[32,26],"name":"/tmp/tmp-2802391-pi7M5zWwcLpp/purescript-play/src/Play/Extra.purs","start":[32,1]},"title":"ItemPath"},{"children":[],"comments":"Get the item value at a specific path in the tree.\nReturns `Nothing` if the path doesn't exist.\nThis extracts just the user data without layout information.\n","info":{"declType":"value","type":{"annotation":[],"contents":{"identifier":"a","kind":null,"skolem":null,"type":{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Play","Extra"],"ItemPath"],"tag":"TypeConstructor"}],"tag":"TypeApp"},{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[{"annotation":[],"contents":[["Play"],"Play"],"tag":"TypeConstructor"},{"annotation":[],"contents":"a","tag":"TypeVar"}],"tag":"TypeApp"}],"tag":"TypeApp"},{"annotation":[],"contents":[{"annotation":[],"contents":[["Data","Maybe"],"Maybe"],"tag":"TypeConstructor"},{"annotation":[],"contents":"a","tag":"TypeVar"}],"tag":"TypeApp"}],"tag":"TypeApp"}],"tag":"TypeApp"},"visibility":"TypeVarInvisible"},"tag":"ForAll"}},"kind":null,"sourceSpan":{"end":[55,50],"name":"/tmp/tmp-2802391-pi7M5zWwcLpp/purescript-play/src/Play/Extra.purs","start":[55,1]},"title":"itemAt"},{"children":[],"comments":"Get a sub-layout starting from a specific path.\nReturns `Nothing` if the path doesn't exist.\nThe returned `Play`` contains only the subtree rooted at the specified path.\n","info":{"declType":"value","type":{"annotation":[],"contents":{"identifier":"a","kind":null,"skolem":null,"type":{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Play","Extra"],"ItemPath"],"tag":"TypeConstructor"}],"tag":"TypeApp"},{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[{"annotation":[],"contents":[["Play"],"Play"],"tag":"TypeConstructor"},{"annotation":[],"contents":"a","tag":"TypeVar"}],"tag":"TypeApp"}],"tag":"TypeApp"},{"annotation":[],"contents":[{"annotation":[],"contents":[["Data","Maybe"],"Maybe"],"tag":"TypeConstructor"},{"annotation":[],"contents":{"annotation":[],"contents":[{"annotation":[],"contents":[["Play"],"Play"],"tag":"TypeConstructor"},{"annotation":[],"contents":"a","tag":"TypeVar"}],"tag":"TypeApp"},"tag":"ParensInType"}],"tag":"TypeApp"}],"tag":"TypeApp"}],"tag":"TypeApp"},"visibility":"TypeVarInvisible"},"tag":"ForAll"}},"kind":null,"sourceSpan":{"end":[49,57],"name":"/tmp/tmp-2802391-pi7M5zWwcLpp/purescript-play/src/Play/Extra.purs","start":[49,1]},"title":"playAt"},{"children":[],"comments":"Get the layout definition at a specific path in the tree.\nReturns `Nothing` if the path doesn't exist.\nThis extracts the layout properties (sizing, padding, etc.) for the item.\n","info":{"declType":"value","type":{"annotation":[],"contents":{"identifier":"a","kind":null,"skolem":null,"type":{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Play","Extra"],"ItemPath"],"tag":"TypeConstructor"}],"tag":"TypeApp"},{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[{"annotation":[],"contents":[["Play"],"Play"],"tag":"TypeConstructor"},{"annotation":[],"contents":"a","tag":"TypeVar"}],"tag":"TypeApp"}],"tag":"TypeApp"},{"annotation":[],"contents":[{"annotation":[],"contents":[["Data","Maybe"],"Maybe"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Play","Types"],"Def"],"tag":"TypeConstructor"}],"tag":"TypeApp"}],"tag":"TypeApp"}],"tag":"TypeApp"},"visibility":"TypeVarInvisible"},"tag":"ForAll"}},"kind":null,"sourceSpan":{"end":[64,54],"name":"/tmp/tmp-2802391-pi7M5zWwcLpp/purescript-play/src/Play/Extra.purs","start":[64,1]},"title":"defAt"},{"children":[],"comments":"Update the item value at a specific path using a transformation function.\nReturns the original layout unchanged if the path doesn't exist.\nOnly modifies the user data, leaving layout definitions intact.\n","info":{"declType":"value","type":{"annotation":[],"contents":{"identifier":"a","kind":null,"skolem":null,"type":{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Play","Extra"],"ItemPath"],"tag":"TypeConstructor"}],"tag":"TypeApp"},{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":"a","tag":"TypeVar"}],"tag":"TypeApp"},{"annotation":[],"contents":"a","tag":"TypeVar"}],"tag":"TypeApp"},"tag":"ParensInType"}],"tag":"TypeApp"},{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[{"annotation":[],"contents":[["Play"],"Play"],"tag":"TypeConstructor"},{"annotation":[],"contents":"a","tag":"TypeVar"}],"tag":"TypeApp"}],"tag":"TypeApp"},{"annotation":[],"contents":[{"annotation":[],"contents":[["Play"],"Play"],"tag":"TypeConstructor"},{"annotation":[],"contents":"a","tag":"TypeVar"}],"tag":"TypeApp"}],"tag":"TypeApp"}],"tag":"TypeApp"}],"tag":"TypeApp"},"visibility":"TypeVarInvisible"},"tag":"ForAll"}},"kind":null,"sourceSpan":{"end":[71,63],"name":"/tmp/tmp-2802391-pi7M5zWwcLpp/purescript-play/src/Play/Extra.purs","start":[71,1]},"title":"updateAt"},{"children":[],"comments":"Update the layout definition at a specific path using a transformation function.\nReturns the original layout unchanged if the path doesn't exist.\nOnly modifies layout properties (sizing, padding, etc.), leaving user data intact.\n","info":{"declType":"value","type":{"annotation":[],"contents":{"identifier":"a","kind":null,"skolem":null,"type":{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Play","Extra"],"ItemPath"],"tag":"TypeConstructor"}],"tag":"TypeApp"},{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Play","Types"],"Def"],"tag":"TypeConstructor"}],"tag":"TypeApp"},{"annotation":[],"contents":[["Play","Types"],"Def"],"tag":"TypeConstructor"}],"tag":"TypeApp"},"tag":"ParensInType"}],"tag":"TypeApp"},{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[{"annotation":[],"contents":[["Play"],"Play"],"tag":"TypeConstructor"},{"annotation":[],"contents":"a","tag":"TypeVar"}],"tag":"TypeApp"}],"tag":"TypeApp"},{"annotation":[],"contents":[{"annotation":[],"contents":[["Play"],"Play"],"tag":"TypeConstructor"},{"annotation":[],"contents":"a","tag":"TypeVar"}],"tag":"TypeApp"}],"tag":"TypeApp"}],"tag":"TypeApp"}],"tag":"TypeApp"},"visibility":"TypeVarInvisible"},"tag":"ForAll"}},"kind":null,"sourceSpan":{"end":[78,76],"name":"/tmp/tmp-2802391-pi7M5zWwcLpp/purescript-play/src/Play/Extra.purs","start":[78,1]},"title":"updateDefAt"},{"children":[],"comments":"Add a new child layout at a specific path.\nThe new child is appended to the end of the existing children list.\nReturns the original layout unchanged if the parent path doesn't exist.\n","info":{"declType":"value","type":{"annotation":[],"contents":{"identifier":"a","kind":null,"skolem":null,"type":{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Play","Extra"],"ItemPath"],"tag":"TypeConstructor"}],"tag":"TypeApp"},{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[{"annotation":[],"contents":[["Play"],"Play"],"tag":"TypeConstructor"},{"annotation":[],"contents":"a","tag":"TypeVar"}],"tag":"TypeApp"}],"tag":"TypeApp"},{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[{"annotation":[],"contents":[["Play"],"Play"],"tag":"TypeConstructor"},{"annotation":[],"contents":"a","tag":"TypeVar"}],"tag":"TypeApp"}],"tag":"TypeApp"},{"annotation":[],"contents":[{"annotation":[],"contents":[["Play"],"Play"],"tag":"TypeConstructor"},{"annotation":[],"contents":"a","tag":"TypeVar"}],"tag":"TypeApp"}],"tag":"TypeApp"}],"tag":"TypeApp"}],"tag":"TypeApp"},"visibility":"TypeVarInvisible"},"tag":"ForAll"}},"kind":null,"sourceSpan":{"end":[90,63],"name":"/tmp/tmp-2802391-pi7M5zWwcLpp/purescript-play/src/Play/Extra.purs","start":[90,1]},"title":"addChildAt"},{"children":[],"comments":"Remove a child at a specific index from the element at the given path.\nReturns the original layout unchanged if the parent path doesn't exist\nor if the child index is out of bounds.\n\nParameters:\n- `path`: Path to the parent element\n- `childIndex`: Index of the child to remove (0-based)\n","info":{"declType":"value","type":{"annotation":[],"contents":{"identifier":"a","kind":null,"skolem":null,"type":{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Play","Extra"],"ItemPath"],"tag":"TypeConstructor"}],"tag":"TypeApp"},{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Prim"],"Int"],"tag":"TypeConstructor"}],"tag":"TypeApp"},{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[{"annotation":[],"contents":[["Play"],"Play"],"tag":"TypeConstructor"},{"annotation":[],"contents":"a","tag":"TypeVar"}],"tag":"TypeApp"}],"tag":"TypeApp"},{"annotation":[],"contents":[{"annotation":[],"contents":[["Play"],"Play"],"tag":"TypeConstructor"},{"annotation":[],"contents":"a","tag":"TypeVar"}],"tag":"TypeApp"}],"tag":"TypeApp"}],"tag":"TypeApp"}],"tag":"TypeApp"},"visibility":"TypeVarInvisible"},"tag":"ForAll"}},"kind":null,"sourceSpan":{"end":[113,63],"name":"/tmp/tmp-2802391-pi7M5zWwcLpp/purescript-play/src/Play/Extra.purs","start":[113,1]},"title":"removeChildAt"},{"children":[],"comments":"Apply a transformation function to the underlying tree structure.\nThis is a low-level function that allows direct manipulation of the tree\nwhile maintaining the Play wrapper. Use with caution.\n","info":{"declType":"value","type":{"annotation":[],"contents":{"identifier":"a","kind":null,"skolem":null,"type":{"annotation":[],"contents":{"identifier":"b","kind":null,"skolem":null,"type":{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[{"annotation":[],"contents":[["Yoga","Tree"],"Tree"],"tag":"TypeConstructor"},{"annotation":[],"contents":{"annotation":[],"contents":[{"annotation":[],"contents":[["Play","Types"],"WithDef"],"tag":"TypeConstructor"},{"annotation":[],"contents":"a","tag":"TypeVar"}],"tag":"TypeApp"},"tag":"ParensInType"}],"tag":"TypeApp"}],"tag":"TypeApp"},{"annotation":[],"contents":[{"annotation":[],"contents":[["Yoga","Tree"],"Tree"],"tag":"TypeConstructor"},{"annotation":[],"contents":{"annotation":[],"contents":[{"annotation":[],"contents":[["Play","Types"],"WithDef"],"tag":"TypeConstructor"},{"annotation":[],"contents":"b","tag":"TypeVar"}],"tag":"TypeApp"},"tag":"ParensInType"}],"tag":"TypeApp"}],"tag":"TypeApp"},"tag":"ParensInType"}],"tag":"TypeApp"},{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[{"annotation":[],"contents":[["Play"],"Play"],"tag":"TypeConstructor"},{"annotation":[],"contents":"a","tag":"TypeVar"}],"tag":"TypeApp"}],"tag":"TypeApp"},{"annotation":[],"contents":[{"annotation":[],"contents":[["Play"],"Play"],"tag":"TypeConstructor"},{"annotation":[],"contents":"b","tag":"TypeVar"}],"tag":"TypeApp"}],"tag":"TypeApp"}],"tag":"TypeApp"},"visibility":"TypeVarInvisible"},"tag":"ForAll"},"visibility":"TypeVarInvisible"},"tag":"ForAll"}},"kind":null,"sourceSpan":{"end":[38,89],"name":"/tmp/tmp-2802391-pi7M5zWwcLpp/purescript-play/src/Play/Extra.purs","start":[38,1]},"title":"overTree"},{"children":[],"comments":"Get the subtree at a specific path in the layout.\nReturns `Nothing` if the path doesn't exist.\n","info":{"declType":"value","type":{"annotation":[],"contents":{"identifier":"a","kind":null,"skolem":null,"type":{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Play","Extra"],"ItemPath"],"tag":"TypeConstructor"}],"tag":"TypeApp"},{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[{"annotation":[],"contents":[["Play"],"Play"],"tag":"TypeConstructor"},{"annotation":[],"contents":"a","tag":"TypeVar"}],"tag":"TypeApp"}],"tag":"TypeApp"},{"annotation":[],"contents":[{"annotation":[],"contents":[["Data","Maybe"],"Maybe"],"tag":"TypeConstructor"},{"annotation":[],"contents":{"annotation":[],"contents":[{"annotation":[],"contents":[["Yoga","Tree"],"Tree"],"tag":"TypeConstructor"},{"annotation":[],"contents":{"annotation":[],"contents":[{"annotation":[],"contents":[["Play","Types"],"WithDef"],"tag":"TypeConstructor"},{"annotation":[],"contents":"a","tag":"TypeVar"}],"tag":"TypeApp"},"tag":"ParensInType"}],"tag":"TypeApp"},"tag":"ParensInType"}],"tag":"TypeApp"}],"tag":"TypeApp"}],"tag":"TypeApp"},"visibility":"TypeVarInvisible"},"tag":"ForAll"}},"kind":null,"sourceSpan":{"end":[43,70],"name":"/tmp/tmp-2802391-pi7M5zWwcLpp/purescript-play/src/Play/Extra.purs","start":[43,1]},"title":"treeAt"},{"children":[],"comments":"Find the first sub-layout in the layout tree that is bound to the provided value.\nReturns `Nothing` if no such item exists.\nThe returned value includes both the path to the item and its layout.\nRoot is at path `[]`.\n","info":{"declType":"value","type":{"annotation":[],"contents":{"identifier":"a","kind":null,"skolem":null,"type":{"annotation":[],"contents":[{"constraintAnn":[],"constraintArgs":[{"annotation":[],"contents":"a","tag":"TypeVar"}],"constraintClass":[["Data","Eq"],"Eq"],"constraintData":null,"constraintKindArgs":[]},{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":"a","tag":"TypeVar"}],"tag":"TypeApp"},{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[{"annotation":[],"contents":[["Play"],"Play"],"tag":"TypeConstructor"},{"annotation":[],"contents":"a","tag":"TypeVar"}],"tag":"TypeApp"}],"tag":"TypeApp"},{"annotation":[],"contents":[{"annotation":[],"contents":[["Data","Maybe"],"Maybe"],"tag":"TypeConstructor"},{"annotation":[],"contents":{"annotation":[],"contents":[{"annotation":[],"contents":[["Data","Tuple","Nested"],"/\\"],"tag":"TypeOp"},{"annotation":[],"contents":[["Play","Extra"],"ItemPath"],"tag":"TypeConstructor"},{"annotation":[],"contents":[{"annotation":[],"contents":[["Play"],"Play"],"tag":"TypeConstructor"},{"annotation":[],"contents":"a","tag":"TypeVar"}],"tag":"TypeApp"}],"tag":"BinaryNoParensType"},"tag":"ParensInType"}],"tag":"TypeApp"}],"tag":"TypeApp"}],"tag":"TypeApp"}],"tag":"ConstrainedType"},"visibility":"TypeVarInvisible"},"tag":"ForAll"}},"kind":null,"sourceSpan":{"end":[152,68],"name":"/tmp/tmp-2802391-pi7M5zWwcLpp/purescript-play/src/Play/Extra.purs","start":[152,1]},"title":"find"},{"children":[],"comments":"Find the first sub-layout in the layout tree in the layout tree that satisfies the given predicate.\nReturns `Nothing` if no such item exists.\nThe returned value includes both the path to the item and the item itself.\nRoot is at path `[]`.\n","info":{"declType":"value","type":{"annotation":[],"contents":{"identifier":"a","kind":null,"skolem":null,"type":{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":"a","tag":"TypeVar"}],"tag":"TypeApp"},{"annotation":[],"contents":[["Prim"],"Boolean"],"tag":"TypeConstructor"}],"tag":"TypeApp"},"tag":"ParensInType"}],"tag":"TypeApp"},{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[{"annotation":[],"contents":[["Play"],"Play"],"tag":"TypeConstructor"},{"annotation":[],"contents":"a","tag":"TypeVar"}],"tag":"TypeApp"}],"tag":"TypeApp"},{"annotation":[],"contents":[{"annotation":[],"contents":[["Data","Maybe"],"Maybe"],"tag":"TypeConstructor"},{"annotation":[],"contents":{"annotation":[],"contents":[{"annotation":[],"contents":[["Data","Tuple","Nested"],"/\\"],"tag":"TypeOp"},{"annotation":[],"contents":[["Play","Extra"],"ItemPath"],"tag":"TypeConstructor"},{"annotation":[],"contents":[{"annotation":[],"contents":[["Play"],"Play"],"tag":"TypeConstructor"},{"annotation":[],"contents":"a","tag":"TypeVar"}],"tag":"TypeApp"}],"tag":"BinaryNoParensType"},"tag":"ParensInType"}],"tag":"TypeApp"}],"tag":"TypeApp"}],"tag":"TypeApp"},"visibility":"TypeVarInvisible"},"tag":"ForAll"}},"kind":null,"sourceSpan":{"end":[160,75],"name":"/tmp/tmp-2802391-pi7M5zWwcLpp/purescript-play/src/Play/Extra.purs","start":[160,1]},"title":"findBy"},{"children":[],"comments":"Find the first sub-layout in the layout tree that is bound to the provided value.\nReturns `Nothing` if no such item exists.\nThe returned value includes both the path to the item and its layout.\nRoot is at path `[]`.\n","info":{"declType":"value","type":{"annotation":[],"contents":{"identifier":"a","kind":null,"skolem":null,"type":{"annotation":[],"contents":[{"constraintAnn":[],"constraintArgs":[{"annotation":[],"contents":"a","tag":"TypeVar"}],"constraintClass":[["Data","Eq"],"Eq"],"constraintData":null,"constraintKindArgs":[]},{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":"a","tag":"TypeVar"}],"tag":"TypeApp"},{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[{"annotation":[],"contents":[["Play"],"Layout"],"tag":"TypeConstructor"},{"annotation":[],"contents":"a","tag":"TypeVar"}],"tag":"TypeApp"}],"tag":"TypeApp"},{"annotation":[],"contents":[{"annotation":[],"contents":[["Data","Maybe"],"Maybe"],"tag":"TypeConstructor"},{"annotation":[],"contents":{"annotation":[],"contents":[{"annotation":[],"contents":[["Data","Tuple","Nested"],"/\\"],"tag":"TypeOp"},{"annotation":[],"contents":[["Play","Extra"],"ItemPath"],"tag":"TypeConstructor"},{"annotation":[],"contents":[{"annotation":[],"contents":[["Yoga","Tree"],"Tree"],"tag":"TypeConstructor"},{"annotation":[],"contents":{"annotation":[],"contents":[{"annotation":[],"contents":[["Play","Types"],"WithRect"],"tag":"TypeConstructor"},{"annotation":[],"contents":"a","tag":"TypeVar"}],"tag":"TypeApp"},"tag":"ParensInType"}],"tag":"TypeApp"}],"tag":"BinaryNoParensType"},"tag":"ParensInType"}],"tag":"TypeApp"}],"tag":"TypeApp"}],"tag":"TypeApp"}],"tag":"ConstrainedType"},"visibility":"TypeVarInvisible"},"tag":"ForAll"}},"kind":null,"sourceSpan":{"end":[169,92],"name":"/tmp/tmp-2802391-pi7M5zWwcLpp/purescript-play/src/Play/Extra.purs","start":[169,1]},"title":"findInLayout"},{"children":[],"comments":"Find the first sub-layout in the layout tree in the layout tree that satisfies the given predicate.\nReturns `Nothing` if no such item exists.\nThe returned value includes both the path to the item and the item itself.\nRoot is at path `[]`.\n","info":{"declType":"value","type":{"annotation":[],"contents":{"identifier":"a","kind":null,"skolem":null,"type":{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":"a","tag":"TypeVar"}],"tag":"TypeApp"},{"annotation":[],"contents":[["Prim"],"Boolean"],"tag":"TypeConstructor"}],"tag":"TypeApp"},"tag":"ParensInType"}],"tag":"TypeApp"},{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[{"annotation":[],"contents":[["Play"],"Layout"],"tag":"TypeConstructor"},{"annotation":[],"contents":"a","tag":"TypeVar"}],"tag":"TypeApp"}],"tag":"TypeApp"},{"annotation":[],"contents":[{"annotation":[],"contents":[["Data","Maybe"],"Maybe"],"tag":"TypeConstructor"},{"annotation":[],"contents":{"annotation":[],"contents":[{"annotation":[],"contents":[["Data","Tuple","Nested"],"/\\"],"tag":"TypeOp"},{"annotation":[],"contents":[["Play","Extra"],"ItemPath"],"tag":"TypeConstructor"},{"annotation":[],"contents":[{"annotation":[],"contents":[["Yoga","Tree"],"Tree"],"tag":"TypeConstructor"},{"annotation":[],"contents":{"annotation":[],"contents":[{"annotation":[],"contents":[["Play","Types"],"WithRect"],"tag":"TypeConstructor"},{"annotation":[],"contents":"a","tag":"TypeVar"}],"tag":"TypeApp"},"tag":"ParensInType"}],"tag":"TypeApp"}],"tag":"BinaryNoParensType"},"tag":"ParensInType"}],"tag":"TypeApp"}],"tag":"TypeApp"}],"tag":"TypeApp"},"visibility":"TypeVarInvisible"},"tag":"ForAll"}},"kind":null,"sourceSpan":{"end":[177,99],"name":"/tmp/tmp-2802391-pi7M5zWwcLpp/purescript-play/src/Play/Extra.purs","start":[177,1]},"title":"findByInLayout"}],"name":"Play.Extra","reExports":[]},{"comments":null,"declarations":[{"children":[],"comments":"The compiled definition from user-specified with API layout properties.\nNot intented to be constructed manually.\n","info":{"arguments":[],"declType":"typeSynonym","type":{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Record"],"tag":"TypeConstructor"},{"annotation":[],"contents":["direction",{"annotation":[],"contents":[["Play","Types"],"Direction"],"tag":"TypeConstructor"},{"annotation":[],"contents":["padding",{"annotation":[],"contents":[["Play","Types"],"Padding"],"tag":"TypeConstructor"},{"annotation":[],"contents":["childGap",{"annotation":[],"contents":[["Prim"],"Number"],"tag":"TypeConstructor"},{"annotation":[],"contents":["sizing",{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Record"],"tag":"TypeConstructor"},{"annotation":[],"contents":["width",{"annotation":[],"contents":[["Play","Types"],"Sizing"],"tag":"TypeConstructor"},{"annotation":[],"contents":["height",{"annotation":[],"contents":[["Play","Types"],"Sizing"],"tag":"TypeConstructor"},{"annotation":[],"tag":"REmpty"}],"tag":"RCons"}],"tag":"RCons"}],"tag":"TypeApp"},{"annotation":[],"tag":"REmpty"}],"tag":"RCons"}],"tag":"RCons"}],"tag":"RCons"}],"tag":"RCons"}],"tag":"TypeApp"}},"kind":null,"sourceSpan":{"end":[60,6],"name":"/tmp/tmp-2802391-pi7M5zWwcLpp/purescript-play/src/Play/Types.purs","start":[52,1]},"title":"Def"},{"children":[{"comments":null,"info":{"arguments":[],"declType":"dataConstructor"},"sourceSpan":{"end":[12,18],"name":"/tmp/tmp-2802391-pi7M5zWwcLpp/purescript-play/src/Play/Types.purs","start":[12,5]},"title":"TopToBottom"},{"comments":null,"info":{"arguments":[],"declType":"dataConstructor"},"sourceSpan":{"end":[13,18],"name":"/tmp/tmp-2802391-pi7M5zWwcLpp/purescript-play/src/Play/Types.purs","start":[13,5]},"title":"LeftToRight"},{"comments":null,"info":{"declType":"instance","dependencies":[],"type":{"annotation":[],"contents":[{"annotation":[],"contents":[["Data","Eq"],"Eq"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Play","Types"],"Direction"],"tag":"TypeConstructor"}],"tag":"TypeApp"}},"sourceSpan":{"end":[16,29],"name":"/tmp/tmp-2802391-pi7M5zWwcLpp/purescript-play/src/Play/Types.purs","start":[16,1]},"title":"<anonymous>"}],"comments":"Defines the layout direction for arranging child elements.\n\n- `TopToBottom`: Children are arranged vertically from top to bottom\n- `LeftToRight`: Children are arranged horizontally from left to right\n","info":{"dataDeclType":"data","declType":"data","roles":[],"typeArguments":[]},"kind":null,"sourceSpan":{"end":[13,18],"name":"/tmp/tmp-2802391-pi7M5zWwcLpp/purescript-play/src/Play/Types.purs","start":[11,1]},"title":"Direction"},{"children":[],"comments":"An alias for `Pos`, used to represent relative offsets or displacements.\n","info":{"arguments":[],"declType":"typeSynonym","type":{"annotation":[],"contents":[["Play","Types"],"Pos"],"tag":"TypeConstructor"}},"kind":null,"sourceSpan":{"end":[76,18],"name":"/tmp/tmp-2802391-pi7M5zWwcLpp/purescript-play/src/Play/Types.purs","start":[76,1]},"title":"Offset"},{"children":[],"comments":"Defines padding (inner spacing) for all four sides of an item.\nMeans the space between the border of the item and its children on the corresponding sides.\nAll values are in pixels.\n","info":{"arguments":[],"declType":"typeSynonym","type":{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Record"],"tag":"TypeConstructor"},{"annotation":[],"contents":["top",{"annotation":[],"contents":[["Prim"],"Number"],"tag":"TypeConstructor"},{"annotation":[],"contents":["left",{"annotation":[],"contents":[["Prim"],"Number"],"tag":"TypeConstructor"},{"annotation":[],"contents":["bottom",{"annotation":[],"contents":[["Prim"],"Number"],"tag":"TypeConstructor"},{"annotation":[],"contents":["right",{"annotation":[],"contents":[["Prim"],"Number"],"tag":"TypeConstructor"},{"annotation":[],"tag":"REmpty"}],"tag":"RCons"}],"tag":"RCons"}],"tag":"RCons"}],"tag":"RCons"}],"tag":"TypeApp"}},"kind":null,"sourceSpan":{"end":[47,6],"name":"/tmp/tmp-2802391-pi7M5zWwcLpp/purescript-play/src/Play/Types.purs","start":[42,1]},"title":"Padding"},{"children":[],"comments":"A 2D position of the element's top-left corner.\n","info":{"arguments":[],"declType":"typeSynonym","type":{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Record"],"tag":"TypeConstructor"},{"annotation":[],"contents":["x",{"annotation":[],"contents":[["Prim"],"Number"],"tag":"TypeConstructor"},{"annotation":[],"contents":["y",{"annotation":[],"contents":[["Prim"],"Number"],"tag":"TypeConstructor"},{"annotation":[],"tag":"REmpty"}],"tag":"RCons"}],"tag":"RCons"}],"tag":"TypeApp"}},"kind":null,"sourceSpan":{"end":[73,6],"name":"/tmp/tmp-2802391-pi7M5zWwcLpp/purescript-play/src/Play/Types.purs","start":[70,1]},"title":"Pos"},{"children":[],"comments":"A rectangular area defined by position and size.\nRepresents the final computed layout bounds of an element.\n","info":{"arguments":[],"declType":"typeSynonym","type":{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Record"],"tag":"TypeConstructor"},{"annotation":[],"contents":["pos",{"annotation":[],"contents":[["Play","Types"],"Pos"],"tag":"TypeConstructor"},{"annotation":[],"contents":["size",{"annotation":[],"contents":[["Play","Types"],"Size"],"tag":"TypeConstructor"},{"annotation":[],"tag":"REmpty"}],"tag":"RCons"}],"tag":"RCons"}],"tag":"TypeApp"}},"kind":null,"sourceSpan":{"end":[67,6],"name":"/tmp/tmp-2802391-pi7M5zWwcLpp/purescript-play/src/Play/Types.purs","start":[64,1]},"title":"Rect"},{"children":[],"comments":"Dimensions of a rectangular area the item occupies.\nAll values are in pixels.\n","info":{"arguments":[],"declType":"typeSynonym","type":{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Record"],"tag":"TypeConstructor"},{"annotation":[],"contents":["width",{"annotation":[],"contents":[["Prim"],"Number"],"tag":"TypeConstructor"},{"annotation":[],"contents":["height",{"annotation":[],"contents":[["Prim"],"Number"],"tag":"TypeConstructor"},{"annotation":[],"tag":"REmpty"}],"tag":"RCons"}],"tag":"RCons"}],"tag":"TypeApp"}},"kind":null,"sourceSpan":{"end":[83,6],"name":"/tmp/tmp-2802391-pi7M5zWwcLpp/purescript-play/src/Play/Types.purs","start":[80,1]},"title":"Size"},{"children":[{"comments":null,"info":{"arguments":[],"declType":"dataConstructor"},"sourceSpan":{"end":[26,11],"name":"/tmp/tmp-2802391-pi7M5zWwcLpp/purescript-play/src/Play/Types.purs","start":[26,5]},"title":"None"},{"comments":null,"info":{"arguments":[{"annotation":[],"contents":[["Prim"],"Number"],"tag":"TypeConstructor"}],"declType":"dataConstructor"},"sourceSpan":{"end":[27,12],"name":"/tmp/tmp-2802391-pi7M5zWwcLpp/purescript-play/src/Play/Types.purs","start":[27,5]},"title":"Fixed"},{"comments":null,"info":{"arguments":[],"declType":"dataConstructor"},"sourceSpan":{"end":[28,10],"name":"/tmp/tmp-2802391-pi7M5zWwcLpp/purescript-play/src/Play/Types.purs","start":[28,5]},"title":"Fit"},{"comments":null,"info":{"arguments":[],"declType":"dataConstructor"},"sourceSpan":{"end":[29,11],"name":"/tmp/tmp-2802391-pi7M5zWwcLpp/purescript-play/src/Play/Types.purs","start":[29,5]},"title":"Grow"},{"comments":null,"info":{"arguments":[],"declType":"dataConstructor"},"sourceSpan":{"end":[30,14],"name":"/tmp/tmp-2802391-pi7M5zWwcLpp/purescript-play/src/Play/Types.purs","start":[30,5]},"title":"FitGrow"},{"comments":"FixedPct Percentage\nFitMin { min :: Number }\nFitMax { max :: Number }\nFitMinMax { min :: Number, max :: Number }\n","info":{"declType":"instance","dependencies":[],"type":{"annotation":[],"contents":[{"annotation":[],"contents":[["Data","Eq"],"Eq"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Play","Types"],"Sizing"],"tag":"TypeConstructor"}],"tag":"TypeApp"}},"sourceSpan":{"end":[37,26],"name":"/tmp/tmp-2802391-pi7M5zWwcLpp/purescript-play/src/Play/Types.purs","start":[37,1]},"title":"<anonymous>"}],"comments":"Defines how an element should size itself along a particular axis.\n\n- `None`: No specific sizing constraint\n- `Fixed Number`: Fixed size in pixels\n- `Fit`: Size to fit the content (minimum required space)\n- `Grow`: Expand to fill available space\n- `FitGrow`: If fitting the content requires more space than growing, then fit anyway, else grow to fill the available space\n","info":{"dataDeclType":"data","declType":"data","roles":[],"typeArguments":[]},"kind":null,"sourceSpan":{"end":[30,14],"name":"/tmp/tmp-2802391-pi7M5zWwcLpp/purescript-play/src/Play/Types.purs","start":[25,1]},"title":"Sizing"},{"children":[],"comments":"An element with its layout definition.\nUsed during the initial layout specification phase.\n","info":{"arguments":[["a",null]],"declType":"typeSynonym","type":{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Record"],"tag":"TypeConstructor"},{"annotation":[],"contents":["v",{"annotation":[],"contents":"a","tag":"TypeVar"},{"annotation":[],"contents":["def",{"annotation":[],"contents":[["Play","Types"],"Def"],"tag":"TypeConstructor"},{"annotation":[],"tag":"REmpty"}],"tag":"RCons"}],"tag":"RCons"}],"tag":"TypeApp"}},"kind":null,"sourceSpan":{"end":[87,44],"name":"/tmp/tmp-2802391-pi7M5zWwcLpp/purescript-play/src/Play/Types.purs","start":[87,1]},"title":"WithDef"},{"children":[],"comments":"An element with layout definition and computed size.\nIntermediate state during layout computation.\n","info":{"arguments":[["a",null]],"declType":"typeSynonym","type":{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Record"],"tag":"TypeConstructor"},{"annotation":[],"contents":["v",{"annotation":[],"contents":"a","tag":"TypeVar"},{"annotation":[],"contents":["def",{"annotation":[],"contents":[["Play","Types"],"Def"],"tag":"TypeConstructor"},{"annotation":[],"contents":["size",{"annotation":[],"contents":[["Play","Types"],"Size"],"tag":"TypeConstructor"},{"annotation":[],"tag":"REmpty"}],"tag":"RCons"}],"tag":"RCons"}],"tag":"RCons"}],"tag":"TypeApp"}},"kind":null,"sourceSpan":{"end":[91,58],"name":"/tmp/tmp-2802391-pi7M5zWwcLpp/purescript-play/src/Play/Types.purs","start":[91,1]},"title":"WithDefSize"},{"children":[],"comments":"An element with its final computed rectangular bounds.\nThe final result of layout computation, so holds `Def` data no more.\n","info":{"arguments":[["a",null]],"declType":"typeSynonym","type":{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Record"],"tag":"TypeConstructor"},{"annotation":[],"contents":["v",{"annotation":[],"contents":"a","tag":"TypeVar"},{"annotation":[],"contents":["rect",{"annotation":[],"contents":[["Play","Types"],"Rect"],"tag":"TypeConstructor"},{"annotation":[],"tag":"REmpty"}],"tag":"RCons"}],"tag":"RCons"}],"tag":"TypeApp"}},"kind":null,"sourceSpan":{"end":[95,46],"name":"/tmp/tmp-2802391-pi7M5zWwcLpp/purescript-play/src/Play/Types.purs","start":[95,1]},"title":"WithRect"},{"children":[],"comments":"An element with both layout definition and computed rectangular bounds.\nContains complete layout information for potential rollback operations.\n","info":{"arguments":[["a",null]],"declType":"typeSynonym","type":{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Record"],"tag":"TypeConstructor"},{"annotation":[],"contents":["v",{"annotation":[],"contents":"a","tag":"TypeVar"},{"annotation":[],"contents":["def",{"annotation":[],"contents":[["Play","Types"],"Def"],"tag":"TypeConstructor"},{"annotation":[],"contents":["rect",{"annotation":[],"contents":[["Play","Types"],"Rect"],"tag":"TypeConstructor"},{"annotation":[],"tag":"REmpty"}],"tag":"RCons"}],"tag":"RCons"}],"tag":"RCons"}],"tag":"TypeApp"}},"kind":null,"sourceSpan":{"end":[99,58],"name":"/tmp/tmp-2802391-pi7M5zWwcLpp/purescript-play/src/Play/Types.purs","start":[99,1]},"title":"WithDefRect"}],"name":"Play.Types","reExports":[]}],"packageMeta":{"dependencies":{"purescript-arrays":">=7.3.0 <8.0.0","purescript-foldable-traversable":">=6.0.0 <7.0.0","purescript-integers":">=6.0.0 <7.0.0","purescript-maybe":">=6.0.0 <7.0.0","purescript-prelude":">=6.0.2 <7.0.0","purescript-tuples":">=7.0.0 <8.0.0","purescript-yoga-tree":">=1.0.0 <2.0.0","purescript-yoga-tree-utils":">=0.1.0 <1.0.0"},"homepage":"https://github.com/shamansir/purescript-play.git","license":["BSD-3-Clause"],"name":"purescript-play","repository":{"type":"git","url":"https://github.com/shamansir/purescript-play.git"}},"resolvedDependencies":{"purescript-arrays":"7.3.0","purescript-bifunctors":"6.1.0","purescript-catenable-lists":"7.0.0","purescript-const":"6.0.0","purescript-contravariant":"6.0.0","purescript-control":"6.0.0","purescript-datetime":"6.1.0","purescript-distributive":"6.0.0","purescript-effect":"4.0.0","purescript-either":"6.1.0","purescript-enums":"6.0.1","purescript-exceptions":"6.1.0","purescript-exists":"6.0.0","purescript-foldable-traversable":"6.0.0","purescript-foreign":"7.0.0","purescript-foreign-object":"4.1.0","purescript-free":"7.1.0","purescript-functions":"6.0.0","purescript-functors":"5.0.0","purescript-gen":"4.0.0","purescript-graphs":"8.1.0","purescript-identity":"6.0.0","purescript-integers":"6.0.0","purescript-invariant":"6.0.0","purescript-js-bigints":"2.2.1","purescript-js-date":"8.0.0","purescript-lazy":"6.0.0","purescript-lists":"7.0.0","purescript-maybe":"6.0.0","purescript-newtype":"5.0.0","purescript-nonempty":"7.0.0","purescript-now":"6.0.0","purescript-nullable":"6.0.0","purescript-numbers":"9.0.1","purescript-ordered-collections":"3.2.0","purescript-orders":"6.0.0","purescript-partial":"4.0.0","purescript-prelude":"6.0.2","purescript-profunctor":"6.0.1","purescript-record":"4.0.0","purescript-refs":"6.0.0","purescript-safe-coerce":"2.0.0","purescript-st":"6.2.0","purescript-strings":"6.0.1","purescript-tailrec":"6.1.0","purescript-transformers":"6.1.0","purescript-tuples":"7.0.0","purescript-type-equality":"4.0.1","purescript-typelevel-prelude":"7.0.0","purescript-unfoldable":"6.0.0","purescript-unicode":"6.0.0","purescript-unsafe-coerce":"6.0.0","purescript-variant":"8.0.0","purescript-yoga-json":"5.2.0","purescript-yoga-tree":"1.0.0","purescript-yoga-tree-utils":"0.1.0"},"tagTime":"2025-10-12T20:42:18+0000","uploader":"pacchettibotti","version":"0.2.0","versionTag":"v0.2.0"}