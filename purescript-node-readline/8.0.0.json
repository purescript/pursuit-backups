{"compilerVersion":"0.15.10","github":["purescript-node","purescript-node-readline"],"moduleMap":{"Control.Alt":"purescript-control","Control.Alternative":"purescript-control","Control.Applicative":"purescript-prelude","Control.Apply":"purescript-prelude","Control.Biapplicative":"purescript-bifunctors","Control.Biapply":"purescript-bifunctors","Control.Bind":"purescript-prelude","Control.Category":"purescript-prelude","Control.Comonad":"purescript-control","Control.Comonad.Env":"purescript-transformers","Control.Comonad.Env.Class":"purescript-transformers","Control.Comonad.Env.Trans":"purescript-transformers","Control.Comonad.Store":"purescript-transformers","Control.Comonad.Store.Class":"purescript-transformers","Control.Comonad.Store.Trans":"purescript-transformers","Control.Comonad.Traced":"purescript-transformers","Control.Comonad.Traced.Class":"purescript-transformers","Control.Comonad.Traced.Trans":"purescript-transformers","Control.Comonad.Trans.Class":"purescript-transformers","Control.Extend":"purescript-control","Control.Lazy":"purescript-control","Control.Monad":"purescript-prelude","Control.Monad.Cont":"purescript-transformers","Control.Monad.Cont.Class":"purescript-transformers","Control.Monad.Cont.Trans":"purescript-transformers","Control.Monad.Error.Class":"purescript-transformers","Control.Monad.Except":"purescript-transformers","Control.Monad.Except.Trans":"purescript-transformers","Control.Monad.Gen":"purescript-gen","Control.Monad.Gen.Class":"purescript-gen","Control.Monad.Gen.Common":"purescript-gen","Control.Monad.Identity.Trans":"purescript-transformers","Control.Monad.List.Trans":"purescript-transformers","Control.Monad.Maybe.Trans":"purescript-transformers","Control.Monad.RWS":"purescript-transformers","Control.Monad.RWS.Trans":"purescript-transformers","Control.Monad.Reader":"purescript-transformers","Control.Monad.Reader.Class":"purescript-transformers","Control.Monad.Reader.Trans":"purescript-transformers","Control.Monad.Rec.Class":"purescript-tailrec","Control.Monad.ST":"purescript-st","Control.Monad.ST.Class":"purescript-st","Control.Monad.ST.Global":"purescript-st","Control.Monad.ST.Internal":"purescript-st","Control.Monad.ST.Ref":"purescript-st","Control.Monad.ST.Uncurried":"purescript-st","Control.Monad.State":"purescript-transformers","Control.Monad.State.Class":"purescript-transformers","Control.Monad.State.Trans":"purescript-transformers","Control.Monad.Trans.Class":"purescript-transformers","Control.Monad.Writer":"purescript-transformers","Control.Monad.Writer.Class":"purescript-transformers","Control.Monad.Writer.Trans":"purescript-transformers","Control.MonadPlus":"purescript-control","Control.Parallel":"purescript-parallel","Control.Parallel.Class":"purescript-parallel","Control.Plus":"purescript-control","Control.Semigroupoid":"purescript-prelude","Data.Array":"purescript-arrays","Data.Array.NonEmpty":"purescript-arrays","Data.Array.NonEmpty.Internal":"purescript-arrays","Data.Array.Partial":"purescript-arrays","Data.Array.ST":"purescript-arrays","Data.Array.ST.Iterator":"purescript-arrays","Data.Array.ST.Partial":"purescript-arrays","Data.ArrayBuffer.Types":"purescript-arraybuffer-types","Data.Bifoldable":"purescript-foldable-traversable","Data.Bifunctor":"purescript-bifunctors","Data.Bifunctor.Join":"purescript-bifunctors","Data.Bitraversable":"purescript-foldable-traversable","Data.Boolean":"purescript-prelude","Data.BooleanAlgebra":"purescript-prelude","Data.Bounded":"purescript-prelude","Data.Bounded.Generic":"purescript-prelude","Data.Char":"purescript-strings","Data.Char.Gen":"purescript-strings","Data.CommutativeRing":"purescript-prelude","Data.Comparison":"purescript-contravariant","Data.Const":"purescript-const","Data.Date":"purescript-datetime","Data.Date.Component":"purescript-datetime","Data.Date.Component.Gen":"purescript-datetime","Data.Date.Gen":"purescript-datetime","Data.DateTime":"purescript-datetime","Data.DateTime.Gen":"purescript-datetime","Data.DateTime.Instant":"purescript-datetime","Data.Decidable":"purescript-contravariant","Data.Decide":"purescript-contravariant","Data.Distributive":"purescript-distributive","Data.Divide":"purescript-contravariant","Data.Divisible":"purescript-contravariant","Data.DivisionRing":"purescript-prelude","Data.Either":"purescript-either","Data.Either.Inject":"purescript-either","Data.Either.Nested":"purescript-either","Data.Enum":"purescript-enums","Data.Enum.Gen":"purescript-enums","Data.Enum.Generic":"purescript-enums","Data.Eq":"purescript-prelude","Data.Eq.Generic":"purescript-prelude","Data.Equivalence":"purescript-contravariant","Data.EuclideanRing":"purescript-prelude","Data.Exists":"purescript-exists","Data.Field":"purescript-prelude","Data.Foldable":"purescript-foldable-traversable","Data.FoldableWithIndex":"purescript-foldable-traversable","Data.Function":"purescript-prelude","Data.Function.Uncurried":"purescript-functions","Data.Functor":"purescript-prelude","Data.Functor.App":"purescript-functors","Data.Functor.Clown":"purescript-functors","Data.Functor.Compose":"purescript-functors","Data.Functor.Contravariant":"purescript-contravariant","Data.Functor.Coproduct":"purescript-functors","Data.Functor.Coproduct.Inject":"purescript-functors","Data.Functor.Coproduct.Nested":"purescript-functors","Data.Functor.Costar":"purescript-functors","Data.Functor.Flip":"purescript-functors","Data.Functor.Invariant":"purescript-invariant","Data.Functor.Joker":"purescript-functors","Data.Functor.Product":"purescript-functors","Data.Functor.Product.Nested":"purescript-functors","Data.Functor.Product2":"purescript-functors","Data.FunctorWithIndex":"purescript-foldable-traversable","Data.Generic.Rep":"purescript-prelude","Data.HeytingAlgebra":"purescript-prelude","Data.HeytingAlgebra.Generic":"purescript-prelude","Data.Identity":"purescript-identity","Data.Int":"purescript-integers","Data.Int.Bits":"purescript-integers","Data.Interval":"purescript-datetime","Data.Interval.Duration":"purescript-datetime","Data.Interval.Duration.Iso":"purescript-datetime","Data.Lazy":"purescript-lazy","Data.List":"purescript-lists","Data.List.Internal":"purescript-lists","Data.List.Lazy":"purescript-lists","Data.List.Lazy.NonEmpty":"purescript-lists","Data.List.Lazy.Types":"purescript-lists","Data.List.NonEmpty":"purescript-lists","Data.List.Partial":"purescript-lists","Data.List.Types":"purescript-lists","Data.List.ZipList":"purescript-lists","Data.Map":"purescript-ordered-collections","Data.Map.Gen":"purescript-ordered-collections","Data.Map.Internal":"purescript-ordered-collections","Data.Maybe":"purescript-maybe","Data.Maybe.First":"purescript-maybe","Data.Maybe.Last":"purescript-maybe","Data.Monoid":"purescript-prelude","Data.Monoid.Additive":"purescript-prelude","Data.Monoid.Alternate":"purescript-control","Data.Monoid.Conj":"purescript-prelude","Data.Monoid.Disj":"purescript-prelude","Data.Monoid.Dual":"purescript-prelude","Data.Monoid.Endo":"purescript-prelude","Data.Monoid.Generic":"purescript-prelude","Data.Monoid.Multiplicative":"purescript-prelude","Data.NaturalTransformation":"purescript-prelude","Data.Newtype":"purescript-newtype","Data.NonEmpty":"purescript-nonempty","Data.Nullable":"purescript-nullable","Data.Number":"purescript-numbers","Data.Number.Approximate":"purescript-numbers","Data.Number.Format":"purescript-numbers","Data.Op":"purescript-contravariant","Data.Options":"purescript-options","Data.Ord":"purescript-prelude","Data.Ord.Down":"purescript-orders","Data.Ord.Generic":"purescript-prelude","Data.Ord.Max":"purescript-orders","Data.Ord.Min":"purescript-orders","Data.Ordering":"purescript-prelude","Data.Posix":"purescript-posix-types","Data.Posix.Signal":"purescript-posix-types","Data.Predicate":"purescript-contravariant","Data.Profunctor":"purescript-profunctor","Data.Profunctor.Choice":"purescript-profunctor","Data.Profunctor.Closed":"purescript-profunctor","Data.Profunctor.Cochoice":"purescript-profunctor","Data.Profunctor.Costrong":"purescript-profunctor","Data.Profunctor.Join":"purescript-profunctor","Data.Profunctor.Split":"purescript-profunctor","Data.Profunctor.Star":"purescript-profunctor","Data.Profunctor.Strong":"purescript-profunctor","Data.Reflectable":"purescript-prelude","Data.Ring":"purescript-prelude","Data.Ring.Generic":"purescript-prelude","Data.Semigroup":"purescript-prelude","Data.Semigroup.First":"purescript-prelude","Data.Semigroup.Foldable":"purescript-foldable-traversable","Data.Semigroup.Generic":"purescript-prelude","Data.Semigroup.Last":"purescript-prelude","Data.Semigroup.Traversable":"purescript-foldable-traversable","Data.Semiring":"purescript-prelude","Data.Semiring.Generic":"purescript-prelude","Data.Set":"purescript-ordered-collections","Data.Set.NonEmpty":"purescript-ordered-collections","Data.Show":"purescript-prelude","Data.Show.Generic":"purescript-prelude","Data.String":"purescript-strings","Data.String.CaseInsensitive":"purescript-strings","Data.String.CodePoints":"purescript-strings","Data.String.CodeUnits":"purescript-strings","Data.String.Common":"purescript-strings","Data.String.Gen":"purescript-strings","Data.String.NonEmpty":"purescript-strings","Data.String.NonEmpty.CaseInsensitive":"purescript-strings","Data.String.NonEmpty.CodePoints":"purescript-strings","Data.String.NonEmpty.CodeUnits":"purescript-strings","Data.String.NonEmpty.Internal":"purescript-strings","Data.String.Pattern":"purescript-strings","Data.String.Regex":"purescript-strings","Data.String.Regex.Flags":"purescript-strings","Data.String.Regex.Unsafe":"purescript-strings","Data.String.Unsafe":"purescript-strings","Data.Symbol":"purescript-prelude","Data.Time":"purescript-datetime","Data.Time.Component":"purescript-datetime","Data.Time.Component.Gen":"purescript-datetime","Data.Time.Duration":"purescript-datetime","Data.Time.Duration.Gen":"purescript-datetime","Data.Time.Gen":"purescript-datetime","Data.Traversable":"purescript-foldable-traversable","Data.Traversable.Accum":"purescript-foldable-traversable","Data.Traversable.Accum.Internal":"purescript-foldable-traversable","Data.TraversableWithIndex":"purescript-foldable-traversable","Data.Tuple":"purescript-tuples","Data.Tuple.Nested":"purescript-tuples","Data.Unfoldable":"purescript-unfoldable","Data.Unfoldable1":"purescript-unfoldable","Data.Unit":"purescript-prelude","Data.Void":"purescript-prelude","Effect":"purescript-effect","Effect.Aff":"purescript-aff","Effect.Aff.Class":"purescript-aff","Effect.Aff.Compat":"purescript-aff","Effect.Class":"purescript-effect","Effect.Exception":"purescript-exceptions","Effect.Exception.Unsafe":"purescript-exceptions","Effect.Ref":"purescript-refs","Effect.Uncurried":"purescript-effect","Effect.Unsafe":"purescript-effect","Foreign":"purescript-foreign","Foreign.Index":"purescript-foreign","Foreign.Keys":"purescript-foreign","Foreign.Object":"purescript-foreign-object","Foreign.Object.Gen":"purescript-foreign-object","Foreign.Object.ST":"purescript-foreign-object","Foreign.Object.ST.Unsafe":"purescript-foreign-object","Foreign.Object.Unsafe":"purescript-foreign-object","Node.Buffer":"purescript-node-buffer","Node.Buffer.Class":"purescript-node-buffer","Node.Buffer.Constants":"purescript-node-buffer","Node.Buffer.Immutable":"purescript-node-buffer","Node.Buffer.ST":"purescript-node-buffer","Node.Buffer.Types":"purescript-node-buffer","Node.Encoding":"purescript-node-buffer","Node.EventEmitter":"purescript-node-event-emitter","Node.EventEmitter.UtilTypes":"purescript-node-event-emitter","Node.Platform":"purescript-node-process","Node.Process":"purescript-node-process","Node.Stream":"purescript-node-streams","Node.Stream.Aff":"purescript-node-streams","Node.Symbol":"purescript-node-event-emitter","Partial":"purescript-partial","Partial.Unsafe":"purescript-partial","Prelude":"purescript-prelude","Record.Unsafe":"purescript-prelude","Safe.Coerce":"purescript-safe-coerce","Type.Data.Boolean":"purescript-typelevel-prelude","Type.Data.Ordering":"purescript-typelevel-prelude","Type.Data.Symbol":"purescript-typelevel-prelude","Type.Equality":"purescript-type-equality","Type.Function":"purescript-typelevel-prelude","Type.Prelude":"purescript-typelevel-prelude","Type.Proxy":"purescript-prelude","Type.Row":"purescript-typelevel-prelude","Type.Row.Homogeneous":"purescript-typelevel-prelude","Type.RowList":"purescript-typelevel-prelude","Unsafe.Coerce":"purescript-unsafe-coerce"},"modules":[{"comments":null,"declarations":[{"children":[],"comments":null,"info":{"dataDeclType":"data","declType":"data","roles":[],"typeArguments":[]},"kind":null,"sourceSpan":{"end":[15,44],"name":"/tmp/tmp-2036-MNjh4K77YGWK/purescript-node-readline/src/Node/Errors/AbortController.purs","start":[15,1]},"title":"AbortController"},{"children":[],"comments":null,"info":{"declType":"value","type":{"annotation":[],"contents":[{"annotation":[],"contents":[["Effect"],"Effect"],"tag":"TypeConstructor"},{"annotation":[],"contents":{"annotation":[],"contents":[["Node","Errors","AbortController"],"AbortController"],"tag":"TypeConstructor"},"tag":"ParensInType"}],"tag":"TypeApp"}},"kind":null,"sourceSpan":{"end":[17,47],"name":"/tmp/tmp-2036-MNjh4K77YGWK/purescript-node-readline/src/Node/Errors/AbortController.purs","start":[17,1]},"title":"new"},{"children":[],"comments":null,"info":{"declType":"value","type":{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Node","Errors","AbortController"],"AbortController"],"tag":"TypeConstructor"}],"tag":"TypeApp"},{"annotation":[],"contents":[{"annotation":[],"contents":[["Effect"],"Effect"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Data","Unit"],"Unit"],"tag":"TypeConstructor"}],"tag":"TypeApp"}],"tag":"TypeApp"}},"kind":null,"sourceSpan":{"end":[19,40],"name":"/tmp/tmp-2036-MNjh4K77YGWK/purescript-node-readline/src/Node/Errors/AbortController.purs","start":[19,1]},"title":"abort"},{"children":[],"comments":null,"info":{"declType":"value","type":{"annotation":[],"contents":{"identifier":"a","kind":null,"skolem":null,"type":{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Node","Errors","AbortController"],"AbortController"],"tag":"TypeConstructor"}],"tag":"TypeApp"},{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":"a","tag":"TypeVar"}],"tag":"TypeApp"},{"annotation":[],"contents":[{"annotation":[],"contents":[["Effect"],"Effect"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Data","Unit"],"Unit"],"tag":"TypeConstructor"}],"tag":"TypeApp"}],"tag":"TypeApp"}],"tag":"TypeApp"},"visibility":"TypeVarInvisible"},"tag":"ForAll"}},"kind":null,"sourceSpan":{"end":[24,56],"name":"/tmp/tmp-2036-MNjh4K77YGWK/purescript-node-readline/src/Node/Errors/AbortController.purs","start":[24,1]},"title":"abort'"},{"children":[],"comments":null,"info":{"declType":"value","type":{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Node","Errors","AbortController"],"AbortController"],"tag":"TypeConstructor"}],"tag":"TypeApp"},{"annotation":[],"contents":[["Node","Errors","AbortSignal"],"AbortSignal"],"tag":"TypeConstructor"}],"tag":"TypeApp"}},"kind":null,"sourceSpan":{"end":[29,56],"name":"/tmp/tmp-2036-MNjh4K77YGWK/purescript-node-readline/src/Node/Errors/AbortController.purs","start":[29,1]},"title":"signal"}],"name":"Node.Errors.AbortController","reExports":[]},{"comments":null,"declarations":[{"children":[],"comments":null,"info":{"dataDeclType":"data","declType":"data","roles":[],"typeArguments":[]},"kind":null,"sourceSpan":{"end":[23,40],"name":"/tmp/tmp-2036-MNjh4K77YGWK/purescript-node-readline/src/Node/Errors/AbortSignal.purs","start":[23,1]},"title":"AbortSignal"},{"children":[],"comments":null,"info":{"declType":"value","type":{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Node","Errors","AbortSignal"],"AbortSignal"],"tag":"TypeConstructor"}],"tag":"TypeApp"},{"annotation":[],"contents":[["Node","EventEmitter"],"EventEmitter"],"tag":"TypeConstructor"}],"tag":"TypeApp"}},"kind":null,"sourceSpan":{"end":[25,46],"name":"/tmp/tmp-2036-MNjh4K77YGWK/purescript-node-readline/src/Node/Errors/AbortSignal.purs","start":[25,1]},"title":"toEventEmitter"},{"children":[],"comments":null,"info":{"declType":"value","type":{"annotation":[],"contents":[{"annotation":[],"contents":[["Effect"],"Effect"],"tag":"TypeConstructor"},{"annotation":[],"contents":{"annotation":[],"contents":[["Node","Errors","AbortSignal"],"AbortSignal"],"tag":"TypeConstructor"},"tag":"ParensInType"}],"tag":"TypeApp"}},"kind":null,"sourceSpan":{"end":[28,48],"name":"/tmp/tmp-2036-MNjh4K77YGWK/purescript-node-readline/src/Node/Errors/AbortSignal.purs","start":[28,1]},"title":"newAbort"},{"children":[],"comments":null,"info":{"declType":"value","type":{"annotation":[],"contents":{"identifier":"a","kind":null,"skolem":null,"type":{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":"a","tag":"TypeVar"}],"tag":"TypeApp"},{"annotation":[],"contents":[{"annotation":[],"contents":[["Effect"],"Effect"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Node","Errors","AbortSignal"],"AbortSignal"],"tag":"TypeConstructor"}],"tag":"TypeApp"}],"tag":"TypeApp"},"visibility":"TypeVarInvisible"},"tag":"ForAll"}},"kind":null,"sourceSpan":{"end":[30,47],"name":"/tmp/tmp-2036-MNjh4K77YGWK/purescript-node-readline/src/Node/Errors/AbortSignal.purs","start":[30,1]},"title":"newAbort'"},{"children":[],"comments":null,"info":{"declType":"value","type":{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Data","Time","Duration"],"Milliseconds"],"tag":"TypeConstructor"}],"tag":"TypeApp"},{"annotation":[],"contents":[{"annotation":[],"contents":[["Effect"],"Effect"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Node","Errors","AbortSignal"],"AbortSignal"],"tag":"TypeConstructor"}],"tag":"TypeApp"}],"tag":"TypeApp"}},"kind":null,"sourceSpan":{"end":[35,49],"name":"/tmp/tmp-2036-MNjh4K77YGWK/purescript-node-readline/src/Node/Errors/AbortSignal.purs","start":[35,1]},"title":"newTimeout"},{"children":[],"comments":"The 'abort' event is emitted when the abortController.abort() method is called. The callback is invoked with a single object argument with a single type property set to 'abort':\n\nWe recommended that code check that the `abortSignal.aborted` attribute is false before adding an 'abort' event listener.\n\nAny event listeners attached to the AbortSignal should use the { once: true } option (or, if using the EventEmitter APIs to attach a listener, use the once() method) to ensure that the event listener is removed as soon as the 'abort' event is handled. Failure to do so may result in memory leaks.\n","info":{"declType":"value","type":{"annotation":[],"contents":[{"annotation":[],"contents":[["Node","EventEmitter","UtilTypes"],"EventHandle0"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Node","Errors","AbortSignal"],"AbortSignal"],"tag":"TypeConstructor"}],"tag":"TypeApp"}},"kind":null,"sourceSpan":{"end":[45,35],"name":"/tmp/tmp-2036-MNjh4K77YGWK/purescript-node-readline/src/Node/Errors/AbortSignal.purs","start":[45,1]},"title":"abortH"},{"children":[],"comments":null,"info":{"declType":"value","type":{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Node","Errors","AbortSignal"],"AbortSignal"],"tag":"TypeConstructor"}],"tag":"TypeApp"},{"annotation":[],"contents":[{"annotation":[],"contents":[["Effect"],"Effect"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Prim"],"Boolean"],"tag":"TypeConstructor"}],"tag":"TypeApp"}],"tag":"TypeApp"}},"kind":null,"sourceSpan":{"end":[48,41],"name":"/tmp/tmp-2036-MNjh4K77YGWK/purescript-node-readline/src/Node/Errors/AbortSignal.purs","start":[48,1]},"title":"aborted"},{"children":[],"comments":null,"info":{"declType":"value","type":{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Node","Errors","AbortSignal"],"AbortSignal"],"tag":"TypeConstructor"}],"tag":"TypeApp"},{"annotation":[],"contents":[{"annotation":[],"contents":[["Effect"],"Effect"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Foreign"],"Foreign"],"tag":"TypeConstructor"}],"tag":"TypeApp"}],"tag":"TypeApp"}},"kind":null,"sourceSpan":{"end":[53,40],"name":"/tmp/tmp-2036-MNjh4K77YGWK/purescript-node-readline/src/Node/Errors/AbortSignal.purs","start":[53,1]},"title":"reason"},{"children":[],"comments":null,"info":{"declType":"value","type":{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Node","Errors","AbortSignal"],"AbortSignal"],"tag":"TypeConstructor"}],"tag":"TypeApp"},{"annotation":[],"contents":[{"annotation":[],"contents":[["Effect"],"Effect"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Data","Unit"],"Unit"],"tag":"TypeConstructor"}],"tag":"TypeApp"}],"tag":"TypeApp"}},"kind":null,"sourceSpan":{"end":[58,45],"name":"/tmp/tmp-2036-MNjh4K77YGWK/purescript-node-readline/src/Node/Errors/AbortSignal.purs","start":[58,1]},"title":"throwIfAborted"}],"name":"Node.Errors.AbortSignal","reExports":[]},{"comments":"This module provides a binding to the Node `readline` API.\n","declarations":[{"children":[],"comments":"A handle to a console interface.\n\nA handle can be created with the `createInterface` function.\n\n`Interface` extends `EventEmiter`\n\nFrom Node docs v18:\n> Instances of the `readline.Interface` class are constructed using the `readline.createInterface()` method. \n> Every instance is associated with a single input Readable stream and a single output Writable stream. \n> The output stream is used to print prompts for user input that arrives on, and is read from, the input stream.\n","info":{"dataDeclType":"data","declType":"data","roles":[],"typeArguments":[]},"kind":null,"sourceSpan":{"end":[86,38],"name":"/tmp/tmp-2036-MNjh4K77YGWK/purescript-node-readline/src/Node/ReadLine.purs","start":[86,1]},"title":"Interface"},{"children":[],"comments":null,"info":{"declType":"value","type":{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Node","ReadLine"],"Interface"],"tag":"TypeConstructor"}],"tag":"TypeApp"},{"annotation":[],"contents":[["Node","EventEmitter"],"EventEmitter"],"tag":"TypeConstructor"}],"tag":"TypeApp"}},"kind":null,"sourceSpan":{"end":[88,44],"name":"/tmp/tmp-2036-MNjh4K77YGWK/purescript-node-readline/src/Node/ReadLine.purs","start":[88,1]},"title":"toEventEmitter"},{"children":[],"comments":"Builds an interface with the specified options.\nThe `Readable` arg to this function\nwill be used as the `input` option below:\n\n- `input` <stream.Readable> The Readable stream to listen to. This option is required.\n- `output` <stream.Writable> The Writable stream to write readline data to.\n- `completer` <Function> An optional function used for Tab autocompletion.\n- `terminal` <boolean> true if the input and output streams should be treated like a TTY, and have ANSI/VT100 escape codes written to it. Default: checking isTTY on the output stream upon instantiation.\n- `history` <string[]> Initial list of history lines. This option makes sense only if terminal is set to true by the user or by an internal output check, otherwise the history caching mechanism is not initialized at all. Default: [].\n- `historySize` <number> Maximum number of history lines retained. To disable the history set this value to 0. This option makes sense only if terminal is set to true by the user or by an internal output check, otherwise the history caching mechanism is not initialized at all. Default: 30.\n- `removeHistoryDuplicates` <boolean> If true, when a new input line added to the history list duplicates an older one, this removes the older line from the list. Default: false.\n- `prompt` <string> The prompt string to use. Default: '> '.\n- `crlfDelay` <number> If the delay between \\r and \\n exceeds crlfDelay milliseconds, both \\r and \\n will be treated as separate end-of-line input. crlfDelay will be coerced to a number no less than 100. It can be set to Infinity, in which case \\r followed by \\n will always be considered a single newline (which may be reasonable for reading files with \\r\\n line delimiter). Default: 100.\n- `escapeCodeTimeout` <number> The duration readline will wait for a character (when reading an ambiguous key sequence in milliseconds one that can both form a complete key sequence using the input read so far and can take additional input to complete a longer key sequence). Default: 500.\n- `tabSize` <integer> The number of spaces a tab is equal to (minimum 1). Default: 8.\n- `signal` <AbortSignal> Allows closing the interface using an AbortSignal. Aborting the signal will internally call close on the interface.\n","info":{"declType":"value","type":{"annotation":[],"contents":{"identifier":"r","kind":null,"skolem":null,"type":{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[{"annotation":[],"contents":[["Node","Stream"],"Readable"],"tag":"TypeConstructor"},{"annotation":[],"contents":"r","tag":"TypeVar"}],"tag":"TypeApp"}],"tag":"TypeApp"},{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[{"annotation":[],"contents":[["Data","Options"],"Options"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Node","ReadLine"],"InterfaceOptions"],"tag":"TypeConstructor"}],"tag":"TypeApp"}],"tag":"TypeApp"},{"annotation":[],"contents":[{"annotation":[],"contents":[["Effect"],"Effect"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Node","ReadLine"],"Interface"],"tag":"TypeConstructor"}],"tag":"TypeApp"}],"tag":"TypeApp"}],"tag":"TypeApp"},"visibility":"TypeVarInvisible"},"tag":"ForAll"}},"kind":null,"sourceSpan":{"end":[111,22],"name":"/tmp/tmp-2036-MNjh4K77YGWK/purescript-node-readline/src/Node/ReadLine.purs","start":[107,1]},"title":"createInterface"},{"children":[],"comments":"Create an interface with the specified completion function.\n","info":{"declType":"value","type":{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Node","ReadLine"],"Completer"],"tag":"TypeConstructor"}],"tag":"TypeApp"},{"annotation":[],"contents":[{"annotation":[],"contents":[["Effect"],"Effect"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Node","ReadLine"],"Interface"],"tag":"TypeConstructor"}],"tag":"TypeApp"}],"tag":"TypeApp"}},"kind":null,"sourceSpan":{"end":[120,56],"name":"/tmp/tmp-2036-MNjh4K77YGWK/purescript-node-readline/src/Node/ReadLine.purs","start":[120,1]},"title":"createConsoleInterface"},{"children":[],"comments":"Options passed to `readline`'s `createInterface`\n\n- `input` <stream.Readable> The Readable stream to listen to. This option is required.\n- `output` <stream.Writable> The Writable stream to write readline data to.\n- `completer` <Function> An optional function used for Tab autocompletion.\n- `terminal` <boolean> true if the input and output streams should be treated like a TTY, and have ANSI/VT100 escape codes written to it. Default: checking isTTY on the output stream upon instantiation.\n- `history` <string[]> Initial list of history lines. This option makes sense only if terminal is set to true by the user or by an internal output check, otherwise the history caching mechanism is not initialized at all. Default: [].\n- `historySize` <number> Maximum number of history lines retained. To disable the history set this value to 0. This option makes sense only if terminal is set to true by the user or by an internal output check, otherwise the history caching mechanism is not initialized at all. Default: 30.\n- `removeHistoryDuplicates` <boolean> If true, when a new input line added to the history list duplicates an older one, this removes the older line from the list. Default: false.\n- `prompt` <string> The prompt string to use. Default: '> '.\n- `crlfDelay` <number> If the delay between \\r and \\n exceeds crlfDelay milliseconds, both \\r and \\n will be treated as separate end-of-line input. crlfDelay will be coerced to a number no less than 100. It can be set to Infinity, in which case \\r followed by \\n will always be considered a single newline (which may be reasonable for reading files with \\r\\n line delimiter). Default: 100.\n- `escapeCodeTimeout` <number> The duration readline will wait for a character (when reading an ambiguous key sequence in milliseconds one that can both form a complete key sequence using the input read so far and can take additional input to complete a longer key sequence). Default: 500.\n- `tabSize` <integer> The number of spaces a tab is equal to (minimum 1). Default: 8.\n- `signal` <AbortSignal> Allows closing the interface using an AbortSignal. Aborting the signal will internally call close on the interface.\n","info":{"dataDeclType":"data","declType":"data","roles":[],"typeArguments":[]},"kind":null,"sourceSpan":{"end":[140,45],"name":"/tmp/tmp-2036-MNjh4K77YGWK/purescript-node-readline/src/Node/ReadLine.purs","start":[140,1]},"title":"InterfaceOptions"},{"children":[],"comments":null,"info":{"declType":"value","type":{"annotation":[],"contents":{"identifier":"w","kind":null,"skolem":null,"type":{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Data","Options"],"Option"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Node","ReadLine"],"InterfaceOptions"],"tag":"TypeConstructor"}],"tag":"TypeApp"},{"annotation":[],"contents":{"annotation":[],"contents":[{"annotation":[],"contents":[["Node","Stream"],"Writable"],"tag":"TypeConstructor"},{"annotation":[],"contents":"w","tag":"TypeVar"}],"tag":"TypeApp"},"tag":"ParensInType"}],"tag":"TypeApp"},"visibility":"TypeVarInvisible"},"tag":"ForAll"}},"kind":null,"sourceSpan":{"end":[142,57],"name":"/tmp/tmp-2036-MNjh4K77YGWK/purescript-node-readline/src/Node/ReadLine.purs","start":[142,1]},"title":"output"},{"children":[],"comments":"A function which performs tab completion.\n\nThis function takes the partial command as input, and returns a collection of\ncompletions, as well as the matched portion of the input string.\n","info":{"arguments":[],"declType":"typeSynonym","type":{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Prim"],"String"],"tag":"TypeConstructor"}],"tag":"TypeApp"},{"annotation":[],"contents":[{"annotation":[],"contents":[["Effect"],"Effect"],"tag":"TypeConstructor"},{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Record"],"tag":"TypeConstructor"},{"annotation":[],"contents":["completions",{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Array"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Prim"],"String"],"tag":"TypeConstructor"}],"tag":"TypeApp"},{"annotation":[],"contents":["matched",{"annotation":[],"contents":[["Prim"],"String"],"tag":"TypeConstructor"},{"annotation":[],"tag":"REmpty"}],"tag":"RCons"}],"tag":"RCons"}],"tag":"TypeApp"}],"tag":"TypeApp"}],"tag":"TypeApp"}},"kind":null,"sourceSpan":{"end":[157,9],"name":"/tmp/tmp-2036-MNjh4K77YGWK/purescript-node-readline/src/Node/ReadLine.purs","start":[152,1]},"title":"Completer"},{"children":[],"comments":null,"info":{"declType":"value","type":{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Data","Options"],"Option"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Node","ReadLine"],"InterfaceOptions"],"tag":"TypeConstructor"}],"tag":"TypeApp"},{"annotation":[],"contents":[["Node","ReadLine"],"Completer"],"tag":"TypeConstructor"}],"tag":"TypeApp"}},"kind":null,"sourceSpan":{"end":[145,47],"name":"/tmp/tmp-2036-MNjh4K77YGWK/purescript-node-readline/src/Node/ReadLine.purs","start":[145,1]},"title":"completer"},{"children":[],"comments":"A completion function which offers no completions.\n","info":{"declType":"value","type":{"annotation":[],"contents":[["Node","ReadLine"],"Completer"],"tag":"TypeConstructor"}},"kind":null,"sourceSpan":{"end":[160,26],"name":"/tmp/tmp-2036-MNjh4K77YGWK/purescript-node-readline/src/Node/ReadLine.purs","start":[160,1]},"title":"noCompletion"},{"children":[],"comments":null,"info":{"declType":"value","type":{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Data","Options"],"Option"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Node","ReadLine"],"InterfaceOptions"],"tag":"TypeConstructor"}],"tag":"TypeApp"},{"annotation":[],"contents":[["Prim"],"Boolean"],"tag":"TypeConstructor"}],"tag":"TypeApp"}},"kind":null,"sourceSpan":{"end":[163,44],"name":"/tmp/tmp-2036-MNjh4K77YGWK/purescript-node-readline/src/Node/ReadLine.purs","start":[163,1]},"title":"terminal"},{"children":[],"comments":null,"info":{"declType":"value","type":{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Data","Options"],"Option"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Node","ReadLine"],"InterfaceOptions"],"tag":"TypeConstructor"}],"tag":"TypeApp"},{"annotation":[],"contents":{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Array"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Prim"],"String"],"tag":"TypeConstructor"}],"tag":"TypeApp"},"tag":"ParensInType"}],"tag":"TypeApp"}},"kind":null,"sourceSpan":{"end":[166,50],"name":"/tmp/tmp-2036-MNjh4K77YGWK/purescript-node-readline/src/Node/ReadLine.purs","start":[166,1]},"title":"history"},{"children":[],"comments":null,"info":{"declType":"value","type":{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Data","Options"],"Option"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Node","ReadLine"],"InterfaceOptions"],"tag":"TypeConstructor"}],"tag":"TypeApp"},{"annotation":[],"contents":[["Prim"],"Int"],"tag":"TypeConstructor"}],"tag":"TypeApp"}},"kind":null,"sourceSpan":{"end":[169,43],"name":"/tmp/tmp-2036-MNjh4K77YGWK/purescript-node-readline/src/Node/ReadLine.purs","start":[169,1]},"title":"historySize"},{"children":[],"comments":null,"info":{"declType":"value","type":{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Data","Options"],"Option"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Node","ReadLine"],"InterfaceOptions"],"tag":"TypeConstructor"}],"tag":"TypeApp"},{"annotation":[],"contents":[["Prim"],"Boolean"],"tag":"TypeConstructor"}],"tag":"TypeApp"}},"kind":null,"sourceSpan":{"end":[172,59],"name":"/tmp/tmp-2036-MNjh4K77YGWK/purescript-node-readline/src/Node/ReadLine.purs","start":[172,1]},"title":"removeHistoryDuplicates"},{"children":[],"comments":"Option for `prompt`; name is changed to prevent naming clash with `prompt` function\n","info":{"declType":"value","type":{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Data","Options"],"Option"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Node","ReadLine"],"InterfaceOptions"],"tag":"TypeConstructor"}],"tag":"TypeApp"},{"annotation":[],"contents":[["Prim"],"String"],"tag":"TypeConstructor"}],"tag":"TypeApp"}},"kind":null,"sourceSpan":{"end":[176,44],"name":"/tmp/tmp-2036-MNjh4K77YGWK/purescript-node-readline/src/Node/ReadLine.purs","start":[176,1]},"title":"promptStr"},{"children":[],"comments":null,"info":{"declType":"value","type":{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Data","Options"],"Option"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Node","ReadLine"],"InterfaceOptions"],"tag":"TypeConstructor"}],"tag":"TypeApp"},{"annotation":[],"contents":[["Data","Time","Duration"],"Milliseconds"],"tag":"TypeConstructor"}],"tag":"TypeApp"}},"kind":null,"sourceSpan":{"end":[179,50],"name":"/tmp/tmp-2036-MNjh4K77YGWK/purescript-node-readline/src/Node/ReadLine.purs","start":[179,1]},"title":"crlfDelay"},{"children":[],"comments":null,"info":{"declType":"value","type":{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Data","Options"],"Option"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Node","ReadLine"],"InterfaceOptions"],"tag":"TypeConstructor"}],"tag":"TypeApp"},{"annotation":[],"contents":[["Data","Time","Duration"],"Milliseconds"],"tag":"TypeConstructor"}],"tag":"TypeApp"}},"kind":null,"sourceSpan":{"end":[182,58],"name":"/tmp/tmp-2036-MNjh4K77YGWK/purescript-node-readline/src/Node/ReadLine.purs","start":[182,1]},"title":"escapeCodeTimeout"},{"children":[],"comments":null,"info":{"declType":"value","type":{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Data","Options"],"Option"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Node","ReadLine"],"InterfaceOptions"],"tag":"TypeConstructor"}],"tag":"TypeApp"},{"annotation":[],"contents":[["Prim"],"Int"],"tag":"TypeConstructor"}],"tag":"TypeApp"}},"kind":null,"sourceSpan":{"end":[185,39],"name":"/tmp/tmp-2036-MNjh4K77YGWK/purescript-node-readline/src/Node/ReadLine.purs","start":[185,1]},"title":"tabSize"},{"children":[],"comments":null,"info":{"declType":"value","type":{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Data","Options"],"Option"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Node","ReadLine"],"InterfaceOptions"],"tag":"TypeConstructor"}],"tag":"TypeApp"},{"annotation":[],"contents":[["Node","Errors","AbortSignal"],"AbortSignal"],"tag":"TypeConstructor"}],"tag":"TypeApp"}},"kind":null,"sourceSpan":{"end":[188,46],"name":"/tmp/tmp-2036-MNjh4K77YGWK/purescript-node-readline/src/Node/ReadLine.purs","start":[188,1]},"title":"signal"},{"children":[],"comments":"The 'close' event is emitted when one of the following occur:\n\n- The `rl.close()` method is called and the readline.Interface instance has relinquished control over the input and output streams;\n- The input stream receives its 'end' event;\n- The input stream receives `Ctrl+D` to signal end-of-transmission (`EOT`);\n- The input stream receives `Ctrl+C` to signal `SIGINT` and there is no `SIGINT` event listener registered on the readline.Interface instance.\n\nThe listener function is called without passing any arguments.\n\nThe `readline.Interface` instance is finished once the `close` event is emitted.\n","info":{"declType":"value","type":{"annotation":[],"contents":[{"annotation":[],"contents":[["Node","EventEmitter","UtilTypes"],"EventHandle0"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Node","ReadLine"],"Interface"],"tag":"TypeConstructor"}],"tag":"TypeApp"}},"kind":null,"sourceSpan":{"end":[201,33],"name":"/tmp/tmp-2036-MNjh4K77YGWK/purescript-node-readline/src/Node/ReadLine.purs","start":[201,1]},"title":"closeH"},{"children":[],"comments":"The 'line' event is emitted whenever the input stream receives an end-of-line input (`\\n`, `\\r`, or `\\r\\n`). \nThis usually occurs when the user presses Enter or Return.\n\nThe 'line' event is also emitted if new data has been read from a stream and that \nstream ends without a final end-of-line marker.\n\nThe listener function is called with a string containing the single line of received input.\n","info":{"declType":"value","type":{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Node","EventEmitter","UtilTypes"],"EventHandle1"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Node","ReadLine"],"Interface"],"tag":"TypeConstructor"}],"tag":"TypeApp"},{"annotation":[],"contents":[["Prim"],"String"],"tag":"TypeConstructor"}],"tag":"TypeApp"}},"kind":null,"sourceSpan":{"end":[211,39],"name":"/tmp/tmp-2036-MNjh4K77YGWK/purescript-node-readline/src/Node/ReadLine.purs","start":[211,1]},"title":"lineH"},{"children":[],"comments":"The 'history' event is emitted whenever the history array has changed.\n\nThe listener function is called with an array containing the history array. It will reflect all changes, added lines and removed lines due to historySize and removeHistoryDuplicates.\n\nThe primary purpose is to allow a listener to persist the history. It is also possible for the listener to change the history object. This could be useful to prevent certain lines to be added to the history, like a password.\n","info":{"declType":"value","type":{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Node","EventEmitter","UtilTypes"],"EventHandle1"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Node","ReadLine"],"Interface"],"tag":"TypeConstructor"}],"tag":"TypeApp"},{"annotation":[],"contents":{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Array"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Prim"],"String"],"tag":"TypeConstructor"}],"tag":"TypeApp"},"tag":"ParensInType"}],"tag":"TypeApp"}},"kind":null,"sourceSpan":{"end":[219,50],"name":"/tmp/tmp-2036-MNjh4K77YGWK/purescript-node-readline/src/Node/ReadLine.purs","start":[219,1]},"title":"historyH"},{"children":[],"comments":"The 'pause' event is emitted when one of the following occur:\n\n- The input stream is paused.\n- The input stream is not paused and receives the 'SIGCONT' event. (See events 'SIGTSTP' and 'SIGCONT'.)\n\nThe listener function is called without passing any arguments.\n","info":{"declType":"value","type":{"annotation":[],"contents":[{"annotation":[],"contents":[["Node","EventEmitter","UtilTypes"],"EventHandle0"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Node","ReadLine"],"Interface"],"tag":"TypeConstructor"}],"tag":"TypeApp"}},"kind":null,"sourceSpan":{"end":[228,33],"name":"/tmp/tmp-2036-MNjh4K77YGWK/purescript-node-readline/src/Node/ReadLine.purs","start":[228,1]},"title":"pauseH"},{"children":[],"comments":"The 'resume' event is emitted whenever the input stream is resumed.\n\nThe listener function is called without passing any arguments.\n","info":{"declType":"value","type":{"annotation":[],"contents":[{"annotation":[],"contents":[["Node","EventEmitter","UtilTypes"],"EventHandle0"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Node","ReadLine"],"Interface"],"tag":"TypeConstructor"}],"tag":"TypeApp"}},"kind":null,"sourceSpan":{"end":[234,34],"name":"/tmp/tmp-2036-MNjh4K77YGWK/purescript-node-readline/src/Node/ReadLine.purs","start":[234,1]},"title":"resumeH"},{"children":[],"comments":"The 'SIGCONT' event is emitted when a Node.js process previously moved into the background using Ctrl+Z (i.e. SIGTSTP) is then brought back to the foreground using fg(1p).\n\nIf the input stream was paused before the SIGTSTP request, this event will not be emitted.\n\nThe listener function is invoked without passing any arguments.\n\n**The 'SIGCONT' event is not supported on Windows.**\n","info":{"declType":"value","type":{"annotation":[],"contents":[{"annotation":[],"contents":[["Node","EventEmitter","UtilTypes"],"EventHandle0"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Node","ReadLine"],"Interface"],"tag":"TypeConstructor"}],"tag":"TypeApp"}},"kind":null,"sourceSpan":{"end":[244,35],"name":"/tmp/tmp-2036-MNjh4K77YGWK/purescript-node-readline/src/Node/ReadLine.purs","start":[244,1]},"title":"sigContH"},{"children":[],"comments":"The 'SIGINT' event is emitted whenever the input stream receives a Ctrl+C input, known typically as SIGINT. If there are no 'SIGINT' event listeners registered when the input stream receives a SIGINT, the 'pause' event will be emitted.\n\nThe listener function is invoked without passing any arguments.\n","info":{"declType":"value","type":{"annotation":[],"contents":[{"annotation":[],"contents":[["Node","EventEmitter","UtilTypes"],"EventHandle0"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Node","ReadLine"],"Interface"],"tag":"TypeConstructor"}],"tag":"TypeApp"}},"kind":null,"sourceSpan":{"end":[250,34],"name":"/tmp/tmp-2036-MNjh4K77YGWK/purescript-node-readline/src/Node/ReadLine.purs","start":[250,1]},"title":"sigIntH"},{"children":[],"comments":"The 'SIGTSTP' event is emitted when the input stream receives a Ctrl+Z input, typically known as SIGTSTP. If there are no 'SIGTSTP' event listeners registered when the input stream receives a SIGTSTP, the Node.js process will be sent to the background.\n\nWhen the program is resumed using fg(1p), the 'pause' and 'SIGCONT' events will be emitted. These can be used to resume the input stream.\n\nThe 'pause' and 'SIGCONT' events will not be emitted if the input was paused before the process was sent to the background.\n\nThe listener function is invoked without passing any arguments.\n\n**The 'SIGTSTP' event is not supported on Windows.**\n","info":{"declType":"value","type":{"annotation":[],"contents":[{"annotation":[],"contents":[["Node","EventEmitter","UtilTypes"],"EventHandle0"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Node","ReadLine"],"Interface"],"tag":"TypeConstructor"}],"tag":"TypeApp"}},"kind":null,"sourceSpan":{"end":[262,34],"name":"/tmp/tmp-2036-MNjh4K77YGWK/purescript-node-readline/src/Node/ReadLine.purs","start":[262,1]},"title":"sigStpH"},{"children":[],"comments":"Close the specified `Interface`.\n\nThe rl.close() method closes the readline.Interface instance and relinquishes control over the input and output streams. When called, the 'close' event will be emitted.\n\nCalling rl.close() does not immediately stop other events (including 'line') from being emitted by the readline.Interface instance.\n","info":{"declType":"value","type":{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Node","ReadLine"],"Interface"],"tag":"TypeConstructor"}],"tag":"TypeApp"},{"annotation":[],"contents":[{"annotation":[],"contents":[["Effect"],"Effect"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Data","Unit"],"Unit"],"tag":"TypeConstructor"}],"tag":"TypeApp"}],"tag":"TypeApp"}},"kind":null,"sourceSpan":{"end":[270,34],"name":"/tmp/tmp-2036-MNjh4K77YGWK/purescript-node-readline/src/Node/ReadLine.purs","start":[270,1]},"title":"close"},{"children":[],"comments":"The rl.pause() method pauses the input stream, allowing it to be resumed later if necessary.\n\nCalling rl.pause() does not immediately pause other events (including 'line') from being emitted by the readline.Interface instance.\n","info":{"declType":"value","type":{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Node","ReadLine"],"Interface"],"tag":"TypeConstructor"}],"tag":"TypeApp"},{"annotation":[],"contents":[{"annotation":[],"contents":[["Effect"],"Effect"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Data","Unit"],"Unit"],"tag":"TypeConstructor"}],"tag":"TypeApp"}],"tag":"TypeApp"}},"kind":null,"sourceSpan":{"end":[278,34],"name":"/tmp/tmp-2036-MNjh4K77YGWK/purescript-node-readline/src/Node/ReadLine.purs","start":[278,1]},"title":"pause"},{"children":[],"comments":"Prompt the user for input on the specified `Interface`.\n","info":{"declType":"value","type":{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Node","ReadLine"],"Interface"],"tag":"TypeConstructor"}],"tag":"TypeApp"},{"annotation":[],"contents":[{"annotation":[],"contents":[["Effect"],"Effect"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Data","Unit"],"Unit"],"tag":"TypeConstructor"}],"tag":"TypeApp"}],"tag":"TypeApp"}},"kind":null,"sourceSpan":{"end":[284,35],"name":"/tmp/tmp-2036-MNjh4K77YGWK/purescript-node-readline/src/Node/ReadLine.purs","start":[284,1]},"title":"prompt"},{"children":[],"comments":"- `preserveCursor` <boolean> If true, prevents the cursor placement from being reset to 0.\n\nThe rl.prompt() method writes the readline.Interface instances configured prompt to a new line in output in order to provide a user with a new location at which to provide input.\n\nWhen called, rl.prompt() will resume the input stream if it has been paused.\n\nIf the readline.Interface was created with output set to null or undefined the prompt is not written.\n","info":{"declType":"value","type":{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Prim"],"Boolean"],"tag":"TypeConstructor"}],"tag":"TypeApp"},{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Node","ReadLine"],"Interface"],"tag":"TypeConstructor"}],"tag":"TypeApp"},{"annotation":[],"contents":[{"annotation":[],"contents":[["Effect"],"Effect"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Data","Unit"],"Unit"],"tag":"TypeConstructor"}],"tag":"TypeApp"}],"tag":"TypeApp"}],"tag":"TypeApp"}},"kind":null,"sourceSpan":{"end":[296,47],"name":"/tmp/tmp-2036-MNjh4K77YGWK/purescript-node-readline/src/Node/ReadLine.purs","start":[296,1]},"title":"prompt'"},{"children":[],"comments":"Writes a query to the output, waits\nfor user input to be provided on input, then invokes\nthe callback function\n\nArgs:\n  - `query` <string> A statement or query to write to output, prepended to the prompt.\n  - `options` <Object>\n       - `signal` <AbortSignal> Optionally allows the question() to be canceled using an AbortController.\n  - `callback` <Function> A callback function that is invoked with the user's input in response to the query.\n\nThe `rl.question()` method displays the query by writing it to the output, waits for user input to be provided on input, then invokes the callback function passing the provided input as the first argument.\n\nWhen called, `rl.question()` will resume the input stream if it has been paused.\n\nIf the readline.Interface was created with output set to null or undefined the query is not written.\n\nThe callback function passed to `rl.question()` does not follow the typical pattern of accepting an Error object or null as the first argument. The callback is called with the provided answer as the only argument.\n","info":{"declType":"value","type":{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Prim"],"String"],"tag":"TypeConstructor"}],"tag":"TypeApp"},{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Prim"],"String"],"tag":"TypeConstructor"}],"tag":"TypeApp"},{"annotation":[],"contents":[{"annotation":[],"contents":[["Effect"],"Effect"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Data","Unit"],"Unit"],"tag":"TypeConstructor"}],"tag":"TypeApp"}],"tag":"TypeApp"},"tag":"ParensInType"}],"tag":"TypeApp"},{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Node","ReadLine"],"Interface"],"tag":"TypeConstructor"}],"tag":"TypeApp"},{"annotation":[],"contents":[{"annotation":[],"contents":[["Effect"],"Effect"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Data","Unit"],"Unit"],"tag":"TypeConstructor"}],"tag":"TypeApp"}],"tag":"TypeApp"}],"tag":"TypeApp"}],"tag":"TypeApp"}},"kind":null,"sourceSpan":{"end":[318,74],"name":"/tmp/tmp-2036-MNjh4K77YGWK/purescript-node-readline/src/Node/ReadLine.purs","start":[318,1]},"title":"question"},{"children":[],"comments":"Writes a query to the output, waits\nfor user input to be provided on input, then invokes\nthe callback function\n\nArgs:\n  - `query` <string> A statement or query to write to output, prepended to the prompt.\n  - `options` <Object>\n       - `signal` <AbortSignal> Optionally allows the question() to be canceled using an AbortController.\n  - `callback` <Function> A callback function that is invoked with the user's input in response to the query.\n\nThe `rl.question()` method displays the query by writing it to the output, waits for user input to be provided on input, then invokes the callback function passing the provided input as the first argument.\n\nWhen called, `rl.question()` will resume the input stream if it has been paused.\n\nIf the readline.Interface was created with output set to null or undefined the query is not written.\n\nThe callback function passed to `rl.question()` does not follow the typical pattern of accepting an Error object or null as the first argument. The callback is called with the provided answer as the only argument.\n","info":{"declType":"value","type":{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Prim"],"String"],"tag":"TypeConstructor"}],"tag":"TypeApp"},{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Record"],"tag":"TypeConstructor"},{"annotation":[],"contents":["signal",{"annotation":[],"contents":[["Node","Errors","AbortSignal"],"AbortSignal"],"tag":"TypeConstructor"},{"annotation":[],"tag":"REmpty"}],"tag":"RCons"}],"tag":"TypeApp"}],"tag":"TypeApp"},{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Prim"],"String"],"tag":"TypeConstructor"}],"tag":"TypeApp"},{"annotation":[],"contents":[{"annotation":[],"contents":[["Effect"],"Effect"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Data","Unit"],"Unit"],"tag":"TypeConstructor"}],"tag":"TypeApp"}],"tag":"TypeApp"},"tag":"ParensInType"}],"tag":"TypeApp"},{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Node","ReadLine"],"Interface"],"tag":"TypeConstructor"}],"tag":"TypeApp"},{"annotation":[],"contents":[{"annotation":[],"contents":[["Effect"],"Effect"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Data","Unit"],"Unit"],"tag":"TypeConstructor"}],"tag":"TypeApp"}],"tag":"TypeApp"}],"tag":"TypeApp"}],"tag":"TypeApp"}],"tag":"TypeApp"}},"kind":null,"sourceSpan":{"end":[340,104],"name":"/tmp/tmp-2036-MNjh4K77YGWK/purescript-node-readline/src/Node/ReadLine.purs","start":[340,1]},"title":"question'"},{"children":[],"comments":"The rl.resume() method resumes the input stream if it has been paused.\n","info":{"declType":"value","type":{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Node","ReadLine"],"Interface"],"tag":"TypeConstructor"}],"tag":"TypeApp"},{"annotation":[],"contents":[{"annotation":[],"contents":[["Effect"],"Effect"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Data","Unit"],"Unit"],"tag":"TypeConstructor"}],"tag":"TypeApp"}],"tag":"TypeApp"}},"kind":null,"sourceSpan":{"end":[346,35],"name":"/tmp/tmp-2036-MNjh4K77YGWK/purescript-node-readline/src/Node/ReadLine.purs","start":[346,1]},"title":"resume"},{"children":[],"comments":"The rl.setPrompt() method sets the prompt that will be written to output whenever rl.prompt() is called.\n","info":{"declType":"value","type":{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Prim"],"String"],"tag":"TypeConstructor"}],"tag":"TypeApp"},{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Node","ReadLine"],"Interface"],"tag":"TypeConstructor"}],"tag":"TypeApp"},{"annotation":[],"contents":[{"annotation":[],"contents":[["Effect"],"Effect"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Data","Unit"],"Unit"],"tag":"TypeConstructor"}],"tag":"TypeApp"}],"tag":"TypeApp"}],"tag":"TypeApp"}},"kind":null,"sourceSpan":{"end":[352,48],"name":"/tmp/tmp-2036-MNjh4K77YGWK/purescript-node-readline/src/Node/ReadLine.purs","start":[352,1]},"title":"setPrompt"},{"children":[],"comments":null,"info":{"declType":"value","type":{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Node","ReadLine"],"Interface"],"tag":"TypeConstructor"}],"tag":"TypeApp"},{"annotation":[],"contents":[{"annotation":[],"contents":[["Effect"],"Effect"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Prim"],"String"],"tag":"TypeConstructor"}],"tag":"TypeApp"}],"tag":"TypeApp"}},"kind":null,"sourceSpan":{"end":[357,40],"name":"/tmp/tmp-2036-MNjh4K77YGWK/purescript-node-readline/src/Node/ReadLine.purs","start":[357,1]},"title":"getPrompt"},{"children":[],"comments":null,"info":{"declType":"value","type":{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Prim"],"String"],"tag":"TypeConstructor"}],"tag":"TypeApp"},{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Node","ReadLine"],"Interface"],"tag":"TypeConstructor"}],"tag":"TypeApp"},{"annotation":[],"contents":[{"annotation":[],"contents":[["Effect"],"Effect"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Data","Unit"],"Unit"],"tag":"TypeConstructor"}],"tag":"TypeApp"}],"tag":"TypeApp"}],"tag":"TypeApp"}},"kind":null,"sourceSpan":{"end":[362,48],"name":"/tmp/tmp-2036-MNjh4K77YGWK/purescript-node-readline/src/Node/ReadLine.purs","start":[362,1]},"title":"writeData"},{"children":[],"comments":null,"info":{"declType":"value","type":{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Node","ReadLine"],"KeySequenceObj"],"tag":"TypeConstructor"}],"tag":"TypeApp"},{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Node","ReadLine"],"Interface"],"tag":"TypeConstructor"}],"tag":"TypeApp"},{"annotation":[],"contents":[{"annotation":[],"contents":[["Effect"],"Effect"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Data","Unit"],"Unit"],"tag":"TypeConstructor"}],"tag":"TypeApp"}],"tag":"TypeApp"}],"tag":"TypeApp"}},"kind":null,"sourceSpan":{"end":[378,55],"name":"/tmp/tmp-2036-MNjh4K77YGWK/purescript-node-readline/src/Node/ReadLine.purs","start":[378,1]},"title":"writeKey"},{"children":[],"comments":null,"info":{"declType":"value","type":{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Node","ReadLine"],"Interface"],"tag":"TypeConstructor"}],"tag":"TypeApp"},{"annotation":[],"contents":[{"annotation":[],"contents":[["Effect"],"Effect"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Prim"],"String"],"tag":"TypeConstructor"}],"tag":"TypeApp"}],"tag":"TypeApp"}},"kind":null,"sourceSpan":{"end":[383,35],"name":"/tmp/tmp-2036-MNjh4K77YGWK/purescript-node-readline/src/Node/ReadLine.purs","start":[383,1]},"title":"line"},{"children":[],"comments":null,"info":{"declType":"value","type":{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Node","ReadLine"],"Interface"],"tag":"TypeConstructor"}],"tag":"TypeApp"},{"annotation":[],"contents":[{"annotation":[],"contents":[["Effect"],"Effect"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Prim"],"Int"],"tag":"TypeConstructor"}],"tag":"TypeApp"}],"tag":"TypeApp"}},"kind":null,"sourceSpan":{"end":[388,34],"name":"/tmp/tmp-2036-MNjh4K77YGWK/purescript-node-readline/src/Node/ReadLine.purs","start":[388,1]},"title":"cursor"},{"children":[],"comments":null,"info":{"declType":"value","type":{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Node","ReadLine"],"Interface"],"tag":"TypeConstructor"}],"tag":"TypeApp"},{"annotation":[],"contents":[{"annotation":[],"contents":[["Effect"],"Effect"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Node","ReadLine"],"CursorPos"],"tag":"TypeConstructor"}],"tag":"TypeApp"}],"tag":"TypeApp"}},"kind":null,"sourceSpan":{"end":[398,46],"name":"/tmp/tmp-2036-MNjh4K77YGWK/purescript-node-readline/src/Node/ReadLine.purs","start":[398,1]},"title":"getCursorPos"},{"children":[],"comments":null,"info":{"declType":"value","type":{"annotation":[],"contents":{"identifier":"r","kind":null,"skolem":null,"type":{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[{"annotation":[],"contents":[["Node","Stream"],"Writable"],"tag":"TypeConstructor"},{"annotation":[],"contents":"r","tag":"TypeVar"}],"tag":"TypeApp"}],"tag":"TypeApp"},{"annotation":[],"contents":[{"annotation":[],"contents":[["Effect"],"Effect"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Prim"],"Boolean"],"tag":"TypeConstructor"}],"tag":"TypeApp"}],"tag":"TypeApp"},"visibility":"TypeVarInvisible"},"tag":"ForAll"}},"kind":null,"sourceSpan":{"end":[403,56],"name":"/tmp/tmp-2036-MNjh4K77YGWK/purescript-node-readline/src/Node/ReadLine.purs","start":[403,1]},"title":"clearLineLeft"},{"children":[],"comments":null,"info":{"declType":"value","type":{"annotation":[],"contents":{"identifier":"r","kind":null,"skolem":null,"type":{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[{"annotation":[],"contents":[["Node","Stream"],"Writable"],"tag":"TypeConstructor"},{"annotation":[],"contents":"r","tag":"TypeVar"}],"tag":"TypeApp"}],"tag":"TypeApp"},{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[{"annotation":[],"contents":[["Effect"],"Effect"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Data","Unit"],"Unit"],"tag":"TypeConstructor"}],"tag":"TypeApp"}],"tag":"TypeApp"},{"annotation":[],"contents":[{"annotation":[],"contents":[["Effect"],"Effect"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Prim"],"Boolean"],"tag":"TypeConstructor"}],"tag":"TypeApp"}],"tag":"TypeApp"}],"tag":"TypeApp"},"visibility":"TypeVarInvisible"},"tag":"ForAll"}},"kind":null,"sourceSpan":{"end":[408,72],"name":"/tmp/tmp-2036-MNjh4K77YGWK/purescript-node-readline/src/Node/ReadLine.purs","start":[408,1]},"title":"clearLineLeft'"},{"children":[],"comments":null,"info":{"declType":"value","type":{"annotation":[],"contents":{"identifier":"r","kind":null,"skolem":null,"type":{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[{"annotation":[],"contents":[["Node","Stream"],"Writable"],"tag":"TypeConstructor"},{"annotation":[],"contents":"r","tag":"TypeVar"}],"tag":"TypeApp"}],"tag":"TypeApp"},{"annotation":[],"contents":[{"annotation":[],"contents":[["Effect"],"Effect"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Prim"],"Boolean"],"tag":"TypeConstructor"}],"tag":"TypeApp"}],"tag":"TypeApp"},"visibility":"TypeVarInvisible"},"tag":"ForAll"}},"kind":null,"sourceSpan":{"end":[413,57],"name":"/tmp/tmp-2036-MNjh4K77YGWK/purescript-node-readline/src/Node/ReadLine.purs","start":[413,1]},"title":"clearLineRight"},{"children":[],"comments":null,"info":{"declType":"value","type":{"annotation":[],"contents":{"identifier":"r","kind":null,"skolem":null,"type":{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[{"annotation":[],"contents":[["Node","Stream"],"Writable"],"tag":"TypeConstructor"},{"annotation":[],"contents":"r","tag":"TypeVar"}],"tag":"TypeApp"}],"tag":"TypeApp"},{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[{"annotation":[],"contents":[["Effect"],"Effect"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Data","Unit"],"Unit"],"tag":"TypeConstructor"}],"tag":"TypeApp"}],"tag":"TypeApp"},{"annotation":[],"contents":[{"annotation":[],"contents":[["Effect"],"Effect"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Prim"],"Boolean"],"tag":"TypeConstructor"}],"tag":"TypeApp"}],"tag":"TypeApp"}],"tag":"TypeApp"},"visibility":"TypeVarInvisible"},"tag":"ForAll"}},"kind":null,"sourceSpan":{"end":[418,73],"name":"/tmp/tmp-2036-MNjh4K77YGWK/purescript-node-readline/src/Node/ReadLine.purs","start":[418,1]},"title":"clearLineRight'"},{"children":[],"comments":null,"info":{"declType":"value","type":{"annotation":[],"contents":{"identifier":"r","kind":null,"skolem":null,"type":{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[{"annotation":[],"contents":[["Node","Stream"],"Writable"],"tag":"TypeConstructor"},{"annotation":[],"contents":"r","tag":"TypeVar"}],"tag":"TypeApp"}],"tag":"TypeApp"},{"annotation":[],"contents":[{"annotation":[],"contents":[["Effect"],"Effect"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Prim"],"Boolean"],"tag":"TypeConstructor"}],"tag":"TypeApp"}],"tag":"TypeApp"},"visibility":"TypeVarInvisible"},"tag":"ForAll"}},"kind":null,"sourceSpan":{"end":[423,58],"name":"/tmp/tmp-2036-MNjh4K77YGWK/purescript-node-readline/src/Node/ReadLine.purs","start":[423,1]},"title":"clearEntireLine"},{"children":[],"comments":null,"info":{"declType":"value","type":{"annotation":[],"contents":{"identifier":"r","kind":null,"skolem":null,"type":{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[{"annotation":[],"contents":[["Node","Stream"],"Writable"],"tag":"TypeConstructor"},{"annotation":[],"contents":"r","tag":"TypeVar"}],"tag":"TypeApp"}],"tag":"TypeApp"},{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[{"annotation":[],"contents":[["Effect"],"Effect"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Data","Unit"],"Unit"],"tag":"TypeConstructor"}],"tag":"TypeApp"}],"tag":"TypeApp"},{"annotation":[],"contents":[{"annotation":[],"contents":[["Effect"],"Effect"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Prim"],"Boolean"],"tag":"TypeConstructor"}],"tag":"TypeApp"}],"tag":"TypeApp"}],"tag":"TypeApp"},"visibility":"TypeVarInvisible"},"tag":"ForAll"}},"kind":null,"sourceSpan":{"end":[428,74],"name":"/tmp/tmp-2036-MNjh4K77YGWK/purescript-node-readline/src/Node/ReadLine.purs","start":[428,1]},"title":"clearEntireLine'"},{"children":[],"comments":null,"info":{"declType":"value","type":{"annotation":[],"contents":{"identifier":"r","kind":null,"skolem":null,"type":{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[{"annotation":[],"contents":[["Node","Stream"],"Writable"],"tag":"TypeConstructor"},{"annotation":[],"contents":"r","tag":"TypeVar"}],"tag":"TypeApp"}],"tag":"TypeApp"},{"annotation":[],"contents":[{"annotation":[],"contents":[["Effect"],"Effect"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Prim"],"Boolean"],"tag":"TypeConstructor"}],"tag":"TypeApp"}],"tag":"TypeApp"},"visibility":"TypeVarInvisible"},"tag":"ForAll"}},"kind":null,"sourceSpan":{"end":[433,58],"name":"/tmp/tmp-2036-MNjh4K77YGWK/purescript-node-readline/src/Node/ReadLine.purs","start":[433,1]},"title":"clearScreenDown"},{"children":[],"comments":null,"info":{"declType":"value","type":{"annotation":[],"contents":{"identifier":"r","kind":null,"skolem":null,"type":{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[{"annotation":[],"contents":[["Node","Stream"],"Writable"],"tag":"TypeConstructor"},{"annotation":[],"contents":"r","tag":"TypeVar"}],"tag":"TypeApp"}],"tag":"TypeApp"},{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[{"annotation":[],"contents":[["Effect"],"Effect"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Data","Unit"],"Unit"],"tag":"TypeConstructor"}],"tag":"TypeApp"}],"tag":"TypeApp"},{"annotation":[],"contents":[{"annotation":[],"contents":[["Effect"],"Effect"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Prim"],"Boolean"],"tag":"TypeConstructor"}],"tag":"TypeApp"}],"tag":"TypeApp"}],"tag":"TypeApp"},"visibility":"TypeVarInvisible"},"tag":"ForAll"}},"kind":null,"sourceSpan":{"end":[438,74],"name":"/tmp/tmp-2036-MNjh4K77YGWK/purescript-node-readline/src/Node/ReadLine.purs","start":[438,1]},"title":"clearScreenDown'"},{"children":[],"comments":null,"info":{"declType":"value","type":{"annotation":[],"contents":{"identifier":"r","kind":null,"skolem":null,"type":{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[{"annotation":[],"contents":[["Node","Stream"],"Writable"],"tag":"TypeConstructor"},{"annotation":[],"contents":"r","tag":"TypeVar"}],"tag":"TypeApp"}],"tag":"TypeApp"},{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Prim"],"Int"],"tag":"TypeConstructor"}],"tag":"TypeApp"},{"annotation":[],"contents":[{"annotation":[],"contents":[["Effect"],"Effect"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Prim"],"Boolean"],"tag":"TypeConstructor"}],"tag":"TypeApp"}],"tag":"TypeApp"}],"tag":"TypeApp"},"visibility":"TypeVarInvisible"},"tag":"ForAll"}},"kind":null,"sourceSpan":{"end":[443,59],"name":"/tmp/tmp-2036-MNjh4K77YGWK/purescript-node-readline/src/Node/ReadLine.purs","start":[443,1]},"title":"cursorToX"},{"children":[],"comments":null,"info":{"declType":"value","type":{"annotation":[],"contents":{"identifier":"r","kind":null,"skolem":null,"type":{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[{"annotation":[],"contents":[["Node","Stream"],"Writable"],"tag":"TypeConstructor"},{"annotation":[],"contents":"r","tag":"TypeVar"}],"tag":"TypeApp"}],"tag":"TypeApp"},{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Prim"],"Int"],"tag":"TypeConstructor"}],"tag":"TypeApp"},{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[{"annotation":[],"contents":[["Effect"],"Effect"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Data","Unit"],"Unit"],"tag":"TypeConstructor"}],"tag":"TypeApp"}],"tag":"TypeApp"},{"annotation":[],"contents":[{"annotation":[],"contents":[["Effect"],"Effect"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Prim"],"Boolean"],"tag":"TypeConstructor"}],"tag":"TypeApp"}],"tag":"TypeApp"}],"tag":"TypeApp"}],"tag":"TypeApp"},"visibility":"TypeVarInvisible"},"tag":"ForAll"}},"kind":null,"sourceSpan":{"end":[448,75],"name":"/tmp/tmp-2036-MNjh4K77YGWK/purescript-node-readline/src/Node/ReadLine.purs","start":[448,1]},"title":"cursorToX'"},{"children":[],"comments":null,"info":{"declType":"value","type":{"annotation":[],"contents":{"identifier":"r","kind":null,"skolem":null,"type":{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[{"annotation":[],"contents":[["Node","Stream"],"Writable"],"tag":"TypeConstructor"},{"annotation":[],"contents":"r","tag":"TypeVar"}],"tag":"TypeApp"}],"tag":"TypeApp"},{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Prim"],"Int"],"tag":"TypeConstructor"}],"tag":"TypeApp"},{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Prim"],"Int"],"tag":"TypeConstructor"}],"tag":"TypeApp"},{"annotation":[],"contents":[{"annotation":[],"contents":[["Effect"],"Effect"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Prim"],"Boolean"],"tag":"TypeConstructor"}],"tag":"TypeApp"}],"tag":"TypeApp"}],"tag":"TypeApp"}],"tag":"TypeApp"},"visibility":"TypeVarInvisible"},"tag":"ForAll"}},"kind":null,"sourceSpan":{"end":[453,67],"name":"/tmp/tmp-2036-MNjh4K77YGWK/purescript-node-readline/src/Node/ReadLine.purs","start":[453,1]},"title":"cursorToXY"},{"children":[],"comments":null,"info":{"declType":"value","type":{"annotation":[],"contents":{"identifier":"r","kind":null,"skolem":null,"type":{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[{"annotation":[],"contents":[["Node","Stream"],"Writable"],"tag":"TypeConstructor"},{"annotation":[],"contents":"r","tag":"TypeVar"}],"tag":"TypeApp"}],"tag":"TypeApp"},{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Prim"],"Int"],"tag":"TypeConstructor"}],"tag":"TypeApp"},{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Prim"],"Int"],"tag":"TypeConstructor"}],"tag":"TypeApp"},{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[{"annotation":[],"contents":[["Effect"],"Effect"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Data","Unit"],"Unit"],"tag":"TypeConstructor"}],"tag":"TypeApp"}],"tag":"TypeApp"},{"annotation":[],"contents":[{"annotation":[],"contents":[["Effect"],"Effect"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Prim"],"Boolean"],"tag":"TypeConstructor"}],"tag":"TypeApp"}],"tag":"TypeApp"}],"tag":"TypeApp"}],"tag":"TypeApp"}],"tag":"TypeApp"},"visibility":"TypeVarInvisible"},"tag":"ForAll"}},"kind":null,"sourceSpan":{"end":[458,83],"name":"/tmp/tmp-2036-MNjh4K77YGWK/purescript-node-readline/src/Node/ReadLine.purs","start":[458,1]},"title":"cursorToXY'"},{"children":[],"comments":null,"info":{"declType":"value","type":{"annotation":[],"contents":{"identifier":"w","kind":null,"skolem":null,"type":{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[{"annotation":[],"contents":[["Node","Stream"],"Readable"],"tag":"TypeConstructor"},{"annotation":[],"contents":"w","tag":"TypeVar"}],"tag":"TypeApp"}],"tag":"TypeApp"},{"annotation":[],"contents":[{"annotation":[],"contents":[["Effect"],"Effect"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Data","Unit"],"Unit"],"tag":"TypeConstructor"}],"tag":"TypeApp"}],"tag":"TypeApp"},"visibility":"TypeVarInvisible"},"tag":"ForAll"}},"kind":null,"sourceSpan":{"end":[463,58],"name":"/tmp/tmp-2036-MNjh4K77YGWK/purescript-node-readline/src/Node/ReadLine.purs","start":[463,1]},"title":"emitKeyPressEvents"},{"children":[],"comments":null,"info":{"declType":"value","type":{"annotation":[],"contents":{"identifier":"w","kind":null,"skolem":null,"type":{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[{"annotation":[],"contents":[["Node","Stream"],"Readable"],"tag":"TypeConstructor"},{"annotation":[],"contents":"w","tag":"TypeVar"}],"tag":"TypeApp"}],"tag":"TypeApp"},{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Node","ReadLine"],"Interface"],"tag":"TypeConstructor"}],"tag":"TypeApp"},{"annotation":[],"contents":[{"annotation":[],"contents":[["Effect"],"Effect"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Data","Unit"],"Unit"],"tag":"TypeConstructor"}],"tag":"TypeApp"}],"tag":"TypeApp"}],"tag":"TypeApp"},"visibility":"TypeVarInvisible"},"tag":"ForAll"}},"kind":null,"sourceSpan":{"end":[468,72],"name":"/tmp/tmp-2036-MNjh4K77YGWK/purescript-node-readline/src/Node/ReadLine.purs","start":[468,1]},"title":"emitKeyPressEvents'"},{"children":[],"comments":null,"info":{"declType":"value","type":{"annotation":[],"contents":{"identifier":"r","kind":null,"skolem":null,"type":{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[{"annotation":[],"contents":[["Node","Stream"],"Writable"],"tag":"TypeConstructor"},{"annotation":[],"contents":"r","tag":"TypeVar"}],"tag":"TypeApp"}],"tag":"TypeApp"},{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Prim"],"Int"],"tag":"TypeConstructor"}],"tag":"TypeApp"},{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Prim"],"Int"],"tag":"TypeConstructor"}],"tag":"TypeApp"},{"annotation":[],"contents":[{"annotation":[],"contents":[["Effect"],"Effect"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Prim"],"Boolean"],"tag":"TypeConstructor"}],"tag":"TypeApp"}],"tag":"TypeApp"}],"tag":"TypeApp"}],"tag":"TypeApp"},"visibility":"TypeVarInvisible"},"tag":"ForAll"}},"kind":null,"sourceSpan":{"end":[473,69],"name":"/tmp/tmp-2036-MNjh4K77YGWK/purescript-node-readline/src/Node/ReadLine.purs","start":[473,1]},"title":"moveCursorXY"},{"children":[],"comments":null,"info":{"declType":"value","type":{"annotation":[],"contents":{"identifier":"r","kind":null,"skolem":null,"type":{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[{"annotation":[],"contents":[["Node","Stream"],"Writable"],"tag":"TypeConstructor"},{"annotation":[],"contents":"r","tag":"TypeVar"}],"tag":"TypeApp"}],"tag":"TypeApp"},{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Prim"],"Int"],"tag":"TypeConstructor"}],"tag":"TypeApp"},{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Prim"],"Int"],"tag":"TypeConstructor"}],"tag":"TypeApp"},{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[{"annotation":[],"contents":[["Effect"],"Effect"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Data","Unit"],"Unit"],"tag":"TypeConstructor"}],"tag":"TypeApp"}],"tag":"TypeApp"},{"annotation":[],"contents":[{"annotation":[],"contents":[["Effect"],"Effect"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Prim"],"Boolean"],"tag":"TypeConstructor"}],"tag":"TypeApp"}],"tag":"TypeApp"}],"tag":"TypeApp"}],"tag":"TypeApp"}],"tag":"TypeApp"},"visibility":"TypeVarInvisible"},"tag":"ForAll"}},"kind":null,"sourceSpan":{"end":[478,85],"name":"/tmp/tmp-2036-MNjh4K77YGWK/purescript-node-readline/src/Node/ReadLine.purs","start":[478,1]},"title":"moveCursorXY'"}],"name":"Node.ReadLine","reExports":[]},{"comments":null,"declarations":[{"children":[],"comments":"Blocks until receives user input. There is no way to cancel this.\n","info":{"declType":"value","type":{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Prim"],"String"],"tag":"TypeConstructor"}],"tag":"TypeApp"},{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Node","ReadLine"],"Interface"],"tag":"TypeConstructor"}],"tag":"TypeApp"},{"annotation":[],"contents":[{"annotation":[],"contents":[["Effect","Aff"],"Aff"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Prim"],"String"],"tag":"TypeConstructor"}],"tag":"TypeApp"}],"tag":"TypeApp"}],"tag":"TypeApp"}},"kind":null,"sourceSpan":{"end":[24,46],"name":"/tmp/tmp-2036-MNjh4K77YGWK/purescript-node-readline/src/Node/ReadLine/Aff.purs","start":[24,1]},"title":"question"},{"children":[],"comments":"Blocks until receives user input. An `AbortController` can be used to cancel this.\nIf the `AbortSignal` is aborted outside of this function, this computation\nwill produce an error. If the `AbortSignal` is already aborted, this will throw an error.\n","info":{"declType":"value","type":{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Prim"],"String"],"tag":"TypeConstructor"}],"tag":"TypeApp"},{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Node","Errors","AbortController"],"AbortController"],"tag":"TypeConstructor"}],"tag":"TypeApp"},{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Node","ReadLine"],"Interface"],"tag":"TypeConstructor"}],"tag":"TypeApp"},{"annotation":[],"contents":[{"annotation":[],"contents":[["Effect","Aff"],"Aff"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Prim"],"String"],"tag":"TypeConstructor"}],"tag":"TypeApp"}],"tag":"TypeApp"}],"tag":"TypeApp"}],"tag":"TypeApp"}},"kind":null,"sourceSpan":{"end":[32,66],"name":"/tmp/tmp-2036-MNjh4K77YGWK/purescript-node-readline/src/Node/ReadLine/Aff.purs","start":[32,1]},"title":"question'"},{"children":[],"comments":null,"info":{"declType":"value","type":{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Node","ReadLine"],"Interface"],"tag":"TypeConstructor"}],"tag":"TypeApp"},{"annotation":[],"contents":[{"annotation":[],"contents":[["Effect","Aff"],"Aff"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Data","Unit"],"Unit"],"tag":"TypeConstructor"}],"tag":"TypeApp"}],"tag":"TypeApp"}},"kind":null,"sourceSpan":{"end":[50,42],"name":"/tmp/tmp-2036-MNjh4K77YGWK/purescript-node-readline/src/Node/ReadLine/Aff.purs","start":[50,1]},"title":"blockUntilClosed"},{"children":[],"comments":null,"info":{"declType":"value","type":{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Node","ReadLine"],"Interface"],"tag":"TypeConstructor"}],"tag":"TypeApp"},{"annotation":[],"contents":[{"annotation":[],"contents":[["Effect","Aff"],"Aff"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Prim"],"Int"],"tag":"TypeConstructor"}],"tag":"TypeApp"}],"tag":"TypeApp"}},"kind":null,"sourceSpan":{"end":[64,35],"name":"/tmp/tmp-2036-MNjh4K77YGWK/purescript-node-readline/src/Node/ReadLine/Aff.purs","start":[64,1]},"title":"countLines"}],"name":"Node.ReadLine.Aff","reExports":[]}],"packageMeta":{"dependencies":{"purescript-effect":">=4.0.0 <5.0.0","purescript-foreign":">=7.0.0 <8.0.0","purescript-node-event-emitter":">=3.0.0 <4.0.0","purescript-node-process":">=11.0.1 <12.0.0","purescript-node-streams":">=8.0.0 <9.0.0","purescript-options":">=7.0.0 <8.0.0","purescript-prelude":">=6.0.0 <7.0.0"},"homepage":"https://github.com/purescript-node/purescript-node-readline.git","license":["MIT"],"name":"purescript-node-readline","repository":{"type":"git","url":"https://github.com/purescript-node/purescript-node-readline.git"}},"resolvedDependencies":{"purescript-aff":"7.1.0","purescript-arraybuffer-types":"3.0.2","purescript-arrays":"7.2.1","purescript-bifunctors":"6.0.0","purescript-const":"6.0.0","purescript-contravariant":"6.0.0","purescript-control":"6.0.0","purescript-datetime":"6.1.0","purescript-distributive":"6.0.0","purescript-effect":"4.0.0","purescript-either":"6.1.0","purescript-enums":"6.0.1","purescript-exceptions":"6.0.0","purescript-exists":"6.0.0","purescript-foldable-traversable":"6.0.0","purescript-foreign":"7.0.0","purescript-foreign-object":"4.1.0","purescript-functions":"6.0.0","purescript-functors":"5.0.0","purescript-gen":"4.0.0","purescript-identity":"6.0.0","purescript-integers":"6.0.0","purescript-invariant":"6.0.0","purescript-lazy":"6.0.0","purescript-lists":"7.0.0","purescript-maybe":"6.0.0","purescript-newtype":"5.0.0","purescript-node-buffer":"9.0.0","purescript-node-event-emitter":"3.0.0","purescript-node-process":"11.0.1","purescript-node-streams":"8.0.0","purescript-nonempty":"7.0.0","purescript-nullable":"6.0.0","purescript-numbers":"9.0.1","purescript-options":"7.0.0","purescript-ordered-collections":"3.0.0","purescript-orders":"6.0.0","purescript-parallel":"6.0.0","purescript-partial":"4.0.0","purescript-posix-types":"6.0.0","purescript-prelude":"6.0.1","purescript-profunctor":"6.0.0","purescript-refs":"6.0.0","purescript-safe-coerce":"2.0.0","purescript-st":"6.2.0","purescript-strings":"6.0.1","purescript-tailrec":"6.1.0","purescript-transformers":"6.0.0","purescript-tuples":"7.0.0","purescript-type-equality":"4.0.1","purescript-typelevel-prelude":"7.0.0","purescript-unfoldable":"6.0.0","purescript-unsafe-coerce":"6.0.0"},"tagTime":"2023-07-21T23:13:13+0000","uploader":"pacchettibotti","version":"8.0.0","versionTag":"v8.0.0"}