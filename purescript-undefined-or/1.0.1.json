{"uploader":"d86leader","packageMeta":{"repository":{"url":"https://github.com/d86leader/purescript-undefined-or","type":"git"},"ignore":["**/.*","node_modules","bower_components","output"],"dependencies":{"purescript-maybe":"^v4.0.1"},"name":"purescript-undefined-or","license":["MIT"]},"tagTime":"2020-04-14T06:25:21+0000","modules":[{"reExports":[],"name":"Data.UndefinedOr","comments":"A lot of JS functions accept and return records where some fields may be\nmissing. For missing fields in argument records you can use `Data.Options`\nmodule. For missing fields in return records you can either use `Foreign`\nand write parsers, or this module and trust the foreign code.\n\nA simple example of usage:\n```\n// Test.js\nexports.typicalApi = function() {\n  if (Math.random() > 0.5) {\n    return {\"numberData\": 9431, \"stringData\": \"atad\"};\n  } else {\n    return {\"numberData\": 8752}\n  }\n}\n\n-- Test.purs\ntype ApiRet = {numberData :: Boolean, stringData :: UndefinedOr String}\n\nforeign import typicalApi :: Effect ApiRet\n\n...\n\nresult <- typicalApi\ncase fromUndefined result.stringData of\n    Just data -> Console.log $ \"got a string: \" <> data\n    Nothing   -> Console.log \"no string\"\n```\n\nYou should avoid using this library whenever possible, as it's a shortcut:\nit lifts the neccessity of data validation from you, the ffi-bindings\nwriter, to the user of your api. Also 75% of the use cases can be covered\nby clever use of typeclasses.\n\nYou should especially Not use this over Maybe.\n","declarations":[{"children":[{"comments":null,"title":"eqUndefined","info":{"declType":"instance","dependencies":[{"constraintAnn":[],"constraintClass":[["Data","Eq"],"Eq"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"a"}],"constraintData":null}],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Eq"],"Eq"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","UndefinedOr"],"UndefinedOr"]},{"annotation":[],"tag":"TypeVar","contents":"a"}]}]}},"sourceSpan":{"start":[89,1],"name":"/home/god/projects/purescript-undefined-or/src/Data/UndefinedOr.purs","end":[93,17]}},{"comments":null,"title":"functorUndefined","info":{"declType":"instance","dependencies":[],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Functor"],"Functor"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","UndefinedOr"],"UndefinedOr"]}]}},"sourceSpan":{"start":[95,1],"name":"/home/god/projects/purescript-undefined-or/src/Data/UndefinedOr.purs","end":[99,35]}},{"comments":null,"title":"applyUndefined","info":{"declType":"instance","dependencies":[],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Control","Apply"],"Apply"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","UndefinedOr"],"UndefinedOr"]}]}},"sourceSpan":{"start":[101,1],"name":"/home/god/projects/purescript-undefined-or/src/Data/UndefinedOr.purs","end":[105,35]}},{"comments":null,"title":"applicativeUndefined","info":{"declType":"instance","dependencies":[],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Control","Applicative"],"Applicative"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","UndefinedOr"],"UndefinedOr"]}]}},"sourceSpan":{"start":[107,1],"name":"/home/god/projects/purescript-undefined-or/src/Data/UndefinedOr.purs","end":[108,23]}},{"comments":null,"title":"altUndefined","info":{"declType":"instance","dependencies":[],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Control","Alt"],"Alt"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","UndefinedOr"],"UndefinedOr"]}]}},"sourceSpan":{"start":[110,1],"name":"/home/god/projects/purescript-undefined-or/src/Data/UndefinedOr.purs","end":[114,19]}},{"comments":null,"title":"plusUndefined","info":{"declType":"instance","dependencies":[],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Control","Plus"],"Plus"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","UndefinedOr"],"UndefinedOr"]}]}},"sourceSpan":{"start":[116,1],"name":"/home/god/projects/purescript-undefined-or/src/Data/UndefinedOr.purs","end":[117,25]}},{"comments":null,"title":"showUndefined","info":{"declType":"instance","dependencies":[{"constraintAnn":[],"constraintClass":[["Data","Show"],"Show"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"a"}],"constraintData":null}],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Show"],"Show"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","UndefinedOr"],"UndefinedOr"]},{"annotation":[],"tag":"TypeVar","contents":"a"}]}]}},"sourceSpan":{"start":[119,1],"name":"/home/god/projects/purescript-undefined-or/src/Data/UndefinedOr.purs","end":[123,24]}}],"comments":"Wrapper for foreign values which may be undefined.\n\nCaution: it may misbehave if the wrapped value is `null` or `undefined`.\n\nAll instances are the same as `Maybe`'s instances. The missing Bind, Monad\nand other advanced ones are omitted on purpose. If you want to use them,\nrun `fromUndefined` and use Maybe's instances.\n","title":"UndefinedOr","info":{"declType":"data","dataDeclType":"newtype","typeArguments":[["a",null]]},"sourceSpan":{"start":[59,1],"name":"/home/god/projects/purescript-undefined-or/src/Data/UndefinedOr.purs","end":[59,38]}},{"children":[],"comments":"Check if the value is present\n","title":"isUndefined","info":{"declType":"value","type":{"annotation":[],"tag":"ForAll","contents":["a",{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","UndefinedOr"],"UndefinedOr"]},{"annotation":[],"tag":"TypeVar","contents":"a"}]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]},null]}},"sourceSpan":{"start":[62,1],"name":"/home/god/projects/purescript-undefined-or/src/Data/UndefinedOr.purs","end":[62,65]}},{"children":[],"comments":"Convert to `Maybe`, returning `Nothing` if the value is missing\n","title":"fromUndefined","info":{"declType":"value","type":{"annotation":[],"tag":"ForAll","contents":["a",{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","UndefinedOr"],"UndefinedOr"]},{"annotation":[],"tag":"TypeVar","contents":"a"}]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"annotation":[],"tag":"TypeVar","contents":"a"}]}]},null]}},"sourceSpan":{"start":[67,1],"name":"/home/god/projects/purescript-undefined-or/src/Data/UndefinedOr.purs","end":[67,52]}},{"children":[],"comments":"Wrap a value. Useful for equality checks with a foreign value without\nhaving to unwrap it.\n\nIs a synonym for `pure`. Use that or this function based on the style\npreference or if the name will disambiguate intent.\n","title":"toUndefined","info":{"declType":"value","type":{"annotation":[],"tag":"ForAll","contents":["a",{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeVar","contents":"a"}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","UndefinedOr"],"UndefinedOr"]},{"annotation":[],"tag":"TypeVar","contents":"a"}]}]},null]}},"sourceSpan":{"start":[78,1],"name":"/home/god/projects/purescript-undefined-or/src/Data/UndefinedOr.purs","end":[78,44]}},{"children":[],"comments":"Like `maybe` but for undefined\n","title":"runUndefined","info":{"declType":"value","type":{"annotation":[],"tag":"ForAll","contents":["b",{"annotation":[],"tag":"ForAll","contents":["a",{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeVar","contents":"b"}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeVar","contents":"a"}]},{"annotation":[],"tag":"TypeVar","contents":"b"}]}}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","UndefinedOr"],"UndefinedOr"]},{"annotation":[],"tag":"TypeVar","contents":"a"}]}]},{"annotation":[],"tag":"TypeVar","contents":"b"}]}]}]},null]},null]}},"sourceSpan":{"start":[82,1],"name":"/home/god/projects/purescript-undefined-or/src/Data/UndefinedOr.purs","end":[82,64]}}]}],"resolvedDependencies":{"purescript-newtype":"3.0.0","purescript-control":"4.2.0","purescript-maybe":"4.0.1","purescript-invariant":"4.1.0","purescript-prelude":"4.1.1"},"version":"1.0.1","github":["d86leader","purescript-undefined-or"],"versionTag":"v1.0.1","moduleMap":{"Data.BooleanAlgebra":"purescript-prelude","Data.Ring":"purescript-prelude","Data.Ord":"purescript-prelude","Type.Data.Row":"purescript-prelude","Data.Monoid.Dual":"purescript-prelude","Data.Boolean":"purescript-prelude","Data.Bounded":"purescript-prelude","Data.Show":"purescript-prelude","Control.Apply":"purescript-prelude","Control.Monad":"purescript-prelude","Data.Monoid":"purescript-prelude","Data.Maybe.First":"purescript-maybe","Control.Bind":"purescript-prelude","Data.Monoid.Additive":"purescript-prelude","Data.Symbol":"purescript-prelude","Data.HeytingAlgebra":"purescript-prelude","Control.Alt":"purescript-control","Type.Data.RowList":"purescript-prelude","Data.Ord.Unsafe":"purescript-prelude","Data.Semigroup":"purescript-prelude","Control.Alternative":"purescript-control","Data.Semiring":"purescript-prelude","Data.CommutativeRing":"purescript-prelude","Data.NaturalTransformation":"purescript-prelude","Data.Monoid.Conj":"purescript-prelude","Data.Functor":"purescript-prelude","Control.Category":"purescript-prelude","Data.Maybe":"purescript-maybe","Control.Comonad":"purescript-control","Data.Function":"purescript-prelude","Data.Field":"purescript-prelude","Data.EuclideanRing":"purescript-prelude","Data.Semigroup.Last":"purescript-prelude","Data.Semigroup.First":"purescript-prelude","Data.Functor.Invariant":"purescript-invariant","Prelude":"purescript-prelude","Control.Extend":"purescript-control","Control.Lazy":"purescript-control","Data.Eq":"purescript-prelude","Data.Newtype":"purescript-newtype","Data.Monoid.Disj":"purescript-prelude","Control.MonadPlus":"purescript-control","Data.Void":"purescript-prelude","Control.MonadZero":"purescript-control","Data.DivisionRing":"purescript-prelude","Data.Maybe.Last":"purescript-maybe","Data.Unit":"purescript-prelude","Data.Ordering":"purescript-prelude","Control.Plus":"purescript-control","Data.Monoid.Multiplicative":"purescript-prelude","Control.Semigroupoid":"purescript-prelude","Data.Monoid.Alternate":"purescript-control","Data.Monoid.Endo":"purescript-prelude","Control.Applicative":"purescript-prelude","Record.Unsafe":"purescript-prelude"},"compilerVersion":"0.13.3"}