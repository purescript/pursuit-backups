{"compilerVersion":"0.15.10","github":["cakekindel","purescript-threading"],"moduleMap":{"Control.Alt":"purescript-control","Control.Alternative":"purescript-control","Control.Applicative":"purescript-prelude","Control.Apply":"purescript-prelude","Control.Biapplicative":"purescript-bifunctors","Control.Biapply":"purescript-bifunctors","Control.Bind":"purescript-prelude","Control.Category":"purescript-prelude","Control.Comonad":"purescript-control","Control.Comonad.Env":"purescript-transformers","Control.Comonad.Env.Class":"purescript-transformers","Control.Comonad.Env.Trans":"purescript-transformers","Control.Comonad.Store":"purescript-transformers","Control.Comonad.Store.Class":"purescript-transformers","Control.Comonad.Store.Trans":"purescript-transformers","Control.Comonad.Traced":"purescript-transformers","Control.Comonad.Traced.Class":"purescript-transformers","Control.Comonad.Traced.Trans":"purescript-transformers","Control.Comonad.Trans.Class":"purescript-transformers","Control.Extend":"purescript-control","Control.Lazy":"purescript-control","Control.Monad":"purescript-prelude","Control.Monad.Cont":"purescript-transformers","Control.Monad.Cont.Class":"purescript-transformers","Control.Monad.Cont.Trans":"purescript-transformers","Control.Monad.Error.Class":"purescript-transformers","Control.Monad.Except":"purescript-transformers","Control.Monad.Except.Trans":"purescript-transformers","Control.Monad.Gen":"purescript-gen","Control.Monad.Gen.Class":"purescript-gen","Control.Monad.Gen.Common":"purescript-gen","Control.Monad.Identity.Trans":"purescript-transformers","Control.Monad.List.Trans":"purescript-transformers","Control.Monad.Maybe.Trans":"purescript-transformers","Control.Monad.RWS":"purescript-transformers","Control.Monad.RWS.Trans":"purescript-transformers","Control.Monad.Reader":"purescript-transformers","Control.Monad.Reader.Class":"purescript-transformers","Control.Monad.Reader.Trans":"purescript-transformers","Control.Monad.Rec.Class":"purescript-tailrec","Control.Monad.ST":"purescript-st","Control.Monad.ST.Class":"purescript-st","Control.Monad.ST.Global":"purescript-st","Control.Monad.ST.Internal":"purescript-st","Control.Monad.ST.Ref":"purescript-st","Control.Monad.ST.Uncurried":"purescript-st","Control.Monad.State":"purescript-transformers","Control.Monad.State.Class":"purescript-transformers","Control.Monad.State.Trans":"purescript-transformers","Control.Monad.Trans.Class":"purescript-transformers","Control.Monad.Writer":"purescript-transformers","Control.Monad.Writer.Class":"purescript-transformers","Control.Monad.Writer.Trans":"purescript-transformers","Control.MonadPlus":"purescript-control","Control.Parallel":"purescript-parallel","Control.Parallel.Class":"purescript-parallel","Control.Plus":"purescript-control","Control.Semigroupoid":"purescript-prelude","Data.Array":"purescript-arrays","Data.Array.NonEmpty":"purescript-arrays","Data.Array.NonEmpty.Internal":"purescript-arrays","Data.Array.Partial":"purescript-arrays","Data.Array.ST":"purescript-arrays","Data.Array.ST.Iterator":"purescript-arrays","Data.Array.ST.Partial":"purescript-arrays","Data.Bifoldable":"purescript-foldable-traversable","Data.Bifunctor":"purescript-bifunctors","Data.Bifunctor.Join":"purescript-bifunctors","Data.Bitraversable":"purescript-foldable-traversable","Data.Boolean":"purescript-prelude","Data.BooleanAlgebra":"purescript-prelude","Data.Bounded":"purescript-prelude","Data.Bounded.Generic":"purescript-prelude","Data.CatList":"purescript-catenable-lists","Data.CatQueue":"purescript-catenable-lists","Data.CommutativeRing":"purescript-prelude","Data.Compactable":"purescript-filterable","Data.Comparison":"purescript-contravariant","Data.Const":"purescript-const","Data.Date":"purescript-datetime","Data.Date.Component":"purescript-datetime","Data.Date.Component.Gen":"purescript-datetime","Data.Date.Gen":"purescript-datetime","Data.DateTime":"purescript-datetime","Data.DateTime.Gen":"purescript-datetime","Data.DateTime.Instant":"purescript-datetime","Data.Decidable":"purescript-contravariant","Data.Decide":"purescript-contravariant","Data.Distributive":"purescript-distributive","Data.Divide":"purescript-contravariant","Data.Divisible":"purescript-contravariant","Data.DivisionRing":"purescript-prelude","Data.Either":"purescript-either","Data.Either.Inject":"purescript-either","Data.Either.Nested":"purescript-either","Data.Enum":"purescript-enums","Data.Enum.Gen":"purescript-enums","Data.Enum.Generic":"purescript-enums","Data.Eq":"purescript-prelude","Data.Eq.Generic":"purescript-prelude","Data.Equivalence":"purescript-contravariant","Data.EuclideanRing":"purescript-prelude","Data.Exists":"purescript-exists","Data.Field":"purescript-prelude","Data.Filterable":"purescript-filterable","Data.Foldable":"purescript-foldable-traversable","Data.FoldableWithIndex":"purescript-foldable-traversable","Data.Function":"purescript-prelude","Data.Function.Uncurried":"purescript-functions","Data.Functor":"purescript-prelude","Data.Functor.App":"purescript-functors","Data.Functor.Clown":"purescript-functors","Data.Functor.Compose":"purescript-functors","Data.Functor.Contravariant":"purescript-contravariant","Data.Functor.Coproduct":"purescript-functors","Data.Functor.Coproduct.Inject":"purescript-functors","Data.Functor.Coproduct.Nested":"purescript-functors","Data.Functor.Costar":"purescript-functors","Data.Functor.Flip":"purescript-functors","Data.Functor.Invariant":"purescript-invariant","Data.Functor.Joker":"purescript-functors","Data.Functor.Product":"purescript-functors","Data.Functor.Product.Nested":"purescript-functors","Data.Functor.Product2":"purescript-functors","Data.FunctorWithIndex":"purescript-foldable-traversable","Data.Generic.Rep":"purescript-prelude","Data.HeytingAlgebra":"purescript-prelude","Data.HeytingAlgebra.Generic":"purescript-prelude","Data.Identity":"purescript-identity","Data.Int":"purescript-integers","Data.Int.Bits":"purescript-integers","Data.Interval":"purescript-datetime","Data.Interval.Duration":"purescript-datetime","Data.Interval.Duration.Iso":"purescript-datetime","Data.Lazy":"purescript-lazy","Data.List":"purescript-lists","Data.List.Internal":"purescript-lists","Data.List.Lazy":"purescript-lists","Data.List.Lazy.NonEmpty":"purescript-lists","Data.List.Lazy.Types":"purescript-lists","Data.List.NonEmpty":"purescript-lists","Data.List.Partial":"purescript-lists","Data.List.Types":"purescript-lists","Data.List.ZipList":"purescript-lists","Data.Map":"purescript-ordered-collections","Data.Map.Gen":"purescript-ordered-collections","Data.Map.Internal":"purescript-ordered-collections","Data.Maybe":"purescript-maybe","Data.Maybe.First":"purescript-maybe","Data.Maybe.Last":"purescript-maybe","Data.Monoid":"purescript-prelude","Data.Monoid.Additive":"purescript-prelude","Data.Monoid.Alternate":"purescript-control","Data.Monoid.Conj":"purescript-prelude","Data.Monoid.Disj":"purescript-prelude","Data.Monoid.Dual":"purescript-prelude","Data.Monoid.Endo":"purescript-prelude","Data.Monoid.Generic":"purescript-prelude","Data.Monoid.Multiplicative":"purescript-prelude","Data.NaturalTransformation":"purescript-prelude","Data.Newtype":"purescript-newtype","Data.NonEmpty":"purescript-nonempty","Data.Nullable":"purescript-nullable","Data.Number":"purescript-numbers","Data.Number.Approximate":"purescript-numbers","Data.Number.Format":"purescript-numbers","Data.Op":"purescript-contravariant","Data.Ord":"purescript-prelude","Data.Ord.Down":"purescript-orders","Data.Ord.Generic":"purescript-prelude","Data.Ord.Max":"purescript-orders","Data.Ord.Min":"purescript-orders","Data.Ordering":"purescript-prelude","Data.Predicate":"purescript-contravariant","Data.Profunctor":"purescript-profunctor","Data.Profunctor.Choice":"purescript-profunctor","Data.Profunctor.Closed":"purescript-profunctor","Data.Profunctor.Cochoice":"purescript-profunctor","Data.Profunctor.Costrong":"purescript-profunctor","Data.Profunctor.Join":"purescript-profunctor","Data.Profunctor.Split":"purescript-profunctor","Data.Profunctor.Star":"purescript-profunctor","Data.Profunctor.Strong":"purescript-profunctor","Data.Reflectable":"purescript-prelude","Data.Ring":"purescript-prelude","Data.Ring.Generic":"purescript-prelude","Data.Semigroup":"purescript-prelude","Data.Semigroup.First":"purescript-prelude","Data.Semigroup.Foldable":"purescript-foldable-traversable","Data.Semigroup.Generic":"purescript-prelude","Data.Semigroup.Last":"purescript-prelude","Data.Semigroup.Traversable":"purescript-foldable-traversable","Data.Semiring":"purescript-prelude","Data.Semiring.Generic":"purescript-prelude","Data.Set":"purescript-ordered-collections","Data.Set.NonEmpty":"purescript-ordered-collections","Data.Show":"purescript-prelude","Data.Show.Generic":"purescript-prelude","Data.Symbol":"purescript-prelude","Data.Time":"purescript-datetime","Data.Time.Component":"purescript-datetime","Data.Time.Component.Gen":"purescript-datetime","Data.Time.Duration":"purescript-datetime","Data.Time.Duration.Gen":"purescript-datetime","Data.Time.Gen":"purescript-datetime","Data.Traversable":"purescript-foldable-traversable","Data.Traversable.Accum":"purescript-foldable-traversable","Data.Traversable.Accum.Internal":"purescript-foldable-traversable","Data.TraversableWithIndex":"purescript-foldable-traversable","Data.Tuple":"purescript-tuples","Data.Tuple.Nested":"purescript-tuples","Data.Unfoldable":"purescript-unfoldable","Data.Unfoldable1":"purescript-unfoldable","Data.Unit":"purescript-prelude","Data.Void":"purescript-prelude","Data.Witherable":"purescript-filterable","Effect":"purescript-effect","Effect.Aff":"purescript-aff","Effect.Aff.Class":"purescript-aff","Effect.Aff.Compat":"purescript-aff","Effect.Class":"purescript-effect","Effect.Exception":"purescript-exceptions","Effect.Exception.Unsafe":"purescript-exceptions","Effect.Ref":"purescript-refs","Effect.Uncurried":"purescript-effect","Effect.Unsafe":"purescript-effect","Partial":"purescript-partial","Partial.Unsafe":"purescript-partial","Prelude":"purescript-prelude","Record.Unsafe":"purescript-prelude","Safe.Coerce":"purescript-safe-coerce","Type.Data.Boolean":"purescript-typelevel-prelude","Type.Data.Ordering":"purescript-typelevel-prelude","Type.Data.Symbol":"purescript-typelevel-prelude","Type.Equality":"purescript-type-equality","Type.Function":"purescript-typelevel-prelude","Type.Prelude":"purescript-typelevel-prelude","Type.Proxy":"purescript-prelude","Type.Row":"purescript-typelevel-prelude","Type.Row.Homogeneous":"purescript-typelevel-prelude","Type.RowList":"purescript-typelevel-prelude","Unsafe.Coerce":"purescript-unsafe-coerce"},"modules":[{"comments":null,"declarations":[{"children":[],"comments":null,"info":{"arguments":[["a",null]],"declType":"typeSynonym","type":{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["JS","Drop"],"Registry"],"tag":"TypeConstructor"},{"annotation":[],"contents":"a","tag":"TypeVar"}],"tag":"TypeApp"},{"annotation":[],"contents":[["Data","Unit"],"Unit"],"tag":"TypeConstructor"}],"tag":"TypeApp"}},"kind":null,"sourceSpan":{"end":[8,35],"name":"/tmp/tmp-184296-kOzwumzO6Pqt/purescript-threading/src/JS.Finalization.purs","start":[8,1]},"title":"Registry_"},{"children":[],"comments":null,"info":{"dataDeclType":"data","declType":"data","roles":["Nominal","Nominal"],"typeArguments":[["t0",null],["t1",null]]},"kind":null,"sourceSpan":{"end":[10,53],"name":"/tmp/tmp-184296-kOzwumzO6Pqt/purescript-threading/src/JS.Finalization.purs","start":[10,1]},"title":"Registry"},{"children":[],"comments":null,"info":{"declType":"value","type":{"annotation":[],"contents":{"identifier":"a","kind":null,"skolem":null,"type":{"annotation":[],"contents":{"identifier":"b","kind":null,"skolem":null,"type":{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":"b","tag":"TypeVar"}],"tag":"TypeApp"},{"annotation":[],"contents":[{"annotation":[],"contents":[["Effect"],"Effect"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Data","Unit"],"Unit"],"tag":"TypeConstructor"}],"tag":"TypeApp"}],"tag":"TypeApp"},"tag":"ParensInType"}],"tag":"TypeApp"},{"annotation":[],"contents":[{"annotation":[],"contents":[["Effect"],"Effect"],"tag":"TypeConstructor"},{"annotation":[],"contents":{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["JS","Drop"],"Registry"],"tag":"TypeConstructor"},{"annotation":[],"contents":"a","tag":"TypeVar"}],"tag":"TypeApp"},{"annotation":[],"contents":"b","tag":"TypeVar"}],"tag":"TypeApp"},"tag":"ParensInType"}],"tag":"TypeApp"}],"tag":"TypeApp"},"visibility":"TypeVarInvisible"},"tag":"ForAll"},"visibility":"TypeVarInvisible"},"tag":"ForAll"}},"kind":null,"sourceSpan":{"end":[12,83],"name":"/tmp/tmp-184296-kOzwumzO6Pqt/purescript-threading/src/JS.Finalization.purs","start":[12,1]},"title":"registry"},{"children":[],"comments":null,"info":{"declType":"value","type":{"annotation":[],"contents":{"identifier":"a","kind":null,"skolem":null,"type":{"annotation":[],"contents":{"identifier":"b","kind":null,"skolem":null,"type":{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["JS","Drop"],"Registry"],"tag":"TypeConstructor"},{"annotation":[],"contents":"a","tag":"TypeVar"}],"tag":"TypeApp"},{"annotation":[],"contents":"b","tag":"TypeVar"}],"tag":"TypeApp"}],"tag":"TypeApp"},{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[{"annotation":[],"contents":[["JS","WeakRef"],"WeakRef"],"tag":"TypeConstructor"},{"annotation":[],"contents":"a","tag":"TypeVar"}],"tag":"TypeApp"}],"tag":"TypeApp"},{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":"b","tag":"TypeVar"}],"tag":"TypeApp"},{"annotation":[],"contents":[{"annotation":[],"contents":[["Effect"],"Effect"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Data","Unit"],"Unit"],"tag":"TypeConstructor"}],"tag":"TypeApp"}],"tag":"TypeApp"}],"tag":"TypeApp"}],"tag":"TypeApp"},"visibility":"TypeVarInvisible"},"tag":"ForAll"},"visibility":"TypeVarInvisible"},"tag":"ForAll"}},"kind":null,"sourceSpan":{"end":[14,85],"name":"/tmp/tmp-184296-kOzwumzO6Pqt/purescript-threading/src/JS.Finalization.purs","start":[14,1]},"title":"register"},{"children":[],"comments":null,"info":{"declType":"value","type":{"annotation":[],"contents":{"identifier":"a","kind":null,"skolem":null,"type":{"annotation":[],"contents":{"identifier":"b","kind":null,"skolem":null,"type":{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["JS","Drop"],"Registry"],"tag":"TypeConstructor"},{"annotation":[],"contents":"a","tag":"TypeVar"}],"tag":"TypeApp"},{"annotation":[],"contents":"b","tag":"TypeVar"}],"tag":"TypeApp"}],"tag":"TypeApp"},{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[{"annotation":[],"contents":[["JS","WeakRef"],"WeakRef"],"tag":"TypeConstructor"},{"annotation":[],"contents":"a","tag":"TypeVar"}],"tag":"TypeApp"}],"tag":"TypeApp"},{"annotation":[],"contents":[{"annotation":[],"contents":[["Effect"],"Effect"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Data","Unit"],"Unit"],"tag":"TypeConstructor"}],"tag":"TypeApp"}],"tag":"TypeApp"}],"tag":"TypeApp"},"visibility":"TypeVarInvisible"},"tag":"ForAll"},"visibility":"TypeVarInvisible"},"tag":"ForAll"}},"kind":null,"sourceSpan":{"end":[15,82],"name":"/tmp/tmp-184296-kOzwumzO6Pqt/purescript-threading/src/JS.Finalization.purs","start":[15,1]},"title":"unregister"}],"name":"JS.Drop","reExports":[]},{"comments":null,"declarations":[{"children":[],"comments":null,"info":{"dataDeclType":"data","declType":"data","roles":["Nominal"],"typeArguments":[["t0",null]]},"kind":null,"sourceSpan":{"end":[10,44],"name":"/tmp/tmp-184296-kOzwumzO6Pqt/purescript-threading/src/JS.WeakRef.purs","start":[10,1]},"title":"WeakRef"},{"children":[],"comments":null,"info":{"declType":"value","type":{"annotation":[],"contents":{"identifier":"a","kind":null,"skolem":null,"type":{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":"a","tag":"TypeVar"}],"tag":"TypeApp"},{"annotation":[],"contents":[{"annotation":[],"contents":[["Effect"],"Effect"],"tag":"TypeConstructor"},{"annotation":[],"contents":{"annotation":[],"contents":[{"annotation":[],"contents":[["JS","WeakRef"],"WeakRef"],"tag":"TypeConstructor"},{"annotation":[],"contents":"a","tag":"TypeVar"}],"tag":"TypeApp"},"tag":"ParensInType"}],"tag":"TypeApp"}],"tag":"TypeApp"},"visibility":"TypeVarInvisible"},"tag":"ForAll"}},"kind":null,"sourceSpan":{"end":[12,57],"name":"/tmp/tmp-184296-kOzwumzO6Pqt/purescript-threading/src/JS.WeakRef.purs","start":[12,1]},"title":"make"},{"children":[],"comments":null,"info":{"declType":"value","type":{"annotation":[],"contents":{"identifier":"a","kind":null,"skolem":null,"type":{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[{"annotation":[],"contents":[["JS","WeakRef"],"WeakRef"],"tag":"TypeConstructor"},{"annotation":[],"contents":"a","tag":"TypeVar"}],"tag":"TypeApp"}],"tag":"TypeApp"},{"annotation":[],"contents":[{"annotation":[],"contents":[["Effect"],"Effect"],"tag":"TypeConstructor"},{"annotation":[],"contents":{"annotation":[],"contents":[{"annotation":[],"contents":[["Data","Maybe"],"Maybe"],"tag":"TypeConstructor"},{"annotation":[],"contents":"a","tag":"TypeVar"}],"tag":"TypeApp"},"tag":"ParensInType"}],"tag":"TypeApp"}],"tag":"TypeApp"},"visibility":"TypeVarInvisible"},"tag":"ForAll"}},"kind":null,"sourceSpan":{"end":[14,49],"name":"/tmp/tmp-184296-kOzwumzO6Pqt/purescript-threading/src/JS.WeakRef.purs","start":[14,1]},"title":"deref"},{"children":[],"comments":null,"info":{"declType":"value","type":{"annotation":[],"contents":{"identifier":"a","kind":null,"skolem":null,"type":{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[{"annotation":[],"contents":[["JS","WeakRef"],"WeakRef"],"tag":"TypeConstructor"},{"annotation":[],"contents":"a","tag":"TypeVar"}],"tag":"TypeApp"}],"tag":"TypeApp"},{"annotation":[],"contents":[{"annotation":[],"contents":[["Effect"],"Effect"],"tag":"TypeConstructor"},{"annotation":[],"contents":{"annotation":[],"contents":[{"annotation":[],"contents":[["Data","Nullable"],"Nullable"],"tag":"TypeConstructor"},{"annotation":[],"contents":"a","tag":"TypeVar"}],"tag":"TypeApp"},"tag":"ParensInType"}],"tag":"TypeApp"}],"tag":"TypeApp"},"visibility":"TypeVarInvisible"},"tag":"ForAll"}},"kind":null,"sourceSpan":{"end":[17,68],"name":"/tmp/tmp-184296-kOzwumzO6Pqt/purescript-threading/src/JS.WeakRef.purs","start":[17,1]},"title":"_deref"}],"name":"JS.WeakRef","reExports":[]},{"comments":null,"declarations":[],"name":"Threading","reExports":[]},{"comments":null,"declarations":[],"name":"Threading.Ath","reExports":[]},{"comments":null,"declarations":[{"children":[],"comments":"A barrier enables multiple threads to synchronize the beginning of some computation.\n","info":{"dataDeclType":"data","declType":"data","roles":[],"typeArguments":[]},"kind":null,"sourceSpan":{"end":[17,55],"name":"/tmp/tmp-184296-kOzwumzO6Pqt/purescript-threading/src/Threading.Barrier.purs","start":[17,1]},"title":"Barrier"},{"children":[],"comments":"Create a new barrier that will only unblock waiting threads\nwhen `n` threads are waiting (including this one)\n","info":{"declType":"value","type":{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Prim"],"Int"],"tag":"TypeConstructor"}],"tag":"TypeApp"},{"annotation":[],"contents":[{"annotation":[],"contents":[["Effect"],"Effect"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Threading","Barrier"],"Barrier"],"tag":"TypeConstructor"}],"tag":"TypeApp"}],"tag":"TypeApp"}},"kind":null,"sourceSpan":{"end":[21,33],"name":"/tmp/tmp-184296-kOzwumzO6Pqt/purescript-threading/src/Threading.Barrier.purs","start":[21,1]},"title":"barrier"},{"children":[],"comments":"Wait until the provided number of threads\nare also `wait`ing\n","info":{"declType":"value","type":{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Threading","Barrier"],"Barrier"],"tag":"TypeConstructor"}],"tag":"TypeApp"},{"annotation":[],"contents":[{"annotation":[],"contents":[["Effect","Aff"],"Aff"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Data","Unit"],"Unit"],"tag":"TypeConstructor"}],"tag":"TypeApp"}],"tag":"TypeApp"}},"kind":null,"sourceSpan":{"end":[26,28],"name":"/tmp/tmp-184296-kOzwumzO6Pqt/purescript-threading/src/Threading.Barrier.purs","start":[26,1]},"title":"wait"}],"name":"Threading.Barrier","reExports":[]},{"comments":null,"declarations":[{"children":[],"comments":"A multi-producer multi-consumer channel for communication\nbetween threads.\n\nSenders will broadcast messages to all living receivers,\ndoing nothing if there are no receivers.\n\nReceivers can wait for messages to be sent. Messages that\nare sent while the receiver is not waiting will be buffered,\nand `recv`d in the order they were sent.\n","info":{"dataDeclType":"data","declType":"data","roles":["Nominal"],"typeArguments":[["a",null]]},"kind":null,"sourceSpan":{"end":[47,64],"name":"/tmp/tmp-184296-kOzwumzO6Pqt/purescript-threading/src/Threading.Channel.purs","start":[47,1]},"title":"Channel"},{"children":[],"comments":null,"info":{"dataDeclType":"data","declType":"data","roles":["Nominal"],"typeArguments":[["a",null]]},"kind":null,"sourceSpan":{"end":[49,35],"name":"/tmp/tmp-184296-kOzwumzO6Pqt/purescript-threading/src/Threading.Channel.purs","start":[49,1]},"title":"Sender"},{"children":[],"comments":null,"info":{"dataDeclType":"data","declType":"data","roles":["Nominal"],"typeArguments":[["a",null]]},"kind":null,"sourceSpan":{"end":[50,82],"name":"/tmp/tmp-184296-kOzwumzO6Pqt/purescript-threading/src/Threading.Channel.purs","start":[50,1]},"title":"Receiver"},{"children":[],"comments":"Block until a message is sent, and pop it from the queue.\n\nIf a message has been sent since the\nlast call to `recv`, then it will\nbe immediately popped & returned.\n","info":{"declType":"value","type":{"annotation":[],"contents":{"identifier":"a","kind":null,"skolem":null,"type":{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[{"annotation":[],"contents":[["Threading","Channel"],"Receiver"],"tag":"TypeConstructor"},{"annotation":[],"contents":"a","tag":"TypeVar"}],"tag":"TypeApp"}],"tag":"TypeApp"},{"annotation":[],"contents":[{"annotation":[],"contents":[["Effect","Aff"],"Aff"],"tag":"TypeConstructor"},{"annotation":[],"contents":"a","tag":"TypeVar"}],"tag":"TypeApp"}],"tag":"TypeApp"},"visibility":"TypeVarInvisible"},"tag":"ForAll"}},"kind":null,"sourceSpan":{"end":[115,38],"name":"/tmp/tmp-184296-kOzwumzO6Pqt/purescript-threading/src/Threading.Channel.purs","start":[115,1]},"title":"recv"},{"children":[],"comments":"Read a queued message and pop it from the queue.\n\nIf no queued messages have been sent, returns Nothing.\n","info":{"declType":"value","type":{"annotation":[],"contents":{"identifier":"a","kind":null,"skolem":null,"type":{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[{"annotation":[],"contents":[["Threading","Channel"],"Receiver"],"tag":"TypeConstructor"},{"annotation":[],"contents":"a","tag":"TypeVar"}],"tag":"TypeApp"}],"tag":"TypeApp"},{"annotation":[],"contents":[{"annotation":[],"contents":[["Effect","Aff"],"Aff"],"tag":"TypeConstructor"},{"annotation":[],"contents":{"annotation":[],"contents":[{"annotation":[],"contents":[["Data","Maybe"],"Maybe"],"tag":"TypeConstructor"},{"annotation":[],"contents":"a","tag":"TypeVar"}],"tag":"TypeApp"},"tag":"ParensInType"}],"tag":"TypeApp"}],"tag":"TypeApp"},"visibility":"TypeVarInvisible"},"tag":"ForAll"}},"kind":null,"sourceSpan":{"end":[104,49],"name":"/tmp/tmp-184296-kOzwumzO6Pqt/purescript-threading/src/Threading.Channel.purs","start":[104,1]},"title":"tryRecv"},{"children":[],"comments":"Send a message to all living receivers\n","info":{"declType":"value","type":{"annotation":[],"contents":{"identifier":"a","kind":null,"skolem":null,"type":{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[{"annotation":[],"contents":[["Threading","Channel"],"Sender"],"tag":"TypeConstructor"},{"annotation":[],"contents":"a","tag":"TypeVar"}],"tag":"TypeApp"}],"tag":"TypeApp"},{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":"a","tag":"TypeVar"}],"tag":"TypeApp"},{"annotation":[],"contents":[{"annotation":[],"contents":[["Effect","Aff"],"Aff"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Data","Unit"],"Unit"],"tag":"TypeConstructor"}],"tag":"TypeApp"}],"tag":"TypeApp"}],"tag":"TypeApp"},"visibility":"TypeVarInvisible"},"tag":"ForAll"}},"kind":null,"sourceSpan":{"end":[77,44],"name":"/tmp/tmp-184296-kOzwumzO6Pqt/purescript-threading/src/Threading.Channel.purs","start":[77,1]},"title":"send"},{"children":[],"comments":"Block until a message is sent, and read\nit without removing it from the queue.\n\nIf a message has been sent since the\nlast call to `recv`, then it will\nbe immediately returned.\n","info":{"declType":"value","type":{"annotation":[],"contents":{"identifier":"a","kind":null,"skolem":null,"type":{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[{"annotation":[],"contents":[["Threading","Channel"],"Receiver"],"tag":"TypeConstructor"},{"annotation":[],"contents":"a","tag":"TypeVar"}],"tag":"TypeApp"}],"tag":"TypeApp"},{"annotation":[],"contents":[{"annotation":[],"contents":[["Effect","Aff"],"Aff"],"tag":"TypeConstructor"},{"annotation":[],"contents":"a","tag":"TypeVar"}],"tag":"TypeApp"}],"tag":"TypeApp"},"visibility":"TypeVarInvisible"},"tag":"ForAll"}},"kind":null,"sourceSpan":{"end":[149,38],"name":"/tmp/tmp-184296-kOzwumzO6Pqt/purescript-threading/src/Threading.Channel.purs","start":[149,1]},"title":"peek"},{"children":[],"comments":"Read a queued message without altering the queue.\n\nIf no queued messages have been sent, returns Nothing.\n","info":{"declType":"value","type":{"annotation":[],"contents":{"identifier":"a","kind":null,"skolem":null,"type":{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[{"annotation":[],"contents":[["Threading","Channel"],"Receiver"],"tag":"TypeConstructor"},{"annotation":[],"contents":"a","tag":"TypeVar"}],"tag":"TypeApp"}],"tag":"TypeApp"},{"annotation":[],"contents":[{"annotation":[],"contents":[["Effect","Aff"],"Aff"],"tag":"TypeConstructor"},{"annotation":[],"contents":{"annotation":[],"contents":[{"annotation":[],"contents":[["Data","Maybe"],"Maybe"],"tag":"TypeConstructor"},{"annotation":[],"contents":"a","tag":"TypeVar"}],"tag":"TypeApp"},"tag":"ParensInType"}],"tag":"TypeApp"}],"tag":"TypeApp"},"visibility":"TypeVarInvisible"},"tag":"ForAll"}},"kind":null,"sourceSpan":{"end":[140,49],"name":"/tmp/tmp-184296-kOzwumzO6Pqt/purescript-threading/src/Threading.Channel.purs","start":[140,1]},"title":"tryPeek"},{"children":[],"comments":"Create a new channel\n","info":{"declType":"value","type":{"annotation":[],"contents":{"identifier":"a","kind":null,"skolem":null,"type":{"annotation":[],"contents":[{"annotation":[],"contents":[["Effect"],"Effect"],"tag":"TypeConstructor"},{"annotation":[],"contents":{"annotation":[],"contents":[{"annotation":[],"contents":[["Threading","Channel"],"Channel"],"tag":"TypeConstructor"},{"annotation":[],"contents":"a","tag":"TypeVar"}],"tag":"TypeApp"},"tag":"ParensInType"}],"tag":"TypeApp"},"visibility":"TypeVarInvisible"},"tag":"ForAll"}},"kind":null,"sourceSpan":{"end":[53,40],"name":"/tmp/tmp-184296-kOzwumzO6Pqt/purescript-threading/src/Threading.Channel.purs","start":[53,1]},"title":"channel"},{"children":[],"comments":"Create a new message sender\n","info":{"declType":"value","type":{"annotation":[],"contents":{"identifier":"a","kind":null,"skolem":null,"type":{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[{"annotation":[],"contents":[["Threading","Channel"],"Channel"],"tag":"TypeConstructor"},{"annotation":[],"contents":"a","tag":"TypeVar"}],"tag":"TypeApp"}],"tag":"TypeApp"},{"annotation":[],"contents":[{"annotation":[],"contents":[["Effect"],"Effect"],"tag":"TypeConstructor"},{"annotation":[],"contents":{"annotation":[],"contents":[{"annotation":[],"contents":[["Threading","Channel"],"Sender"],"tag":"TypeConstructor"},{"annotation":[],"contents":"a","tag":"TypeVar"}],"tag":"TypeApp"},"tag":"ParensInType"}],"tag":"TypeApp"}],"tag":"TypeApp"},"visibility":"TypeVarInvisible"},"tag":"ForAll"}},"kind":null,"sourceSpan":{"end":[73,51],"name":"/tmp/tmp-184296-kOzwumzO6Pqt/purescript-threading/src/Threading.Channel.purs","start":[73,1]},"title":"sender"},{"children":[],"comments":"Create a new message receiver\n","info":{"declType":"value","type":{"annotation":[],"contents":{"identifier":"a","kind":null,"skolem":null,"type":{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[{"annotation":[],"contents":[["Threading","Channel"],"Channel"],"tag":"TypeConstructor"},{"annotation":[],"contents":"a","tag":"TypeVar"}],"tag":"TypeApp"}],"tag":"TypeApp"},{"annotation":[],"contents":[{"annotation":[],"contents":[["Effect","Aff"],"Aff"],"tag":"TypeConstructor"},{"annotation":[],"contents":{"annotation":[],"contents":[{"annotation":[],"contents":[["Threading","Channel"],"Receiver"],"tag":"TypeConstructor"},{"annotation":[],"contents":"a","tag":"TypeVar"}],"tag":"TypeApp"},"tag":"ParensInType"}],"tag":"TypeApp"}],"tag":"TypeApp"},"visibility":"TypeVarInvisible"},"tag":"ForAll"}},"kind":null,"sourceSpan":{"end":[59,52],"name":"/tmp/tmp-184296-kOzwumzO6Pqt/purescript-threading/src/Threading.Channel.purs","start":[59,1]},"title":"receiver"}],"name":"Threading.Channel","reExports":[]},{"comments":"A Mutex allows any number of threads to share mutable\nstate, with at most 1 thread having read or write access\nat a time.\n\nThreads can access the data with `lock` or `tryLock`,\nwhich both return a `Guard`.\n\nThe holder of a `Guard` is guaranteed exclusive read &\nwrite access to the data contained in the `Mutex`.\n","declarations":[{"children":[],"comments":null,"info":{"dataDeclType":"data","declType":"data","roles":["Nominal"],"typeArguments":[["t0",null]]},"kind":null,"sourceSpan":{"end":[39,42],"name":"/tmp/tmp-184296-kOzwumzO6Pqt/purescript-threading/src/Threading.Data.Mutex.purs","start":[39,1]},"title":"Mutex"},{"children":[],"comments":"A lock to a Mutex.\n\nGuards may be read from, written to, and released. Guards **must** be\nreleased in order for other blocking threads to continue.\n\n_Note: If a Guard reclaimed by the garbage collector without being released,\nits Mutex will notice and behave as if the Guard was explicitly released.\nThis will hopefully catch deadlocks caused by threads that have exited\nwhile holding a Guard._\n","info":{"dataDeclType":"data","declType":"data","roles":["Nominal"],"typeArguments":[["t0",null]]},"kind":null,"sourceSpan":{"end":[50,42],"name":"/tmp/tmp-184296-kOzwumzO6Pqt/purescript-threading/src/Threading.Data.Mutex.purs","start":[50,1]},"title":"Guard"},{"children":[],"comments":"Create a new Mutex\n","info":{"declType":"value","type":{"annotation":[],"contents":{"identifier":"a","kind":null,"skolem":null,"type":{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":"a","tag":"TypeVar"}],"tag":"TypeApp"},{"annotation":[],"contents":[{"annotation":[],"contents":[["Effect"],"Effect"],"tag":"TypeConstructor"},{"annotation":[],"contents":{"annotation":[],"contents":[{"annotation":[],"contents":[["Threading","Data","Mutex"],"Mutex"],"tag":"TypeConstructor"},{"annotation":[],"contents":"a","tag":"TypeVar"}],"tag":"TypeApp"},"tag":"ParensInType"}],"tag":"TypeApp"}],"tag":"TypeApp"},"visibility":"TypeVarInvisible"},"tag":"ForAll"}},"kind":null,"sourceSpan":{"end":[65,41],"name":"/tmp/tmp-184296-kOzwumzO6Pqt/purescript-threading/src/Threading.Data.Mutex.purs","start":[65,1]},"title":"mutex"},{"children":[],"comments":"Acquire a lock, blocking if another thread\ncurrently holds a lock.\n\nIf multiple threads invoke `lock`, they will\nbe unlocked in the order that they blocked on `lock`.\n","info":{"declType":"value","type":{"annotation":[],"contents":{"identifier":"a","kind":null,"skolem":null,"type":{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[{"annotation":[],"contents":[["Threading","Data","Mutex"],"Mutex"],"tag":"TypeConstructor"},{"annotation":[],"contents":"a","tag":"TypeVar"}],"tag":"TypeApp"}],"tag":"TypeApp"},{"annotation":[],"contents":[{"annotation":[],"contents":[["Effect","Aff"],"Aff"],"tag":"TypeConstructor"},{"annotation":[],"contents":{"annotation":[],"contents":[{"annotation":[],"contents":[["Threading","Data","Mutex"],"Guard"],"tag":"TypeConstructor"},{"annotation":[],"contents":"a","tag":"TypeVar"}],"tag":"TypeApp"},"tag":"ParensInType"}],"tag":"TypeApp"}],"tag":"TypeApp"},"visibility":"TypeVarInvisible"},"tag":"ForAll"}},"kind":null,"sourceSpan":{"end":[83,43],"name":"/tmp/tmp-184296-kOzwumzO6Pqt/purescript-threading/src/Threading.Data.Mutex.purs","start":[83,1]},"title":"lock"},{"children":[],"comments":"Attempt to acquire a lock without blocking.\n\nIf the Mutex is currently locked, this will return `Nothing`.\n","info":{"declType":"value","type":{"annotation":[],"contents":{"identifier":"a","kind":null,"skolem":null,"type":{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[{"annotation":[],"contents":[["Threading","Data","Mutex"],"Mutex"],"tag":"TypeConstructor"},{"annotation":[],"contents":"a","tag":"TypeVar"}],"tag":"TypeApp"}],"tag":"TypeApp"},{"annotation":[],"contents":[{"annotation":[],"contents":[["Effect"],"Effect"],"tag":"TypeConstructor"},{"annotation":[],"contents":{"annotation":[],"contents":[{"annotation":[],"contents":[["Data","Maybe"],"Maybe"],"tag":"TypeConstructor"},{"annotation":[],"contents":{"annotation":[],"contents":[{"annotation":[],"contents":[["Threading","Data","Mutex"],"Guard"],"tag":"TypeConstructor"},{"annotation":[],"contents":"a","tag":"TypeVar"}],"tag":"TypeApp"},"tag":"ParensInType"}],"tag":"TypeApp"},"tag":"ParensInType"}],"tag":"TypeApp"}],"tag":"TypeApp"},"visibility":"TypeVarInvisible"},"tag":"ForAll"}},"kind":null,"sourceSpan":{"end":[75,57],"name":"/tmp/tmp-184296-kOzwumzO6Pqt/purescript-threading/src/Threading.Data.Mutex.purs","start":[75,1]},"title":"tryLock"},{"children":[],"comments":"Is the Mutex currently locked?\n","info":{"declType":"value","type":{"annotation":[],"contents":{"identifier":"a","kind":null,"skolem":null,"type":{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[{"annotation":[],"contents":[["Threading","Data","Mutex"],"Mutex"],"tag":"TypeConstructor"},{"annotation":[],"contents":"a","tag":"TypeVar"}],"tag":"TypeApp"}],"tag":"TypeApp"},{"annotation":[],"contents":[{"annotation":[],"contents":[["Effect"],"Effect"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Prim"],"Boolean"],"tag":"TypeConstructor"}],"tag":"TypeApp"}],"tag":"TypeApp"},"visibility":"TypeVarInvisible"},"tag":"ForAll"}},"kind":null,"sourceSpan":{"end":[69,46],"name":"/tmp/tmp-184296-kOzwumzO6Pqt/purescript-threading/src/Threading.Data.Mutex.purs","start":[69,1]},"title":"locked"},{"children":[],"comments":"Release the lock\n\nAttempting to `read` or `write` this `Guard`\nwill throw an exception.\n\nRepeated invocations of `release` are ignored.\n","info":{"declType":"value","type":{"annotation":[],"contents":{"identifier":"a","kind":null,"skolem":null,"type":{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[{"annotation":[],"contents":[["Threading","Data","Mutex"],"Guard"],"tag":"TypeConstructor"},{"annotation":[],"contents":"a","tag":"TypeVar"}],"tag":"TypeApp"}],"tag":"TypeApp"},{"annotation":[],"contents":[{"annotation":[],"contents":[["Effect"],"Effect"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Data","Unit"],"Unit"],"tag":"TypeConstructor"}],"tag":"TypeApp"}],"tag":"TypeApp"},"visibility":"TypeVarInvisible"},"tag":"ForAll"}},"kind":null,"sourceSpan":{"end":[131,44],"name":"/tmp/tmp-184296-kOzwumzO6Pqt/purescript-threading/src/Threading.Data.Mutex.purs","start":[131,1]},"title":"release"},{"children":[],"comments":"Modify the value contained in a Mutex\n\nThis is a shorthand for acquiring a lock,\nreading from it, writing to it, then\nimmediately releasing it.\n\nReturns the new value.\n","info":{"declType":"value","type":{"annotation":[],"contents":{"identifier":"a","kind":null,"skolem":null,"type":{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[{"annotation":[],"contents":[["Threading","Data","Mutex"],"Mutex"],"tag":"TypeConstructor"},{"annotation":[],"contents":"a","tag":"TypeVar"}],"tag":"TypeApp"}],"tag":"TypeApp"},{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":"a","tag":"TypeVar"}],"tag":"TypeApp"},{"annotation":[],"contents":"a","tag":"TypeVar"}],"tag":"TypeApp"},"tag":"ParensInType"}],"tag":"TypeApp"},{"annotation":[],"contents":[{"annotation":[],"contents":[["Effect","Aff"],"Aff"],"tag":"TypeConstructor"},{"annotation":[],"contents":"a","tag":"TypeVar"}],"tag":"TypeApp"}],"tag":"TypeApp"}],"tag":"TypeApp"},"visibility":"TypeVarInvisible"},"tag":"ForAll"}},"kind":null,"sourceSpan":{"end":[116,49],"name":"/tmp/tmp-184296-kOzwumzO6Pqt/purescript-threading/src/Threading.Data.Mutex.purs","start":[116,1]},"title":"modify"},{"children":[],"comments":"`modify` with its return value ignored.\n","info":{"declType":"value","type":{"annotation":[],"contents":{"identifier":"a","kind":null,"skolem":null,"type":{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[{"annotation":[],"contents":[["Threading","Data","Mutex"],"Mutex"],"tag":"TypeConstructor"},{"annotation":[],"contents":"a","tag":"TypeVar"}],"tag":"TypeApp"}],"tag":"TypeApp"},{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":"a","tag":"TypeVar"}],"tag":"TypeApp"},{"annotation":[],"contents":"a","tag":"TypeVar"}],"tag":"TypeApp"},"tag":"ParensInType"}],"tag":"TypeApp"},{"annotation":[],"contents":[{"annotation":[],"contents":[["Effect","Aff"],"Aff"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Data","Unit"],"Unit"],"tag":"TypeConstructor"}],"tag":"TypeApp"}],"tag":"TypeApp"}],"tag":"TypeApp"},"visibility":"TypeVarInvisible"},"tag":"ForAll"}},"kind":null,"sourceSpan":{"end":[122,53],"name":"/tmp/tmp-184296-kOzwumzO6Pqt/purescript-threading/src/Threading.Data.Mutex.purs","start":[122,1]},"title":"modify_"},{"children":[],"comments":"Write a new value into the Mutex via the Guard\n","info":{"declType":"value","type":{"annotation":[],"contents":{"identifier":"a","kind":null,"skolem":null,"type":{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[{"annotation":[],"contents":[["Threading","Data","Mutex"],"Guard"],"tag":"TypeConstructor"},{"annotation":[],"contents":"a","tag":"TypeVar"}],"tag":"TypeApp"}],"tag":"TypeApp"},{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":"a","tag":"TypeVar"}],"tag":"TypeApp"},{"annotation":[],"contents":[{"annotation":[],"contents":[["Effect"],"Effect"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Data","Unit"],"Unit"],"tag":"TypeConstructor"}],"tag":"TypeApp"}],"tag":"TypeApp"}],"tag":"TypeApp"},"visibility":"TypeVarInvisible"},"tag":"ForAll"}},"kind":null,"sourceSpan":{"end":[139,47],"name":"/tmp/tmp-184296-kOzwumzO6Pqt/purescript-threading/src/Threading.Data.Mutex.purs","start":[139,1]},"title":"write"},{"children":[],"comments":"Read the value in the Mutex via the Guard\n","info":{"declType":"value","type":{"annotation":[],"contents":{"identifier":"a","kind":null,"skolem":null,"type":{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[{"annotation":[],"contents":[["Threading","Data","Mutex"],"Guard"],"tag":"TypeConstructor"},{"annotation":[],"contents":"a","tag":"TypeVar"}],"tag":"TypeApp"}],"tag":"TypeApp"},{"annotation":[],"contents":[{"annotation":[],"contents":[["Effect"],"Effect"],"tag":"TypeConstructor"},{"annotation":[],"contents":"a","tag":"TypeVar"}],"tag":"TypeApp"}],"tag":"TypeApp"},"visibility":"TypeVarInvisible"},"tag":"ForAll"}},"kind":null,"sourceSpan":{"end":[135,38],"name":"/tmp/tmp-184296-kOzwumzO6Pqt/purescript-threading/src/Threading.Data.Mutex.purs","start":[135,1]},"title":"read"},{"children":[],"comments":"Take a snapshot of the value in a Mutex\n\nThis is a shorthand for acquiring a lock, reading it,\nthen immediately releasing the lock.\n","info":{"declType":"value","type":{"annotation":[],"contents":{"identifier":"a","kind":null,"skolem":null,"type":{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[{"annotation":[],"contents":[["Threading","Data","Mutex"],"Mutex"],"tag":"TypeConstructor"},{"annotation":[],"contents":"a","tag":"TypeVar"}],"tag":"TypeApp"}],"tag":"TypeApp"},{"annotation":[],"contents":[{"annotation":[],"contents":[["Effect","Aff"],"Aff"],"tag":"TypeConstructor"},{"annotation":[],"contents":"a","tag":"TypeVar"}],"tag":"TypeApp"}],"tag":"TypeApp"},"visibility":"TypeVarInvisible"},"tag":"ForAll"}},"kind":null,"sourceSpan":{"end":[94,34],"name":"/tmp/tmp-184296-kOzwumzO6Pqt/purescript-threading/src/Threading.Data.Mutex.purs","start":[94,1]},"title":"get"},{"children":[],"comments":"Write a new value to a Mutex\n\nThis is a shorthand for acquiring a lock, writing to it,\nthen immediately releasing the lock.\n","info":{"declType":"value","type":{"annotation":[],"contents":{"identifier":"a","kind":null,"skolem":null,"type":{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[{"annotation":[],"contents":[["Threading","Data","Mutex"],"Mutex"],"tag":"TypeConstructor"},{"annotation":[],"contents":"a","tag":"TypeVar"}],"tag":"TypeApp"}],"tag":"TypeApp"},{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":"a","tag":"TypeVar"}],"tag":"TypeApp"},{"annotation":[],"contents":[{"annotation":[],"contents":[["Effect","Aff"],"Aff"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Data","Unit"],"Unit"],"tag":"TypeConstructor"}],"tag":"TypeApp"}],"tag":"TypeApp"}],"tag":"TypeApp"},"visibility":"TypeVarInvisible"},"tag":"ForAll"}},"kind":null,"sourceSpan":{"end":[104,42],"name":"/tmp/tmp-184296-kOzwumzO6Pqt/purescript-threading/src/Threading.Data.Mutex.purs","start":[104,1]},"title":"put"}],"name":"Threading.Data.Mutex","reExports":[]},{"comments":"A RWLock allows threads to share mutable state.\n\nAny number of threads can concurrently read the state,\nwhen there isn't a thread with write access.\n\nGet write access with `lockWrite` or `tryLockWrite`,\nor read access with `lockRead` or `tryLockRead`.\n\n`(try)lockWrite` returns a `WriteGuard`, which guarantees\nno other threads have read or write access until it is released.\n\n`(try)lockRead` returns a `ReadGuard`, which guarantees\nno threads have write access until it is released.\n","declarations":[{"children":[],"comments":"A Read-Write lock\n\nEnsures that there can be at most 1 thread with write\naccess to the data contained in the RWLock, or any\nnumber of concurrent readers.\n","info":{"dataDeclType":"data","declType":"data","roles":["Representational"],"typeArguments":[["a",null]]},"kind":null,"sourceSpan":{"end":[101,4],"name":"/tmp/tmp-184296-kOzwumzO6Pqt/purescript-threading/src/Threading.Data.RWLock.purs","start":[81,1]},"title":"RWLock"},{"children":[{"comments":null,"info":{"declType":"instance","dependencies":[],"type":{"annotation":[],"contents":[{"annotation":[],"contents":[["Threading","Data","RWLock"],"RWLockGuard"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Threading","Data","RWLock"],"ReadGuard"],"tag":"TypeConstructor"}],"tag":"TypeApp"}},"sourceSpan":{"end":[235,34],"name":"/tmp/tmp-184296-kOzwumzO6Pqt/purescript-threading/src/Threading.Data.RWLock.purs","start":[216,1]},"title":"<anonymous>"}],"comments":"A guard with read access to data of type `a`\n","info":{"dataDeclType":"data","declType":"data","roles":["Representational"],"typeArguments":[["a",null]]},"kind":null,"sourceSpan":{"end":[113,44],"name":"/tmp/tmp-184296-kOzwumzO6Pqt/purescript-threading/src/Threading.Data.RWLock.purs","start":[113,1]},"title":"ReadGuard"},{"children":[{"comments":null,"info":{"declType":"instance","dependencies":[],"type":{"annotation":[],"contents":[{"annotation":[],"contents":[["Threading","Data","RWLock"],"RWLockGuard"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Threading","Data","RWLock"],"WriteGuard"],"tag":"TypeConstructor"}],"tag":"TypeApp"}},"sourceSpan":{"end":[214,21],"name":"/tmp/tmp-184296-kOzwumzO6Pqt/purescript-threading/src/Threading.Data.RWLock.purs","start":[202,1]},"title":"<anonymous>"}],"comments":"A guard with read+write access to data of type `a`\n","info":{"dataDeclType":"data","declType":"data","roles":["Representational"],"typeArguments":[["a",null]]},"kind":null,"sourceSpan":{"end":[116,46],"name":"/tmp/tmp-184296-kOzwumzO6Pqt/purescript-threading/src/Threading.Data.RWLock.purs","start":[116,1]},"title":"WriteGuard"},{"children":[],"comments":"Create a new RWLock\n","info":{"declType":"value","type":{"annotation":[],"contents":{"identifier":"a","kind":null,"skolem":null,"type":{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":"a","tag":"TypeVar"}],"tag":"TypeApp"},{"annotation":[],"contents":[{"annotation":[],"contents":[["Effect"],"Effect"],"tag":"TypeConstructor"},{"annotation":[],"contents":{"annotation":[],"contents":[{"annotation":[],"contents":[["Threading","Data","RWLock"],"RWLock"],"tag":"TypeConstructor"},{"annotation":[],"contents":"a","tag":"TypeVar"}],"tag":"TypeApp"},"tag":"ParensInType"}],"tag":"TypeApp"}],"tag":"TypeApp"},"visibility":"TypeVarInvisible"},"tag":"ForAll"}},"kind":null,"sourceSpan":{"end":[185,43],"name":"/tmp/tmp-184296-kOzwumzO6Pqt/purescript-threading/src/Threading.Data.RWLock.purs","start":[185,1]},"title":"rwLock"},{"children":[],"comments":"Acquire a write-access lock to the data\ncontained in the RWLock.\n\nIf another thread holds a `ReadGuard` or `WriteGuard`,\nthis will block until the data is writable.\n","info":{"declType":"value","type":{"annotation":[],"contents":{"identifier":"a","kind":null,"skolem":null,"type":{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[{"annotation":[],"contents":[["Threading","Data","RWLock"],"RWLock"],"tag":"TypeConstructor"},{"annotation":[],"contents":"a","tag":"TypeVar"}],"tag":"TypeApp"}],"tag":"TypeApp"},{"annotation":[],"contents":[{"annotation":[],"contents":[["Effect","Aff"],"Aff"],"tag":"TypeConstructor"},{"annotation":[],"contents":{"annotation":[],"contents":[{"annotation":[],"contents":[["Threading","Data","RWLock"],"WriteGuard"],"tag":"TypeConstructor"},{"annotation":[],"contents":"a","tag":"TypeVar"}],"tag":"TypeApp"},"tag":"ParensInType"}],"tag":"TypeApp"}],"tag":"TypeApp"},"visibility":"TypeVarInvisible"},"tag":"ForAll"}},"kind":null,"sourceSpan":{"end":[123,54],"name":"/tmp/tmp-184296-kOzwumzO6Pqt/purescript-threading/src/Threading.Data.RWLock.purs","start":[123,1]},"title":"lockWrite"},{"children":[],"comments":"Acquire a write-access lock to the data\ncontained in the RWLock.\n\nIf another thread holds a `ReadGuard` or `WriteGuard`,\nthis will return Nothing.\n","info":{"declType":"value","type":{"annotation":[],"contents":{"identifier":"a","kind":null,"skolem":null,"type":{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[{"annotation":[],"contents":[["Threading","Data","RWLock"],"RWLock"],"tag":"TypeConstructor"},{"annotation":[],"contents":"a","tag":"TypeVar"}],"tag":"TypeApp"}],"tag":"TypeApp"},{"annotation":[],"contents":[{"annotation":[],"contents":[["Effect","Aff"],"Aff"],"tag":"TypeConstructor"},{"annotation":[],"contents":{"annotation":[],"contents":[{"annotation":[],"contents":[["Data","Maybe"],"Maybe"],"tag":"TypeConstructor"},{"annotation":[],"contents":{"annotation":[],"contents":[{"annotation":[],"contents":[["Threading","Data","RWLock"],"WriteGuard"],"tag":"TypeConstructor"},{"annotation":[],"contents":"a","tag":"TypeVar"}],"tag":"TypeApp"},"tag":"ParensInType"}],"tag":"TypeApp"},"tag":"ParensInType"}],"tag":"TypeApp"}],"tag":"TypeApp"},"visibility":"TypeVarInvisible"},"tag":"ForAll"}},"kind":null,"sourceSpan":{"end":[136,65],"name":"/tmp/tmp-184296-kOzwumzO6Pqt/purescript-threading/src/Threading.Data.RWLock.purs","start":[136,1]},"title":"tryLockWrite"},{"children":[],"comments":"Acquire a read-access lock to the data\ncontained in the RWLock.\n\nIf another thread holds a `WriteGuard`,\nthis will block until the data is readable.\n","info":{"declType":"value","type":{"annotation":[],"contents":{"identifier":"a","kind":null,"skolem":null,"type":{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[{"annotation":[],"contents":[["Threading","Data","RWLock"],"RWLock"],"tag":"TypeConstructor"},{"annotation":[],"contents":"a","tag":"TypeVar"}],"tag":"TypeApp"}],"tag":"TypeApp"},{"annotation":[],"contents":[{"annotation":[],"contents":[["Effect","Aff"],"Aff"],"tag":"TypeConstructor"},{"annotation":[],"contents":{"annotation":[],"contents":[{"annotation":[],"contents":[["Threading","Data","RWLock"],"ReadGuard"],"tag":"TypeConstructor"},{"annotation":[],"contents":"a","tag":"TypeVar"}],"tag":"TypeApp"},"tag":"ParensInType"}],"tag":"TypeApp"}],"tag":"TypeApp"},"visibility":"TypeVarInvisible"},"tag":"ForAll"}},"kind":null,"sourceSpan":{"end":[148,52],"name":"/tmp/tmp-184296-kOzwumzO6Pqt/purescript-threading/src/Threading.Data.RWLock.purs","start":[148,1]},"title":"lockRead"},{"children":[],"comments":"Acquire a read-access lock to the data\ncontained in the RWLock.\n\nIf another thread holds a `WriteGuard`,\nthis will return Nothing.\n","info":{"declType":"value","type":{"annotation":[],"contents":{"identifier":"a","kind":null,"skolem":null,"type":{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[{"annotation":[],"contents":[["Threading","Data","RWLock"],"RWLock"],"tag":"TypeConstructor"},{"annotation":[],"contents":"a","tag":"TypeVar"}],"tag":"TypeApp"}],"tag":"TypeApp"},{"annotation":[],"contents":[{"annotation":[],"contents":[["Effect","Aff"],"Aff"],"tag":"TypeConstructor"},{"annotation":[],"contents":{"annotation":[],"contents":[{"annotation":[],"contents":[["Data","Maybe"],"Maybe"],"tag":"TypeConstructor"},{"annotation":[],"contents":{"annotation":[],"contents":[{"annotation":[],"contents":[["Threading","Data","RWLock"],"ReadGuard"],"tag":"TypeConstructor"},{"annotation":[],"contents":"a","tag":"TypeVar"}],"tag":"TypeApp"},"tag":"ParensInType"}],"tag":"TypeApp"},"tag":"ParensInType"}],"tag":"TypeApp"}],"tag":"TypeApp"},"visibility":"TypeVarInvisible"},"tag":"ForAll"}},"kind":null,"sourceSpan":{"end":[178,63],"name":"/tmp/tmp-184296-kOzwumzO6Pqt/purescript-threading/src/Threading.Data.RWLock.purs","start":[178,1]},"title":"tryLockRead"},{"children":[],"comments":"Asks what state the RWLock is currently in\n","info":{"declType":"value","type":{"annotation":[],"contents":{"identifier":"a","kind":null,"skolem":null,"type":{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[{"annotation":[],"contents":[["Threading","Data","RWLock"],"RWLock"],"tag":"TypeConstructor"},{"annotation":[],"contents":"a","tag":"TypeVar"}],"tag":"TypeApp"}],"tag":"TypeApp"},{"annotation":[],"contents":[{"annotation":[],"contents":[["Effect"],"Effect"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Threading","Data","RWLock"],"Locked"],"tag":"TypeConstructor"}],"tag":"TypeApp"}],"tag":"TypeApp"},"visibility":"TypeVarInvisible"},"tag":"ForAll"}},"kind":null,"sourceSpan":{"end":[252,46],"name":"/tmp/tmp-184296-kOzwumzO6Pqt/purescript-threading/src/Threading.Data.RWLock.purs","start":[252,1]},"title":"locked"},{"children":[{"comments":"There are no readers or writers.\n","info":{"arguments":[],"declType":"dataConstructor"},"sourceSpan":{"end":[61,13],"name":"/tmp/tmp-184296-kOzwumzO6Pqt/purescript-threading/src/Threading.Data.RWLock.purs","start":[61,3]},"title":"Unlocked"},{"comments":"There is a writer, and the RWLock is not\ncurrently readable or writable.\n","info":{"arguments":[],"declType":"dataConstructor"},"sourceSpan":{"end":[64,18],"name":"/tmp/tmp-184296-kOzwumzO6Pqt/purescript-threading/src/Threading.Data.RWLock.purs","start":[64,3]},"title":"LockedWriting"},{"comments":"There is at least one reader, and the RWLock is not\ncurrently writable.\n","info":{"arguments":[],"declType":"dataConstructor"},"sourceSpan":{"end":[67,18],"name":"/tmp/tmp-184296-kOzwumzO6Pqt/purescript-threading/src/Threading.Data.RWLock.purs","start":[67,3]},"title":"LockedReading"},{"comments":null,"info":{"declType":"instance","dependencies":[],"type":{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Data","Generic","Rep"],"Generic"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Threading","Data","RWLock"],"Locked"],"tag":"TypeConstructor"}],"tag":"TypeApp"},{"annotation":[],"contents":null,"tag":"TypeWildcard"}],"tag":"TypeApp"}},"sourceSpan":{"end":[69,33],"name":"/tmp/tmp-184296-kOzwumzO6Pqt/purescript-threading/src/Threading.Data.RWLock.purs","start":[69,1]},"title":"<anonymous>"},{"comments":null,"info":{"declType":"instance","dependencies":[],"type":{"annotation":[],"contents":[{"annotation":[],"contents":[["Data","Eq"],"Eq"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Threading","Data","RWLock"],"Locked"],"tag":"TypeConstructor"}],"tag":"TypeApp"}},"sourceSpan":{"end":[70,26],"name":"/tmp/tmp-184296-kOzwumzO6Pqt/purescript-threading/src/Threading.Data.RWLock.purs","start":[70,1]},"title":"<anonymous>"},{"comments":null,"info":{"declType":"instance","dependencies":[],"type":{"annotation":[],"contents":[{"annotation":[],"contents":[["Data","Show"],"Show"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Threading","Data","RWLock"],"Locked"],"tag":"TypeConstructor"}],"tag":"TypeApp"}},"sourceSpan":{"end":[72,21],"name":"/tmp/tmp-184296-kOzwumzO6Pqt/purescript-threading/src/Threading.Data.RWLock.purs","start":[71,1]},"title":"<anonymous>"}],"comments":"The lock state of the RWLock\n","info":{"dataDeclType":"data","declType":"data","roles":[],"typeArguments":[]},"kind":null,"sourceSpan":{"end":[67,18],"name":"/tmp/tmp-184296-kOzwumzO6Pqt/purescript-threading/src/Threading.Data.RWLock.purs","start":[59,1]},"title":"Locked"},{"children":[],"comments":"Get the value currently in the RWLock.\n\nShorthand for `lockRead rw >>= (\\l -> read l <* release l)`\n","info":{"declType":"value","type":{"annotation":[],"contents":{"identifier":"a","kind":null,"skolem":null,"type":{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[{"annotation":[],"contents":[["Threading","Data","RWLock"],"RWLock"],"tag":"TypeConstructor"},{"annotation":[],"contents":"a","tag":"TypeVar"}],"tag":"TypeApp"}],"tag":"TypeApp"},{"annotation":[],"contents":[{"annotation":[],"contents":[["Effect","Aff"],"Aff"],"tag":"TypeConstructor"},{"annotation":[],"contents":"a","tag":"TypeVar"}],"tag":"TypeApp"}],"tag":"TypeApp"},"visibility":"TypeVarInvisible"},"tag":"ForAll"}},"kind":null,"sourceSpan":{"end":[264,35],"name":"/tmp/tmp-184296-kOzwumzO6Pqt/purescript-threading/src/Threading.Data.RWLock.purs","start":[264,1]},"title":"get"},{"children":[],"comments":"Write a new value to the RWLock.\n\nShorthand for `lockWrite rw >>= (\\l -> liftEffect (write l a) <* release l)`\n","info":{"declType":"value","type":{"annotation":[],"contents":{"identifier":"a","kind":null,"skolem":null,"type":{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[{"annotation":[],"contents":[["Threading","Data","RWLock"],"RWLock"],"tag":"TypeConstructor"},{"annotation":[],"contents":"a","tag":"TypeVar"}],"tag":"TypeApp"}],"tag":"TypeApp"},{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":"a","tag":"TypeVar"}],"tag":"TypeApp"},{"annotation":[],"contents":[{"annotation":[],"contents":[["Effect","Aff"],"Aff"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Data","Unit"],"Unit"],"tag":"TypeConstructor"}],"tag":"TypeApp"}],"tag":"TypeApp"}],"tag":"TypeApp"},"visibility":"TypeVarInvisible"},"tag":"ForAll"}},"kind":null,"sourceSpan":{"end":[270,43],"name":"/tmp/tmp-184296-kOzwumzO6Pqt/purescript-threading/src/Threading.Data.RWLock.purs","start":[270,1]},"title":"put"},{"children":[],"comments":"Modify the value in the RWLock using the provided function.\n","info":{"declType":"value","type":{"annotation":[],"contents":{"identifier":"a","kind":null,"skolem":null,"type":{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[{"annotation":[],"contents":[["Threading","Data","RWLock"],"RWLock"],"tag":"TypeConstructor"},{"annotation":[],"contents":"a","tag":"TypeVar"}],"tag":"TypeApp"}],"tag":"TypeApp"},{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":"a","tag":"TypeVar"}],"tag":"TypeApp"},{"annotation":[],"contents":"a","tag":"TypeVar"}],"tag":"TypeApp"},"tag":"ParensInType"}],"tag":"TypeApp"},{"annotation":[],"contents":[{"annotation":[],"contents":[["Effect","Aff"],"Aff"],"tag":"TypeConstructor"},{"annotation":[],"contents":"a","tag":"TypeVar"}],"tag":"TypeApp"}],"tag":"TypeApp"}],"tag":"TypeApp"},"visibility":"TypeVarInvisible"},"tag":"ForAll"}},"kind":null,"sourceSpan":{"end":[274,50],"name":"/tmp/tmp-184296-kOzwumzO6Pqt/purescript-threading/src/Threading.Data.RWLock.purs","start":[274,1]},"title":"modify"},{"children":[],"comments":"Shorthand for `void $ modify rw f`\n","info":{"declType":"value","type":{"annotation":[],"contents":{"identifier":"a","kind":null,"skolem":null,"type":{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[{"annotation":[],"contents":[["Threading","Data","RWLock"],"RWLock"],"tag":"TypeConstructor"},{"annotation":[],"contents":"a","tag":"TypeVar"}],"tag":"TypeApp"}],"tag":"TypeApp"},{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":"a","tag":"TypeVar"}],"tag":"TypeApp"},{"annotation":[],"contents":"a","tag":"TypeVar"}],"tag":"TypeApp"},"tag":"ParensInType"}],"tag":"TypeApp"},{"annotation":[],"contents":[{"annotation":[],"contents":[["Effect","Aff"],"Aff"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Data","Unit"],"Unit"],"tag":"TypeConstructor"}],"tag":"TypeApp"}],"tag":"TypeApp"}],"tag":"TypeApp"},"visibility":"TypeVarInvisible"},"tag":"ForAll"}},"kind":null,"sourceSpan":{"end":[281,54],"name":"/tmp/tmp-184296-kOzwumzO6Pqt/purescript-threading/src/Threading.Data.RWLock.purs","start":[281,1]},"title":"modify_"},{"children":[],"comments":"Writes a new value\n","info":{"declType":"value","type":{"annotation":[],"contents":{"identifier":"a","kind":null,"skolem":null,"type":{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[{"annotation":[],"contents":[["Threading","Data","RWLock"],"WriteGuard"],"tag":"TypeConstructor"},{"annotation":[],"contents":"a","tag":"TypeVar"}],"tag":"TypeApp"}],"tag":"TypeApp"},{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":"a","tag":"TypeVar"}],"tag":"TypeApp"},{"annotation":[],"contents":[{"annotation":[],"contents":[["Effect"],"Effect"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Data","Unit"],"Unit"],"tag":"TypeConstructor"}],"tag":"TypeApp"}],"tag":"TypeApp"}],"tag":"TypeApp"},"visibility":"TypeVarInvisible"},"tag":"ForAll"}},"kind":null,"sourceSpan":{"end":[246,52],"name":"/tmp/tmp-184296-kOzwumzO6Pqt/purescript-threading/src/Threading.Data.RWLock.purs","start":[246,1]},"title":"write"},{"children":[{"comments":null,"info":{"declType":"typeClassMember","type":{"annotation":[],"contents":{"identifier":"a","kind":null,"skolem":null,"type":{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[{"annotation":[],"contents":"g","tag":"TypeVar"},{"annotation":[],"contents":"a","tag":"TypeVar"}],"tag":"TypeApp"}],"tag":"TypeApp"},{"annotation":[],"contents":[{"annotation":[],"contents":[["Effect","Aff"],"Aff"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Data","Unit"],"Unit"],"tag":"TypeConstructor"}],"tag":"TypeApp"}],"tag":"TypeApp"},"visibility":"TypeVarInvisible"},"tag":"ForAll"}},"sourceSpan":{"end":[199,39],"name":"/tmp/tmp-184296-kOzwumzO6Pqt/purescript-threading/src/Threading.Data.RWLock.purs","start":[199,3]},"title":"release"},{"comments":null,"info":{"declType":"typeClassMember","type":{"annotation":[],"contents":{"identifier":"a","kind":null,"skolem":null,"type":{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[{"annotation":[],"contents":"g","tag":"TypeVar"},{"annotation":[],"contents":"a","tag":"TypeVar"}],"tag":"TypeApp"}],"tag":"TypeApp"},{"annotation":[],"contents":[{"annotation":[],"contents":[["Effect","Aff"],"Aff"],"tag":"TypeConstructor"},{"annotation":[],"contents":"a","tag":"TypeVar"}],"tag":"TypeApp"}],"tag":"TypeApp"},"visibility":"TypeVarInvisible"},"tag":"ForAll"}},"sourceSpan":{"end":[200,33],"name":"/tmp/tmp-184296-kOzwumzO6Pqt/purescript-threading/src/Threading.Data.RWLock.purs","start":[200,3]},"title":"read"},{"comments":null,"info":{"declType":"instance","dependencies":[],"type":{"annotation":[],"contents":[{"annotation":[],"contents":[["Threading","Data","RWLock"],"RWLockGuard"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Threading","Data","RWLock"],"WriteGuard"],"tag":"TypeConstructor"}],"tag":"TypeApp"}},"sourceSpan":{"end":[214,21],"name":"/tmp/tmp-184296-kOzwumzO6Pqt/purescript-threading/src/Threading.Data.RWLock.purs","start":[202,1]},"title":"<anonymous>"},{"comments":null,"info":{"declType":"instance","dependencies":[],"type":{"annotation":[],"contents":[{"annotation":[],"contents":[["Threading","Data","RWLock"],"RWLockGuard"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Threading","Data","RWLock"],"ReadGuard"],"tag":"TypeConstructor"}],"tag":"TypeApp"}},"sourceSpan":{"end":[235,34],"name":"/tmp/tmp-184296-kOzwumzO6Pqt/purescript-threading/src/Threading.Data.RWLock.purs","start":[216,1]},"title":"<anonymous>"}],"comments":"Typeclass implemented by `WriteGuard` and `ReadGuard`\nallowing a common `release` + `read` function (as opposed\nto `releaseRead`, `releaseWrite`, etc.)\n","info":{"arguments":[["g",null]],"declType":"typeClass","fundeps":[],"superclasses":[]},"kind":{"keyword":"class","kind":{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Prim"],"Type"],"tag":"TypeConstructor"}],"tag":"TypeApp"},{"annotation":[],"contents":[["Prim"],"Type"],"tag":"TypeConstructor"}],"tag":"TypeApp"}],"tag":"TypeApp"},{"annotation":[],"contents":[["Prim"],"Constraint"],"tag":"TypeConstructor"}],"tag":"TypeApp"}},"sourceSpan":{"end":[200,33],"name":"/tmp/tmp-184296-kOzwumzO6Pqt/purescript-threading/src/Threading.Data.RWLock.purs","start":[198,1]},"title":"RWLockGuard"}],"name":"Threading.Data.RWLock","reExports":[]},{"comments":null,"declarations":[{"children":[{"comments":null,"info":{"arguments":[],"declType":"dataConstructor"},"sourceSpan":{"end":[3,21],"name":"/tmp/tmp-184296-kOzwumzO6Pqt/purescript-threading/src/Threading.Handle.purs","start":[3,13]},"title":"Handle"}],"comments":null,"info":{"dataDeclType":"data","declType":"data","roles":[],"typeArguments":[]},"kind":null,"sourceSpan":{"end":[3,21],"name":"/tmp/tmp-184296-kOzwumzO6Pqt/purescript-threading/src/Threading.Handle.purs","start":[3,1]},"title":"Handle"}],"name":"Threading.Handle","reExports":[]}],"packageMeta":{"dependencies":{"purescript-aff":">=7.1.0 <8.0.0","purescript-arrays":">=7.3.0 <8.0.0","purescript-catenable-lists":">=7.0.0 <8.0.0","purescript-control":">=6.0.0 <7.0.0","purescript-effect":">=4.0.0 <5.0.0","purescript-either":">=6.1.0 <7.0.0","purescript-exceptions":">=6.1.0 <7.0.0","purescript-filterable":">=5.0.0 <6.0.0","purescript-foldable-traversable":">=6.0.0 <7.0.0","purescript-maybe":">=6.0.0 <7.0.0","purescript-nullable":">=6.0.0 <7.0.0","purescript-ordered-collections":">=3.2.0 <4.0.0","purescript-prelude":">=6.0.1 <7.0.0","purescript-refs":">=6.0.0 <7.0.0","purescript-transformers":">=6.0.0 <7.0.0","purescript-tuples":">=7.0.0 <8.0.0","purescript-typelevel-prelude":">=7.0.0 <8.0.0"},"homepage":"https://github.com/cakekindel/purescript-threading.git","license":["GPL-3.0-or-later"],"name":"purescript-threading","repository":{"type":"git","url":"https://github.com/cakekindel/purescript-threading.git"}},"resolvedDependencies":{"purescript-aff":"7.1.0","purescript-arrays":"7.3.0","purescript-bifunctors":"6.0.0","purescript-catenable-lists":"7.0.0","purescript-const":"6.0.0","purescript-contravariant":"6.0.0","purescript-control":"6.0.0","purescript-datetime":"6.1.0","purescript-distributive":"6.0.0","purescript-effect":"4.0.0","purescript-either":"6.1.0","purescript-enums":"6.0.1","purescript-exceptions":"6.1.0","purescript-exists":"6.0.0","purescript-filterable":"5.0.0","purescript-foldable-traversable":"6.0.0","purescript-functions":"6.0.0","purescript-functors":"5.0.0","purescript-gen":"4.0.0","purescript-identity":"6.0.0","purescript-integers":"6.0.0","purescript-invariant":"6.0.0","purescript-lazy":"6.0.0","purescript-lists":"7.0.0","purescript-maybe":"6.0.0","purescript-newtype":"5.0.0","purescript-nonempty":"7.0.0","purescript-nullable":"6.0.0","purescript-numbers":"9.0.1","purescript-ordered-collections":"3.2.0","purescript-orders":"6.0.0","purescript-parallel":"6.0.0","purescript-partial":"4.0.0","purescript-prelude":"6.0.1","purescript-profunctor":"6.0.1","purescript-refs":"6.0.0","purescript-safe-coerce":"2.0.0","purescript-st":"6.2.0","purescript-tailrec":"6.1.0","purescript-transformers":"6.1.0","purescript-tuples":"7.0.0","purescript-type-equality":"4.0.1","purescript-typelevel-prelude":"7.0.0","purescript-unfoldable":"6.0.0","purescript-unsafe-coerce":"6.0.0"},"tagTime":"2024-07-17T17:08:07+0000","uploader":"pacchettibotti","version":"0.0.3","versionTag":"v0.0.3"}