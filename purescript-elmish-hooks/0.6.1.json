{"uploader":"mcordova47","packageMeta":{"repository":{"url":"https://github.com/collegevine/purescript-elmish-hooks.git","type":"git"},"ignore":["**/.*","node_modules","bower_components","output"],"dependencies":{"purescript-maybe":"^v5.0.0","purescript-elmish":"^v0.7.0","purescript-aff":"^v6.0.0","purescript-debug":"^v5.0.0","purescript-prelude":"^v5.0.1","purescript-psci-support":"^v5.0.0","purescript-tuples":"^v6.0.1"},"name":"purescript-elmish-hooks","license":["MIT"]},"tagTime":"2022-04-20T16:40:10+0000","modules":[{"reExports":[{"moduleName":{"package":null,"item":["Elmish","Hooks","Type"]},"declarations":[{"kind":null,"children":[],"comments":null,"title":"HookType","info":{"arguments":[],"declType":"typeSynonym","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Elmish","Hooks","Type"],"HookType'"]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Elmish","Hooks","Type"],"HookType'"]}]}},"sourceSpan":{"start":[46,1],"name":"/Users/marc.cordova/dev/collegevine/purescript-elmish-hooks/src/Elmish/Hooks/Type.purs","end":[46,39]}},{"kind":{"kind":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Elmish","Hooks","Type"],"HookType'"]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Elmish","Hooks","Type"],"HookType'"]}]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Type"]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Type"]}]}]},"keyword":"type"},"children":[],"comments":"A Convenient wrapper which applies `Pure` to the given hook type.\n","title":"Hook","info":{"arguments":[["t",{"annotation":[],"tag":"TypeConstructor","contents":[["Elmish","Hooks","Type"],"HookType"]}],["a",null]],"declType":"typeSynonym","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Elmish","Hooks","Type"],"Hook'"]},{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeVar","contents":"t"},{"annotation":[],"tag":"TypeConstructor","contents":[["Elmish","Hooks","Type"],"Pure"]}]}}]},{"annotation":[],"tag":"TypeVar","contents":"a"}]}},"sourceSpan":{"start":[106,1],"name":"/Users/marc.cordova/dev/collegevine/purescript-elmish-hooks/src/Elmish/Hooks/Type.purs","end":[106,47]}},{"kind":null,"children":[],"comments":"Unwraps a `Hook ReactElement`, which is usually created by using one or\nmore hooks and then using `pure` to encapsulate a `ReactElement`. E.g.:\n\n```purs\nview :: ReactElement\nview = withHooks Hooks.do\n  name /\\ setName <- useState \"\"\n  Hooks.pure $ H.input_ \"\" { value: name, onChange: setName <?| eventTargetValue }\n```\n","title":"withHooks","info":{"declType":"value","type":{"annotation":[],"tag":"ForAll","contents":["t",{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Elmish","Hooks","Type"],"Hook'"]},{"annotation":[],"tag":"TypeVar","contents":"t"}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Elmish","React"],"ReactElement"]}]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Elmish","React"],"ReactElement"]}]},null]}},"sourceSpan":{"start":[161,1],"name":"/Users/marc.cordova/dev/collegevine/purescript-elmish-hooks/src/Elmish/Hooks/Type.purs","end":[161,60]}},{"kind":null,"children":[],"comments":null,"title":"pure","info":{"declType":"value","type":{"annotation":[],"tag":"ForAll","contents":["a",{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeVar","contents":"a"}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Elmish","Hooks","Type"],"Hook'"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Elmish","Hooks","Type"],"Pure"]}]},{"annotation":[],"tag":"TypeVar","contents":"a"}]}]},null]}},"sourceSpan":{"start":[127,1],"name":"/Users/marc.cordova/dev/collegevine/purescript-elmish-hooks/src/Elmish/Hooks/Type.purs","end":[127,36]}},{"kind":null,"children":[],"comments":"Given a `ComponentName` and a function to create a `ComponentDef` (from a\nrender function `a -> ReactElement`), `mkHook` creates a `Hook a`. When\ncreating a hook with `mkHook`, youâ€™ll need to create a `HookType` by\n`foreign import`ing it.\n\nAs an example of how to use `mkHook`, `useEffect` uses it like so:\n\n```purs\nforeign import data UseEffect :: Type -> HookType\n\nuseEffect :: Aff Unit -> Hook (UseEffect Unit) Unit\nuseEffect init =\n  mkHook (ComponentName \"UseEffect\") \\render ->\n    { init: forkVoid init\n    , update: \\_ msg -> absurd msg\n    , view: \\_ _ -> render unit\n    }\n```\n","title":"mkHook","info":{"declType":"value","type":{"annotation":[],"tag":"ForAll","contents":["msg",{"annotation":[],"tag":"ForAll","contents":["state",{"annotation":[],"tag":"ForAll","contents":["t",{"annotation":[],"tag":"ForAll","contents":["a",{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Elmish","Component"],"ComponentName"]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeVar","contents":"a"}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Elmish","React"],"ReactElement"]}]}}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Elmish","Component"],"ComponentDef"]},{"annotation":[],"tag":"TypeVar","contents":"msg"}]},{"annotation":[],"tag":"TypeVar","contents":"state"}]}]}}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Elmish","Hooks","Type"],"Hook'"]},{"annotation":[],"tag":"TypeVar","contents":"t"}]},{"annotation":[],"tag":"TypeVar","contents":"a"}]}]}]},null]},null]},null]},null]}},"sourceSpan":{"start":[148,1],"name":"/Users/marc.cordova/dev/collegevine/purescript-elmish-hooks/src/Elmish/Hooks/Type.purs","end":[148,110]}},{"kind":null,"children":[],"comments":null,"title":"discard","info":{"declType":"value","type":{"annotation":[],"tag":"ForAll","contents":["ta",{"annotation":[],"tag":"ForAll","contents":["tb",{"annotation":[],"tag":"ForAll","contents":["tr",{"annotation":[],"tag":"ForAll","contents":["a",{"annotation":[],"tag":"ForAll","contents":["b",{"annotation":[],"tag":"ConstrainedType","contents":[{"constraintAnn":[],"constraintClass":[["Control","Bind"],"Discard"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"a"}],"constraintKindArgs":[],"constraintData":null},{"annotation":[],"tag":"ConstrainedType","contents":[{"constraintAnn":[],"constraintClass":[["Elmish","Hooks","Type"],"ComposedHookTypes"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"ta"},{"annotation":[],"tag":"TypeVar","contents":"tb"},{"annotation":[],"tag":"TypeVar","contents":"tr"}],"constraintKindArgs":[],"constraintData":null},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Elmish","Hooks","Type"],"Hook'"]},{"annotation":[],"tag":"TypeVar","contents":"ta"}]},{"annotation":[],"tag":"TypeVar","contents":"a"}]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeVar","contents":"a"}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Elmish","Hooks","Type"],"Hook'"]},{"annotation":[],"tag":"TypeVar","contents":"tb"}]},{"annotation":[],"tag":"TypeVar","contents":"b"}]}]}}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Elmish","Hooks","Type"],"Hook'"]},{"annotation":[],"tag":"TypeVar","contents":"tr"}]},{"annotation":[],"tag":"TypeVar","contents":"b"}]}]}]}]}]},null]},null]},null]},null]},null]}},"sourceSpan":{"start":[119,1],"name":"/Users/marc.cordova/dev/collegevine/purescript-elmish-hooks/src/Elmish/Hooks/Type.purs","end":[124,16]}},{"kind":null,"children":[],"comments":null,"title":"bind","info":{"declType":"value","type":{"annotation":[],"tag":"ForAll","contents":["ta",{"annotation":[],"tag":"ForAll","contents":["tb",{"annotation":[],"tag":"ForAll","contents":["tr",{"annotation":[],"tag":"ForAll","contents":["a",{"annotation":[],"tag":"ForAll","contents":["b",{"annotation":[],"tag":"ConstrainedType","contents":[{"constraintAnn":[],"constraintClass":[["Elmish","Hooks","Type"],"ComposedHookTypes"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"ta"},{"annotation":[],"tag":"TypeVar","contents":"tb"},{"annotation":[],"tag":"TypeVar","contents":"tr"}],"constraintKindArgs":[],"constraintData":null},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Elmish","Hooks","Type"],"Hook'"]},{"annotation":[],"tag":"TypeVar","contents":"ta"}]},{"annotation":[],"tag":"TypeVar","contents":"a"}]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeVar","contents":"a"}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Elmish","Hooks","Type"],"Hook'"]},{"annotation":[],"tag":"TypeVar","contents":"tb"}]},{"annotation":[],"tag":"TypeVar","contents":"b"}]}]}}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Elmish","Hooks","Type"],"Hook'"]},{"annotation":[],"tag":"TypeVar","contents":"tr"}]},{"annotation":[],"tag":"TypeVar","contents":"b"}]}]}]}]},null]},null]},null]},null]},null]}},"sourceSpan":{"start":[111,1],"name":"/Users/marc.cordova/dev/collegevine/purescript-elmish-hooks/src/Elmish/Hooks/Type.purs","end":[115,16]}},{"kind":null,"children":[],"comments":null,"title":"(==>)","info":{"declType":"alias","alias":[["Elmish","Hooks","Type"],{"Right":{"Left":{"Ident":"withHook"}}}],"fixity":{"associativity":"infixl","precedence":1}},"sourceSpan":{"start":[190,1],"name":"/Users/marc.cordova/dev/collegevine/purescript-elmish-hooks/src/Elmish/Hooks/Type.purs","end":[190,25]}},{"kind":null,"children":[],"comments":null,"title":"(=/>)","info":{"declType":"alias","alias":[["Elmish","Hooks","Type"],{"Right":{"Left":{"Ident":"withHookCurried"}}}],"fixity":{"associativity":"infixl","precedence":1}},"sourceSpan":{"start":[207,1],"name":"/Users/marc.cordova/dev/collegevine/purescript-elmish-hooks/src/Elmish/Hooks/Type.purs","end":[207,32]}},{"kind":null,"children":[],"comments":null,"title":"type (<>)","info":{"declType":"alias","alias":[["Elmish","Hooks","Type"],{"Left":"AppendHookType"}],"fixity":{"associativity":"infixr","precedence":6}},"sourceSpan":{"start":[54,1],"name":"/Users/marc.cordova/dev/collegevine/purescript-elmish-hooks/src/Elmish/Hooks/Type.purs","end":[54,35]}}]},{"moduleName":{"package":null,"item":["Elmish","Hooks","UseEffect"]},"declarations":[{"kind":null,"children":[],"comments":null,"title":"UseEffect","info":{"kind":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Type"]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Elmish","Hooks","Type"],"HookType"]}]},"declType":"externData"},"sourceSpan":{"start":[20,1],"name":"/Users/marc.cordova/dev/collegevine/purescript-elmish-hooks/src/Elmish/Hooks/UseEffect.purs","end":[20,50]}},{"kind":null,"children":[],"comments":"This is like `useEffect`, but allows passing a value which, when it\nchanges, will trigger the effect to run again. E.g.:\n\n```purs\nview :: ReactElement\nview = withHooks Hooks.do\n  count /\\ setCount <- useState 0\n\n  useEffect' count \\c -> liftEffect $\n    HTMLDocument.setTitle (\"You clicked \" <> show c <> \" times\") =<< document =<< window\n\n  Hooks.pure H.button_ \"\" { onClick: setCount $ count + 1 } \"Click me\"\n```\n","title":"useEffect'","info":{"declType":"value","type":{"annotation":[],"tag":"ForAll","contents":["a",{"annotation":[],"tag":"ConstrainedType","contents":[{"constraintAnn":[],"constraintClass":[["Data","Eq"],"Eq"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"a"}],"constraintKindArgs":[],"constraintData":null},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeVar","contents":"a"}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeVar","contents":"a"}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Effect","Aff"],"Aff"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]}}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Elmish","Hooks","Type"],"Hook"]},{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Elmish","Hooks","UseEffect"],"UseEffect"]},{"annotation":[],"tag":"TypeVar","contents":"a"}]}}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]}]}]},null]}},"sourceSpan":{"start":[52,1],"name":"/Users/marc.cordova/dev/collegevine/purescript-elmish-hooks/src/Elmish/Hooks/UseEffect.purs","end":[52,80]}},{"kind":null,"children":[],"comments":"The `useEffect` hook takes an effect (`Aff`) to run and runs it in the\n`init` of the resulting component. E.g.:\n\n```purs\ntodos :: ReactElement\ntodos = withHooks Hooks.do\n  todos /\\ setTodos <- useState []\n\n  useEffect do\n    todos <- API.fetchTodos\n    liftEffect $ setTodos todos\n\n  Hooks.pure $ H.fragment $ todoView <$> todos\n```\n","title":"useEffect","info":{"declType":"value","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Effect","Aff"],"Aff"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Elmish","Hooks","Type"],"Hook"]},{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Elmish","Hooks","UseEffect"],"UseEffect"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]}},"sourceSpan":{"start":[36,1],"name":"/Users/marc.cordova/dev/collegevine/purescript-elmish-hooks/src/Elmish/Hooks/UseEffect.purs","end":[36,52]}}]},{"moduleName":{"package":null,"item":["Elmish","Hooks","UseRef"]},"declarations":[{"kind":{"kind":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Type"]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Elmish","Hooks","Type"],"HookType'"]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Elmish","Hooks","Type"],"HookType'"]}]}]},"keyword":"type"},"children":[],"comments":null,"title":"UseRef","info":{"arguments":[["el",null]],"declType":"typeSynonym","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Elmish","Hooks","UseState"],"UseState"]},{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"annotation":[],"tag":"TypeVar","contents":"el"}]}}]}},"sourceSpan":{"start":[16,1],"name":"/Users/marc.cordova/dev/collegevine/purescript-elmish-hooks/src/Elmish/Hooks/UseRef.purs","end":[16,37]}},{"kind":null,"children":[],"comments":"The `useRef` hook returns a `Hook` encapsulating an element paired with a\nsetter for that element. This setter can be passed to a `ref` prop to get a\nreference to an element.\n\n```purs\nview :: ReactElement\nview = withHooks do\n  inputEl /\\ inputRef <- useRef\n  let onButtonClick = traverse_ (focus <<< HTMLInputElement.toHTMLElement) inputEl\n  pure $\n    H.fragment\n    [ H.input_ \"form-control\" { ref: inputRef, defaultValue: \"\" }\n    , H.button_ \"btn btn-primary\" { onClick: onButtonClick } \"Focus the input\"\n    ]\n```\n","title":"useRef","info":{"declType":"value","type":{"annotation":[],"tag":"ForAll","contents":["el",{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Elmish","Hooks","Type"],"Hook"]},{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Elmish","Hooks","UseRef"],"UseRef"]},{"annotation":[],"tag":"TypeVar","contents":"el"}]}}]},{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"BinaryNoParensType","contents":[{"annotation":[],"tag":"TypeOp","contents":[["Data","Tuple","Nested"],"/\\"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"annotation":[],"tag":"TypeVar","contents":"el"}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Elmish","React","Ref"],"Ref"]},{"annotation":[],"tag":"TypeVar","contents":"el"}]}]}}]},null]}},"sourceSpan":{"start":[33,1],"name":"/Users/marc.cordova/dev/collegevine/purescript-elmish-hooks/src/Elmish/Hooks/UseRef.purs","end":[33,59]}}]},{"moduleName":{"package":null,"item":["Elmish","Hooks","UseState"]},"declarations":[{"kind":null,"children":[],"comments":null,"title":"UseState","info":{"kind":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Type"]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Elmish","Hooks","Type"],"HookType"]}]},"declType":"externData"},"sourceSpan":{"start":[16,1],"name":"/Users/marc.cordova/dev/collegevine/purescript-elmish-hooks/src/Elmish/Hooks/UseState.purs","end":[16,49]}},{"kind":null,"children":[],"comments":"The `useState` hook takes an initial state and returns a `Hook`\nencapsulating the current state and a `setState` function. E.g.:\n\n```purs\nview :: ReactElement\nview = withHooks Hooks.do\n  visible /\\ setVisible <- useState false\n  Hooks.pure $\n    H.fragment\n    [ H.button_ \"\" { onClick: setVisible $ not visible } \"Toggle visibility\"\n    , if visible\n        then H.div \"\" \"Content\"\n        else H.empty\n    ]\n```\n","title":"useState","info":{"declType":"value","type":{"annotation":[],"tag":"ForAll","contents":["state",{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeVar","contents":"state"}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Elmish","Hooks","Type"],"Hook"]},{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Elmish","Hooks","UseState"],"UseState"]},{"annotation":[],"tag":"TypeVar","contents":"state"}]}}]},{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"BinaryNoParensType","contents":[{"annotation":[],"tag":"TypeOp","contents":[["Data","Tuple","Nested"],"/\\"]},{"annotation":[],"tag":"TypeVar","contents":"state"},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Elmish","Dispatch"],"Dispatch"]},{"annotation":[],"tag":"TypeVar","contents":"state"}]}]}}]}]},null]}},"sourceSpan":{"start":[33,1],"name":"/Users/marc.cordova/dev/collegevine/purescript-elmish-hooks/src/Elmish/Hooks/UseState.purs","end":[33,83]}}]}],"name":"Elmish.Hooks","comments":"A React hook-like library for Elmish. Uses a continuation monad to\nencapsulate state or effects.\n\n```purs\nimport Elmish.Hooks (withHooks, useEffect, useState)\nimport Elmish.Hooks as Hooks\n\ntodos :: ReactElement\ntodos = withHooks Hooks.do\n  todos /\\ setTodos <- useState []\n\n  useEffect do\n    todos <- API.fetchTodos\n    liftEffect $ setTodos todos\n\n  Hooks.pure $ H.fragment $ todoView <$> todos\n```\n","declarations":[]},{"reExports":[],"name":"Elmish.Hooks.Type","comments":null,"declarations":[{"kind":{"kind":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Elmish","Hooks","Type"],"HookType'"]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Elmish","Hooks","Type"],"HookType'"]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Elmish","Hooks","Type"],"HookType'"]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Constraint"]}]}]}]},"keyword":"class"},"children":[{"comments":null,"title":"<anonymous>","info":{"declType":"instance","dependencies":[],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Elmish","Hooks","Type"],"ComposedHookTypes"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Elmish","Hooks","Type"],"Pure"]}]},{"annotation":[],"tag":"TypeVar","contents":"t"}]},{"annotation":[],"tag":"TypeVar","contents":"t"}]}},"sourceSpan":{"start":[61,1],"name":"/Users/marc.cordova/dev/collegevine/purescript-elmish-hooks/src/Elmish/Hooks/Type.purs","end":[61,36]}},{"comments":null,"title":"<anonymous>","info":{"declType":"instance","dependencies":[],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Elmish","Hooks","Type"],"ComposedHookTypes"]},{"annotation":[],"tag":"TypeVar","contents":"t"}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Elmish","Hooks","Type"],"Pure"]}]},{"annotation":[],"tag":"TypeVar","contents":"t"}]}},"sourceSpan":{"start":[63,6],"name":"/Users/marc.cordova/dev/collegevine/purescript-elmish-hooks/src/Elmish/Hooks/Type.purs","end":[63,41]}},{"comments":null,"title":"<anonymous>","info":{"declType":"instance","dependencies":[{"constraintAnn":[],"constraintClass":[["Elmish","Hooks","Type"],"ComposedHookTypes"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"l2"},{"annotation":[],"tag":"TypeVar","contents":"right"},{"annotation":[],"tag":"TypeVar","contents":"right'"}],"constraintKindArgs":[],"constraintData":null}],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Elmish","Hooks","Type"],"ComposedHookTypes"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Elmish","Hooks","Type"],"AppendHookType"]},{"annotation":[],"tag":"TypeVar","contents":"l1"}]},{"annotation":[],"tag":"TypeVar","contents":"l2"}]}]},{"annotation":[],"tag":"TypeVar","contents":"right"}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Elmish","Hooks","Type"],"AppendHookType"]},{"annotation":[],"tag":"TypeVar","contents":"l1"}]},{"annotation":[],"tag":"TypeVar","contents":"right'"}]}]}},"sourceSpan":{"start":[70,6],"name":"/Users/marc.cordova/dev/collegevine/purescript-elmish-hooks/src/Elmish/Hooks/Type.purs","end":[70,101]}}],"comments":"This class represents the type level function for composing `HookType'`s,\nwith instances for appending the identity and arbitrary `HookType'`s.\n","title":"ComposedHookTypes","info":{"fundeps":[[["left","right"],["result"]]],"arguments":[["left",{"annotation":[],"tag":"TypeConstructor","contents":[["Elmish","Hooks","Type"],"HookType'"]}],["right",{"annotation":[],"tag":"TypeConstructor","contents":[["Elmish","Hooks","Type"],"HookType'"]}],["result",{"annotation":[],"tag":"TypeConstructor","contents":[["Elmish","Hooks","Type"],"HookType'"]}]],"declType":"typeClass","superclasses":[]},"sourceSpan":{"start":[58,1],"name":"/Users/marc.cordova/dev/collegevine/purescript-elmish-hooks/src/Elmish/Hooks/Type.purs","end":[58,110]}},{"kind":{"kind":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Elmish","Hooks","Type"],"HookType'"]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Elmish","Hooks","Type"],"HookType'"]}]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Elmish","Hooks","Type"],"HookType'"]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Elmish","Hooks","Type"],"HookType'"]}]}]},"keyword":"type"},"children":[{"comments":null,"title":"<anonymous>","info":{"declType":"instance","dependencies":[{"constraintAnn":[],"constraintClass":[["Elmish","Hooks","Type"],"ComposedHookTypes"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"l2"},{"annotation":[],"tag":"TypeVar","contents":"right"},{"annotation":[],"tag":"TypeVar","contents":"right'"}],"constraintKindArgs":[],"constraintData":null}],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Elmish","Hooks","Type"],"ComposedHookTypes"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Elmish","Hooks","Type"],"AppendHookType"]},{"annotation":[],"tag":"TypeVar","contents":"l1"}]},{"annotation":[],"tag":"TypeVar","contents":"l2"}]}]},{"annotation":[],"tag":"TypeVar","contents":"right"}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Elmish","Hooks","Type"],"AppendHookType"]},{"annotation":[],"tag":"TypeVar","contents":"l1"}]},{"annotation":[],"tag":"TypeVar","contents":"right'"}]}]}},"sourceSpan":{"start":[70,6],"name":"/Users/marc.cordova/dev/collegevine/purescript-elmish-hooks/src/Elmish/Hooks/Type.purs","end":[70,101]}}],"comments":"A type which allows appending `HookType`s via type application.\n","title":"AppendHookType","info":{"arguments":[["h",{"annotation":[],"tag":"TypeConstructor","contents":[["Elmish","Hooks","Type"],"HookType"]}],["t",null]],"declType":"typeSynonym","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeVar","contents":"h"},{"annotation":[],"tag":"TypeVar","contents":"t"}]}},"sourceSpan":{"start":[52,1],"name":"/Users/marc.cordova/dev/collegevine/purescript-elmish-hooks/src/Elmish/Hooks/Type.purs","end":[52,44]}},{"kind":{"kind":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Elmish","Hooks","Type"],"HookType'"]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Elmish","Hooks","Type"],"HookType'"]}]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Type"]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Type"]}]}]},"keyword":"type"},"children":[],"comments":"A Convenient wrapper which applies `Pure` to the given hook type.\n","title":"Hook","info":{"arguments":[["t",{"annotation":[],"tag":"TypeConstructor","contents":[["Elmish","Hooks","Type"],"HookType"]}],["a",null]],"declType":"typeSynonym","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Elmish","Hooks","Type"],"Hook'"]},{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeVar","contents":"t"},{"annotation":[],"tag":"TypeConstructor","contents":[["Elmish","Hooks","Type"],"Pure"]}]}}]},{"annotation":[],"tag":"TypeVar","contents":"a"}]}},"sourceSpan":{"start":[106,1],"name":"/Users/marc.cordova/dev/collegevine/purescript-elmish-hooks/src/Elmish/Hooks/Type.purs","end":[106,47]}},{"kind":{"kind":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Elmish","Hooks","Type"],"HookType'"]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Type"]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Type"]}]}]},"keyword":"data"},"children":[{"comments":null,"title":"<anonymous>","info":{"declType":"instance","dependencies":[],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Functor"],"Functor"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Elmish","Hooks","Type"],"Hook'"]},{"annotation":[],"tag":"TypeVar","contents":"t"}]}]}},"sourceSpan":{"start":[108,1],"name":"/Users/marc.cordova/dev/collegevine/purescript-elmish-hooks/src/Elmish/Hooks/Type.purs","end":[109,58]}}],"comments":"The type of a hook, e.g. the result of calling `useState`. It turns out\nthat hooks can be modeled as a continuation, where the callback function\nreturns a new component (created with `wrapWithLocalState`) given the\nencapsulated value. E.g., in the case of `useState`, you can think of it as\naccepting a callback function, which gets passed the current state and a\nsetter for the current state:\n\n```purs\nuseState \"\" \\(foo /\\ setFoo) -> â€¦\n```\n\nModeling it as a continuation allows us to make it a monad and write in\ndo-notation, which looks a lot like the React hooks syntax:\n\n```purs\nwithHooks do\n  foo /\\ setFoo <- useState \"\"\n  pure â€¦\n```\n\nFinally, to make sure we donâ€™t use two hooks with different state-types in\na conditional (which could cause unexpected issues for React) we have a\n`HookType'` parameter, which accumulates when we call `bind`. For this we\nneed to use qualified do notation:\n\n```purs\nwithHooks Hooks.do\n  foo /\\ setFoo <- useState \"\"\n  Hooks.pure â€¦\n```\n","title":"Hook'","info":{"declType":"data","dataDeclType":"data","typeArguments":[["t",{"annotation":[],"tag":"TypeConstructor","contents":[["Elmish","Hooks","Type"],"HookType'"]}],["a",null]]},"sourceSpan":{"start":[102,1],"name":"/Users/marc.cordova/dev/collegevine/purescript-elmish-hooks/src/Elmish/Hooks/Type.purs","end":[102,75]}},{"kind":null,"children":[],"comments":null,"title":"HookType","info":{"arguments":[],"declType":"typeSynonym","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Elmish","Hooks","Type"],"HookType'"]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Elmish","Hooks","Type"],"HookType'"]}]}},"sourceSpan":{"start":[46,1],"name":"/Users/marc.cordova/dev/collegevine/purescript-elmish-hooks/src/Elmish/Hooks/Type.purs","end":[46,39]}},{"kind":null,"children":[],"comments":"Represents the type of a hook and is used to ensure hooks are safe. For\nexample, the following will not compile because we track `HookType`:\n\n```purs\nwithHooks Hooks.do\n  if someCondition then Hooks.do\n    x <- useState \"\"\n    _ <- useState 0\n    Hooks.pure x\n  else Hooks.do\n    _ <- useState 0\n    useState \"\"\n```\n\nbecause the first block has a `HookType` of `UseState String <> UseState\nInt` and the second is `UseState Int <> UseState String`. The same hooks\nneed to be used in the same order for the hook types to match.\n","title":"HookType'","info":{"kind":{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Type"]},"declType":"externData"},"sourceSpan":{"start":[44,1],"name":"/Users/marc.cordova/dev/collegevine/purescript-elmish-hooks/src/Elmish/Hooks/Type.purs","end":[44,38]}},{"kind":null,"children":[{"comments":null,"title":"<anonymous>","info":{"declType":"instance","dependencies":[],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Elmish","Hooks","Type"],"ComposedHookTypes"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Elmish","Hooks","Type"],"Pure"]}]},{"annotation":[],"tag":"TypeVar","contents":"t"}]},{"annotation":[],"tag":"TypeVar","contents":"t"}]}},"sourceSpan":{"start":[61,1],"name":"/Users/marc.cordova/dev/collegevine/purescript-elmish-hooks/src/Elmish/Hooks/Type.purs","end":[61,36]}},{"comments":null,"title":"<anonymous>","info":{"declType":"instance","dependencies":[],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Elmish","Hooks","Type"],"ComposedHookTypes"]},{"annotation":[],"tag":"TypeVar","contents":"t"}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Elmish","Hooks","Type"],"Pure"]}]},{"annotation":[],"tag":"TypeVar","contents":"t"}]}},"sourceSpan":{"start":[63,6],"name":"/Users/marc.cordova/dev/collegevine/purescript-elmish-hooks/src/Elmish/Hooks/Type.purs","end":[63,41]}}],"comments":"The `HookType` of `pure` â€”Â the identity of the `HookType` monoid.\n","title":"Pure","info":{"kind":{"annotation":[],"tag":"TypeConstructor","contents":[["Elmish","Hooks","Type"],"HookType'"]},"declType":"externData"},"sourceSpan":{"start":[49,1],"name":"/Users/marc.cordova/dev/collegevine/purescript-elmish-hooks/src/Elmish/Hooks/Type.purs","end":[49,38]}},{"kind":null,"children":[],"comments":null,"title":"type (<>)","info":{"declType":"alias","alias":[["Elmish","Hooks","Type"],{"Left":"AppendHookType"}],"fixity":{"associativity":"infixr","precedence":6}},"sourceSpan":{"start":[54,1],"name":"/Users/marc.cordova/dev/collegevine/purescript-elmish-hooks/src/Elmish/Hooks/Type.purs","end":[54,35]}},{"kind":null,"children":[],"comments":null,"title":"bind","info":{"declType":"value","type":{"annotation":[],"tag":"ForAll","contents":["ta",{"annotation":[],"tag":"ForAll","contents":["tb",{"annotation":[],"tag":"ForAll","contents":["tr",{"annotation":[],"tag":"ForAll","contents":["a",{"annotation":[],"tag":"ForAll","contents":["b",{"annotation":[],"tag":"ConstrainedType","contents":[{"constraintAnn":[],"constraintClass":[["Elmish","Hooks","Type"],"ComposedHookTypes"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"ta"},{"annotation":[],"tag":"TypeVar","contents":"tb"},{"annotation":[],"tag":"TypeVar","contents":"tr"}],"constraintKindArgs":[],"constraintData":null},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Elmish","Hooks","Type"],"Hook'"]},{"annotation":[],"tag":"TypeVar","contents":"ta"}]},{"annotation":[],"tag":"TypeVar","contents":"a"}]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeVar","contents":"a"}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Elmish","Hooks","Type"],"Hook'"]},{"annotation":[],"tag":"TypeVar","contents":"tb"}]},{"annotation":[],"tag":"TypeVar","contents":"b"}]}]}}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Elmish","Hooks","Type"],"Hook'"]},{"annotation":[],"tag":"TypeVar","contents":"tr"}]},{"annotation":[],"tag":"TypeVar","contents":"b"}]}]}]}]},null]},null]},null]},null]},null]}},"sourceSpan":{"start":[111,1],"name":"/Users/marc.cordova/dev/collegevine/purescript-elmish-hooks/src/Elmish/Hooks/Type.purs","end":[115,16]}},{"kind":null,"children":[],"comments":null,"title":"discard","info":{"declType":"value","type":{"annotation":[],"tag":"ForAll","contents":["ta",{"annotation":[],"tag":"ForAll","contents":["tb",{"annotation":[],"tag":"ForAll","contents":["tr",{"annotation":[],"tag":"ForAll","contents":["a",{"annotation":[],"tag":"ForAll","contents":["b",{"annotation":[],"tag":"ConstrainedType","contents":[{"constraintAnn":[],"constraintClass":[["Control","Bind"],"Discard"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"a"}],"constraintKindArgs":[],"constraintData":null},{"annotation":[],"tag":"ConstrainedType","contents":[{"constraintAnn":[],"constraintClass":[["Elmish","Hooks","Type"],"ComposedHookTypes"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"ta"},{"annotation":[],"tag":"TypeVar","contents":"tb"},{"annotation":[],"tag":"TypeVar","contents":"tr"}],"constraintKindArgs":[],"constraintData":null},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Elmish","Hooks","Type"],"Hook'"]},{"annotation":[],"tag":"TypeVar","contents":"ta"}]},{"annotation":[],"tag":"TypeVar","contents":"a"}]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeVar","contents":"a"}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Elmish","Hooks","Type"],"Hook'"]},{"annotation":[],"tag":"TypeVar","contents":"tb"}]},{"annotation":[],"tag":"TypeVar","contents":"b"}]}]}}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Elmish","Hooks","Type"],"Hook'"]},{"annotation":[],"tag":"TypeVar","contents":"tr"}]},{"annotation":[],"tag":"TypeVar","contents":"b"}]}]}]}]}]},null]},null]},null]},null]},null]}},"sourceSpan":{"start":[119,1],"name":"/Users/marc.cordova/dev/collegevine/purescript-elmish-hooks/src/Elmish/Hooks/Type.purs","end":[124,16]}},{"kind":null,"children":[],"comments":"Given a `ComponentName` and a function to create a `ComponentDef` (from a\nrender function `a -> ReactElement`), `mkHook` creates a `Hook a`. When\ncreating a hook with `mkHook`, youâ€™ll need to create a `HookType` by\n`foreign import`ing it.\n\nAs an example of how to use `mkHook`, `useEffect` uses it like so:\n\n```purs\nforeign import data UseEffect :: Type -> HookType\n\nuseEffect :: Aff Unit -> Hook (UseEffect Unit) Unit\nuseEffect init =\n  mkHook (ComponentName \"UseEffect\") \\render ->\n    { init: forkVoid init\n    , update: \\_ msg -> absurd msg\n    , view: \\_ _ -> render unit\n    }\n```\n","title":"mkHook","info":{"declType":"value","type":{"annotation":[],"tag":"ForAll","contents":["msg",{"annotation":[],"tag":"ForAll","contents":["state",{"annotation":[],"tag":"ForAll","contents":["t",{"annotation":[],"tag":"ForAll","contents":["a",{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Elmish","Component"],"ComponentName"]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeVar","contents":"a"}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Elmish","React"],"ReactElement"]}]}}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Elmish","Component"],"ComponentDef"]},{"annotation":[],"tag":"TypeVar","contents":"msg"}]},{"annotation":[],"tag":"TypeVar","contents":"state"}]}]}}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Elmish","Hooks","Type"],"Hook'"]},{"annotation":[],"tag":"TypeVar","contents":"t"}]},{"annotation":[],"tag":"TypeVar","contents":"a"}]}]}]},null]},null]},null]},null]}},"sourceSpan":{"start":[148,1],"name":"/Users/marc.cordova/dev/collegevine/purescript-elmish-hooks/src/Elmish/Hooks/Type.purs","end":[148,110]}},{"kind":null,"children":[],"comments":null,"title":"pure","info":{"declType":"value","type":{"annotation":[],"tag":"ForAll","contents":["a",{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeVar","contents":"a"}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Elmish","Hooks","Type"],"Hook'"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Elmish","Hooks","Type"],"Pure"]}]},{"annotation":[],"tag":"TypeVar","contents":"a"}]}]},null]}},"sourceSpan":{"start":[127,1],"name":"/Users/marc.cordova/dev/collegevine/purescript-elmish-hooks/src/Elmish/Hooks/Type.purs","end":[127,36]}},{"kind":null,"children":[],"comments":"When there is only one hook, it might make more sense to invoke it with\ncontinuation-passing style. This helper makes that easier, accepting a\n`render` callback.\n\nIntended to be used via the `==>` operator:\n\n```purs\nview :: ReactElement\nview = useState \"\" ==> \\(name /\\ setName) ->\n  H.input_ \"\" { value: name, onChange: setName <?| eventTargetValue }\n```\n","title":"withHook","info":{"declType":"value","type":{"annotation":[],"tag":"ForAll","contents":["t",{"annotation":[],"tag":"ForAll","contents":["a",{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Elmish","Hooks","Type"],"Hook'"]},{"annotation":[],"tag":"TypeVar","contents":"t"}]},{"annotation":[],"tag":"TypeVar","contents":"a"}]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeVar","contents":"a"}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Elmish","React"],"ReactElement"]}]}}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Elmish","React"],"ReactElement"]}]}]},null]},null]}},"sourceSpan":{"start":[185,1],"name":"/Users/marc.cordova/dev/collegevine/purescript-elmish-hooks/src/Elmish/Hooks/Type.purs","end":[185,73]}},{"kind":null,"children":[],"comments":"Given a `Hook (a /\\ b)`, this allows invoking it with a curried `render`\ncallback.\n\nIntended to be used via the `=/>` operator:\n\n```purs\nview :: ReactElement\nview = useState \"\" =/> \\name setName ->\n  H.input_ \"\" { value: name, onChange: setName <?| eventTargetValue }\n```\n","title":"withHookCurried","info":{"declType":"value","type":{"annotation":[],"tag":"ForAll","contents":["t",{"annotation":[],"tag":"ForAll","contents":["a",{"annotation":[],"tag":"ForAll","contents":["b",{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Elmish","Hooks","Type"],"Hook'"]},{"annotation":[],"tag":"TypeVar","contents":"t"}]},{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"BinaryNoParensType","contents":[{"annotation":[],"tag":"TypeOp","contents":[["Data","Tuple","Nested"],"/\\"]},{"annotation":[],"tag":"TypeVar","contents":"a"},{"annotation":[],"tag":"TypeVar","contents":"b"}]}}]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeVar","contents":"a"}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeVar","contents":"b"}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Elmish","React"],"ReactElement"]}]}]}}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Elmish","React"],"ReactElement"]}]}]},null]},null]},null]}},"sourceSpan":{"start":[202,1],"name":"/Users/marc.cordova/dev/collegevine/purescript-elmish-hooks/src/Elmish/Hooks/Type.purs","end":[202,94]}},{"kind":null,"children":[],"comments":"Unwraps a `Hook ReactElement`, which is usually created by using one or\nmore hooks and then using `pure` to encapsulate a `ReactElement`. E.g.:\n\n```purs\nview :: ReactElement\nview = withHooks Hooks.do\n  name /\\ setName <- useState \"\"\n  Hooks.pure $ H.input_ \"\" { value: name, onChange: setName <?| eventTargetValue }\n```\n","title":"withHooks","info":{"declType":"value","type":{"annotation":[],"tag":"ForAll","contents":["t",{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Elmish","Hooks","Type"],"Hook'"]},{"annotation":[],"tag":"TypeVar","contents":"t"}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Elmish","React"],"ReactElement"]}]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Elmish","React"],"ReactElement"]}]},null]}},"sourceSpan":{"start":[161,1],"name":"/Users/marc.cordova/dev/collegevine/purescript-elmish-hooks/src/Elmish/Hooks/Type.purs","end":[161,60]}},{"kind":null,"children":[],"comments":null,"title":"(=/>)","info":{"declType":"alias","alias":[["Elmish","Hooks","Type"],{"Right":{"Left":{"Ident":"withHookCurried"}}}],"fixity":{"associativity":"infixl","precedence":1}},"sourceSpan":{"start":[207,1],"name":"/Users/marc.cordova/dev/collegevine/purescript-elmish-hooks/src/Elmish/Hooks/Type.purs","end":[207,32]}},{"kind":null,"children":[],"comments":null,"title":"(==>)","info":{"declType":"alias","alias":[["Elmish","Hooks","Type"],{"Right":{"Left":{"Ident":"withHook"}}}],"fixity":{"associativity":"infixl","precedence":1}},"sourceSpan":{"start":[190,1],"name":"/Users/marc.cordova/dev/collegevine/purescript-elmish-hooks/src/Elmish/Hooks/Type.purs","end":[190,25]}}]},{"reExports":[],"name":"Elmish.Hooks.UseEffect","comments":null,"declarations":[{"kind":null,"children":[],"comments":null,"title":"UseEffect","info":{"kind":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Type"]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Elmish","Hooks","Type"],"HookType"]}]},"declType":"externData"},"sourceSpan":{"start":[20,1],"name":"/Users/marc.cordova/dev/collegevine/purescript-elmish-hooks/src/Elmish/Hooks/UseEffect.purs","end":[20,50]}},{"kind":null,"children":[],"comments":"A version of `useEffect` that logs messages, state changes and render\ntimes. Intended to be used with qualified imports: `UseEffect.traced`.\n","title":"traced","info":{"declType":"value","type":{"annotation":[],"tag":"ConstrainedType","contents":[{"constraintAnn":[],"constraintClass":[["Debug"],"DebugWarning"],"constraintArgs":[],"constraintKindArgs":[],"constraintData":null},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Effect","Aff"],"Aff"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Elmish","Hooks","Type"],"Hook"]},{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Elmish","Hooks","UseEffect"],"UseEffect"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]}]}},"sourceSpan":{"start":[57,1],"name":"/Users/marc.cordova/dev/collegevine/purescript-elmish-hooks/src/Elmish/Hooks/UseEffect.purs","end":[57,65]}},{"kind":null,"children":[],"comments":"A version of `useEffect'` that logs messages, state changes and render\ntimes. Intended to be used with qualified imports: `UseEffect.traced'`.\n","title":"traced'","info":{"declType":"value","type":{"annotation":[],"tag":"ForAll","contents":["a",{"annotation":[],"tag":"ConstrainedType","contents":[{"constraintAnn":[],"constraintClass":[["Debug"],"DebugWarning"],"constraintArgs":[],"constraintKindArgs":[],"constraintData":null},{"annotation":[],"tag":"ConstrainedType","contents":[{"constraintAnn":[],"constraintClass":[["Data","Eq"],"Eq"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"a"}],"constraintKindArgs":[],"constraintData":null},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeVar","contents":"a"}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeVar","contents":"a"}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Effect","Aff"],"Aff"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]}}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Elmish","Hooks","Type"],"Hook"]},{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Elmish","Hooks","UseEffect"],"UseEffect"]},{"annotation":[],"tag":"TypeVar","contents":"a"}]}}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]}]}]}]},null]}},"sourceSpan":{"start":[62,1],"name":"/Users/marc.cordova/dev/collegevine/purescript-elmish-hooks/src/Elmish/Hooks/UseEffect.purs","end":[62,93]}},{"kind":null,"children":[],"comments":"The `useEffect` hook takes an effect (`Aff`) to run and runs it in the\n`init` of the resulting component. E.g.:\n\n```purs\ntodos :: ReactElement\ntodos = withHooks Hooks.do\n  todos /\\ setTodos <- useState []\n\n  useEffect do\n    todos <- API.fetchTodos\n    liftEffect $ setTodos todos\n\n  Hooks.pure $ H.fragment $ todoView <$> todos\n```\n","title":"useEffect","info":{"declType":"value","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Effect","Aff"],"Aff"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Elmish","Hooks","Type"],"Hook"]},{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Elmish","Hooks","UseEffect"],"UseEffect"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]}},"sourceSpan":{"start":[36,1],"name":"/Users/marc.cordova/dev/collegevine/purescript-elmish-hooks/src/Elmish/Hooks/UseEffect.purs","end":[36,52]}},{"kind":null,"children":[],"comments":"This is like `useEffect`, but allows passing a value which, when it\nchanges, will trigger the effect to run again. E.g.:\n\n```purs\nview :: ReactElement\nview = withHooks Hooks.do\n  count /\\ setCount <- useState 0\n\n  useEffect' count \\c -> liftEffect $\n    HTMLDocument.setTitle (\"You clicked \" <> show c <> \" times\") =<< document =<< window\n\n  Hooks.pure H.button_ \"\" { onClick: setCount $ count + 1 } \"Click me\"\n```\n","title":"useEffect'","info":{"declType":"value","type":{"annotation":[],"tag":"ForAll","contents":["a",{"annotation":[],"tag":"ConstrainedType","contents":[{"constraintAnn":[],"constraintClass":[["Data","Eq"],"Eq"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"a"}],"constraintKindArgs":[],"constraintData":null},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeVar","contents":"a"}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeVar","contents":"a"}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Effect","Aff"],"Aff"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]}}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Elmish","Hooks","Type"],"Hook"]},{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Elmish","Hooks","UseEffect"],"UseEffect"]},{"annotation":[],"tag":"TypeVar","contents":"a"}]}}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]}]}]},null]}},"sourceSpan":{"start":[52,1],"name":"/Users/marc.cordova/dev/collegevine/purescript-elmish-hooks/src/Elmish/Hooks/UseEffect.purs","end":[52,80]}}]},{"reExports":[],"name":"Elmish.Hooks.UseRef","comments":null,"declarations":[{"kind":{"kind":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Type"]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Elmish","Hooks","Type"],"HookType'"]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Elmish","Hooks","Type"],"HookType'"]}]}]},"keyword":"type"},"children":[],"comments":null,"title":"UseRef","info":{"arguments":[["el",null]],"declType":"typeSynonym","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Elmish","Hooks","UseState"],"UseState"]},{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"annotation":[],"tag":"TypeVar","contents":"el"}]}}]}},"sourceSpan":{"start":[16,1],"name":"/Users/marc.cordova/dev/collegevine/purescript-elmish-hooks/src/Elmish/Hooks/UseRef.purs","end":[16,37]}},{"kind":null,"children":[],"comments":"The `useRef` hook returns a `Hook` encapsulating an element paired with a\nsetter for that element. This setter can be passed to a `ref` prop to get a\nreference to an element.\n\n```purs\nview :: ReactElement\nview = withHooks do\n  inputEl /\\ inputRef <- useRef\n  let onButtonClick = traverse_ (focus <<< HTMLInputElement.toHTMLElement) inputEl\n  pure $\n    H.fragment\n    [ H.input_ \"form-control\" { ref: inputRef, defaultValue: \"\" }\n    , H.button_ \"btn btn-primary\" { onClick: onButtonClick } \"Focus the input\"\n    ]\n```\n","title":"useRef","info":{"declType":"value","type":{"annotation":[],"tag":"ForAll","contents":["el",{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Elmish","Hooks","Type"],"Hook"]},{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Elmish","Hooks","UseRef"],"UseRef"]},{"annotation":[],"tag":"TypeVar","contents":"el"}]}}]},{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"BinaryNoParensType","contents":[{"annotation":[],"tag":"TypeOp","contents":[["Data","Tuple","Nested"],"/\\"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"annotation":[],"tag":"TypeVar","contents":"el"}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Elmish","React","Ref"],"Ref"]},{"annotation":[],"tag":"TypeVar","contents":"el"}]}]}}]},null]}},"sourceSpan":{"start":[33,1],"name":"/Users/marc.cordova/dev/collegevine/purescript-elmish-hooks/src/Elmish/Hooks/UseRef.purs","end":[33,59]}}]},{"reExports":[],"name":"Elmish.Hooks.UseState","comments":null,"declarations":[{"kind":null,"children":[],"comments":null,"title":"UseState","info":{"kind":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Type"]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Elmish","Hooks","Type"],"HookType"]}]},"declType":"externData"},"sourceSpan":{"start":[16,1],"name":"/Users/marc.cordova/dev/collegevine/purescript-elmish-hooks/src/Elmish/Hooks/UseState.purs","end":[16,49]}},{"kind":null,"children":[],"comments":"A version of `useState` that logs messages, state changes and render times.\nIntended to be used with qualified imports: `UseState.traced`.\n","title":"traced","info":{"declType":"value","type":{"annotation":[],"tag":"ForAll","contents":["state",{"annotation":[],"tag":"ConstrainedType","contents":[{"constraintAnn":[],"constraintClass":[["Debug"],"DebugWarning"],"constraintArgs":[],"constraintKindArgs":[],"constraintData":null},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeVar","contents":"state"}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Elmish","Hooks","Type"],"Hook"]},{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Elmish","Hooks","UseState"],"UseState"]},{"annotation":[],"tag":"TypeVar","contents":"state"}]}}]},{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"BinaryNoParensType","contents":[{"annotation":[],"tag":"TypeOp","contents":[["Data","Tuple","Nested"],"/\\"]},{"annotation":[],"tag":"TypeVar","contents":"state"},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Elmish","Dispatch"],"Dispatch"]},{"annotation":[],"tag":"TypeVar","contents":"state"}]}]}}]}]}]},null]}},"sourceSpan":{"start":[38,1],"name":"/Users/marc.cordova/dev/collegevine/purescript-elmish-hooks/src/Elmish/Hooks/UseState.purs","end":[38,97]}},{"kind":null,"children":[],"comments":"The `useState` hook takes an initial state and returns a `Hook`\nencapsulating the current state and a `setState` function. E.g.:\n\n```purs\nview :: ReactElement\nview = withHooks Hooks.do\n  visible /\\ setVisible <- useState false\n  Hooks.pure $\n    H.fragment\n    [ H.button_ \"\" { onClick: setVisible $ not visible } \"Toggle visibility\"\n    , if visible\n        then H.div \"\" \"Content\"\n        else H.empty\n    ]\n```\n","title":"useState","info":{"declType":"value","type":{"annotation":[],"tag":"ForAll","contents":["state",{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeVar","contents":"state"}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Elmish","Hooks","Type"],"Hook"]},{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Elmish","Hooks","UseState"],"UseState"]},{"annotation":[],"tag":"TypeVar","contents":"state"}]}}]},{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"BinaryNoParensType","contents":[{"annotation":[],"tag":"TypeOp","contents":[["Data","Tuple","Nested"],"/\\"]},{"annotation":[],"tag":"TypeVar","contents":"state"},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Elmish","Dispatch"],"Dispatch"]},{"annotation":[],"tag":"TypeVar","contents":"state"}]}]}}]}]},null]}},"sourceSpan":{"start":[33,1],"name":"/Users/marc.cordova/dev/collegevine/purescript-elmish-hooks/src/Elmish/Hooks/UseState.purs","end":[33,83]}}]}],"resolvedDependencies":{"purescript-web-storage":"4.0.0","purescript-exceptions":"5.0.0","purescript-newtype":"4.0.0","purescript-effect":"3.0.0","purescript-ordered-collections":"2.0.2","purescript-undefined-is-not-a-problem":"0.2.0","purescript-control":"5.0.0","purescript-console":"5.0.0","purescript-either":"5.0.0","purescript-profunctor":"5.0.0","purescript-media-types":"5.0.0","purescript-web-events":"3.0.0","purescript-arrays":"6.0.1","purescript-maybe":"5.0.0","purescript-type-equality":"4.0.0","purescript-exists":"5.1.0","purescript-distributive":"5.0.0","purescript-unfoldable":"5.0.0","purescript-invariant":"5.0.0","purescript-web-html":"3.2.0","purescript-argonaut-core":"6.0.0","purescript-lazy":"5.0.0","purescript-foreign-object":"3.0.0","purescript-now":"5.0.0","purescript-elmish":"0.7.0","purescript-aff":"6.0.0","purescript-foldable-traversable":"5.0.1","purescript-debug":"5.0.0","purescript-tailrec":"5.0.1","purescript-gen":"3.0.0","purescript-typelevel-prelude":"6.0.0","purescript-functors":"4.1.1","purescript-prelude":"5.0.1","purescript-st":"5.0.1","purescript-bifunctors":"5.0.0","purescript-nonempty":"6.1.0","purescript-contravariant":"5.0.0","purescript-assert":"5.0.0","purescript-unsafe-coerce":"5.0.0","purescript-refs":"5.0.0","purescript-integers":"5.0.0","purescript-orders":"5.0.0","purescript-const":"5.0.0","purescript-transformers":"5.2.0","purescript-numbers":"8.0.0","purescript-js-date":"7.0.0","purescript-math":"3.0.0","purescript-enums":"5.0.0","purescript-psci-support":"5.0.0","purescript-web-file":"3.0.0","purescript-web-dom":"5.0.0","purescript-random":"5.0.0","purescript-parallel":"5.0.0","purescript-tuples":"6.0.1","purescript-partial":"3.0.0","purescript-strings":"5.0.0","purescript-identity":"5.0.0","purescript-foreign":"6.0.1","purescript-safe-coerce":"1.0.0","purescript-lists":"6.0.1","purescript-nullable":"5.0.0","purescript-datetime":"5.0.2","purescript-functions":"5.0.0"},"version":"0.6.1","github":["collegevine","purescript-elmish-hooks"],"versionTag":"v0.6.1","moduleMap":{"Data.BooleanAlgebra":"purescript-prelude","Web.DOM.NodeList":"purescript-web-dom","Data.Decide":"purescript-contravariant","Type.Data.Boolean":"purescript-typelevel-prelude","Data.Ring":"purescript-prelude","Data.Semigroup.Generic":"purescript-prelude","Web.HTML.HTMLDataListElement":"purescript-web-html","Control.Monad.Trans.Class":"purescript-transformers","Web.HTML.HTMLTextAreaElement":"purescript-web-html","Data.Functor.Product":"purescript-functors","Type.Function":"purescript-typelevel-prelude","Data.Functor.Flip":"purescript-functors","Foreign.Keys":"purescript-foreign","Data.NonEmpty":"purescript-nonempty","Web.HTML.HTMLMediaElement.CanPlayType":"purescript-web-html","Data.Undefined.NoProblem.Closed":"purescript-undefined-is-not-a-problem","Effect.Uncurried":"purescript-effect","Web.DOM.ChildNode":"purescript-web-dom","Control.Monad.Identity.Trans":"purescript-transformers","Data.Char.Gen":"purescript-strings","Web.HTML.Event.DataTransfer.DataTransferItem":"purescript-web-html","Web.HTML.HTMLHRElement":"purescript-web-html","Web.DOM.NonDocumentTypeChildNode":"purescript-web-dom","Effect.Now":"purescript-now","Data.Monoid.Generic":"purescript-prelude","Data.String.NonEmpty":"purescript-strings","Web.File.FileReader.ReadyState":"purescript-web-file","Effect":"purescript-effect","Web.HTML.HTMLLegendElement":"purescript-web-html","Data.Traversable.Accum.Internal":"purescript-foldable-traversable","Data.Enum.Gen":"purescript-enums","Data.Nullable":"purescript-nullable","Control.Comonad.Env":"purescript-transformers","Elmish.Component":"purescript-elmish","Web.HTML.Event.HashChangeEvent":"purescript-web-html","Control.Comonad.Traced.Class":"purescript-transformers","Data.Functor.Costar":"purescript-functors","Elmish.State":"purescript-elmish","Data.HeytingAlgebra.Generic":"purescript-prelude","Data.Functor.Compose":"purescript-functors","Foreign.Object.Gen":"purescript-foreign-object","Type.Row.Homogeneous":"purescript-typelevel-prelude","Data.Int.Bits":"purescript-integers","Web.HTML.Event.BeforeUnloadEvent":"purescript-web-html","Web.DOM.MutationObserver":"purescript-web-dom","Web.HTML.HTMLHyperlinkElementUtils":"purescript-web-html","Elmish.Opaque":"purescript-elmish","Data.DateTime":"purescript-datetime","Data.String.CodePoints":"purescript-strings","Data.Ord":"purescript-prelude","Web.HTML.History":"purescript-web-html","Control.Monad.Gen":"purescript-gen","Data.Bounded.Generic":"purescript-prelude","Type.Data.Row":"purescript-prelude","Data.Date":"purescript-datetime","Data.Argonaut.Parser":"purescript-argonaut-core","Safe.Coerce":"purescript-safe-coerce","Data.Monoid.Dual":"purescript-prelude","Web.HTML.Event.PopStateEvent.EventTypes":"purescript-web-html","Control.Monad.Rec.Class":"purescript-tailrec","Data.Time.Component":"purescript-datetime","Data.Bitraversable":"purescript-foldable-traversable","Web.DOM.ParentNode":"purescript-web-dom","Web.HTML.Event.DragEvent.EventTypes":"purescript-web-html","Data.Boolean":"purescript-prelude","Data.Show.Generic":"purescript-prelude","Data.Map":"purescript-ordered-collections","Control.Biapplicative":"purescript-bifunctors","Web.HTML.HTMLSpanElement":"purescript-web-html","Effect.Exception.Unsafe":"purescript-exceptions","Control.Parallel.Class":"purescript-parallel","Data.Array.NonEmpty.Internal":"purescript-arrays","Type.Proxy":"purescript-prelude","Effect.Aff.Compat":"purescript-aff","Data.Array.ST.Iterator":"purescript-arrays","Data.Enum.Generic":"purescript-enums","Data.DateTime.Gen":"purescript-datetime","Data.String.Pattern":"purescript-strings","Data.Bounded":"purescript-prelude","Control.Monad.State.Trans":"purescript-transformers","Data.TraversableWithIndex":"purescript-foldable-traversable","Web.HTML.HTMLOptionElement":"purescript-web-html","Data.Int":"purescript-integers","Web.DOM.HTMLCollection":"purescript-web-dom","Data.Profunctor.Cochoice":"purescript-profunctor","Web.HTML.Event.TrackEvent.EventTypes":"purescript-web-html","Data.Show":"purescript-prelude","Web.HTML.HTMLDivElement":"purescript-web-html","Control.Monad.Writer.Trans":"purescript-transformers","Web.File.FileReader":"purescript-web-file","Data.Foldable":"purescript-foldable-traversable","Data.Divide":"purescript-contravariant","Control.Comonad.Store.Class":"purescript-transformers","Data.Number":"purescript-numbers","Data.Enum":"purescript-enums","Foreign.Object":"purescript-foreign-object","Control.Apply":"purescript-prelude","Data.Functor.Contravariant":"purescript-contravariant","Data.Tuple.Nested":"purescript-tuples","Web.HTML.HTMLKeygenElement":"purescript-web-html","Data.List.Internal":"purescript-lists","Control.Monad":"purescript-prelude","Web.HTML.Event.EventTypes":"purescript-web-html","Data.Lazy":"purescript-lazy","Data.Monoid":"purescript-prelude","Data.Profunctor.Closed":"purescript-profunctor","Web.HTML.Common":"purescript-web-html","Control.Monad.List.Trans":"purescript-transformers","Data.Ord.Generic":"purescript-prelude","Web.HTML.HTMLLabelElement":"purescript-web-html","Web.HTML.HTMLAudioElement":"purescript-web-html","Control.Monad.RWS":"purescript-transformers","Data.String.Common":"purescript-strings","Data.Maybe.First":"purescript-maybe","Control.Bind":"purescript-prelude","Web.HTML.HTMLFormElement":"purescript-web-html","Data.Profunctor.Split":"purescript-profunctor","Web.DOM.Element":"purescript-web-dom","Data.Number.Format":"purescript-numbers","Effect.Aff.Class":"purescript-aff","Data.Monoid.Additive":"purescript-prelude","Data.Symbol":"purescript-prelude","Data.Map.Gen":"purescript-ordered-collections","Data.String.Regex":"purescript-strings","Data.Profunctor.Join":"purescript-profunctor","Data.HeytingAlgebra":"purescript-prelude","Control.Alt":"purescript-control","Data.Date.Gen":"purescript-datetime","Web.HTML.HTMLMediaElement.ReadyState":"purescript-web-html","Control.Monad.Maybe.Trans":"purescript-transformers","Control.Monad.Cont":"purescript-transformers","Control.Monad.ST.Internal":"purescript-st","Type.Data.RowList":"purescript-prelude","Data.Time.Component.Gen":"purescript-datetime","Web.HTML.HTMLTableElement":"purescript-web-html","Effect.Ref":"purescript-refs","Data.Either.Inject":"purescript-either","Foreign.Object.ST.Unsafe":"purescript-foreign-object","Data.List.ZipList":"purescript-lists","Data.Ord.Min":"purescript-orders","Data.Functor.Coproduct.Nested":"purescript-functors","Web.HTML.HTMLLIElement":"purescript-web-html","Data.Ring.Generic":"purescript-prelude","Web.HTML.HTMLMetaElement":"purescript-web-html","Web.HTML.HTMLOListElement":"purescript-web-html","Data.Semigroup":"purescript-prelude","Data.Array.NonEmpty":"purescript-arrays","Web.HTML.Event.DragEvent":"purescript-web-html","Control.Monad.Reader":"purescript-transformers","Web.HTML.HTMLHtmlElement":"purescript-web-html","Data.Const":"purescript-const","Web.HTML.Event.PopStateEvent":"purescript-web-html","Web.Event.CustomEvent":"purescript-web-events","Web.HTML.Event.ErrorEvent":"purescript-web-html","Control.Comonad.Traced.Trans":"purescript-transformers","Web.DOM.Text":"purescript-web-dom","Web.HTML.HTMLObjectElement":"purescript-web-html","Web.HTML.HTMLSourceElement":"purescript-web-html","Data.Ord.Down":"purescript-orders","Data.Number.Approximate":"purescript-numbers","Data.Array.ST.Partial":"purescript-arrays","Effect.Unsafe":"purescript-effect","Web.DOM.NodeType":"purescript-web-dom","Type.Data.Ordering":"purescript-typelevel-prelude","Data.Tuple":"purescript-tuples","Data.Functor.Clown":"purescript-functors","Data.Semigroup.Foldable":"purescript-foldable-traversable","Control.Biapply":"purescript-bifunctors","Data.Distributive":"purescript-distributive","Effect.Exception":"purescript-exceptions","Type.Equality":"purescript-type-equality","Foreign.Index":"purescript-foreign","Control.Alternative":"purescript-control","Web.HTML.HTMLSelectElement":"purescript-web-html","Data.Semiring":"purescript-prelude","Elmish":"purescript-elmish","Data.Functor.Product2":"purescript-functors","Web.HTML.HTMLCanvasElement":"purescript-web-html","Data.Exists":"purescript-exists","Effect.Console":"purescript-console","Data.Traversable.Accum":"purescript-foldable-traversable","Data.CommutativeRing":"purescript-prelude","Data.NaturalTransformation":"purescript-prelude","Data.Monoid.Conj":"purescript-prelude","Web.HTML.HTMLTableDataCellElement":"purescript-web-html","Web.HTML.HTMLTableCaptionElement":"purescript-web-html","Data.Functor.App":"purescript-functors","Data.Profunctor.Star":"purescript-profunctor","Data.Unfoldable":"purescript-unfoldable","Elmish.Boot":"purescript-elmish","Web.HTML.HTMLTemplateElement":"purescript-web-html","Web.HTML.SelectionMode":"purescript-web-html","Type.RowList":"purescript-typelevel-prelude","Web.HTML.HTMLTitleElement":"purescript-web-html","Web.HTML.Event.PageTransitionEvent.EventTypes":"purescript-web-html","Web.HTML.HTMLTableCellElement":"purescript-web-html","Control.Comonad.Store.Trans":"purescript-transformers","Foreign.Object.Unsafe":"purescript-foreign-object","Control.Monad.ST":"purescript-st","Control.Monad.State.Class":"purescript-transformers","Web.HTML.HTMLUListElement":"purescript-web-html","Elmish.React":"purescript-elmish","Data.List.Types":"purescript-lists","Data.String.NonEmpty.CodeUnits":"purescript-strings","Data.Functor":"purescript-prelude","Web.HTML.HTMLParamElement":"purescript-web-html","Unsafe.Coerce":"purescript-unsafe-coerce","Control.Monad.Writer.Class":"purescript-transformers","Web.HTML.HTMLTableSectionElement":"purescript-web-html","Data.Profunctor.Strong":"purescript-profunctor","Control.Monad.Except":"purescript-transformers","Web.HTML.HTMLImageElement.CORSMode":"purescript-web-html","Web.Event.EventTarget":"purescript-web-events","Elmish.React.DOM":"purescript-elmish","Data.Interval":"purescript-datetime","Data.List.Lazy.Types":"purescript-lists","Control.Category":"purescript-prelude","Debug":"purescript-debug","Web.HTML.HTMLOutputElement":"purescript-web-html","Web.DOM.DocumentType":"purescript-web-dom","Data.Interval.Duration":"purescript-datetime","Control.Monad.Gen.Common":"purescript-gen","Control.Monad.RWS.Trans":"purescript-transformers","Web.HTML.HTMLQuoteElement":"purescript-web-html","Control.Monad.Cont.Trans":"purescript-transformers","Data.Maybe":"purescript-maybe","Type.Row":"purescript-typelevel-prelude","Data.String.Regex.Unsafe":"purescript-strings","Foreign.Object.ST":"purescript-foreign-object","Data.Set":"purescript-ordered-collections","Data.Profunctor":"purescript-profunctor","Control.Comonad":"purescript-control","Control.Monad.ST.Global":"purescript-st","Data.Function":"purescript-prelude","Data.List":"purescript-lists","Web.DOM.Internal.Types":"purescript-web-dom","Data.Field":"purescript-prelude","Data.List.Lazy":"purescript-lists","Web.HTML.Event.DataTransfer":"purescript-web-html","Data.EuclideanRing":"purescript-prelude","Web.HTML.Event.TrackEvent":"purescript-web-html","Data.Semigroup.Last":"purescript-prelude","Data.Semigroup.First":"purescript-prelude","Data.Functor.Invariant":"purescript-invariant","Web.HTML.HTMLVideoElement":"purescript-web-html","Web.HTML.HTMLAnchorElement":"purescript-web-html","Control.Comonad.Traced":"purescript-transformers","Web.DOM.CharacterData":"purescript-web-dom","Data.Comparison":"purescript-contravariant","Data.String.Unsafe":"purescript-strings","Prelude":"purescript-prelude","Effect.Class":"purescript-effect","Data.Predicate":"purescript-contravariant","Partial.Unsafe":"purescript-partial","Data.Array":"purescript-arrays","Web.HTML.HTMLDocument":"purescript-web-html","Control.Extend":"purescript-control","Data.Unfoldable1":"purescript-unfoldable","Control.Lazy":"purescript-control","Data.Function.Uncurried":"purescript-functions","Control.Monad.Reader.Trans":"purescript-transformers","Data.Functor.Product.Nested":"purescript-functors","Web.HTML.Event.PageTransitionEvent":"purescript-web-html","Control.Comonad.Env.Class":"purescript-transformers","Web.Event.EventPhase":"purescript-web-events","Web.HTML.HTMLOptGroupElement":"purescript-web-html","Data.Interval.Duration.Iso":"purescript-datetime","Data.Eq":"purescript-prelude","Web.HTML.HTMLIFrameElement":"purescript-web-html","Data.Either.Nested":"purescript-either","Web.HTML.Navigator":"purescript-web-html","Data.Newtype":"purescript-newtype","Data.Semigroup.Traversable":"purescript-foldable-traversable","Elmish.React.Import":"purescript-elmish","Data.Bifunctor":"purescript-bifunctors","Effect.Random":"purescript-random","Web.File.FileList":"purescript-web-file","Test.Assert":"purescript-assert","Data.Monoid.Disj":"purescript-prelude","Data.MediaType":"purescript-media-types","Data.Undefined.NoProblem.Open":"purescript-undefined-is-not-a-problem","Control.Monad.Gen.Class":"purescript-gen","Data.Array.Partial":"purescript-arrays","Data.String.CaseInsensitive":"purescript-strings","Web.HTML.HTMLMapElement":"purescript-web-html","Control.Parallel":"purescript-parallel","Control.MonadPlus":"purescript-control","Web.HTML.HTMLImageElement.Laziness":"purescript-web-html","Web.DOM.MutationRecord":"purescript-web-dom","Data.Void":"purescript-prelude","Control.MonadZero":"purescript-control","Web.HTML.HTMLMediaElement":"purescript-web-html","Web.HTML.HTMLTableRowElement":"purescript-web-html","Data.DateTime.Instant":"purescript-datetime","Data.Profunctor.Costrong":"purescript-profunctor","Data.Ord.Max":"purescript-orders","Control.Comonad.Store":"purescript-transformers","Web.HTML.HTMLImageElement.DecodingHint":"purescript-web-html","Web.HTML.HTMLEmbedElement":"purescript-web-html","Control.Monad.Except.Trans":"purescript-transformers","Data.String.CodeUnits":"purescript-strings","Web.File.Url":"purescript-web-file","Web.HTML.HTMLDocument.ReadyState":"purescript-web-html","Data.FunctorWithIndex":"purescript-foldable-traversable","Data.Divisible":"purescript-contravariant","Web.HTML.HTMLMediaElement.NetworkState":"purescript-web-html","Web.DOM.Comment":"purescript-web-dom","Web.File.Blob":"purescript-web-file","Data.Eq.Generic":"purescript-prelude","Web.HTML.HTMLMeterElement":"purescript-web-html","Web.DOM.ProcessingInstruction":"purescript-web-dom","Data.DivisionRing":"purescript-prelude","PSCI.Support":"purescript-psci-support","Data.Equivalence":"purescript-contravariant","Data.Maybe.Last":"purescript-maybe","Data.Unit":"purescript-prelude","Data.List.NonEmpty":"purescript-lists","Web.HTML.HTMLParagraphElement":"purescript-web-html","Web.DOM":"purescript-web-dom","Data.List.Lazy.NonEmpty":"purescript-lists","Web.HTML.HTMLButtonElement":"purescript-web-html","Elmish.Dispatch":"purescript-elmish","Data.Ordering":"purescript-prelude","Web.HTML.HTMLModElement":"purescript-web-html","Data.Functor.Coproduct":"purescript-functors","Web.Event.Event":"purescript-web-events","Web.HTML.HTMLDListElement":"purescript-web-html","Control.Monad.Cont.Class":"purescript-transformers","Web.File.File":"purescript-web-file","Effect.Aff":"purescript-aff","Data.Identity":"purescript-identity","Web.HTML.Location":"purescript-web-html","Web.HTML.ValidityState":"purescript-web-html","Data.Undefined.NoProblem":"purescript-undefined-is-not-a-problem","Math":"purescript-math","Web.HTML.HTMLTableColElement":"purescript-web-html","Data.Set.NonEmpty":"purescript-ordered-collections","Web.Storage.Storage":"purescript-web-storage","Control.Comonad.Trans.Class":"purescript-transformers","Web.HTML.HTMLInputElement":"purescript-web-html","Data.String":"purescript-strings","Control.Plus":"purescript-control","Web.HTML.HTMLTimeElement":"purescript-web-html","Data.Map.Internal":"purescript-ordered-collections","Data.Time":"purescript-datetime","Data.JSDate":"purescript-js-date","Data.Time.Duration":"purescript-datetime","Data.Date.Component":"purescript-datetime","Web.HTML":"purescript-web-html","Web.HTML.HTMLProgressElement":"purescript-web-html","Web.HTML.HTMLTrackElement.ReadyState":"purescript-web-html","Partial":"purescript-partial","Control.Comonad.Env.Trans":"purescript-transformers","Web.DOM.NonElementParentNode":"purescript-web-dom","Web.HTML.HTMLBaseElement":"purescript-web-html","Control.Monad.Reader.Class":"purescript-transformers","Data.String.NonEmpty.CodePoints":"purescript-strings","Data.Decidable":"purescript-contravariant","Web.DOM.Node":"purescript-web-dom","Data.String.NonEmpty.Internal":"purescript-strings","Data.Monoid.Multiplicative":"purescript-prelude","Data.String.NonEmpty.CaseInsensitive":"purescript-strings","Data.Functor.Joker":"purescript-functors","Type.Data.Symbol":"purescript-typelevel-prelude","Web.Storage.Event.StorageEvent":"purescript-web-storage","Web.HTML.HTMLElement":"purescript-web-html","Data.Array.ST":"purescript-arrays","Web.Event.Internal.Types":"purescript-web-events","Foreign":"purescript-foreign","Control.Monad.Error.Class":"purescript-transformers","Data.Argonaut.Core":"purescript-argonaut-core","Web.DOM.ShadowRoot":"purescript-web-dom","Control.Semigroupoid":"purescript-prelude","Web.Internal.FFI":"purescript-web-events","Data.Monoid.Alternate":"purescript-control","Data.Char":"purescript-strings","Data.Generic.Rep":"purescript-prelude","Web.HTML.HTMLFieldSetElement":"purescript-web-html","Web.HTML.HTMLLinkElement":"purescript-web-html","Web.HTML.Event.HashChangeEvent.EventTypes":"purescript-web-html","Effect.Class.Console":"purescript-console","Data.Bifunctor.Join":"purescript-bifunctors","Web.HTML.HTMLBRElement":"purescript-web-html","Web.HTML.HTMLHeadingElement":"purescript-web-html","Web.HTML.HTMLHeadElement":"purescript-web-html","Web.HTML.HTMLDataElement":"purescript-web-html","Elmish.Foreign":"purescript-elmish","Web.HTML.HTMLBodyElement":"purescript-web-html","Elmish.React.Ref":"purescript-elmish","Data.Bifoldable":"purescript-foldable-traversable","Web.HTML.Event.BeforeUnloadEvent.EventTypes":"purescript-web-html","Control.Monad.ST.Ref":"purescript-st","Data.Monoid.Endo":"purescript-prelude","Control.Monad.State":"purescript-transformers","Data.List.Partial":"purescript-lists","Web.HTML.Window":"purescript-web-html","Data.Semiring.Generic":"purescript-prelude","Web.HTML.HTMLTableHeaderCellElement":"purescript-web-html","Data.String.Regex.Flags":"purescript-strings","Data.Either":"purescript-either","Data.Time.Duration.Gen":"purescript-datetime","Data.Date.Component.Gen":"purescript-datetime","Type.Prelude":"purescript-typelevel-prelude","Control.Applicative":"purescript-prelude","Control.Monad.ST.Class":"purescript-st","Data.FoldableWithIndex":"purescript-foldable-traversable","Web.HTML.HTMLImageElement":"purescript-web-html","Data.Op":"purescript-contravariant","Web.HTML.HTMLPreElement":"purescript-web-html","Web.HTML.HTMLScriptElement":"purescript-web-html","Record.Unsafe":"purescript-prelude","Data.MediaType.Common":"purescript-media-types","Web.DOM.DocumentFragment":"purescript-web-dom","Control.Monad.Writer":"purescript-transformers","Web.DOM.DOMTokenList":"purescript-web-dom","Web.HTML.HTMLAreaElement":"purescript-web-html","Web.DOM.Document":"purescript-web-dom","Data.Argonaut.Gen":"purescript-argonaut-core","Data.Functor.Coproduct.Inject":"purescript-functors","Data.Profunctor.Choice":"purescript-profunctor","Data.Time.Gen":"purescript-datetime","Web.HTML.HTMLTrackElement":"purescript-web-html","Data.Traversable":"purescript-foldable-traversable","Data.String.Gen":"purescript-strings","Web.HTML.HTMLStyleElement":"purescript-web-html","Elmish.Trace":"purescript-elmish"},"compilerVersion":"0.14.5"}