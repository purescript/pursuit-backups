{"compilerVersion":"0.15.10","github":["collegevine","purescript-elmish-hooks"],"moduleMap":{"Control.Alt":"purescript-control","Control.Alternative":"purescript-control","Control.Applicative":"purescript-prelude","Control.Apply":"purescript-prelude","Control.Biapplicative":"purescript-bifunctors","Control.Biapply":"purescript-bifunctors","Control.Bind":"purescript-prelude","Control.Category":"purescript-prelude","Control.Comonad":"purescript-control","Control.Comonad.Env":"purescript-transformers","Control.Comonad.Env.Class":"purescript-transformers","Control.Comonad.Env.Trans":"purescript-transformers","Control.Comonad.Store":"purescript-transformers","Control.Comonad.Store.Class":"purescript-transformers","Control.Comonad.Store.Trans":"purescript-transformers","Control.Comonad.Traced":"purescript-transformers","Control.Comonad.Traced.Class":"purescript-transformers","Control.Comonad.Traced.Trans":"purescript-transformers","Control.Comonad.Trans.Class":"purescript-transformers","Control.Extend":"purescript-control","Control.Lazy":"purescript-control","Control.Monad":"purescript-prelude","Control.Monad.Cont":"purescript-transformers","Control.Monad.Cont.Class":"purescript-transformers","Control.Monad.Cont.Trans":"purescript-transformers","Control.Monad.Error.Class":"purescript-transformers","Control.Monad.Except":"purescript-transformers","Control.Monad.Except.Trans":"purescript-transformers","Control.Monad.Gen":"purescript-gen","Control.Monad.Gen.Class":"purescript-gen","Control.Monad.Gen.Common":"purescript-gen","Control.Monad.Identity.Trans":"purescript-transformers","Control.Monad.List.Trans":"purescript-transformers","Control.Monad.Maybe.Trans":"purescript-transformers","Control.Monad.RWS":"purescript-transformers","Control.Monad.RWS.Trans":"purescript-transformers","Control.Monad.Reader":"purescript-transformers","Control.Monad.Reader.Class":"purescript-transformers","Control.Monad.Reader.Trans":"purescript-transformers","Control.Monad.Rec.Class":"purescript-tailrec","Control.Monad.ST":"purescript-st","Control.Monad.ST.Class":"purescript-st","Control.Monad.ST.Global":"purescript-st","Control.Monad.ST.Internal":"purescript-st","Control.Monad.ST.Ref":"purescript-st","Control.Monad.ST.Uncurried":"purescript-st","Control.Monad.State":"purescript-transformers","Control.Monad.State.Class":"purescript-transformers","Control.Monad.State.Trans":"purescript-transformers","Control.Monad.Trans.Class":"purescript-transformers","Control.Monad.Writer":"purescript-transformers","Control.Monad.Writer.Class":"purescript-transformers","Control.Monad.Writer.Trans":"purescript-transformers","Control.MonadPlus":"purescript-control","Control.Parallel":"purescript-parallel","Control.Parallel.Class":"purescript-parallel","Control.Plus":"purescript-control","Control.Semigroupoid":"purescript-prelude","Data.Argonaut.Core":"purescript-argonaut-core","Data.Argonaut.Gen":"purescript-argonaut-core","Data.Argonaut.Parser":"purescript-argonaut-core","Data.Array":"purescript-arrays","Data.Array.NonEmpty":"purescript-arrays","Data.Array.NonEmpty.Internal":"purescript-arrays","Data.Array.Partial":"purescript-arrays","Data.Array.ST":"purescript-arrays","Data.Array.ST.Iterator":"purescript-arrays","Data.Array.ST.Partial":"purescript-arrays","Data.Bifoldable":"purescript-foldable-traversable","Data.Bifunctor":"purescript-bifunctors","Data.Bifunctor.Join":"purescript-bifunctors","Data.Bitraversable":"purescript-foldable-traversable","Data.Boolean":"purescript-prelude","Data.BooleanAlgebra":"purescript-prelude","Data.Bounded":"purescript-prelude","Data.Bounded.Generic":"purescript-prelude","Data.Char":"purescript-strings","Data.Char.Gen":"purescript-strings","Data.CommutativeRing":"purescript-prelude","Data.Comparison":"purescript-contravariant","Data.Const":"purescript-const","Data.Date":"purescript-datetime","Data.Date.Component":"purescript-datetime","Data.Date.Component.Gen":"purescript-datetime","Data.Date.Gen":"purescript-datetime","Data.DateTime":"purescript-datetime","Data.DateTime.Gen":"purescript-datetime","Data.DateTime.Instant":"purescript-datetime","Data.Decidable":"purescript-contravariant","Data.Decide":"purescript-contravariant","Data.Distributive":"purescript-distributive","Data.Divide":"purescript-contravariant","Data.Divisible":"purescript-contravariant","Data.DivisionRing":"purescript-prelude","Data.Either":"purescript-either","Data.Either.Inject":"purescript-either","Data.Either.Nested":"purescript-either","Data.Enum":"purescript-enums","Data.Enum.Gen":"purescript-enums","Data.Enum.Generic":"purescript-enums","Data.Eq":"purescript-prelude","Data.Eq.Generic":"purescript-prelude","Data.Equivalence":"purescript-contravariant","Data.EuclideanRing":"purescript-prelude","Data.Exists":"purescript-exists","Data.Field":"purescript-prelude","Data.Foldable":"purescript-foldable-traversable","Data.FoldableWithIndex":"purescript-foldable-traversable","Data.Function":"purescript-prelude","Data.Function.Uncurried":"purescript-functions","Data.Functor":"purescript-prelude","Data.Functor.App":"purescript-functors","Data.Functor.Clown":"purescript-functors","Data.Functor.Compose":"purescript-functors","Data.Functor.Contravariant":"purescript-contravariant","Data.Functor.Coproduct":"purescript-functors","Data.Functor.Coproduct.Inject":"purescript-functors","Data.Functor.Coproduct.Nested":"purescript-functors","Data.Functor.Costar":"purescript-functors","Data.Functor.Flip":"purescript-functors","Data.Functor.Invariant":"purescript-invariant","Data.Functor.Joker":"purescript-functors","Data.Functor.Product":"purescript-functors","Data.Functor.Product.Nested":"purescript-functors","Data.Functor.Product2":"purescript-functors","Data.FunctorWithIndex":"purescript-foldable-traversable","Data.Generic.Rep":"purescript-prelude","Data.HeytingAlgebra":"purescript-prelude","Data.HeytingAlgebra.Generic":"purescript-prelude","Data.Identity":"purescript-identity","Data.Int":"purescript-integers","Data.Int.Bits":"purescript-integers","Data.Interval":"purescript-datetime","Data.Interval.Duration":"purescript-datetime","Data.Interval.Duration.Iso":"purescript-datetime","Data.JSDate":"purescript-js-date","Data.Lazy":"purescript-lazy","Data.List":"purescript-lists","Data.List.Internal":"purescript-lists","Data.List.Lazy":"purescript-lists","Data.List.Lazy.NonEmpty":"purescript-lists","Data.List.Lazy.Types":"purescript-lists","Data.List.NonEmpty":"purescript-lists","Data.List.Partial":"purescript-lists","Data.List.Types":"purescript-lists","Data.List.ZipList":"purescript-lists","Data.Map":"purescript-ordered-collections","Data.Map.Gen":"purescript-ordered-collections","Data.Map.Internal":"purescript-ordered-collections","Data.Maybe":"purescript-maybe","Data.Maybe.First":"purescript-maybe","Data.Maybe.Last":"purescript-maybe","Data.MediaType":"purescript-media-types","Data.MediaType.Common":"purescript-media-types","Data.Monoid":"purescript-prelude","Data.Monoid.Additive":"purescript-prelude","Data.Monoid.Alternate":"purescript-control","Data.Monoid.Conj":"purescript-prelude","Data.Monoid.Disj":"purescript-prelude","Data.Monoid.Dual":"purescript-prelude","Data.Monoid.Endo":"purescript-prelude","Data.Monoid.Generic":"purescript-prelude","Data.Monoid.Multiplicative":"purescript-prelude","Data.NaturalTransformation":"purescript-prelude","Data.Newtype":"purescript-newtype","Data.NonEmpty":"purescript-nonempty","Data.Nullable":"purescript-nullable","Data.Number":"purescript-numbers","Data.Number.Approximate":"purescript-numbers","Data.Number.Format":"purescript-numbers","Data.Op":"purescript-contravariant","Data.Ord":"purescript-prelude","Data.Ord.Down":"purescript-orders","Data.Ord.Generic":"purescript-prelude","Data.Ord.Max":"purescript-orders","Data.Ord.Min":"purescript-orders","Data.Ordering":"purescript-prelude","Data.Predicate":"purescript-contravariant","Data.Profunctor":"purescript-profunctor","Data.Profunctor.Choice":"purescript-profunctor","Data.Profunctor.Closed":"purescript-profunctor","Data.Profunctor.Cochoice":"purescript-profunctor","Data.Profunctor.Costrong":"purescript-profunctor","Data.Profunctor.Join":"purescript-profunctor","Data.Profunctor.Split":"purescript-profunctor","Data.Profunctor.Star":"purescript-profunctor","Data.Profunctor.Strong":"purescript-profunctor","Data.Reflectable":"purescript-prelude","Data.Ring":"purescript-prelude","Data.Ring.Generic":"purescript-prelude","Data.Semigroup":"purescript-prelude","Data.Semigroup.First":"purescript-prelude","Data.Semigroup.Foldable":"purescript-foldable-traversable","Data.Semigroup.Generic":"purescript-prelude","Data.Semigroup.Last":"purescript-prelude","Data.Semigroup.Traversable":"purescript-foldable-traversable","Data.Semiring":"purescript-prelude","Data.Semiring.Generic":"purescript-prelude","Data.Set":"purescript-ordered-collections","Data.Set.NonEmpty":"purescript-ordered-collections","Data.Show":"purescript-prelude","Data.Show.Generic":"purescript-prelude","Data.String":"purescript-strings","Data.String.CaseInsensitive":"purescript-strings","Data.String.CodePoints":"purescript-strings","Data.String.CodeUnits":"purescript-strings","Data.String.Common":"purescript-strings","Data.String.Gen":"purescript-strings","Data.String.NonEmpty":"purescript-strings","Data.String.NonEmpty.CaseInsensitive":"purescript-strings","Data.String.NonEmpty.CodePoints":"purescript-strings","Data.String.NonEmpty.CodeUnits":"purescript-strings","Data.String.NonEmpty.Internal":"purescript-strings","Data.String.Pattern":"purescript-strings","Data.String.Regex":"purescript-strings","Data.String.Regex.Flags":"purescript-strings","Data.String.Regex.Unsafe":"purescript-strings","Data.String.Unsafe":"purescript-strings","Data.Symbol":"purescript-prelude","Data.Time":"purescript-datetime","Data.Time.Component":"purescript-datetime","Data.Time.Component.Gen":"purescript-datetime","Data.Time.Duration":"purescript-datetime","Data.Time.Duration.Gen":"purescript-datetime","Data.Time.Gen":"purescript-datetime","Data.Traversable":"purescript-foldable-traversable","Data.Traversable.Accum":"purescript-foldable-traversable","Data.Traversable.Accum.Internal":"purescript-foldable-traversable","Data.TraversableWithIndex":"purescript-foldable-traversable","Data.Tuple":"purescript-tuples","Data.Tuple.Nested":"purescript-tuples","Data.Undefined.NoProblem":"purescript-undefined-is-not-a-problem","Data.Undefined.NoProblem.Closed":"purescript-undefined-is-not-a-problem","Data.Undefined.NoProblem.Open":"purescript-undefined-is-not-a-problem","Data.Unfoldable":"purescript-unfoldable","Data.Unfoldable1":"purescript-unfoldable","Data.Unit":"purescript-prelude","Data.Void":"purescript-prelude","Debug":"purescript-debug","Effect":"purescript-effect","Effect.Aff":"purescript-aff","Effect.Aff.Class":"purescript-aff","Effect.Aff.Compat":"purescript-aff","Effect.Class":"purescript-effect","Effect.Class.Console":"purescript-console","Effect.Console":"purescript-console","Effect.Exception":"purescript-exceptions","Effect.Exception.Unsafe":"purescript-exceptions","Effect.Now":"purescript-now","Effect.Random":"purescript-random","Effect.Ref":"purescript-refs","Effect.Uncurried":"purescript-effect","Effect.Unsafe":"purescript-effect","Elmish":"purescript-elmish","Elmish.Boot":"purescript-elmish","Elmish.Component":"purescript-elmish","Elmish.Dispatch":"purescript-elmish","Elmish.Foreign":"purescript-elmish","Elmish.Opaque":"purescript-elmish","Elmish.React":"purescript-elmish","Elmish.React.DOM":"purescript-elmish","Elmish.React.Import":"purescript-elmish","Elmish.React.Ref":"purescript-elmish","Elmish.State":"purescript-elmish","Elmish.Trace":"purescript-elmish","Foreign":"purescript-foreign","Foreign.Index":"purescript-foreign","Foreign.Keys":"purescript-foreign","Foreign.Object":"purescript-foreign-object","Foreign.Object.Gen":"purescript-foreign-object","Foreign.Object.ST":"purescript-foreign-object","Foreign.Object.ST.Unsafe":"purescript-foreign-object","Foreign.Object.Unsafe":"purescript-foreign-object","Partial":"purescript-partial","Partial.Unsafe":"purescript-partial","Prelude":"purescript-prelude","Record.Unsafe":"purescript-prelude","Safe.Coerce":"purescript-safe-coerce","Test.Assert":"purescript-assert","Type.Data.Boolean":"purescript-typelevel-prelude","Type.Data.Ordering":"purescript-typelevel-prelude","Type.Data.Symbol":"purescript-typelevel-prelude","Type.Equality":"purescript-type-equality","Type.Function":"purescript-typelevel-prelude","Type.Prelude":"purescript-typelevel-prelude","Type.Proxy":"purescript-prelude","Type.Row":"purescript-typelevel-prelude","Type.Row.Homogeneous":"purescript-typelevel-prelude","Type.RowList":"purescript-typelevel-prelude","Unsafe.Coerce":"purescript-unsafe-coerce","Web.DOM":"purescript-web-dom","Web.DOM.CharacterData":"purescript-web-dom","Web.DOM.ChildNode":"purescript-web-dom","Web.DOM.Comment":"purescript-web-dom","Web.DOM.DOMTokenList":"purescript-web-dom","Web.DOM.Document":"purescript-web-dom","Web.DOM.DocumentFragment":"purescript-web-dom","Web.DOM.DocumentType":"purescript-web-dom","Web.DOM.Element":"purescript-web-dom","Web.DOM.HTMLCollection":"purescript-web-dom","Web.DOM.Internal.Types":"purescript-web-dom","Web.DOM.MutationObserver":"purescript-web-dom","Web.DOM.MutationRecord":"purescript-web-dom","Web.DOM.Node":"purescript-web-dom","Web.DOM.NodeList":"purescript-web-dom","Web.DOM.NodeType":"purescript-web-dom","Web.DOM.NonDocumentTypeChildNode":"purescript-web-dom","Web.DOM.NonElementParentNode":"purescript-web-dom","Web.DOM.ParentNode":"purescript-web-dom","Web.DOM.ProcessingInstruction":"purescript-web-dom","Web.DOM.ShadowRoot":"purescript-web-dom","Web.DOM.Text":"purescript-web-dom","Web.Event.CustomEvent":"purescript-web-events","Web.Event.Event":"purescript-web-events","Web.Event.EventPhase":"purescript-web-events","Web.Event.EventTarget":"purescript-web-events","Web.Event.Internal.Types":"purescript-web-events","Web.File.Blob":"purescript-web-file","Web.File.File":"purescript-web-file","Web.File.FileList":"purescript-web-file","Web.File.FileReader":"purescript-web-file","Web.File.FileReader.ReadyState":"purescript-web-file","Web.File.Url":"purescript-web-file","Web.HTML":"purescript-web-html","Web.HTML.Common":"purescript-web-html","Web.HTML.Event.BeforeUnloadEvent":"purescript-web-html","Web.HTML.Event.BeforeUnloadEvent.EventTypes":"purescript-web-html","Web.HTML.Event.DataTransfer":"purescript-web-html","Web.HTML.Event.DataTransfer.DataTransferItem":"purescript-web-html","Web.HTML.Event.DragEvent":"purescript-web-html","Web.HTML.Event.DragEvent.EventTypes":"purescript-web-html","Web.HTML.Event.ErrorEvent":"purescript-web-html","Web.HTML.Event.EventTypes":"purescript-web-html","Web.HTML.Event.HashChangeEvent":"purescript-web-html","Web.HTML.Event.HashChangeEvent.EventTypes":"purescript-web-html","Web.HTML.Event.PageTransitionEvent":"purescript-web-html","Web.HTML.Event.PageTransitionEvent.EventTypes":"purescript-web-html","Web.HTML.Event.PopStateEvent":"purescript-web-html","Web.HTML.Event.PopStateEvent.EventTypes":"purescript-web-html","Web.HTML.Event.TrackEvent":"purescript-web-html","Web.HTML.Event.TrackEvent.EventTypes":"purescript-web-html","Web.HTML.HTMLAnchorElement":"purescript-web-html","Web.HTML.HTMLAreaElement":"purescript-web-html","Web.HTML.HTMLAudioElement":"purescript-web-html","Web.HTML.HTMLBRElement":"purescript-web-html","Web.HTML.HTMLBaseElement":"purescript-web-html","Web.HTML.HTMLBodyElement":"purescript-web-html","Web.HTML.HTMLButtonElement":"purescript-web-html","Web.HTML.HTMLCanvasElement":"purescript-web-html","Web.HTML.HTMLDListElement":"purescript-web-html","Web.HTML.HTMLDataElement":"purescript-web-html","Web.HTML.HTMLDataListElement":"purescript-web-html","Web.HTML.HTMLDivElement":"purescript-web-html","Web.HTML.HTMLDocument":"purescript-web-html","Web.HTML.HTMLDocument.ReadyState":"purescript-web-html","Web.HTML.HTMLDocument.VisibilityState":"purescript-web-html","Web.HTML.HTMLElement":"purescript-web-html","Web.HTML.HTMLEmbedElement":"purescript-web-html","Web.HTML.HTMLFieldSetElement":"purescript-web-html","Web.HTML.HTMLFormElement":"purescript-web-html","Web.HTML.HTMLHRElement":"purescript-web-html","Web.HTML.HTMLHeadElement":"purescript-web-html","Web.HTML.HTMLHeadingElement":"purescript-web-html","Web.HTML.HTMLHtmlElement":"purescript-web-html","Web.HTML.HTMLHyperlinkElementUtils":"purescript-web-html","Web.HTML.HTMLIFrameElement":"purescript-web-html","Web.HTML.HTMLImageElement":"purescript-web-html","Web.HTML.HTMLImageElement.CORSMode":"purescript-web-html","Web.HTML.HTMLImageElement.DecodingHint":"purescript-web-html","Web.HTML.HTMLImageElement.Laziness":"purescript-web-html","Web.HTML.HTMLInputElement":"purescript-web-html","Web.HTML.HTMLKeygenElement":"purescript-web-html","Web.HTML.HTMLLIElement":"purescript-web-html","Web.HTML.HTMLLabelElement":"purescript-web-html","Web.HTML.HTMLLegendElement":"purescript-web-html","Web.HTML.HTMLLinkElement":"purescript-web-html","Web.HTML.HTMLMapElement":"purescript-web-html","Web.HTML.HTMLMediaElement":"purescript-web-html","Web.HTML.HTMLMediaElement.CanPlayType":"purescript-web-html","Web.HTML.HTMLMediaElement.NetworkState":"purescript-web-html","Web.HTML.HTMLMediaElement.ReadyState":"purescript-web-html","Web.HTML.HTMLMetaElement":"purescript-web-html","Web.HTML.HTMLMeterElement":"purescript-web-html","Web.HTML.HTMLModElement":"purescript-web-html","Web.HTML.HTMLOListElement":"purescript-web-html","Web.HTML.HTMLObjectElement":"purescript-web-html","Web.HTML.HTMLOptGroupElement":"purescript-web-html","Web.HTML.HTMLOptionElement":"purescript-web-html","Web.HTML.HTMLOutputElement":"purescript-web-html","Web.HTML.HTMLParagraphElement":"purescript-web-html","Web.HTML.HTMLParamElement":"purescript-web-html","Web.HTML.HTMLPreElement":"purescript-web-html","Web.HTML.HTMLProgressElement":"purescript-web-html","Web.HTML.HTMLQuoteElement":"purescript-web-html","Web.HTML.HTMLScriptElement":"purescript-web-html","Web.HTML.HTMLSelectElement":"purescript-web-html","Web.HTML.HTMLSourceElement":"purescript-web-html","Web.HTML.HTMLSpanElement":"purescript-web-html","Web.HTML.HTMLStyleElement":"purescript-web-html","Web.HTML.HTMLTableCaptionElement":"purescript-web-html","Web.HTML.HTMLTableCellElement":"purescript-web-html","Web.HTML.HTMLTableColElement":"purescript-web-html","Web.HTML.HTMLTableDataCellElement":"purescript-web-html","Web.HTML.HTMLTableElement":"purescript-web-html","Web.HTML.HTMLTableHeaderCellElement":"purescript-web-html","Web.HTML.HTMLTableRowElement":"purescript-web-html","Web.HTML.HTMLTableSectionElement":"purescript-web-html","Web.HTML.HTMLTemplateElement":"purescript-web-html","Web.HTML.HTMLTextAreaElement":"purescript-web-html","Web.HTML.HTMLTimeElement":"purescript-web-html","Web.HTML.HTMLTitleElement":"purescript-web-html","Web.HTML.HTMLTrackElement":"purescript-web-html","Web.HTML.HTMLTrackElement.ReadyState":"purescript-web-html","Web.HTML.HTMLUListElement":"purescript-web-html","Web.HTML.HTMLVideoElement":"purescript-web-html","Web.HTML.History":"purescript-web-html","Web.HTML.Location":"purescript-web-html","Web.HTML.Navigator":"purescript-web-html","Web.HTML.SelectionMode":"purescript-web-html","Web.HTML.ValidityState":"purescript-web-html","Web.HTML.Window":"purescript-web-html","Web.Internal.FFI":"purescript-web-events","Web.Storage.Event.StorageEvent":"purescript-web-storage","Web.Storage.Storage":"purescript-web-storage"},"modules":[{"comments":"A React hook-like library for Elmish. Uses a continuation monad to\nencapsulate state or effects.\n\n```purs\nimport Elmish.Hooks (useEffect, useState)\nimport Elmish.Hooks as Hooks\n\ntodos :: ReactElement\ntodos = Hooks.component Hooks.do\n  todos /\\ setTodos <- useState []\n\n  useEffect do\n    todos <- API.fetchTodos\n    liftEffect $ setTodos todos\n\n  Hooks.pure $ H.fragment $ todoView <$> todos\n```\n","declarations":[],"name":"Elmish.Hooks","reExports":[{"declarations":[{"children":[],"comments":null,"info":{"arguments":[],"declType":"typeSynonym","type":{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Elmish","Hooks","Type"],"HookType'"],"tag":"TypeConstructor"}],"tag":"TypeApp"},{"annotation":[],"contents":[["Elmish","Hooks","Type"],"HookType'"],"tag":"TypeConstructor"}],"tag":"TypeApp"}},"kind":null,"sourceSpan":{"end":[46,39],"name":"/tmp/tmp-2058-3Ms2fL9MrZUC/purescript-elmish-hooks/src/Elmish/Hooks/Type.purs","start":[46,1]},"title":"HookType"},{"children":[],"comments":"A Convenient wrapper which applies `Pure` to the given hook type.\n","info":{"arguments":[["t",{"annotation":[],"contents":[["Elmish","Hooks","Type"],"HookType"],"tag":"TypeConstructor"}],["a",null]],"declType":"typeSynonym","type":{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Elmish","Hooks","Type"],"Hook'"],"tag":"TypeConstructor"},{"annotation":[],"contents":{"annotation":[],"contents":[{"annotation":[],"contents":"t","tag":"TypeVar"},{"annotation":[],"contents":[["Elmish","Hooks","Type"],"Pure"],"tag":"TypeConstructor"}],"tag":"TypeApp"},"tag":"ParensInType"}],"tag":"TypeApp"},{"annotation":[],"contents":"a","tag":"TypeVar"}],"tag":"TypeApp"}},"kind":{"keyword":"type","kind":{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Elmish","Hooks","Type"],"HookType'"],"tag":"TypeConstructor"}],"tag":"TypeApp"},{"annotation":[],"contents":[["Elmish","Hooks","Type"],"HookType'"],"tag":"TypeConstructor"}],"tag":"TypeApp"}],"tag":"TypeApp"},{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Prim"],"Type"],"tag":"TypeConstructor"}],"tag":"TypeApp"},{"annotation":[],"contents":[["Prim"],"Type"],"tag":"TypeConstructor"}],"tag":"TypeApp"}],"tag":"TypeApp"}},"sourceSpan":{"end":[106,47],"name":"/tmp/tmp-2058-3Ms2fL9MrZUC/purescript-elmish-hooks/src/Elmish/Hooks/Type.purs","start":[106,1]},"title":"Hook"},{"children":[],"comments":null,"info":{"declType":"value","type":{"annotation":[],"contents":{"identifier":"a","kind":null,"skolem":null,"type":{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":"a","tag":"TypeVar"}],"tag":"TypeApp"},{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Elmish","Hooks","Type"],"Hook'"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Elmish","Hooks","Type"],"Pure"],"tag":"TypeConstructor"}],"tag":"TypeApp"},{"annotation":[],"contents":"a","tag":"TypeVar"}],"tag":"TypeApp"}],"tag":"TypeApp"},"visibility":"TypeVarInvisible"},"tag":"ForAll"}},"kind":null,"sourceSpan":{"end":[127,36],"name":"/tmp/tmp-2058-3Ms2fL9MrZUC/purescript-elmish-hooks/src/Elmish/Hooks/Type.purs","start":[127,1]},"title":"pure"},{"children":[],"comments":"Given a `ComponentName` and a function to create a `ComponentDef` (from a\nrender function `a -> ReactElement`), `mkHook` creates a `Hook a`. When\ncreating a hook with `mkHook`, you’ll need to create a `HookType` by\n`foreign import`ing it.\n\nAs an example of how to use `mkHook`, `useEffect` uses it like so:\n\n```purs\nforeign import data UseEffect :: Type -> HookType\n\nuseEffect :: Aff Unit -> Hook (UseEffect Unit) Unit\nuseEffect init =\n  mkHook (ComponentName \"UseEffect\") \\render ->\n    { init: forkVoid init\n    , update: \\_ msg -> absurd msg\n    , view: \\_ _ -> render unit\n    }\n```\n","info":{"declType":"value","type":{"annotation":[],"contents":{"identifier":"msg","kind":null,"skolem":null,"type":{"annotation":[],"contents":{"identifier":"state","kind":null,"skolem":null,"type":{"annotation":[],"contents":{"identifier":"t","kind":null,"skolem":null,"type":{"annotation":[],"contents":{"identifier":"a","kind":null,"skolem":null,"type":{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Elmish","Component"],"ComponentName"],"tag":"TypeConstructor"}],"tag":"TypeApp"},{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":"a","tag":"TypeVar"}],"tag":"TypeApp"},{"annotation":[],"contents":[["Elmish","React"],"ReactElement"],"tag":"TypeConstructor"}],"tag":"TypeApp"},"tag":"ParensInType"}],"tag":"TypeApp"},{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Elmish","Component"],"ComponentDef"],"tag":"TypeConstructor"},{"annotation":[],"contents":"msg","tag":"TypeVar"}],"tag":"TypeApp"},{"annotation":[],"contents":"state","tag":"TypeVar"}],"tag":"TypeApp"}],"tag":"TypeApp"},"tag":"ParensInType"}],"tag":"TypeApp"},{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Elmish","Hooks","Type"],"Hook'"],"tag":"TypeConstructor"},{"annotation":[],"contents":"t","tag":"TypeVar"}],"tag":"TypeApp"},{"annotation":[],"contents":"a","tag":"TypeVar"}],"tag":"TypeApp"}],"tag":"TypeApp"}],"tag":"TypeApp"},"visibility":"TypeVarInvisible"},"tag":"ForAll"},"visibility":"TypeVarInvisible"},"tag":"ForAll"},"visibility":"TypeVarInvisible"},"tag":"ForAll"},"visibility":"TypeVarInvisible"},"tag":"ForAll"}},"kind":null,"sourceSpan":{"end":[148,110],"name":"/tmp/tmp-2058-3Ms2fL9MrZUC/purescript-elmish-hooks/src/Elmish/Hooks/Type.purs","start":[148,1]},"title":"mkHook"},{"children":[],"comments":null,"info":{"declType":"value","type":{"annotation":[],"contents":{"identifier":"ta","kind":null,"skolem":null,"type":{"annotation":[],"contents":{"identifier":"tb","kind":null,"skolem":null,"type":{"annotation":[],"contents":{"identifier":"tr","kind":null,"skolem":null,"type":{"annotation":[],"contents":{"identifier":"a","kind":null,"skolem":null,"type":{"annotation":[],"contents":{"identifier":"b","kind":null,"skolem":null,"type":{"annotation":[],"contents":[{"constraintAnn":[],"constraintArgs":[{"annotation":[],"contents":"a","tag":"TypeVar"}],"constraintClass":[["Control","Bind"],"Discard"],"constraintData":null,"constraintKindArgs":[]},{"annotation":[],"contents":[{"constraintAnn":[],"constraintArgs":[{"annotation":[],"contents":"ta","tag":"TypeVar"},{"annotation":[],"contents":"tb","tag":"TypeVar"},{"annotation":[],"contents":"tr","tag":"TypeVar"}],"constraintClass":[["Elmish","Hooks","Type"],"ComposedHookTypes"],"constraintData":null,"constraintKindArgs":[]},{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Elmish","Hooks","Type"],"Hook'"],"tag":"TypeConstructor"},{"annotation":[],"contents":"ta","tag":"TypeVar"}],"tag":"TypeApp"},{"annotation":[],"contents":"a","tag":"TypeVar"}],"tag":"TypeApp"}],"tag":"TypeApp"},{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":"a","tag":"TypeVar"}],"tag":"TypeApp"},{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Elmish","Hooks","Type"],"Hook'"],"tag":"TypeConstructor"},{"annotation":[],"contents":"tb","tag":"TypeVar"}],"tag":"TypeApp"},{"annotation":[],"contents":"b","tag":"TypeVar"}],"tag":"TypeApp"}],"tag":"TypeApp"},"tag":"ParensInType"}],"tag":"TypeApp"},{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Elmish","Hooks","Type"],"Hook'"],"tag":"TypeConstructor"},{"annotation":[],"contents":"tr","tag":"TypeVar"}],"tag":"TypeApp"},{"annotation":[],"contents":"b","tag":"TypeVar"}],"tag":"TypeApp"}],"tag":"TypeApp"}],"tag":"TypeApp"}],"tag":"ConstrainedType"}],"tag":"ConstrainedType"},"visibility":"TypeVarInvisible"},"tag":"ForAll"},"visibility":"TypeVarInvisible"},"tag":"ForAll"},"visibility":"TypeVarInvisible"},"tag":"ForAll"},"visibility":"TypeVarInvisible"},"tag":"ForAll"},"visibility":"TypeVarInvisible"},"tag":"ForAll"}},"kind":null,"sourceSpan":{"end":[124,16],"name":"/tmp/tmp-2058-3Ms2fL9MrZUC/purescript-elmish-hooks/src/Elmish/Hooks/Type.purs","start":[119,1]},"title":"discard"},{"children":[],"comments":"Unwraps a `Hook ReactElement`, which is usually created by using one or\nmore hooks and then using `pure` to encapsulate a `ReactElement`. E.g.:\n\n```purs\nview :: ReactElement\nview = Hooks.component Hooks.do\n  name /\\ setName <- useState \"\"\n  Hooks.pure $ H.input_ \"\" { value: name, onChange: setName <?| eventTargetValue }\n```\n","info":{"declType":"value","type":{"annotation":[],"contents":{"identifier":"t","kind":null,"skolem":null,"type":{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Elmish","Hooks","Type"],"Hook'"],"tag":"TypeConstructor"},{"annotation":[],"contents":"t","tag":"TypeVar"}],"tag":"TypeApp"},{"annotation":[],"contents":[["Elmish","React"],"ReactElement"],"tag":"TypeConstructor"}],"tag":"TypeApp"}],"tag":"TypeApp"},{"annotation":[],"contents":[["Elmish","React"],"ReactElement"],"tag":"TypeConstructor"}],"tag":"TypeApp"},"visibility":"TypeVarInvisible"},"tag":"ForAll"}},"kind":null,"sourceSpan":{"end":[161,60],"name":"/tmp/tmp-2058-3Ms2fL9MrZUC/purescript-elmish-hooks/src/Elmish/Hooks/Type.purs","start":[161,1]},"title":"component"},{"children":[],"comments":null,"info":{"declType":"value","type":{"annotation":[],"contents":{"identifier":"ta","kind":null,"skolem":null,"type":{"annotation":[],"contents":{"identifier":"tb","kind":null,"skolem":null,"type":{"annotation":[],"contents":{"identifier":"tr","kind":null,"skolem":null,"type":{"annotation":[],"contents":{"identifier":"a","kind":null,"skolem":null,"type":{"annotation":[],"contents":{"identifier":"b","kind":null,"skolem":null,"type":{"annotation":[],"contents":[{"constraintAnn":[],"constraintArgs":[{"annotation":[],"contents":"ta","tag":"TypeVar"},{"annotation":[],"contents":"tb","tag":"TypeVar"},{"annotation":[],"contents":"tr","tag":"TypeVar"}],"constraintClass":[["Elmish","Hooks","Type"],"ComposedHookTypes"],"constraintData":null,"constraintKindArgs":[]},{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Elmish","Hooks","Type"],"Hook'"],"tag":"TypeConstructor"},{"annotation":[],"contents":"ta","tag":"TypeVar"}],"tag":"TypeApp"},{"annotation":[],"contents":"a","tag":"TypeVar"}],"tag":"TypeApp"}],"tag":"TypeApp"},{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":"a","tag":"TypeVar"}],"tag":"TypeApp"},{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Elmish","Hooks","Type"],"Hook'"],"tag":"TypeConstructor"},{"annotation":[],"contents":"tb","tag":"TypeVar"}],"tag":"TypeApp"},{"annotation":[],"contents":"b","tag":"TypeVar"}],"tag":"TypeApp"}],"tag":"TypeApp"},"tag":"ParensInType"}],"tag":"TypeApp"},{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Elmish","Hooks","Type"],"Hook'"],"tag":"TypeConstructor"},{"annotation":[],"contents":"tr","tag":"TypeVar"}],"tag":"TypeApp"},{"annotation":[],"contents":"b","tag":"TypeVar"}],"tag":"TypeApp"}],"tag":"TypeApp"}],"tag":"TypeApp"}],"tag":"ConstrainedType"},"visibility":"TypeVarInvisible"},"tag":"ForAll"},"visibility":"TypeVarInvisible"},"tag":"ForAll"},"visibility":"TypeVarInvisible"},"tag":"ForAll"},"visibility":"TypeVarInvisible"},"tag":"ForAll"},"visibility":"TypeVarInvisible"},"tag":"ForAll"}},"kind":null,"sourceSpan":{"end":[115,16],"name":"/tmp/tmp-2058-3Ms2fL9MrZUC/purescript-elmish-hooks/src/Elmish/Hooks/Type.purs","start":[111,1]},"title":"bind"},{"children":[],"comments":null,"info":{"alias":[["Elmish","Hooks","Type"],{"Right":{"Left":{"Ident":"withHook"}}}],"declType":"alias","fixity":{"associativity":"infixl","precedence":1}},"kind":null,"sourceSpan":{"end":[190,25],"name":"/tmp/tmp-2058-3Ms2fL9MrZUC/purescript-elmish-hooks/src/Elmish/Hooks/Type.purs","start":[190,1]},"title":"(==>)"},{"children":[],"comments":null,"info":{"alias":[["Elmish","Hooks","Type"],{"Right":{"Left":{"Ident":"withHookCurried"}}}],"declType":"alias","fixity":{"associativity":"infixl","precedence":1}},"kind":null,"sourceSpan":{"end":[207,32],"name":"/tmp/tmp-2058-3Ms2fL9MrZUC/purescript-elmish-hooks/src/Elmish/Hooks/Type.purs","start":[207,1]},"title":"(=/>)"},{"children":[],"comments":null,"info":{"alias":[["Elmish","Hooks","Type"],{"Left":"AppendHookType"}],"declType":"alias","fixity":{"associativity":"infixr","precedence":6}},"kind":null,"sourceSpan":{"end":[54,35],"name":"/tmp/tmp-2058-3Ms2fL9MrZUC/purescript-elmish-hooks/src/Elmish/Hooks/Type.purs","start":[54,1]},"title":"type (<>)"}],"moduleName":{"item":["Elmish","Hooks","Type"],"package":null}},{"declarations":[{"children":[],"comments":null,"info":{"dataDeclType":"data","declType":"data","roles":["Nominal","Nominal"],"typeArguments":[["t0",null]]},"kind":{"keyword":"data","kind":{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Prim"],"Type"],"tag":"TypeConstructor"}],"tag":"TypeApp"},{"annotation":[],"contents":[["Elmish","Hooks","Type"],"HookType"],"tag":"TypeConstructor"}],"tag":"TypeApp"}},"sourceSpan":{"end":[22,50],"name":"/tmp/tmp-2058-3Ms2fL9MrZUC/purescript-elmish-hooks/src/Elmish/Hooks/UseEffect.purs","start":[22,1]},"title":"UseEffect"},{"children":[],"comments":"This is like `useEffect`, but allows passing a value which, when it\nchanges, will trigger the effect to run again. E.g.:\n\n```purs\nview :: ReactElement\nview = Hooks.component Hooks.do\n  count /\\ setCount <- useState 0\n\n  useEffect' count \\c -> liftEffect $\n    HTMLDocument.setTitle (\"You clicked \" <> show c <> \" times\") =<< document =<< window\n\n  Hooks.pure H.button_ \"\" { onClick: setCount $ count + 1 } \"Click me\"\n```\n","info":{"declType":"value","type":{"annotation":[],"contents":{"identifier":"a","kind":null,"skolem":null,"type":{"annotation":[],"contents":[{"constraintAnn":[],"constraintArgs":[{"annotation":[],"contents":"a","tag":"TypeVar"}],"constraintClass":[["Data","Eq"],"Eq"],"constraintData":null,"constraintKindArgs":[]},{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":"a","tag":"TypeVar"}],"tag":"TypeApp"},{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":"a","tag":"TypeVar"}],"tag":"TypeApp"},{"annotation":[],"contents":[{"annotation":[],"contents":[["Effect","Aff"],"Aff"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Data","Unit"],"Unit"],"tag":"TypeConstructor"}],"tag":"TypeApp"}],"tag":"TypeApp"},"tag":"ParensInType"}],"tag":"TypeApp"},{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Elmish","Hooks","Type"],"Hook"],"tag":"TypeConstructor"},{"annotation":[],"contents":{"annotation":[],"contents":[{"annotation":[],"contents":[["Elmish","Hooks","UseEffect"],"UseEffect"],"tag":"TypeConstructor"},{"annotation":[],"contents":"a","tag":"TypeVar"}],"tag":"TypeApp"},"tag":"ParensInType"}],"tag":"TypeApp"},{"annotation":[],"contents":[["Data","Unit"],"Unit"],"tag":"TypeConstructor"}],"tag":"TypeApp"}],"tag":"TypeApp"}],"tag":"TypeApp"}],"tag":"ConstrainedType"},"visibility":"TypeVarVisible"},"tag":"ForAll"}},"kind":null,"sourceSpan":{"end":[54,76],"name":"/tmp/tmp-2058-3Ms2fL9MrZUC/purescript-elmish-hooks/src/Elmish/Hooks/UseEffect.purs","start":[54,1]},"title":"useEffect'"},{"children":[],"comments":"The `useEffect` hook takes an effect (`Aff`) to run and runs it in the\n`init` of the resulting component. E.g.:\n\n```purs\ntodos :: ReactElement\ntodos = Hooks.component Hooks.do\n  todos /\\ setTodos <- useState []\n\n  useEffect do\n    todos <- API.fetchTodos\n    liftEffect $ setTodos todos\n\n  Hooks.pure $ H.fragment $ todoView <$> todos\n```\n","info":{"declType":"value","type":{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[{"annotation":[],"contents":[["Effect","Aff"],"Aff"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Data","Unit"],"Unit"],"tag":"TypeConstructor"}],"tag":"TypeApp"}],"tag":"TypeApp"},{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Elmish","Hooks","Type"],"Hook"],"tag":"TypeConstructor"},{"annotation":[],"contents":{"annotation":[],"contents":[{"annotation":[],"contents":[["Elmish","Hooks","UseEffect"],"UseEffect"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Data","Unit"],"Unit"],"tag":"TypeConstructor"}],"tag":"TypeApp"},"tag":"ParensInType"}],"tag":"TypeApp"},{"annotation":[],"contents":[["Data","Unit"],"Unit"],"tag":"TypeConstructor"}],"tag":"TypeApp"}],"tag":"TypeApp"}},"kind":null,"sourceSpan":{"end":[38,52],"name":"/tmp/tmp-2058-3Ms2fL9MrZUC/purescript-elmish-hooks/src/Elmish/Hooks/UseEffect.purs","start":[38,1]},"title":"useEffect"}],"moduleName":{"item":["Elmish","Hooks","UseEffect"],"package":null}},{"declarations":[{"children":[],"comments":null,"info":{"arguments":[["el",null]],"declType":"typeSynonym","type":{"annotation":[],"contents":[{"annotation":[],"contents":[["Elmish","Hooks","UseState"],"UseState"],"tag":"TypeConstructor"},{"annotation":[],"contents":{"annotation":[],"contents":[{"annotation":[],"contents":[["Data","Maybe"],"Maybe"],"tag":"TypeConstructor"},{"annotation":[],"contents":"el","tag":"TypeVar"}],"tag":"TypeApp"},"tag":"ParensInType"}],"tag":"TypeApp"}},"kind":{"keyword":"type","kind":{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Prim"],"Type"],"tag":"TypeConstructor"}],"tag":"TypeApp"},{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Elmish","Hooks","Type"],"HookType'"],"tag":"TypeConstructor"}],"tag":"TypeApp"},{"annotation":[],"contents":[["Elmish","Hooks","Type"],"HookType'"],"tag":"TypeConstructor"}],"tag":"TypeApp"}],"tag":"TypeApp"}},"sourceSpan":{"end":[16,37],"name":"/tmp/tmp-2058-3Ms2fL9MrZUC/purescript-elmish-hooks/src/Elmish/Hooks/UseRef.purs","start":[16,1]},"title":"UseRef"},{"children":[],"comments":"The `useRef` hook returns a `Hook` encapsulating an element paired with a\nsetter for that element. This setter can be passed to a `ref` prop to get a\nreference to an element.\n\n```purs\nview :: ReactElement\nview = Hooks.component Hooks.do\n  inputEl /\\ inputRef <- useRef\n  let onButtonClick = traverse_ (focus <<< HTMLInputElement.toHTMLElement) inputEl\n  Hooks.pure $\n    H.fragment\n    [ H.input_ \"form-control\" { ref: inputRef, defaultValue: \"\" }\n    , H.button_ \"btn btn-primary\" { onClick: onButtonClick } \"Focus the input\"\n    ]\n```\n","info":{"declType":"value","type":{"annotation":[],"contents":{"identifier":"el","kind":null,"skolem":null,"type":{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Elmish","Hooks","Type"],"Hook"],"tag":"TypeConstructor"},{"annotation":[],"contents":{"annotation":[],"contents":[{"annotation":[],"contents":[["Elmish","Hooks","UseRef"],"UseRef"],"tag":"TypeConstructor"},{"annotation":[],"contents":"el","tag":"TypeVar"}],"tag":"TypeApp"},"tag":"ParensInType"}],"tag":"TypeApp"},{"annotation":[],"contents":{"annotation":[],"contents":[{"annotation":[],"contents":[["Data","Tuple","Nested"],"/\\"],"tag":"TypeOp"},{"annotation":[],"contents":[{"annotation":[],"contents":[["Data","Maybe"],"Maybe"],"tag":"TypeConstructor"},{"annotation":[],"contents":"el","tag":"TypeVar"}],"tag":"TypeApp"},{"annotation":[],"contents":[{"annotation":[],"contents":[["Elmish","React","Ref"],"Ref"],"tag":"TypeConstructor"},{"annotation":[],"contents":"el","tag":"TypeVar"}],"tag":"TypeApp"}],"tag":"BinaryNoParensType"},"tag":"ParensInType"}],"tag":"TypeApp"},"visibility":"TypeVarVisible"},"tag":"ForAll"}},"kind":null,"sourceSpan":{"end":[33,55],"name":"/tmp/tmp-2058-3Ms2fL9MrZUC/purescript-elmish-hooks/src/Elmish/Hooks/UseRef.purs","start":[33,1]},"title":"useRef"}],"moduleName":{"item":["Elmish","Hooks","UseRef"],"package":null}},{"declarations":[{"children":[],"comments":null,"info":{"dataDeclType":"data","declType":"data","roles":["Nominal","Nominal"],"typeArguments":[["t0",null]]},"kind":{"keyword":"data","kind":{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Prim"],"Type"],"tag":"TypeConstructor"}],"tag":"TypeApp"},{"annotation":[],"contents":[["Elmish","Hooks","Type"],"HookType"],"tag":"TypeConstructor"}],"tag":"TypeApp"}},"sourceSpan":{"end":[16,49],"name":"/tmp/tmp-2058-3Ms2fL9MrZUC/purescript-elmish-hooks/src/Elmish/Hooks/UseState.purs","start":[16,1]},"title":"UseState"},{"children":[],"comments":"The `useState` hook takes an initial state and returns a `Hook`\nencapsulating the current state and a `setState` function. E.g.:\n\n```purs\nview :: ReactElement\nview = Hooks.component Hooks.do\n  visible /\\ setVisible <- useState false\n  Hooks.pure $\n    H.fragment\n    [ H.button_ \"\" { onClick: setVisible $ not visible } \"Toggle visibility\"\n    , if visible\n        then H.div \"\" \"Content\"\n        else H.empty\n    ]\n```\n","info":{"declType":"value","type":{"annotation":[],"contents":{"identifier":"state","kind":null,"skolem":null,"type":{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":"state","tag":"TypeVar"}],"tag":"TypeApp"},{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Elmish","Hooks","Type"],"Hook"],"tag":"TypeConstructor"},{"annotation":[],"contents":{"annotation":[],"contents":[{"annotation":[],"contents":[["Elmish","Hooks","UseState"],"UseState"],"tag":"TypeConstructor"},{"annotation":[],"contents":"state","tag":"TypeVar"}],"tag":"TypeApp"},"tag":"ParensInType"}],"tag":"TypeApp"},{"annotation":[],"contents":{"annotation":[],"contents":[{"annotation":[],"contents":[["Data","Tuple","Nested"],"/\\"],"tag":"TypeOp"},{"annotation":[],"contents":"state","tag":"TypeVar"},{"annotation":[],"contents":[{"annotation":[],"contents":[["Elmish","Dispatch"],"Dispatch"],"tag":"TypeConstructor"},{"annotation":[],"contents":"state","tag":"TypeVar"}],"tag":"TypeApp"}],"tag":"BinaryNoParensType"},"tag":"ParensInType"}],"tag":"TypeApp"}],"tag":"TypeApp"},"visibility":"TypeVarVisible"},"tag":"ForAll"}},"kind":null,"sourceSpan":{"end":[33,79],"name":"/tmp/tmp-2058-3Ms2fL9MrZUC/purescript-elmish-hooks/src/Elmish/Hooks/UseState.purs","start":[33,1]},"title":"useState"}],"moduleName":{"item":["Elmish","Hooks","UseState"],"package":null}}]},{"comments":null,"declarations":[{"children":[{"comments":null,"info":{"declType":"instance","dependencies":[],"type":{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Elmish","Hooks","Type"],"ComposedHookTypes"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Elmish","Hooks","Type"],"Pure"],"tag":"TypeConstructor"}],"tag":"TypeApp"},{"annotation":[],"contents":"t","tag":"TypeVar"}],"tag":"TypeApp"},{"annotation":[],"contents":"t","tag":"TypeVar"}],"tag":"TypeApp"}},"sourceSpan":{"end":[61,36],"name":"/tmp/tmp-2058-3Ms2fL9MrZUC/purescript-elmish-hooks/src/Elmish/Hooks/Type.purs","start":[61,1]},"title":"<anonymous>"},{"comments":null,"info":{"declType":"instance","dependencies":[],"type":{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Elmish","Hooks","Type"],"ComposedHookTypes"],"tag":"TypeConstructor"},{"annotation":[],"contents":"t","tag":"TypeVar"}],"tag":"TypeApp"},{"annotation":[],"contents":[["Elmish","Hooks","Type"],"Pure"],"tag":"TypeConstructor"}],"tag":"TypeApp"},{"annotation":[],"contents":"t","tag":"TypeVar"}],"tag":"TypeApp"}},"sourceSpan":{"end":[63,41],"name":"/tmp/tmp-2058-3Ms2fL9MrZUC/purescript-elmish-hooks/src/Elmish/Hooks/Type.purs","start":[63,6]},"title":"<anonymous>"},{"comments":null,"info":{"declType":"instance","dependencies":[{"constraintAnn":[],"constraintArgs":[{"annotation":[],"contents":"l2","tag":"TypeVar"},{"annotation":[],"contents":"right","tag":"TypeVar"},{"annotation":[],"contents":"right'","tag":"TypeVar"}],"constraintClass":[["Elmish","Hooks","Type"],"ComposedHookTypes"],"constraintData":null,"constraintKindArgs":[]}],"type":{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Elmish","Hooks","Type"],"ComposedHookTypes"],"tag":"TypeConstructor"},{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Elmish","Hooks","Type"],"AppendHookType"],"tag":"TypeConstructor"},{"annotation":[],"contents":"l1","tag":"TypeVar"}],"tag":"TypeApp"},{"annotation":[],"contents":"l2","tag":"TypeVar"}],"tag":"TypeApp"}],"tag":"TypeApp"},{"annotation":[],"contents":"right","tag":"TypeVar"}],"tag":"TypeApp"},{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Elmish","Hooks","Type"],"AppendHookType"],"tag":"TypeConstructor"},{"annotation":[],"contents":"l1","tag":"TypeVar"}],"tag":"TypeApp"},{"annotation":[],"contents":"right'","tag":"TypeVar"}],"tag":"TypeApp"}],"tag":"TypeApp"}},"sourceSpan":{"end":[70,101],"name":"/tmp/tmp-2058-3Ms2fL9MrZUC/purescript-elmish-hooks/src/Elmish/Hooks/Type.purs","start":[70,6]},"title":"<anonymous>"}],"comments":"This class represents the type level function for composing `HookType'`s,\nwith instances for appending the identity and arbitrary `HookType'`s.\n","info":{"arguments":[["left",{"annotation":[],"contents":[["Elmish","Hooks","Type"],"HookType'"],"tag":"TypeConstructor"}],["right",{"annotation":[],"contents":[["Elmish","Hooks","Type"],"HookType'"],"tag":"TypeConstructor"}],["result",{"annotation":[],"contents":[["Elmish","Hooks","Type"],"HookType'"],"tag":"TypeConstructor"}]],"declType":"typeClass","fundeps":[[["left","right"],["result"]]],"superclasses":[]},"kind":{"keyword":"class","kind":{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Elmish","Hooks","Type"],"HookType'"],"tag":"TypeConstructor"}],"tag":"TypeApp"},{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Elmish","Hooks","Type"],"HookType'"],"tag":"TypeConstructor"}],"tag":"TypeApp"},{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Elmish","Hooks","Type"],"HookType'"],"tag":"TypeConstructor"}],"tag":"TypeApp"},{"annotation":[],"contents":[["Prim"],"Constraint"],"tag":"TypeConstructor"}],"tag":"TypeApp"}],"tag":"TypeApp"}],"tag":"TypeApp"}},"sourceSpan":{"end":[58,110],"name":"/tmp/tmp-2058-3Ms2fL9MrZUC/purescript-elmish-hooks/src/Elmish/Hooks/Type.purs","start":[58,1]},"title":"ComposedHookTypes"},{"children":[{"comments":null,"info":{"declType":"instance","dependencies":[{"constraintAnn":[],"constraintArgs":[{"annotation":[],"contents":"l2","tag":"TypeVar"},{"annotation":[],"contents":"right","tag":"TypeVar"},{"annotation":[],"contents":"right'","tag":"TypeVar"}],"constraintClass":[["Elmish","Hooks","Type"],"ComposedHookTypes"],"constraintData":null,"constraintKindArgs":[]}],"type":{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Elmish","Hooks","Type"],"ComposedHookTypes"],"tag":"TypeConstructor"},{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Elmish","Hooks","Type"],"AppendHookType"],"tag":"TypeConstructor"},{"annotation":[],"contents":"l1","tag":"TypeVar"}],"tag":"TypeApp"},{"annotation":[],"contents":"l2","tag":"TypeVar"}],"tag":"TypeApp"}],"tag":"TypeApp"},{"annotation":[],"contents":"right","tag":"TypeVar"}],"tag":"TypeApp"},{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Elmish","Hooks","Type"],"AppendHookType"],"tag":"TypeConstructor"},{"annotation":[],"contents":"l1","tag":"TypeVar"}],"tag":"TypeApp"},{"annotation":[],"contents":"right'","tag":"TypeVar"}],"tag":"TypeApp"}],"tag":"TypeApp"}},"sourceSpan":{"end":[70,101],"name":"/tmp/tmp-2058-3Ms2fL9MrZUC/purescript-elmish-hooks/src/Elmish/Hooks/Type.purs","start":[70,6]},"title":"<anonymous>"}],"comments":"A type which allows appending `HookType`s via type application.\n","info":{"arguments":[["h",{"annotation":[],"contents":[["Elmish","Hooks","Type"],"HookType"],"tag":"TypeConstructor"}],["t",null]],"declType":"typeSynonym","type":{"annotation":[],"contents":[{"annotation":[],"contents":"h","tag":"TypeVar"},{"annotation":[],"contents":"t","tag":"TypeVar"}],"tag":"TypeApp"}},"kind":{"keyword":"type","kind":{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Elmish","Hooks","Type"],"HookType'"],"tag":"TypeConstructor"}],"tag":"TypeApp"},{"annotation":[],"contents":[["Elmish","Hooks","Type"],"HookType'"],"tag":"TypeConstructor"}],"tag":"TypeApp"}],"tag":"TypeApp"},{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Elmish","Hooks","Type"],"HookType'"],"tag":"TypeConstructor"}],"tag":"TypeApp"},{"annotation":[],"contents":[["Elmish","Hooks","Type"],"HookType'"],"tag":"TypeConstructor"}],"tag":"TypeApp"}],"tag":"TypeApp"}},"sourceSpan":{"end":[52,44],"name":"/tmp/tmp-2058-3Ms2fL9MrZUC/purescript-elmish-hooks/src/Elmish/Hooks/Type.purs","start":[52,1]},"title":"AppendHookType"},{"children":[],"comments":"A Convenient wrapper which applies `Pure` to the given hook type.\n","info":{"arguments":[["t",{"annotation":[],"contents":[["Elmish","Hooks","Type"],"HookType"],"tag":"TypeConstructor"}],["a",null]],"declType":"typeSynonym","type":{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Elmish","Hooks","Type"],"Hook'"],"tag":"TypeConstructor"},{"annotation":[],"contents":{"annotation":[],"contents":[{"annotation":[],"contents":"t","tag":"TypeVar"},{"annotation":[],"contents":[["Elmish","Hooks","Type"],"Pure"],"tag":"TypeConstructor"}],"tag":"TypeApp"},"tag":"ParensInType"}],"tag":"TypeApp"},{"annotation":[],"contents":"a","tag":"TypeVar"}],"tag":"TypeApp"}},"kind":{"keyword":"type","kind":{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Elmish","Hooks","Type"],"HookType'"],"tag":"TypeConstructor"}],"tag":"TypeApp"},{"annotation":[],"contents":[["Elmish","Hooks","Type"],"HookType'"],"tag":"TypeConstructor"}],"tag":"TypeApp"}],"tag":"TypeApp"},{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Prim"],"Type"],"tag":"TypeConstructor"}],"tag":"TypeApp"},{"annotation":[],"contents":[["Prim"],"Type"],"tag":"TypeConstructor"}],"tag":"TypeApp"}],"tag":"TypeApp"}},"sourceSpan":{"end":[106,47],"name":"/tmp/tmp-2058-3Ms2fL9MrZUC/purescript-elmish-hooks/src/Elmish/Hooks/Type.purs","start":[106,1]},"title":"Hook"},{"children":[{"comments":null,"info":{"declType":"instance","dependencies":[],"type":{"annotation":[],"contents":[{"annotation":[],"contents":[["Data","Functor"],"Functor"],"tag":"TypeConstructor"},{"annotation":[],"contents":[{"annotation":[],"contents":[["Elmish","Hooks","Type"],"Hook'"],"tag":"TypeConstructor"},{"annotation":[],"contents":"t","tag":"TypeVar"}],"tag":"TypeApp"}],"tag":"TypeApp"}},"sourceSpan":{"end":[109,58],"name":"/tmp/tmp-2058-3Ms2fL9MrZUC/purescript-elmish-hooks/src/Elmish/Hooks/Type.purs","start":[108,1]},"title":"<anonymous>"}],"comments":"The type of a hook, e.g. the result of calling `useState`. It turns out\nthat hooks can be modeled as a continuation, where the callback function\nreturns a new component (created with `wrapWithLocalState`) given the\nencapsulated value. E.g., in the case of `useState`, you can think of it as\naccepting a callback function, which gets passed the current state and a\nsetter for the current state:\n\n```purs\nuseState \"\" \\(foo /\\ setFoo) -> …\n```\n\nModeling it as a continuation allows us to make it a monad and write in\ndo-notation, which looks a lot like the React hooks syntax:\n\n```purs\nHooks.component do\n  foo /\\ setFoo <- useState \"\"\n  pure …\n```\n\nFinally, to make sure we don’t use two hooks with different state-types in\na conditional (which could cause unexpected issues for React) we have a\n`HookType'` parameter, which accumulates when we call `bind`. For this we\nneed to use qualified do notation:\n\n```purs\nHooks.component Hooks.do\n  foo /\\ setFoo <- useState \"\"\n  Hooks.pure …\n```\n","info":{"dataDeclType":"data","declType":"data","roles":["Nominal","Representational"],"typeArguments":[["t",{"annotation":[],"contents":[["Elmish","Hooks","Type"],"HookType'"],"tag":"TypeConstructor"}],["a",null]]},"kind":{"keyword":"data","kind":{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Elmish","Hooks","Type"],"HookType'"],"tag":"TypeConstructor"}],"tag":"TypeApp"},{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Prim"],"Type"],"tag":"TypeConstructor"}],"tag":"TypeApp"},{"annotation":[],"contents":[["Prim"],"Type"],"tag":"TypeConstructor"}],"tag":"TypeApp"}],"tag":"TypeApp"}},"sourceSpan":{"end":[102,75],"name":"/tmp/tmp-2058-3Ms2fL9MrZUC/purescript-elmish-hooks/src/Elmish/Hooks/Type.purs","start":[102,1]},"title":"Hook'"},{"children":[],"comments":null,"info":{"arguments":[],"declType":"typeSynonym","type":{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Elmish","Hooks","Type"],"HookType'"],"tag":"TypeConstructor"}],"tag":"TypeApp"},{"annotation":[],"contents":[["Elmish","Hooks","Type"],"HookType'"],"tag":"TypeConstructor"}],"tag":"TypeApp"}},"kind":null,"sourceSpan":{"end":[46,39],"name":"/tmp/tmp-2058-3Ms2fL9MrZUC/purescript-elmish-hooks/src/Elmish/Hooks/Type.purs","start":[46,1]},"title":"HookType"},{"children":[],"comments":"Represents the type of a hook and is used to ensure hooks are safe. For\nexample, the following will not compile because we track `HookType`:\n\n```purs\nHooks.component Hooks.do\n  if someCondition then Hooks.do\n    x <- useState \"\"\n    _ <- useState 0\n    Hooks.pure x\n  else Hooks.do\n    _ <- useState 0\n    useState \"\"\n```\n\nbecause the first block has a `HookType` of `UseState String <> UseState\nInt` and the second is `UseState Int <> UseState String`. The same hooks\nneed to be used in the same order for the hook types to match.\n","info":{"dataDeclType":"data","declType":"data","roles":[],"typeArguments":[]},"kind":null,"sourceSpan":{"end":[44,38],"name":"/tmp/tmp-2058-3Ms2fL9MrZUC/purescript-elmish-hooks/src/Elmish/Hooks/Type.purs","start":[44,1]},"title":"HookType'"},{"children":[{"comments":null,"info":{"declType":"instance","dependencies":[],"type":{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Elmish","Hooks","Type"],"ComposedHookTypes"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Elmish","Hooks","Type"],"Pure"],"tag":"TypeConstructor"}],"tag":"TypeApp"},{"annotation":[],"contents":"t","tag":"TypeVar"}],"tag":"TypeApp"},{"annotation":[],"contents":"t","tag":"TypeVar"}],"tag":"TypeApp"}},"sourceSpan":{"end":[61,36],"name":"/tmp/tmp-2058-3Ms2fL9MrZUC/purescript-elmish-hooks/src/Elmish/Hooks/Type.purs","start":[61,1]},"title":"<anonymous>"},{"comments":null,"info":{"declType":"instance","dependencies":[],"type":{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Elmish","Hooks","Type"],"ComposedHookTypes"],"tag":"TypeConstructor"},{"annotation":[],"contents":"t","tag":"TypeVar"}],"tag":"TypeApp"},{"annotation":[],"contents":[["Elmish","Hooks","Type"],"Pure"],"tag":"TypeConstructor"}],"tag":"TypeApp"},{"annotation":[],"contents":"t","tag":"TypeVar"}],"tag":"TypeApp"}},"sourceSpan":{"end":[63,41],"name":"/tmp/tmp-2058-3Ms2fL9MrZUC/purescript-elmish-hooks/src/Elmish/Hooks/Type.purs","start":[63,6]},"title":"<anonymous>"}],"comments":"The `HookType` of `pure` — the identity of the `HookType` monoid.\n","info":{"dataDeclType":"data","declType":"data","roles":[],"typeArguments":[]},"kind":{"keyword":"data","kind":{"annotation":[],"contents":[["Elmish","Hooks","Type"],"HookType'"],"tag":"TypeConstructor"}},"sourceSpan":{"end":[49,38],"name":"/tmp/tmp-2058-3Ms2fL9MrZUC/purescript-elmish-hooks/src/Elmish/Hooks/Type.purs","start":[49,1]},"title":"Pure"},{"children":[],"comments":null,"info":{"alias":[["Elmish","Hooks","Type"],{"Left":"AppendHookType"}],"declType":"alias","fixity":{"associativity":"infixr","precedence":6}},"kind":null,"sourceSpan":{"end":[54,35],"name":"/tmp/tmp-2058-3Ms2fL9MrZUC/purescript-elmish-hooks/src/Elmish/Hooks/Type.purs","start":[54,1]},"title":"type (<>)"},{"children":[],"comments":null,"info":{"declType":"value","type":{"annotation":[],"contents":{"identifier":"ta","kind":null,"skolem":null,"type":{"annotation":[],"contents":{"identifier":"tb","kind":null,"skolem":null,"type":{"annotation":[],"contents":{"identifier":"tr","kind":null,"skolem":null,"type":{"annotation":[],"contents":{"identifier":"a","kind":null,"skolem":null,"type":{"annotation":[],"contents":{"identifier":"b","kind":null,"skolem":null,"type":{"annotation":[],"contents":[{"constraintAnn":[],"constraintArgs":[{"annotation":[],"contents":"ta","tag":"TypeVar"},{"annotation":[],"contents":"tb","tag":"TypeVar"},{"annotation":[],"contents":"tr","tag":"TypeVar"}],"constraintClass":[["Elmish","Hooks","Type"],"ComposedHookTypes"],"constraintData":null,"constraintKindArgs":[]},{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Elmish","Hooks","Type"],"Hook'"],"tag":"TypeConstructor"},{"annotation":[],"contents":"ta","tag":"TypeVar"}],"tag":"TypeApp"},{"annotation":[],"contents":"a","tag":"TypeVar"}],"tag":"TypeApp"}],"tag":"TypeApp"},{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":"a","tag":"TypeVar"}],"tag":"TypeApp"},{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Elmish","Hooks","Type"],"Hook'"],"tag":"TypeConstructor"},{"annotation":[],"contents":"tb","tag":"TypeVar"}],"tag":"TypeApp"},{"annotation":[],"contents":"b","tag":"TypeVar"}],"tag":"TypeApp"}],"tag":"TypeApp"},"tag":"ParensInType"}],"tag":"TypeApp"},{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Elmish","Hooks","Type"],"Hook'"],"tag":"TypeConstructor"},{"annotation":[],"contents":"tr","tag":"TypeVar"}],"tag":"TypeApp"},{"annotation":[],"contents":"b","tag":"TypeVar"}],"tag":"TypeApp"}],"tag":"TypeApp"}],"tag":"TypeApp"}],"tag":"ConstrainedType"},"visibility":"TypeVarInvisible"},"tag":"ForAll"},"visibility":"TypeVarInvisible"},"tag":"ForAll"},"visibility":"TypeVarInvisible"},"tag":"ForAll"},"visibility":"TypeVarInvisible"},"tag":"ForAll"},"visibility":"TypeVarInvisible"},"tag":"ForAll"}},"kind":null,"sourceSpan":{"end":[115,16],"name":"/tmp/tmp-2058-3Ms2fL9MrZUC/purescript-elmish-hooks/src/Elmish/Hooks/Type.purs","start":[111,1]},"title":"bind"},{"children":[],"comments":"Unwraps a `Hook ReactElement`, which is usually created by using one or\nmore hooks and then using `pure` to encapsulate a `ReactElement`. E.g.:\n\n```purs\nview :: ReactElement\nview = Hooks.component Hooks.do\n  name /\\ setName <- useState \"\"\n  Hooks.pure $ H.input_ \"\" { value: name, onChange: setName <?| eventTargetValue }\n```\n","info":{"declType":"value","type":{"annotation":[],"contents":{"identifier":"t","kind":null,"skolem":null,"type":{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Elmish","Hooks","Type"],"Hook'"],"tag":"TypeConstructor"},{"annotation":[],"contents":"t","tag":"TypeVar"}],"tag":"TypeApp"},{"annotation":[],"contents":[["Elmish","React"],"ReactElement"],"tag":"TypeConstructor"}],"tag":"TypeApp"}],"tag":"TypeApp"},{"annotation":[],"contents":[["Elmish","React"],"ReactElement"],"tag":"TypeConstructor"}],"tag":"TypeApp"},"visibility":"TypeVarInvisible"},"tag":"ForAll"}},"kind":null,"sourceSpan":{"end":[161,60],"name":"/tmp/tmp-2058-3Ms2fL9MrZUC/purescript-elmish-hooks/src/Elmish/Hooks/Type.purs","start":[161,1]},"title":"component"},{"children":[],"comments":null,"info":{"declType":"value","type":{"annotation":[],"contents":{"identifier":"ta","kind":null,"skolem":null,"type":{"annotation":[],"contents":{"identifier":"tb","kind":null,"skolem":null,"type":{"annotation":[],"contents":{"identifier":"tr","kind":null,"skolem":null,"type":{"annotation":[],"contents":{"identifier":"a","kind":null,"skolem":null,"type":{"annotation":[],"contents":{"identifier":"b","kind":null,"skolem":null,"type":{"annotation":[],"contents":[{"constraintAnn":[],"constraintArgs":[{"annotation":[],"contents":"a","tag":"TypeVar"}],"constraintClass":[["Control","Bind"],"Discard"],"constraintData":null,"constraintKindArgs":[]},{"annotation":[],"contents":[{"constraintAnn":[],"constraintArgs":[{"annotation":[],"contents":"ta","tag":"TypeVar"},{"annotation":[],"contents":"tb","tag":"TypeVar"},{"annotation":[],"contents":"tr","tag":"TypeVar"}],"constraintClass":[["Elmish","Hooks","Type"],"ComposedHookTypes"],"constraintData":null,"constraintKindArgs":[]},{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Elmish","Hooks","Type"],"Hook'"],"tag":"TypeConstructor"},{"annotation":[],"contents":"ta","tag":"TypeVar"}],"tag":"TypeApp"},{"annotation":[],"contents":"a","tag":"TypeVar"}],"tag":"TypeApp"}],"tag":"TypeApp"},{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":"a","tag":"TypeVar"}],"tag":"TypeApp"},{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Elmish","Hooks","Type"],"Hook'"],"tag":"TypeConstructor"},{"annotation":[],"contents":"tb","tag":"TypeVar"}],"tag":"TypeApp"},{"annotation":[],"contents":"b","tag":"TypeVar"}],"tag":"TypeApp"}],"tag":"TypeApp"},"tag":"ParensInType"}],"tag":"TypeApp"},{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Elmish","Hooks","Type"],"Hook'"],"tag":"TypeConstructor"},{"annotation":[],"contents":"tr","tag":"TypeVar"}],"tag":"TypeApp"},{"annotation":[],"contents":"b","tag":"TypeVar"}],"tag":"TypeApp"}],"tag":"TypeApp"}],"tag":"TypeApp"}],"tag":"ConstrainedType"}],"tag":"ConstrainedType"},"visibility":"TypeVarInvisible"},"tag":"ForAll"},"visibility":"TypeVarInvisible"},"tag":"ForAll"},"visibility":"TypeVarInvisible"},"tag":"ForAll"},"visibility":"TypeVarInvisible"},"tag":"ForAll"},"visibility":"TypeVarInvisible"},"tag":"ForAll"}},"kind":null,"sourceSpan":{"end":[124,16],"name":"/tmp/tmp-2058-3Ms2fL9MrZUC/purescript-elmish-hooks/src/Elmish/Hooks/Type.purs","start":[119,1]},"title":"discard"},{"children":[],"comments":"Given a `ComponentName` and a function to create a `ComponentDef` (from a\nrender function `a -> ReactElement`), `mkHook` creates a `Hook a`. When\ncreating a hook with `mkHook`, you’ll need to create a `HookType` by\n`foreign import`ing it.\n\nAs an example of how to use `mkHook`, `useEffect` uses it like so:\n\n```purs\nforeign import data UseEffect :: Type -> HookType\n\nuseEffect :: Aff Unit -> Hook (UseEffect Unit) Unit\nuseEffect init =\n  mkHook (ComponentName \"UseEffect\") \\render ->\n    { init: forkVoid init\n    , update: \\_ msg -> absurd msg\n    , view: \\_ _ -> render unit\n    }\n```\n","info":{"declType":"value","type":{"annotation":[],"contents":{"identifier":"msg","kind":null,"skolem":null,"type":{"annotation":[],"contents":{"identifier":"state","kind":null,"skolem":null,"type":{"annotation":[],"contents":{"identifier":"t","kind":null,"skolem":null,"type":{"annotation":[],"contents":{"identifier":"a","kind":null,"skolem":null,"type":{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Elmish","Component"],"ComponentName"],"tag":"TypeConstructor"}],"tag":"TypeApp"},{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":"a","tag":"TypeVar"}],"tag":"TypeApp"},{"annotation":[],"contents":[["Elmish","React"],"ReactElement"],"tag":"TypeConstructor"}],"tag":"TypeApp"},"tag":"ParensInType"}],"tag":"TypeApp"},{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Elmish","Component"],"ComponentDef"],"tag":"TypeConstructor"},{"annotation":[],"contents":"msg","tag":"TypeVar"}],"tag":"TypeApp"},{"annotation":[],"contents":"state","tag":"TypeVar"}],"tag":"TypeApp"}],"tag":"TypeApp"},"tag":"ParensInType"}],"tag":"TypeApp"},{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Elmish","Hooks","Type"],"Hook'"],"tag":"TypeConstructor"},{"annotation":[],"contents":"t","tag":"TypeVar"}],"tag":"TypeApp"},{"annotation":[],"contents":"a","tag":"TypeVar"}],"tag":"TypeApp"}],"tag":"TypeApp"}],"tag":"TypeApp"},"visibility":"TypeVarInvisible"},"tag":"ForAll"},"visibility":"TypeVarInvisible"},"tag":"ForAll"},"visibility":"TypeVarInvisible"},"tag":"ForAll"},"visibility":"TypeVarInvisible"},"tag":"ForAll"}},"kind":null,"sourceSpan":{"end":[148,110],"name":"/tmp/tmp-2058-3Ms2fL9MrZUC/purescript-elmish-hooks/src/Elmish/Hooks/Type.purs","start":[148,1]},"title":"mkHook"},{"children":[],"comments":null,"info":{"declType":"value","type":{"annotation":[],"contents":{"identifier":"a","kind":null,"skolem":null,"type":{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":"a","tag":"TypeVar"}],"tag":"TypeApp"},{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Elmish","Hooks","Type"],"Hook'"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Elmish","Hooks","Type"],"Pure"],"tag":"TypeConstructor"}],"tag":"TypeApp"},{"annotation":[],"contents":"a","tag":"TypeVar"}],"tag":"TypeApp"}],"tag":"TypeApp"},"visibility":"TypeVarInvisible"},"tag":"ForAll"}},"kind":null,"sourceSpan":{"end":[127,36],"name":"/tmp/tmp-2058-3Ms2fL9MrZUC/purescript-elmish-hooks/src/Elmish/Hooks/Type.purs","start":[127,1]},"title":"pure"},{"children":[],"comments":"When there is only one hook, it might make more sense to invoke it with\ncontinuation-passing style. This helper makes that easier, accepting a\n`render` callback.\n\nIntended to be used via the `==>` operator:\n\n```purs\nview :: ReactElement\nview = useState \"\" ==> \\(name /\\ setName) ->\n  H.input_ \"\" { value: name, onChange: setName <?| eventTargetValue }\n```\n","info":{"declType":"value","type":{"annotation":[],"contents":{"identifier":"t","kind":null,"skolem":null,"type":{"annotation":[],"contents":{"identifier":"a","kind":null,"skolem":null,"type":{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Elmish","Hooks","Type"],"Hook'"],"tag":"TypeConstructor"},{"annotation":[],"contents":"t","tag":"TypeVar"}],"tag":"TypeApp"},{"annotation":[],"contents":"a","tag":"TypeVar"}],"tag":"TypeApp"}],"tag":"TypeApp"},{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":"a","tag":"TypeVar"}],"tag":"TypeApp"},{"annotation":[],"contents":[["Elmish","React"],"ReactElement"],"tag":"TypeConstructor"}],"tag":"TypeApp"},"tag":"ParensInType"}],"tag":"TypeApp"},{"annotation":[],"contents":[["Elmish","React"],"ReactElement"],"tag":"TypeConstructor"}],"tag":"TypeApp"}],"tag":"TypeApp"},"visibility":"TypeVarInvisible"},"tag":"ForAll"},"visibility":"TypeVarInvisible"},"tag":"ForAll"}},"kind":null,"sourceSpan":{"end":[185,73],"name":"/tmp/tmp-2058-3Ms2fL9MrZUC/purescript-elmish-hooks/src/Elmish/Hooks/Type.purs","start":[185,1]},"title":"withHook"},{"children":[],"comments":"Given a `Hook (a /\\ b)`, this allows invoking it with a curried `render`\ncallback.\n\nIntended to be used via the `=/>` operator:\n\n```purs\nview :: ReactElement\nview = useState \"\" =/> \\name setName ->\n  H.input_ \"\" { value: name, onChange: setName <?| eventTargetValue }\n```\n","info":{"declType":"value","type":{"annotation":[],"contents":{"identifier":"t","kind":null,"skolem":null,"type":{"annotation":[],"contents":{"identifier":"a","kind":null,"skolem":null,"type":{"annotation":[],"contents":{"identifier":"b","kind":null,"skolem":null,"type":{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Elmish","Hooks","Type"],"Hook'"],"tag":"TypeConstructor"},{"annotation":[],"contents":"t","tag":"TypeVar"}],"tag":"TypeApp"},{"annotation":[],"contents":{"annotation":[],"contents":[{"annotation":[],"contents":[["Data","Tuple","Nested"],"/\\"],"tag":"TypeOp"},{"annotation":[],"contents":"a","tag":"TypeVar"},{"annotation":[],"contents":"b","tag":"TypeVar"}],"tag":"BinaryNoParensType"},"tag":"ParensInType"}],"tag":"TypeApp"}],"tag":"TypeApp"},{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":"a","tag":"TypeVar"}],"tag":"TypeApp"},{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":"b","tag":"TypeVar"}],"tag":"TypeApp"},{"annotation":[],"contents":[["Elmish","React"],"ReactElement"],"tag":"TypeConstructor"}],"tag":"TypeApp"}],"tag":"TypeApp"},"tag":"ParensInType"}],"tag":"TypeApp"},{"annotation":[],"contents":[["Elmish","React"],"ReactElement"],"tag":"TypeConstructor"}],"tag":"TypeApp"}],"tag":"TypeApp"},"visibility":"TypeVarInvisible"},"tag":"ForAll"},"visibility":"TypeVarInvisible"},"tag":"ForAll"},"visibility":"TypeVarInvisible"},"tag":"ForAll"}},"kind":null,"sourceSpan":{"end":[202,94],"name":"/tmp/tmp-2058-3Ms2fL9MrZUC/purescript-elmish-hooks/src/Elmish/Hooks/Type.purs","start":[202,1]},"title":"withHookCurried"},{"children":[],"comments":null,"info":{"alias":[["Elmish","Hooks","Type"],{"Right":{"Left":{"Ident":"withHookCurried"}}}],"declType":"alias","fixity":{"associativity":"infixl","precedence":1}},"kind":null,"sourceSpan":{"end":[207,32],"name":"/tmp/tmp-2058-3Ms2fL9MrZUC/purescript-elmish-hooks/src/Elmish/Hooks/Type.purs","start":[207,1]},"title":"(=/>)"},{"children":[],"comments":null,"info":{"alias":[["Elmish","Hooks","Type"],{"Right":{"Left":{"Ident":"withHook"}}}],"declType":"alias","fixity":{"associativity":"infixl","precedence":1}},"kind":null,"sourceSpan":{"end":[190,25],"name":"/tmp/tmp-2058-3Ms2fL9MrZUC/purescript-elmish-hooks/src/Elmish/Hooks/Type.purs","start":[190,1]},"title":"(==>)"}],"name":"Elmish.Hooks.Type","reExports":[]},{"comments":null,"declarations":[{"children":[],"comments":null,"info":{"dataDeclType":"data","declType":"data","roles":["Nominal","Nominal"],"typeArguments":[["t0",null]]},"kind":{"keyword":"data","kind":{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Prim"],"Type"],"tag":"TypeConstructor"}],"tag":"TypeApp"},{"annotation":[],"contents":[["Elmish","Hooks","Type"],"HookType"],"tag":"TypeConstructor"}],"tag":"TypeApp"}},"sourceSpan":{"end":[22,50],"name":"/tmp/tmp-2058-3Ms2fL9MrZUC/purescript-elmish-hooks/src/Elmish/Hooks/UseEffect.purs","start":[22,1]},"title":"UseEffect"},{"children":[],"comments":"A version of `useEffect` that logs messages, state changes and render\ntimes. Intended to be used with qualified imports: `UseEffect.traced`.\n","info":{"declType":"value","type":{"annotation":[],"contents":[{"constraintAnn":[],"constraintArgs":[],"constraintClass":[["Debug"],"DebugWarning"],"constraintData":null,"constraintKindArgs":[]},{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[{"annotation":[],"contents":[["Effect","Aff"],"Aff"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Data","Unit"],"Unit"],"tag":"TypeConstructor"}],"tag":"TypeApp"}],"tag":"TypeApp"},{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Elmish","Hooks","Type"],"Hook"],"tag":"TypeConstructor"},{"annotation":[],"contents":{"annotation":[],"contents":[{"annotation":[],"contents":[["Elmish","Hooks","UseEffect"],"UseEffect"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Data","Unit"],"Unit"],"tag":"TypeConstructor"}],"tag":"TypeApp"},"tag":"ParensInType"}],"tag":"TypeApp"},{"annotation":[],"contents":[["Data","Unit"],"Unit"],"tag":"TypeConstructor"}],"tag":"TypeApp"}],"tag":"TypeApp"}],"tag":"ConstrainedType"}},"kind":null,"sourceSpan":{"end":[59,65],"name":"/tmp/tmp-2058-3Ms2fL9MrZUC/purescript-elmish-hooks/src/Elmish/Hooks/UseEffect.purs","start":[59,1]},"title":"traced"},{"children":[],"comments":"A version of `useEffect'` that logs messages, state changes and render\ntimes. Intended to be used with qualified imports: `UseEffect.traced'`.\n","info":{"declType":"value","type":{"annotation":[],"contents":{"identifier":"a","kind":null,"skolem":null,"type":{"annotation":[],"contents":[{"constraintAnn":[],"constraintArgs":[],"constraintClass":[["Debug"],"DebugWarning"],"constraintData":null,"constraintKindArgs":[]},{"annotation":[],"contents":[{"constraintAnn":[],"constraintArgs":[{"annotation":[],"contents":"a","tag":"TypeVar"}],"constraintClass":[["Data","Eq"],"Eq"],"constraintData":null,"constraintKindArgs":[]},{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":"a","tag":"TypeVar"}],"tag":"TypeApp"},{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":"a","tag":"TypeVar"}],"tag":"TypeApp"},{"annotation":[],"contents":[{"annotation":[],"contents":[["Effect","Aff"],"Aff"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Data","Unit"],"Unit"],"tag":"TypeConstructor"}],"tag":"TypeApp"}],"tag":"TypeApp"},"tag":"ParensInType"}],"tag":"TypeApp"},{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Elmish","Hooks","Type"],"Hook"],"tag":"TypeConstructor"},{"annotation":[],"contents":{"annotation":[],"contents":[{"annotation":[],"contents":[["Elmish","Hooks","UseEffect"],"UseEffect"],"tag":"TypeConstructor"},{"annotation":[],"contents":"a","tag":"TypeVar"}],"tag":"TypeApp"},"tag":"ParensInType"}],"tag":"TypeApp"},{"annotation":[],"contents":[["Data","Unit"],"Unit"],"tag":"TypeConstructor"}],"tag":"TypeApp"}],"tag":"TypeApp"}],"tag":"TypeApp"}],"tag":"ConstrainedType"}],"tag":"ConstrainedType"},"visibility":"TypeVarVisible"},"tag":"ForAll"}},"kind":null,"sourceSpan":{"end":[64,89],"name":"/tmp/tmp-2058-3Ms2fL9MrZUC/purescript-elmish-hooks/src/Elmish/Hooks/UseEffect.purs","start":[64,1]},"title":"traced'"},{"children":[],"comments":"The `useEffect` hook takes an effect (`Aff`) to run and runs it in the\n`init` of the resulting component. E.g.:\n\n```purs\ntodos :: ReactElement\ntodos = Hooks.component Hooks.do\n  todos /\\ setTodos <- useState []\n\n  useEffect do\n    todos <- API.fetchTodos\n    liftEffect $ setTodos todos\n\n  Hooks.pure $ H.fragment $ todoView <$> todos\n```\n","info":{"declType":"value","type":{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[{"annotation":[],"contents":[["Effect","Aff"],"Aff"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Data","Unit"],"Unit"],"tag":"TypeConstructor"}],"tag":"TypeApp"}],"tag":"TypeApp"},{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Elmish","Hooks","Type"],"Hook"],"tag":"TypeConstructor"},{"annotation":[],"contents":{"annotation":[],"contents":[{"annotation":[],"contents":[["Elmish","Hooks","UseEffect"],"UseEffect"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Data","Unit"],"Unit"],"tag":"TypeConstructor"}],"tag":"TypeApp"},"tag":"ParensInType"}],"tag":"TypeApp"},{"annotation":[],"contents":[["Data","Unit"],"Unit"],"tag":"TypeConstructor"}],"tag":"TypeApp"}],"tag":"TypeApp"}},"kind":null,"sourceSpan":{"end":[38,52],"name":"/tmp/tmp-2058-3Ms2fL9MrZUC/purescript-elmish-hooks/src/Elmish/Hooks/UseEffect.purs","start":[38,1]},"title":"useEffect"},{"children":[],"comments":"This is like `useEffect`, but allows passing a value which, when it\nchanges, will trigger the effect to run again. E.g.:\n\n```purs\nview :: ReactElement\nview = Hooks.component Hooks.do\n  count /\\ setCount <- useState 0\n\n  useEffect' count \\c -> liftEffect $\n    HTMLDocument.setTitle (\"You clicked \" <> show c <> \" times\") =<< document =<< window\n\n  Hooks.pure H.button_ \"\" { onClick: setCount $ count + 1 } \"Click me\"\n```\n","info":{"declType":"value","type":{"annotation":[],"contents":{"identifier":"a","kind":null,"skolem":null,"type":{"annotation":[],"contents":[{"constraintAnn":[],"constraintArgs":[{"annotation":[],"contents":"a","tag":"TypeVar"}],"constraintClass":[["Data","Eq"],"Eq"],"constraintData":null,"constraintKindArgs":[]},{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":"a","tag":"TypeVar"}],"tag":"TypeApp"},{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":"a","tag":"TypeVar"}],"tag":"TypeApp"},{"annotation":[],"contents":[{"annotation":[],"contents":[["Effect","Aff"],"Aff"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Data","Unit"],"Unit"],"tag":"TypeConstructor"}],"tag":"TypeApp"}],"tag":"TypeApp"},"tag":"ParensInType"}],"tag":"TypeApp"},{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Elmish","Hooks","Type"],"Hook"],"tag":"TypeConstructor"},{"annotation":[],"contents":{"annotation":[],"contents":[{"annotation":[],"contents":[["Elmish","Hooks","UseEffect"],"UseEffect"],"tag":"TypeConstructor"},{"annotation":[],"contents":"a","tag":"TypeVar"}],"tag":"TypeApp"},"tag":"ParensInType"}],"tag":"TypeApp"},{"annotation":[],"contents":[["Data","Unit"],"Unit"],"tag":"TypeConstructor"}],"tag":"TypeApp"}],"tag":"TypeApp"}],"tag":"TypeApp"}],"tag":"ConstrainedType"},"visibility":"TypeVarVisible"},"tag":"ForAll"}},"kind":null,"sourceSpan":{"end":[54,76],"name":"/tmp/tmp-2058-3Ms2fL9MrZUC/purescript-elmish-hooks/src/Elmish/Hooks/UseEffect.purs","start":[54,1]},"title":"useEffect'"}],"name":"Elmish.Hooks.UseEffect","reExports":[]},{"comments":null,"declarations":[{"children":[],"comments":null,"info":{"arguments":[["el",null]],"declType":"typeSynonym","type":{"annotation":[],"contents":[{"annotation":[],"contents":[["Elmish","Hooks","UseState"],"UseState"],"tag":"TypeConstructor"},{"annotation":[],"contents":{"annotation":[],"contents":[{"annotation":[],"contents":[["Data","Maybe"],"Maybe"],"tag":"TypeConstructor"},{"annotation":[],"contents":"el","tag":"TypeVar"}],"tag":"TypeApp"},"tag":"ParensInType"}],"tag":"TypeApp"}},"kind":{"keyword":"type","kind":{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Prim"],"Type"],"tag":"TypeConstructor"}],"tag":"TypeApp"},{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Elmish","Hooks","Type"],"HookType'"],"tag":"TypeConstructor"}],"tag":"TypeApp"},{"annotation":[],"contents":[["Elmish","Hooks","Type"],"HookType'"],"tag":"TypeConstructor"}],"tag":"TypeApp"}],"tag":"TypeApp"}},"sourceSpan":{"end":[16,37],"name":"/tmp/tmp-2058-3Ms2fL9MrZUC/purescript-elmish-hooks/src/Elmish/Hooks/UseRef.purs","start":[16,1]},"title":"UseRef"},{"children":[],"comments":"The `useRef` hook returns a `Hook` encapsulating an element paired with a\nsetter for that element. This setter can be passed to a `ref` prop to get a\nreference to an element.\n\n```purs\nview :: ReactElement\nview = Hooks.component Hooks.do\n  inputEl /\\ inputRef <- useRef\n  let onButtonClick = traverse_ (focus <<< HTMLInputElement.toHTMLElement) inputEl\n  Hooks.pure $\n    H.fragment\n    [ H.input_ \"form-control\" { ref: inputRef, defaultValue: \"\" }\n    , H.button_ \"btn btn-primary\" { onClick: onButtonClick } \"Focus the input\"\n    ]\n```\n","info":{"declType":"value","type":{"annotation":[],"contents":{"identifier":"el","kind":null,"skolem":null,"type":{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Elmish","Hooks","Type"],"Hook"],"tag":"TypeConstructor"},{"annotation":[],"contents":{"annotation":[],"contents":[{"annotation":[],"contents":[["Elmish","Hooks","UseRef"],"UseRef"],"tag":"TypeConstructor"},{"annotation":[],"contents":"el","tag":"TypeVar"}],"tag":"TypeApp"},"tag":"ParensInType"}],"tag":"TypeApp"},{"annotation":[],"contents":{"annotation":[],"contents":[{"annotation":[],"contents":[["Data","Tuple","Nested"],"/\\"],"tag":"TypeOp"},{"annotation":[],"contents":[{"annotation":[],"contents":[["Data","Maybe"],"Maybe"],"tag":"TypeConstructor"},{"annotation":[],"contents":"el","tag":"TypeVar"}],"tag":"TypeApp"},{"annotation":[],"contents":[{"annotation":[],"contents":[["Elmish","React","Ref"],"Ref"],"tag":"TypeConstructor"},{"annotation":[],"contents":"el","tag":"TypeVar"}],"tag":"TypeApp"}],"tag":"BinaryNoParensType"},"tag":"ParensInType"}],"tag":"TypeApp"},"visibility":"TypeVarVisible"},"tag":"ForAll"}},"kind":null,"sourceSpan":{"end":[33,55],"name":"/tmp/tmp-2058-3Ms2fL9MrZUC/purescript-elmish-hooks/src/Elmish/Hooks/UseRef.purs","start":[33,1]},"title":"useRef"}],"name":"Elmish.Hooks.UseRef","reExports":[]},{"comments":null,"declarations":[{"children":[],"comments":null,"info":{"dataDeclType":"data","declType":"data","roles":["Nominal","Nominal"],"typeArguments":[["t0",null]]},"kind":{"keyword":"data","kind":{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Prim"],"Type"],"tag":"TypeConstructor"}],"tag":"TypeApp"},{"annotation":[],"contents":[["Elmish","Hooks","Type"],"HookType"],"tag":"TypeConstructor"}],"tag":"TypeApp"}},"sourceSpan":{"end":[16,49],"name":"/tmp/tmp-2058-3Ms2fL9MrZUC/purescript-elmish-hooks/src/Elmish/Hooks/UseState.purs","start":[16,1]},"title":"UseState"},{"children":[],"comments":"A version of `useState` that logs messages, state changes and render times.\nIntended to be used with qualified imports: `UseState.traced`.\n","info":{"declType":"value","type":{"annotation":[],"contents":{"identifier":"state","kind":null,"skolem":null,"type":{"annotation":[],"contents":[{"constraintAnn":[],"constraintArgs":[],"constraintClass":[["Debug"],"DebugWarning"],"constraintData":null,"constraintKindArgs":[]},{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":"state","tag":"TypeVar"}],"tag":"TypeApp"},{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Elmish","Hooks","Type"],"Hook"],"tag":"TypeConstructor"},{"annotation":[],"contents":{"annotation":[],"contents":[{"annotation":[],"contents":[["Elmish","Hooks","UseState"],"UseState"],"tag":"TypeConstructor"},{"annotation":[],"contents":"state","tag":"TypeVar"}],"tag":"TypeApp"},"tag":"ParensInType"}],"tag":"TypeApp"},{"annotation":[],"contents":{"annotation":[],"contents":[{"annotation":[],"contents":[["Data","Tuple","Nested"],"/\\"],"tag":"TypeOp"},{"annotation":[],"contents":"state","tag":"TypeVar"},{"annotation":[],"contents":[{"annotation":[],"contents":[["Elmish","Dispatch"],"Dispatch"],"tag":"TypeConstructor"},{"annotation":[],"contents":"state","tag":"TypeVar"}],"tag":"TypeApp"}],"tag":"BinaryNoParensType"},"tag":"ParensInType"}],"tag":"TypeApp"}],"tag":"TypeApp"}],"tag":"ConstrainedType"},"visibility":"TypeVarVisible"},"tag":"ForAll"}},"kind":null,"sourceSpan":{"end":[38,93],"name":"/tmp/tmp-2058-3Ms2fL9MrZUC/purescript-elmish-hooks/src/Elmish/Hooks/UseState.purs","start":[38,1]},"title":"traced"},{"children":[],"comments":"The `useState` hook takes an initial state and returns a `Hook`\nencapsulating the current state and a `setState` function. E.g.:\n\n```purs\nview :: ReactElement\nview = Hooks.component Hooks.do\n  visible /\\ setVisible <- useState false\n  Hooks.pure $\n    H.fragment\n    [ H.button_ \"\" { onClick: setVisible $ not visible } \"Toggle visibility\"\n    , if visible\n        then H.div \"\" \"Content\"\n        else H.empty\n    ]\n```\n","info":{"declType":"value","type":{"annotation":[],"contents":{"identifier":"state","kind":null,"skolem":null,"type":{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":"state","tag":"TypeVar"}],"tag":"TypeApp"},{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Elmish","Hooks","Type"],"Hook"],"tag":"TypeConstructor"},{"annotation":[],"contents":{"annotation":[],"contents":[{"annotation":[],"contents":[["Elmish","Hooks","UseState"],"UseState"],"tag":"TypeConstructor"},{"annotation":[],"contents":"state","tag":"TypeVar"}],"tag":"TypeApp"},"tag":"ParensInType"}],"tag":"TypeApp"},{"annotation":[],"contents":{"annotation":[],"contents":[{"annotation":[],"contents":[["Data","Tuple","Nested"],"/\\"],"tag":"TypeOp"},{"annotation":[],"contents":"state","tag":"TypeVar"},{"annotation":[],"contents":[{"annotation":[],"contents":[["Elmish","Dispatch"],"Dispatch"],"tag":"TypeConstructor"},{"annotation":[],"contents":"state","tag":"TypeVar"}],"tag":"TypeApp"}],"tag":"BinaryNoParensType"},"tag":"ParensInType"}],"tag":"TypeApp"}],"tag":"TypeApp"},"visibility":"TypeVarVisible"},"tag":"ForAll"}},"kind":null,"sourceSpan":{"end":[33,79],"name":"/tmp/tmp-2058-3Ms2fL9MrZUC/purescript-elmish-hooks/src/Elmish/Hooks/UseState.purs","start":[33,1]},"title":"useState"}],"name":"Elmish.Hooks.UseState","reExports":[]}],"packageMeta":{"dependencies":{"purescript-aff":">=7.0.0 <8.0.0","purescript-debug":">=6.0.0 <7.0.0","purescript-elmish":">=0.9.0 <0.11.0","purescript-maybe":">=6.0.0 <7.0.0","purescript-prelude":">=6.0.0 <7.0.0","purescript-tuples":">=7.0.0 <8.0.0","purescript-undefined-is-not-a-problem":">=1.1.0 <2.0.0"},"homepage":"https://github.com/collegevine/purescript-elmish-hooks.git","license":["MIT"],"name":"purescript-elmish-hooks","repository":{"type":"git","url":"https://github.com/collegevine/purescript-elmish-hooks.git"}},"resolvedDependencies":{"purescript-aff":"7.1.0","purescript-argonaut-core":"7.0.0","purescript-arrays":"7.2.1","purescript-assert":"6.0.0","purescript-bifunctors":"6.0.0","purescript-console":"6.0.0","purescript-const":"6.0.0","purescript-contravariant":"6.0.0","purescript-control":"6.0.0","purescript-datetime":"6.1.0","purescript-debug":"6.0.2","purescript-distributive":"6.0.0","purescript-effect":"4.0.0","purescript-either":"6.1.0","purescript-elmish":"0.10.0","purescript-enums":"6.0.1","purescript-exceptions":"6.0.0","purescript-exists":"6.0.0","purescript-foldable-traversable":"6.0.0","purescript-foreign":"7.0.0","purescript-foreign-object":"4.1.0","purescript-functions":"6.0.0","purescript-functors":"5.0.0","purescript-gen":"4.0.0","purescript-identity":"6.0.0","purescript-integers":"6.0.0","purescript-invariant":"6.0.0","purescript-js-date":"8.0.0","purescript-lazy":"6.0.0","purescript-lists":"7.0.0","purescript-maybe":"6.0.0","purescript-media-types":"6.0.0","purescript-newtype":"5.0.0","purescript-nonempty":"7.0.0","purescript-now":"6.0.0","purescript-nullable":"6.0.0","purescript-numbers":"9.0.1","purescript-ordered-collections":"3.1.1","purescript-orders":"6.0.0","purescript-parallel":"6.0.0","purescript-partial":"4.0.0","purescript-prelude":"6.0.1","purescript-profunctor":"6.0.0","purescript-random":"6.0.0","purescript-refs":"6.0.0","purescript-safe-coerce":"2.0.0","purescript-st":"6.2.0","purescript-strings":"6.0.1","purescript-tailrec":"6.1.0","purescript-transformers":"6.0.0","purescript-tuples":"7.0.0","purescript-type-equality":"4.0.1","purescript-typelevel-prelude":"7.0.0","purescript-undefined-is-not-a-problem":"1.1.0","purescript-unfoldable":"6.0.0","purescript-unsafe-coerce":"6.0.0","purescript-web-dom":"6.0.0","purescript-web-events":"4.0.0","purescript-web-file":"4.0.0","purescript-web-html":"4.1.0","purescript-web-storage":"5.0.0"},"tagTime":"2023-09-29T17:21:02+0000","uploader":"pacchettibotti","version":"0.10.0","versionTag":"v0.10.0"}