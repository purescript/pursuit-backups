{"uploader":"thomashoneyman","packageMeta":{"homepage":"https://github.com/sharkdp/purescript-bigints","repository":{"url":"https://github.com/sharkdp/purescript-bigints.git","type":"git"},"ignore":["**/.*","node_modules","bower_components","output","test","gulpfile.js","package.json"],"devDependencies":{"purescript-effect":"^4.0.0","purescript-quickcheck-laws":"^7.0.0","purescript-console":"^6.0.0","purescript-assert":"^6.0.0","purescript-psci-support":"^6.0.0","purescript-quickcheck":"^8.0.0"},"authors":[{"email":"mail@david-peter.de","name":"David Peter"}],"dependencies":{"purescript-maybe":"^6.0.0","purescript-integers":"^6.0.0","purescript-strings":"^6.0.0"},"name":"purescript-bigints","license":["MIT"],"description":"Arbitrary length integers"},"tagTime":"2022-05-03T18:11:01+0000","modules":[{"reExports":[],"name":"Data.BigInt","comments":"This module defines a `BigInt` data type for arbitrary length integers.\n","declarations":[{"kind":null,"children":[{"comments":null,"title":"eqBigInt","info":{"declType":"instance","dependencies":[],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Eq"],"Eq"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","BigInt"],"BigInt"]}]}},"sourceSpan":{"start":[155,1],"name":"/Users/trh/Desktop/purescript-bigints/src/Data/BigInt.purs","end":[156,16]}},{"comments":null,"title":"ordBigInt","info":{"declType":"instance","dependencies":[],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Ord"],"Ord"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","BigInt"],"BigInt"]}]}},"sourceSpan":{"start":[160,1],"name":"/Users/trh/Desktop/purescript-bigints/src/Data/BigInt.purs","end":[164,26]}},{"comments":null,"title":"showBigInt","info":{"declType":"instance","dependencies":[],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Show"],"Show"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","BigInt"],"BigInt"]}]}},"sourceSpan":{"start":[184,1],"name":"/Users/trh/Desktop/purescript-bigints/src/Data/BigInt.purs","end":[185,51]}},{"comments":null,"title":"semiringBigInt","info":{"declType":"instance","dependencies":[],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Semiring"],"Semiring"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","BigInt"],"BigInt"]}]}},"sourceSpan":{"start":[190,1],"name":"/Users/trh/Desktop/purescript-bigints/src/Data/BigInt.purs","end":[194,19]}},{"comments":null,"title":"ringBigInt","info":{"declType":"instance","dependencies":[],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Ring"],"Ring"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","BigInt"],"BigInt"]}]}},"sourceSpan":{"start":[198,1],"name":"/Users/trh/Desktop/purescript-bigints/src/Data/BigInt.purs","end":[199,14]}},{"comments":null,"title":"commutativeRingBigInt","info":{"declType":"instance","dependencies":[],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","CommutativeRing"],"CommutativeRing"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","BigInt"],"BigInt"]}]}},"sourceSpan":{"start":[204,1],"name":"/Users/trh/Desktop/purescript-bigints/src/Data/BigInt.purs","end":[204,57]}},{"comments":null,"title":"euclideanRingBigInt","info":{"declType":"instance","dependencies":[],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","EuclideanRing"],"EuclideanRing"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","BigInt"],"BigInt"]}]}},"sourceSpan":{"start":[206,1],"name":"/Users/trh/Desktop/purescript-bigints/src/Data/BigInt.purs","end":[212,38]}}],"comments":"An arbitrary length integer.\n","title":"BigInt","info":{"declType":"data","dataDeclType":"data","typeArguments":[]},"sourceSpan":{"start":[46,1],"name":"/Users/trh/Desktop/purescript-bigints/src/Data/BigInt.purs","end":[46,35]}},{"kind":null,"children":[],"comments":null,"title":"BaseDigits","info":{"arguments":[],"declType":"typeSynonym","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"annotation":[],"tag":"RCons","contents":["value",{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Array","NonEmpty","Internal"],"NonEmptyArray"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},{"annotation":[],"tag":"RCons","contents":["isNegative",{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]},{"annotation":[],"tag":"REmpty"}]}]}]}},"sourceSpan":{"start":[48,1],"name":"/Users/trh/Desktop/purescript-bigints/src/Data/BigInt.purs","end":[51,4]}},{"kind":null,"children":[],"comments":"Parse a string into a `BigInt`, assuming a decimal representation. Returns\n`Nothing` if the parse fails.\n\nExamples:\n```purescript\nfromString \"42\"\nfromString \"857981209301293808359384092830482\"\nfromString \"1e100\"\n```\n","title":"fromString","info":{"declType":"value","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","BigInt"],"BigInt"]}]}]}},"sourceSpan":{"start":[139,1],"name":"/Users/trh/Desktop/purescript-bigints/src/Data/BigInt.purs","end":[139,37]}},{"kind":null,"children":[],"comments":"Parse a string into a `BigInt`, assuming a representation in the given base.\nThe letters \"a-z\" and \"A-Z\" will be interpreted as the digits `10` to\n`36`. Returns `Nothing` if the parse fails.\n\n```purescript\nfromBase 2 \"100\" == fromString \"4\"\nfromBase 16 \"ff\" == fromString \"255\"\n```\n","title":"fromBase","info":{"declType":"value","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","BigInt"],"BigInt"]}]}]}]}},"sourceSpan":{"start":[150,1],"name":"/Users/trh/Desktop/purescript-bigints/src/Data/BigInt.purs","end":[150,42]}},{"kind":null,"children":[],"comments":"Convert an integer to a BigInt.\n","title":"fromInt","info":{"declType":"value","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","BigInt"],"BigInt"]}]}},"sourceSpan":{"start":[63,1],"name":"/Users/trh/Desktop/purescript-bigints/src/Data/BigInt.purs","end":[63,40]}},{"kind":null,"children":[],"comments":"Convert a Number to a BigInt. The fractional part is truncated.\n","title":"fromNumber","info":{"declType":"value","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Number"]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","BigInt"],"BigInt"]}]}]}},"sourceSpan":{"start":[77,1],"name":"/Users/trh/Desktop/purescript-bigints/src/Data/BigInt.purs","end":[77,37]}},{"kind":null,"children":[],"comments":"Converts a type-level integer into a `BigInt`:\n```\nimport Type.Proxy (Proxy(..))\nfoo = fromTLInt (Proxy :: Proxy 857981209301293808359384092830482)\n```\n","title":"fromTLInt","info":{"declType":"value","type":{"annotation":[],"tag":"ForAll","contents":["i",{"annotation":[],"tag":"ForAll","contents":["sym",{"annotation":[],"tag":"ConstrainedType","contents":[{"constraintAnn":[],"constraintClass":[["Prim","Int"],"ToString"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"i"},{"annotation":[],"tag":"TypeVar","contents":"sym"}],"constraintKindArgs":[],"constraintData":null},{"annotation":[],"tag":"ConstrainedType","contents":[{"constraintAnn":[],"constraintClass":[["Data","Reflectable"],"Reflectable"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"sym"},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"String"]}],"constraintKindArgs":[],"constraintData":null},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Type","Proxy"],"Proxy"]},{"annotation":[],"tag":"TypeVar","contents":"i"}]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","BigInt"],"BigInt"]}]}]}]},null]},null]}},"sourceSpan":{"start":[127,1],"name":"/Users/trh/Desktop/purescript-bigints/src/Data/BigInt.purs","end":[127,89]}},{"kind":null,"children":[],"comments":"A decimal representation of the `BigInt` as a `String`.\n","title":"toString","info":{"declType":"value","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","BigInt"],"BigInt"]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}},"sourceSpan":{"start":[167,1],"name":"/Users/trh/Desktop/purescript-bigints/src/Data/BigInt.purs","end":[167,29]}},{"kind":null,"children":[],"comments":"A decimal representation of the `BigInt` as a `NonEmptyString`.\n","title":"toNonEmptyString","info":{"declType":"value","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","BigInt"],"BigInt"]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","String","NonEmpty","Internal"],"NonEmptyString"]}]}},"sourceSpan":{"start":[171,1],"name":"/Users/trh/Desktop/purescript-bigints/src/Data/BigInt.purs","end":[171,45]}},{"kind":null,"children":[],"comments":"A base N representation of the `BigInt` as a `String`.\n","title":"toBase","info":{"declType":"value","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","BigInt"],"BigInt"]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}]}},"sourceSpan":{"start":[178,1],"name":"/Users/trh/Desktop/purescript-bigints/src/Data/BigInt.purs","end":[178,49]}},{"kind":null,"children":[],"comments":"A base N representation of the `BigInt` as a `NonEmptyString`.\n","title":"toBase'","info":{"declType":"value","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","BigInt"],"BigInt"]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","String","NonEmpty","Internal"],"NonEmptyString"]}]}]}},"sourceSpan":{"start":[181,1],"name":"/Users/trh/Desktop/purescript-bigints/src/Data/BigInt.purs","end":[181,43]}},{"kind":null,"children":[],"comments":"A base N representation of the `BigInt` as an array of digits.\n","title":"digitsInBase","info":{"declType":"value","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","BigInt"],"BigInt"]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","BigInt"],"BaseDigits"]}]}]}},"sourceSpan":{"start":[175,1],"name":"/Users/trh/Desktop/purescript-bigints/src/Data/BigInt.purs","end":[175,59]}},{"kind":null,"children":[],"comments":"The absolute value.\n","title":"abs","info":{"declType":"value","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","BigInt"],"BigInt"]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","BigInt"],"BigInt"]}]}},"sourceSpan":{"start":[89,1],"name":"/Users/trh/Desktop/purescript-bigints/src/Data/BigInt.purs","end":[89,39]}},{"kind":null,"children":[],"comments":"Returns `true` if the number is even, `false` otherwise.\n","title":"even","info":{"declType":"value","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","BigInt"],"BigInt"]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}},"sourceSpan":{"start":[92,1],"name":"/Users/trh/Desktop/purescript-bigints/src/Data/BigInt.purs","end":[92,41]}},{"kind":null,"children":[],"comments":"Returns `true` if the number is odd, `false` otherwise.\n","title":"odd","info":{"declType":"value","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","BigInt"],"BigInt"]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}},"sourceSpan":{"start":[95,1],"name":"/Users/trh/Desktop/purescript-bigints/src/Data/BigInt.purs","end":[95,40]}},{"kind":null,"children":[],"comments":"Returns `true` if the number is prime, `false` otherwise.\n","title":"prime","info":{"declType":"value","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","BigInt"],"BigInt"]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}},"sourceSpan":{"start":[98,1],"name":"/Users/trh/Desktop/purescript-bigints/src/Data/BigInt.purs","end":[98,42]}},{"kind":null,"children":[],"comments":"Exponentiation for `BigInt`. If the exponent is less than 0, `pow`\nreturns 0. Also, `pow zero zero == one`.\n","title":"pow","info":{"declType":"value","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","BigInt"],"BigInt"]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","BigInt"],"BigInt"]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","BigInt"],"BigInt"]}]}]}},"sourceSpan":{"start":[86,1],"name":"/Users/trh/Desktop/purescript-bigints/src/Data/BigInt.purs","end":[86,49]}},{"kind":null,"children":[],"comments":"Invert the bits.\n","title":"not","info":{"declType":"value","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","BigInt"],"BigInt"]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","BigInt"],"BigInt"]}]}},"sourceSpan":{"start":[101,1],"name":"/Users/trh/Desktop/purescript-bigints/src/Data/BigInt.purs","end":[101,39]}},{"kind":null,"children":[],"comments":"or the bits.\n","title":"or","info":{"declType":"value","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","BigInt"],"BigInt"]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","BigInt"],"BigInt"]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","BigInt"],"BigInt"]}]}]}},"sourceSpan":{"start":[104,1],"name":"/Users/trh/Desktop/purescript-bigints/src/Data/BigInt.purs","end":[104,48]}},{"kind":null,"children":[],"comments":"Exlusive or the bits.\n","title":"xor","info":{"declType":"value","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","BigInt"],"BigInt"]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","BigInt"],"BigInt"]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","BigInt"],"BigInt"]}]}]}},"sourceSpan":{"start":[107,1],"name":"/Users/trh/Desktop/purescript-bigints/src/Data/BigInt.purs","end":[107,49]}},{"kind":null,"children":[],"comments":"and the bits.\n","title":"and","info":{"declType":"value","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","BigInt"],"BigInt"]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","BigInt"],"BigInt"]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","BigInt"],"BigInt"]}]}]}},"sourceSpan":{"start":[110,1],"name":"/Users/trh/Desktop/purescript-bigints/src/Data/BigInt.purs","end":[110,49]}},{"kind":null,"children":[],"comments":"shift the bits left and zero fill.\n","title":"shl","info":{"declType":"value","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","BigInt"],"BigInt"]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Number"]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","BigInt"],"BigInt"]}]}]}},"sourceSpan":{"start":[113,1],"name":"/Users/trh/Desktop/purescript-bigints/src/Data/BigInt.purs","end":[113,49]}},{"kind":null,"children":[],"comments":"Shift the bits right and maintain pos/neg.\n","title":"shr","info":{"declType":"value","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","BigInt"],"BigInt"]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Number"]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","BigInt"],"BigInt"]}]}]}},"sourceSpan":{"start":[116,1],"name":"/Users/trh/Desktop/purescript-bigints/src/Data/BigInt.purs","end":[116,49]}},{"kind":null,"children":[],"comments":"Truncating integer division\n","title":"quot","info":{"declType":"value","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","BigInt"],"BigInt"]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","BigInt"],"BigInt"]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","BigInt"],"BigInt"]}]}]}},"sourceSpan":{"start":[215,1],"name":"/Users/trh/Desktop/purescript-bigints/src/Data/BigInt.purs","end":[215,35]}},{"kind":null,"children":[],"comments":"The remainder after truncating integer division\n","title":"rem","info":{"declType":"value","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","BigInt"],"BigInt"]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","BigInt"],"BigInt"]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","BigInt"],"BigInt"]}]}]}},"sourceSpan":{"start":[219,1],"name":"/Users/trh/Desktop/purescript-bigints/src/Data/BigInt.purs","end":[219,34]}},{"kind":null,"children":[],"comments":null,"title":"toInt","info":{"declType":"value","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","BigInt"],"BigInt"]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]}]}},"sourceSpan":{"start":[65,1],"name":"/Users/trh/Desktop/purescript-bigints/src/Data/BigInt.purs","end":[65,29]}},{"kind":null,"children":[],"comments":"Converts a BigInt to a Number. Loses precision for numbers which are too\nlarge.\n","title":"toNumber","info":{"declType":"value","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","BigInt"],"BigInt"]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Number"]}]}},"sourceSpan":{"start":[82,1],"name":"/Users/trh/Desktop/purescript-bigints/src/Data/BigInt.purs","end":[82,44]}}]}],"resolvedDependencies":{"purescript-exceptions":"6.0.0","purescript-newtype":"5.0.0","purescript-effect":"4.0.0","purescript-quickcheck-laws":"7.0.0","purescript-control":"6.0.0","purescript-console":"6.0.0","purescript-either":"6.0.0","purescript-profunctor":"6.0.0","purescript-arrays":"7.0.0","purescript-maybe":"6.0.0","purescript-type-equality":"4.0.1","purescript-exists":"6.0.0","purescript-distributive":"6.0.0","purescript-unfoldable":"6.0.0","purescript-invariant":"6.0.0","purescript-lcg":"4.0.0","purescript-lazy":"6.0.0","purescript-foldable-traversable":"6.0.0","purescript-tailrec":"6.0.0","purescript-gen":"4.0.0","purescript-functors":"5.0.0","purescript-prelude":"6.0.0","purescript-st":"6.0.0","purescript-bifunctors":"6.0.0","purescript-nonempty":"7.0.0","purescript-contravariant":"6.0.0","purescript-assert":"6.0.0","purescript-unsafe-coerce":"6.0.0","purescript-refs":"6.0.0","purescript-integers":"6.0.0","purescript-orders":"6.0.0","purescript-const":"6.0.0","purescript-record":"4.0.0","purescript-transformers":"6.0.0","purescript-numbers":"9.0.0","purescript-enums":"6.0.0","purescript-psci-support":"6.0.0","purescript-random":"6.0.0","purescript-tuples":"7.0.0","purescript-partial":"4.0.0","purescript-quickcheck":"8.0.1","purescript-strings":"6.0.0","purescript-identity":"6.0.0","purescript-safe-coerce":"2.0.0","purescript-lists":"7.0.0","purescript-functions":"6.0.0"},"version":"7.0.1","github":["sharkdp","purescript-bigints"],"versionTag":"v7.0.1","moduleMap":{"Data.BooleanAlgebra":"purescript-prelude","Test.QuickCheck.Laws.Control.Semigroupoid":"purescript-quickcheck-laws","Data.Decide":"purescript-contravariant","Data.Ring":"purescript-prelude","Data.Semigroup.Generic":"purescript-prelude","Control.Monad.Trans.Class":"purescript-transformers","Record.Unsafe.Union":"purescript-record","Data.Functor.Product":"purescript-functors","Data.Functor.Flip":"purescript-functors","Data.NonEmpty":"purescript-nonempty","Effect.Uncurried":"purescript-effect","Control.Monad.Identity.Trans":"purescript-transformers","Data.Char.Gen":"purescript-strings","Test.QuickCheck.Laws.Data.Enum":"purescript-quickcheck-laws","Data.Monoid.Generic":"purescript-prelude","Data.String.NonEmpty":"purescript-strings","Effect":"purescript-effect","Test.QuickCheck.Laws.Data.Foldable":"purescript-quickcheck-laws","Data.Traversable.Accum.Internal":"purescript-foldable-traversable","Test.QuickCheck.Laws.Data.Bounded":"purescript-quickcheck-laws","Data.Enum.Gen":"purescript-enums","Control.Comonad.Env":"purescript-transformers","Control.Comonad.Traced.Class":"purescript-transformers","Data.Functor.Costar":"purescript-functors","Data.HeytingAlgebra.Generic":"purescript-prelude","Data.Functor.Compose":"purescript-functors","Data.Int.Bits":"purescript-integers","Data.String.CodePoints":"purescript-strings","Data.Ord":"purescript-prelude","Test.QuickCheck.Laws.Control.Apply":"purescript-quickcheck-laws","Control.Monad.Gen":"purescript-gen","Data.Bounded.Generic":"purescript-prelude","Test.QuickCheck.Laws.Control.Alt":"purescript-quickcheck-laws","Test.QuickCheck.Laws.Data.Monoid":"purescript-quickcheck-laws","Test.QuickCheck.Laws.Data.HeytingAlgebra":"purescript-quickcheck-laws","Test.QuickCheck.Laws.Data":"purescript-quickcheck-laws","Safe.Coerce":"purescript-safe-coerce","Data.Monoid.Dual":"purescript-prelude","Control.Monad.Rec.Class":"purescript-tailrec","Test.QuickCheck.Laws.Control.Bind":"purescript-quickcheck-laws","Data.Bitraversable":"purescript-foldable-traversable","Record.Builder":"purescript-record","Data.Boolean":"purescript-prelude","Data.Show.Generic":"purescript-prelude","Control.Biapplicative":"purescript-bifunctors","Test.QuickCheck.Laws.Control.Monad":"purescript-quickcheck-laws","Effect.Exception.Unsafe":"purescript-exceptions","Data.Array.NonEmpty.Internal":"purescript-arrays","Type.Proxy":"purescript-prelude","Data.Array.ST.Iterator":"purescript-arrays","Data.Enum.Generic":"purescript-enums","Test.QuickCheck.Laws.Data.Ord":"purescript-quickcheck-laws","Data.String.Pattern":"purescript-strings","Data.Bounded":"purescript-prelude","Test.QuickCheck.Laws.Control":"purescript-quickcheck-laws","Control.Monad.State.Trans":"purescript-transformers","Data.TraversableWithIndex":"purescript-foldable-traversable","Data.Int":"purescript-integers","Data.Profunctor.Cochoice":"purescript-profunctor","Data.Show":"purescript-prelude","Random.LCG":"purescript-lcg","Control.Monad.Writer.Trans":"purescript-transformers","Data.Foldable":"purescript-foldable-traversable","Data.Divide":"purescript-contravariant","Control.Comonad.Store.Class":"purescript-transformers","Data.Number":"purescript-numbers","Data.Enum":"purescript-enums","Control.Apply":"purescript-prelude","Data.Functor.Contravariant":"purescript-contravariant","Data.Tuple.Nested":"purescript-tuples","Data.List.Internal":"purescript-lists","Control.Monad":"purescript-prelude","Data.Lazy":"purescript-lazy","Data.Monoid":"purescript-prelude","Data.Profunctor.Closed":"purescript-profunctor","Control.Monad.List.Trans":"purescript-transformers","Data.Ord.Generic":"purescript-prelude","Control.Monad.RWS":"purescript-transformers","Data.String.Common":"purescript-strings","Data.Maybe.First":"purescript-maybe","Control.Bind":"purescript-prelude","Data.Profunctor.Split":"purescript-profunctor","Data.Number.Format":"purescript-numbers","Data.Monoid.Additive":"purescript-prelude","Data.Symbol":"purescript-prelude","Data.String.Regex":"purescript-strings","Data.Profunctor.Join":"purescript-profunctor","Data.HeytingAlgebra":"purescript-prelude","Control.Alt":"purescript-control","Control.Monad.Maybe.Trans":"purescript-transformers","Control.Monad.Cont":"purescript-transformers","Control.Monad.ST.Internal":"purescript-st","Effect.Ref":"purescript-refs","Data.Either.Inject":"purescript-either","Data.List.ZipList":"purescript-lists","Data.Ord.Min":"purescript-orders","Data.Functor.Coproduct.Nested":"purescript-functors","Data.Ring.Generic":"purescript-prelude","Data.Semigroup":"purescript-prelude","Test.QuickCheck.Laws.Data.Functor":"purescript-quickcheck-laws","Test.QuickCheck.Laws.Control.Category":"purescript-quickcheck-laws","Data.Array.NonEmpty":"purescript-arrays","Control.Monad.Reader":"purescript-transformers","Data.Const":"purescript-const","Control.Comonad.Traced.Trans":"purescript-transformers","Data.Ord.Down":"purescript-orders","Data.Number.Approximate":"purescript-numbers","Data.Array.ST.Partial":"purescript-arrays","Effect.Unsafe":"purescript-effect","Data.Tuple":"purescript-tuples","Data.Functor.Clown":"purescript-functors","Data.Semigroup.Foldable":"purescript-foldable-traversable","Control.Biapply":"purescript-bifunctors","Data.Distributive":"purescript-distributive","Effect.Exception":"purescript-exceptions","Type.Equality":"purescript-type-equality","Control.Alternative":"purescript-control","Data.Semiring":"purescript-prelude","Data.Functor.Product2":"purescript-functors","Data.Exists":"purescript-exists","Effect.Console":"purescript-console","Data.Traversable.Accum":"purescript-foldable-traversable","Data.CommutativeRing":"purescript-prelude","Data.NaturalTransformation":"purescript-prelude","Data.Monoid.Conj":"purescript-prelude","Test.QuickCheck.Laws.Data.EuclideanRing":"purescript-quickcheck-laws","Test.QuickCheck.Laws.Data.Field":"purescript-quickcheck-laws","Data.Functor.App":"purescript-functors","Data.Profunctor.Star":"purescript-profunctor","Data.Unfoldable":"purescript-unfoldable","Test.QuickCheck.Laws.Control.Comonad":"purescript-quickcheck-laws","Control.Comonad.Store.Trans":"purescript-transformers","Control.Monad.ST":"purescript-st","Control.Monad.State.Class":"purescript-transformers","Data.List.Types":"purescript-lists","Data.String.NonEmpty.CodeUnits":"purescript-strings","Data.Functor":"purescript-prelude","Unsafe.Coerce":"purescript-unsafe-coerce","Control.Monad.Writer.Class":"purescript-transformers","Data.Profunctor.Strong":"purescript-profunctor","Test.QuickCheck.Laws.Data.Semigroup":"purescript-quickcheck-laws","Control.Monad.Except":"purescript-transformers","Data.List.Lazy.Types":"purescript-lists","Control.Category":"purescript-prelude","Test.QuickCheck.Arbitrary":"purescript-quickcheck","Control.Monad.Gen.Common":"purescript-gen","Control.Monad.RWS.Trans":"purescript-transformers","Test.QuickCheck.Laws":"purescript-quickcheck-laws","Test.QuickCheck.Laws.Data.CommutativeRing":"purescript-quickcheck-laws","Control.Monad.Cont.Trans":"purescript-transformers","Data.Maybe":"purescript-maybe","Data.String.Regex.Unsafe":"purescript-strings","Test.QuickCheck.Laws.Control.Alternative":"purescript-quickcheck-laws","Data.Profunctor":"purescript-profunctor","Control.Comonad":"purescript-control","Control.Monad.ST.Global":"purescript-st","Data.Function":"purescript-prelude","Data.List":"purescript-lists","Test.QuickCheck.Laws.Data.Semiring":"purescript-quickcheck-laws","Data.Field":"purescript-prelude","Test.QuickCheck.Laws.Data.BoundedEnum":"purescript-quickcheck-laws","Data.List.Lazy":"purescript-lists","Data.EuclideanRing":"purescript-prelude","Data.Semigroup.Last":"purescript-prelude","Data.Semigroup.First":"purescript-prelude","Data.Functor.Invariant":"purescript-invariant","Control.Comonad.Traced":"purescript-transformers","Data.Comparison":"purescript-contravariant","Data.String.Unsafe":"purescript-strings","Test.QuickCheck.Laws.Data.DivisionRing":"purescript-quickcheck-laws","Prelude":"purescript-prelude","Effect.Class":"purescript-effect","Data.Predicate":"purescript-contravariant","Partial.Unsafe":"purescript-partial","Data.Array":"purescript-arrays","Control.Extend":"purescript-control","Data.Unfoldable1":"purescript-unfoldable","Control.Lazy":"purescript-control","Data.Function.Uncurried":"purescript-functions","Control.Monad.Reader.Trans":"purescript-transformers","Data.Functor.Product.Nested":"purescript-functors","Test.QuickCheck.Laws.Data.FunctorWithIndex":"purescript-quickcheck-laws","Control.Comonad.Env.Class":"purescript-transformers","Data.Eq":"purescript-prelude","Data.Either.Nested":"purescript-either","Data.Newtype":"purescript-newtype","Data.Semigroup.Traversable":"purescript-foldable-traversable","Data.Bifunctor":"purescript-bifunctors","Effect.Random":"purescript-random","Test.Assert":"purescript-assert","Data.Monoid.Disj":"purescript-prelude","Control.Monad.Gen.Class":"purescript-gen","Data.Array.Partial":"purescript-arrays","Data.String.CaseInsensitive":"purescript-strings","Control.MonadPlus":"purescript-control","Data.Void":"purescript-prelude","Data.Profunctor.Costrong":"purescript-profunctor","Data.Ord.Max":"purescript-orders","Control.Comonad.Store":"purescript-transformers","Control.Monad.Except.Trans":"purescript-transformers","Data.String.CodeUnits":"purescript-strings","Test.QuickCheck.Laws.Control.Extend":"purescript-quickcheck-laws","Data.FunctorWithIndex":"purescript-foldable-traversable","Data.Divisible":"purescript-contravariant","Data.Eq.Generic":"purescript-prelude","Data.DivisionRing":"purescript-prelude","Record":"purescript-record","Test.QuickCheck.Laws.Control.MonadPlus":"purescript-quickcheck-laws","PSCI.Support":"purescript-psci-support","Data.Equivalence":"purescript-contravariant","Data.Maybe.Last":"purescript-maybe","Data.Unit":"purescript-prelude","Data.List.NonEmpty":"purescript-lists","Data.List.Lazy.NonEmpty":"purescript-lists","Data.Ordering":"purescript-prelude","Data.Functor.Coproduct":"purescript-functors","Control.Monad.Cont.Class":"purescript-transformers","Data.Identity":"purescript-identity","Test.QuickCheck.Laws.Data.Eq":"purescript-quickcheck-laws","Control.Comonad.Trans.Class":"purescript-transformers","Data.String":"purescript-strings","Data.Reflectable":"purescript-prelude","Control.Plus":"purescript-control","Test.QuickCheck":"purescript-quickcheck","Partial":"purescript-partial","Control.Comonad.Env.Trans":"purescript-transformers","Test.QuickCheck.Laws.Control.Applicative":"purescript-quickcheck-laws","Control.Monad.Reader.Class":"purescript-transformers","Data.String.NonEmpty.CodePoints":"purescript-strings","Data.Decidable":"purescript-contravariant","Test.QuickCheck.Laws.Data.BooleanAlgebra":"purescript-quickcheck-laws","Data.String.NonEmpty.Internal":"purescript-strings","Data.Monoid.Multiplicative":"purescript-prelude","Data.String.NonEmpty.CaseInsensitive":"purescript-strings","Data.Functor.Joker":"purescript-functors","Data.Array.ST":"purescript-arrays","Test.QuickCheck.Laws.Data.Ring":"purescript-quickcheck-laws","Control.Monad.Error.Class":"purescript-transformers","Control.Semigroupoid":"purescript-prelude","Data.Monoid.Alternate":"purescript-control","Data.Char":"purescript-strings","Data.Generic.Rep":"purescript-prelude","Effect.Class.Console":"purescript-console","Data.Bifunctor.Join":"purescript-bifunctors","Data.Bifoldable":"purescript-foldable-traversable","Control.Monad.ST.Ref":"purescript-st","Data.Monoid.Endo":"purescript-prelude","Control.Monad.State":"purescript-transformers","Data.List.Partial":"purescript-lists","Data.Semiring.Generic":"purescript-prelude","Data.String.Regex.Flags":"purescript-strings","Test.QuickCheck.Laws.Control.Plus":"purescript-quickcheck-laws","Data.Either":"purescript-either","Control.Applicative":"purescript-prelude","Control.Monad.ST.Class":"purescript-st","Data.FoldableWithIndex":"purescript-foldable-traversable","Data.Op":"purescript-contravariant","Record.Unsafe":"purescript-prelude","Test.QuickCheck.Gen":"purescript-quickcheck","Control.Monad.Writer":"purescript-transformers","Data.Functor.Coproduct.Inject":"purescript-functors","Data.Profunctor.Choice":"purescript-profunctor","Data.Traversable":"purescript-foldable-traversable","Data.String.Gen":"purescript-strings"},"compilerVersion":"0.14.5"}