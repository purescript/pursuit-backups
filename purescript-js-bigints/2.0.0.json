{"compilerVersion":"0.15.6","github":["sigma-andex","purescript-js-bigints"],"moduleMap":{"Control.Alt":"purescript-control","Control.Alternative":"purescript-control","Control.Applicative":"purescript-prelude","Control.Apply":"purescript-prelude","Control.Bind":"purescript-prelude","Control.Category":"purescript-prelude","Control.Comonad":"purescript-control","Control.Extend":"purescript-control","Control.Lazy":"purescript-control","Control.Monad":"purescript-prelude","Control.MonadPlus":"purescript-control","Control.Plus":"purescript-control","Control.Semigroupoid":"purescript-prelude","Data.Boolean":"purescript-prelude","Data.BooleanAlgebra":"purescript-prelude","Data.Bounded":"purescript-prelude","Data.Bounded.Generic":"purescript-prelude","Data.CommutativeRing":"purescript-prelude","Data.DivisionRing":"purescript-prelude","Data.Eq":"purescript-prelude","Data.Eq.Generic":"purescript-prelude","Data.EuclideanRing":"purescript-prelude","Data.Field":"purescript-prelude","Data.Function":"purescript-prelude","Data.Function.Uncurried":"purescript-functions","Data.Functor":"purescript-prelude","Data.Functor.Invariant":"purescript-invariant","Data.Generic.Rep":"purescript-prelude","Data.HeytingAlgebra":"purescript-prelude","Data.HeytingAlgebra.Generic":"purescript-prelude","Data.Int":"purescript-integers","Data.Int.Bits":"purescript-integers","Data.Maybe":"purescript-maybe","Data.Maybe.First":"purescript-maybe","Data.Maybe.Last":"purescript-maybe","Data.Monoid":"purescript-prelude","Data.Monoid.Additive":"purescript-prelude","Data.Monoid.Alternate":"purescript-control","Data.Monoid.Conj":"purescript-prelude","Data.Monoid.Disj":"purescript-prelude","Data.Monoid.Dual":"purescript-prelude","Data.Monoid.Endo":"purescript-prelude","Data.Monoid.Generic":"purescript-prelude","Data.Monoid.Multiplicative":"purescript-prelude","Data.NaturalTransformation":"purescript-prelude","Data.Newtype":"purescript-newtype","Data.Number":"purescript-numbers","Data.Number.Approximate":"purescript-numbers","Data.Number.Format":"purescript-numbers","Data.Ord":"purescript-prelude","Data.Ord.Generic":"purescript-prelude","Data.Ordering":"purescript-prelude","Data.Reflectable":"purescript-prelude","Data.Ring":"purescript-prelude","Data.Ring.Generic":"purescript-prelude","Data.Semigroup":"purescript-prelude","Data.Semigroup.First":"purescript-prelude","Data.Semigroup.Generic":"purescript-prelude","Data.Semigroup.Last":"purescript-prelude","Data.Semiring":"purescript-prelude","Data.Semiring.Generic":"purescript-prelude","Data.Show":"purescript-prelude","Data.Show.Generic":"purescript-prelude","Data.Symbol":"purescript-prelude","Data.Unit":"purescript-prelude","Data.Void":"purescript-prelude","Prelude":"purescript-prelude","Record.Unsafe":"purescript-prelude","Safe.Coerce":"purescript-safe-coerce","Type.Proxy":"purescript-prelude","Unsafe.Coerce":"purescript-unsafe-coerce"},"modules":[{"comments":null,"declarations":[{"children":[{"comments":null,"info":{"declType":"instance","dependencies":[],"type":{"annotation":[],"contents":[{"annotation":[],"contents":[["Data","Semiring"],"Semiring"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["JS","BigInt"],"BigInt"],"tag":"TypeConstructor"}],"tag":"TypeApp"}},"sourceSpan":{"end":[93,14],"name":"/tmp/nix-shell.EK5B8E/tmp-40661-8ZvNoUdZfT13/purescript-js-bigints/src/JS/BigInt.purs","start":[89,1]},"title":"<anonymous>"},{"comments":null,"info":{"declType":"instance","dependencies":[],"type":{"annotation":[],"contents":[{"annotation":[],"contents":[["Data","Ring"],"Ring"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["JS","BigInt"],"BigInt"],"tag":"TypeConstructor"}],"tag":"TypeApp"}},"sourceSpan":{"end":[98,14],"name":"/tmp/nix-shell.EK5B8E/tmp-40661-8ZvNoUdZfT13/purescript-js-bigints/src/JS/BigInt.purs","start":[97,1]},"title":"<anonymous>"},{"comments":null,"info":{"declType":"instance","dependencies":[],"type":{"annotation":[],"contents":[{"annotation":[],"contents":[["Data","CommutativeRing"],"CommutativeRing"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["JS","BigInt"],"BigInt"],"tag":"TypeConstructor"}],"tag":"TypeApp"}},"sourceSpan":{"end":[104,32],"name":"/tmp/nix-shell.EK5B8E/tmp-40661-8ZvNoUdZfT13/purescript-js-bigints/src/JS/BigInt.purs","start":[104,1]},"title":"<anonymous>"},{"comments":null,"info":{"declType":"instance","dependencies":[],"type":{"annotation":[],"contents":[{"annotation":[],"contents":[["Data","EuclideanRing"],"EuclideanRing"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["JS","BigInt"],"BigInt"],"tag":"TypeConstructor"}],"tag":"TypeApp"}},"sourceSpan":{"end":[109,14],"name":"/tmp/nix-shell.EK5B8E/tmp-40661-8ZvNoUdZfT13/purescript-js-bigints/src/JS/BigInt.purs","start":[106,1]},"title":"<anonymous>"},{"comments":null,"info":{"declType":"instance","dependencies":[],"type":{"annotation":[],"contents":[{"annotation":[],"contents":[["Data","Eq"],"Eq"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["JS","BigInt"],"BigInt"],"tag":"TypeConstructor"}],"tag":"TypeApp"}},"sourceSpan":{"end":[135,16],"name":"/tmp/nix-shell.EK5B8E/tmp-40661-8ZvNoUdZfT13/purescript-js-bigints/src/JS/BigInt.purs","start":[134,1]},"title":"<anonymous>"},{"comments":null,"info":{"declType":"instance","dependencies":[],"type":{"annotation":[],"contents":[{"annotation":[],"contents":[["Data","Ord"],"Ord"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["JS","BigInt"],"BigInt"],"tag":"TypeConstructor"}],"tag":"TypeApp"}},"sourceSpan":{"end":[143,11],"name":"/tmp/nix-shell.EK5B8E/tmp-40661-8ZvNoUdZfT13/purescript-js-bigints/src/JS/BigInt.purs","start":[139,1]},"title":"<anonymous>"},{"comments":null,"info":{"declType":"instance","dependencies":[],"type":{"annotation":[],"contents":[{"annotation":[],"contents":[["Data","Show"],"Show"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["JS","BigInt"],"BigInt"],"tag":"TypeConstructor"}],"tag":"TypeApp"}},"sourceSpan":{"end":[149,18],"name":"/tmp/nix-shell.EK5B8E/tmp-40661-8ZvNoUdZfT13/purescript-js-bigints/src/JS/BigInt.purs","start":[148,1]},"title":"<anonymous>"}],"comments":null,"info":{"dataDeclType":"data","declType":"data","roles":[],"typeArguments":[]},"kind":null,"sourceSpan":{"end":[33,34],"name":"/tmp/nix-shell.EK5B8E/tmp-40661-8ZvNoUdZfT13/purescript-js-bigints/src/JS/BigInt.purs","start":[33,1]},"title":"BigInt"},{"children":[],"comments":"Convert an integer to a BigInt.\n","info":{"declType":"value","type":{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Prim"],"Int"],"tag":"TypeConstructor"}],"tag":"TypeApp"},{"annotation":[],"contents":[["JS","BigInt"],"BigInt"],"tag":"TypeConstructor"}],"tag":"TypeApp"}},"kind":null,"sourceSpan":{"end":[56,38],"name":"/tmp/nix-shell.EK5B8E/tmp-40661-8ZvNoUdZfT13/purescript-js-bigints/src/JS/BigInt.purs","start":[56,1]},"title":"fromInt"},{"children":[],"comments":"Convert a Number to a BigInt. The fractional part is truncated.\n","info":{"declType":"value","type":{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Prim"],"Number"],"tag":"TypeConstructor"}],"tag":"TypeApp"},{"annotation":[],"contents":[{"annotation":[],"contents":[["Data","Maybe"],"Maybe"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["JS","BigInt"],"BigInt"],"tag":"TypeConstructor"}],"tag":"TypeApp"}],"tag":"TypeApp"}},"kind":null,"sourceSpan":{"end":[67,35],"name":"/tmp/nix-shell.EK5B8E/tmp-40661-8ZvNoUdZfT13/purescript-js-bigints/src/JS/BigInt.purs","start":[67,1]},"title":"fromNumber"},{"children":[],"comments":"Parse a string into a `BigInt`, assuming a decimal representation. Returns\n`Nothing` if the parse fails.\n\nExamples:\n```purescript\nfromString \"42\"\nfromString \"857981209301293808359384092830482\"\nfromString \"1e100\"\n```\n","info":{"declType":"value","type":{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Prim"],"String"],"tag":"TypeConstructor"}],"tag":"TypeApp"},{"annotation":[],"contents":[{"annotation":[],"contents":[["Data","Maybe"],"Maybe"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["JS","BigInt"],"BigInt"],"tag":"TypeConstructor"}],"tag":"TypeApp"}],"tag":"TypeApp"}},"kind":null,"sourceSpan":{"end":[52,35],"name":"/tmp/nix-shell.EK5B8E/tmp-40661-8ZvNoUdZfT13/purescript-js-bigints/src/JS/BigInt.purs","start":[52,1]},"title":"fromString"},{"children":[],"comments":"Converts a type-level integer into a `BigInt`:\n```\nimport Type.Proxy (Proxy(..))\nfoo = fromTLInt (Proxy :: Proxy 857981209301293808359384092830482)\n```\n","info":{"declType":"value","type":{"annotation":[],"contents":["i",{"annotation":[],"contents":["sym",{"annotation":[],"contents":[{"constraintAnn":[],"constraintArgs":[{"annotation":[],"contents":"i","tag":"TypeVar"},{"annotation":[],"contents":"sym","tag":"TypeVar"}],"constraintClass":[["Prim","Int"],"ToString"],"constraintData":null,"constraintKindArgs":[]},{"annotation":[],"contents":[{"constraintAnn":[],"constraintArgs":[{"annotation":[],"contents":"sym","tag":"TypeVar"},{"annotation":[],"contents":[["Prim"],"String"],"tag":"TypeConstructor"}],"constraintClass":[["Data","Reflectable"],"Reflectable"],"constraintData":null,"constraintKindArgs":[]},{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[{"annotation":[],"contents":[["Type","Proxy"],"Proxy"],"tag":"TypeConstructor"},{"annotation":[],"contents":"i","tag":"TypeVar"}],"tag":"TypeApp"}],"tag":"TypeApp"},{"annotation":[],"contents":[["JS","BigInt"],"BigInt"],"tag":"TypeConstructor"}],"tag":"TypeApp"}],"tag":"ConstrainedType"}],"tag":"ConstrainedType"},null],"tag":"ForAll"},null],"tag":"ForAll"}},"kind":null,"sourceSpan":{"end":[79,80],"name":"/tmp/nix-shell.EK5B8E/tmp-40661-8ZvNoUdZfT13/purescript-js-bigints/src/JS/BigInt.purs","start":[79,1]},"title":"fromTLInt"},{"children":[],"comments":"Clamps a BigInt value to the given number of bits, and returns that value as a signed integer.\n","info":{"declType":"value","type":{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Prim"],"Int"],"tag":"TypeConstructor"}],"tag":"TypeApp"},{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["JS","BigInt"],"BigInt"],"tag":"TypeConstructor"}],"tag":"TypeApp"},{"annotation":[],"contents":[["JS","BigInt"],"BigInt"],"tag":"TypeConstructor"}],"tag":"TypeApp"}],"tag":"TypeApp"}},"kind":null,"sourceSpan":{"end":[152,46],"name":"/tmp/nix-shell.EK5B8E/tmp-40661-8ZvNoUdZfT13/purescript-js-bigints/src/JS/BigInt.purs","start":[152,1]},"title":"asIntN"},{"children":[],"comments":"Clamps a BigInt value to the given number of bits, and returns that value as an unsigned integer.\n","info":{"declType":"value","type":{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Prim"],"Int"],"tag":"TypeConstructor"}],"tag":"TypeApp"},{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["JS","BigInt"],"BigInt"],"tag":"TypeConstructor"}],"tag":"TypeApp"},{"annotation":[],"contents":[["JS","BigInt"],"BigInt"],"tag":"TypeConstructor"}],"tag":"TypeApp"}],"tag":"TypeApp"}},"kind":null,"sourceSpan":{"end":[155,47],"name":"/tmp/nix-shell.EK5B8E/tmp-40661-8ZvNoUdZfT13/purescript-js-bigints/src/JS/BigInt.purs","start":[155,1]},"title":"asUintN"},{"children":[],"comments":"A decimal representation of the `BigInt` as a `String`.\n","info":{"declType":"value","type":{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["JS","BigInt"],"BigInt"],"tag":"TypeConstructor"}],"tag":"TypeApp"},{"annotation":[],"contents":[["Prim"],"String"],"tag":"TypeConstructor"}],"tag":"TypeApp"}},"kind":null,"sourceSpan":{"end":[146,42],"name":"/tmp/nix-shell.EK5B8E/tmp-40661-8ZvNoUdZfT13/purescript-js-bigints/src/JS/BigInt.purs","start":[146,1]},"title":"toString"},{"children":[],"comments":null,"info":{"declType":"value","type":{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Data","Int"],"Radix"],"tag":"TypeConstructor"}],"tag":"TypeApp"},{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["JS","BigInt"],"BigInt"],"tag":"TypeConstructor"}],"tag":"TypeApp"},{"annotation":[],"contents":[["Prim"],"String"],"tag":"TypeConstructor"}],"tag":"TypeApp"}],"tag":"TypeApp"}},"kind":null,"sourceSpan":{"end":[184,52],"name":"/tmp/nix-shell.EK5B8E/tmp-40661-8ZvNoUdZfT13/purescript-js-bigints/src/JS/BigInt.purs","start":[184,1]},"title":"toStringAs"},{"children":[],"comments":null,"info":{"declType":"value","type":{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["JS","BigInt"],"BigInt"],"tag":"TypeConstructor"}],"tag":"TypeApp"},{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["JS","BigInt"],"BigInt"],"tag":"TypeConstructor"}],"tag":"TypeApp"},{"annotation":[],"contents":[["JS","BigInt"],"BigInt"],"tag":"TypeConstructor"}],"tag":"TypeApp"}],"tag":"TypeApp"}},"kind":null,"sourceSpan":{"end":[112,46],"name":"/tmp/nix-shell.EK5B8E/tmp-40661-8ZvNoUdZfT13/purescript-js-bigints/src/JS/BigInt.purs","start":[112,1]},"title":"pow"},{"children":[],"comments":"Invert the bits.\n","info":{"declType":"value","type":{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["JS","BigInt"],"BigInt"],"tag":"TypeConstructor"}],"tag":"TypeApp"},{"annotation":[],"contents":[["JS","BigInt"],"BigInt"],"tag":"TypeConstructor"}],"tag":"TypeApp"}},"kind":null,"sourceSpan":{"end":[118,37],"name":"/tmp/nix-shell.EK5B8E/tmp-40661-8ZvNoUdZfT13/purescript-js-bigints/src/JS/BigInt.purs","start":[118,1]},"title":"not"},{"children":[],"comments":"and the bits.\n","info":{"declType":"value","type":{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["JS","BigInt"],"BigInt"],"tag":"TypeConstructor"}],"tag":"TypeApp"},{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["JS","BigInt"],"BigInt"],"tag":"TypeConstructor"}],"tag":"TypeApp"},{"annotation":[],"contents":[["JS","BigInt"],"BigInt"],"tag":"TypeConstructor"}],"tag":"TypeApp"}],"tag":"TypeApp"}},"kind":null,"sourceSpan":{"end":[124,46],"name":"/tmp/nix-shell.EK5B8E/tmp-40661-8ZvNoUdZfT13/purescript-js-bigints/src/JS/BigInt.purs","start":[124,1]},"title":"and"},{"children":[],"comments":"or the bits.\n","info":{"declType":"value","type":{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["JS","BigInt"],"BigInt"],"tag":"TypeConstructor"}],"tag":"TypeApp"},{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["JS","BigInt"],"BigInt"],"tag":"TypeConstructor"}],"tag":"TypeApp"},{"annotation":[],"contents":[["JS","BigInt"],"BigInt"],"tag":"TypeConstructor"}],"tag":"TypeApp"}],"tag":"TypeApp"}},"kind":null,"sourceSpan":{"end":[115,45],"name":"/tmp/nix-shell.EK5B8E/tmp-40661-8ZvNoUdZfT13/purescript-js-bigints/src/JS/BigInt.purs","start":[115,1]},"title":"or"},{"children":[],"comments":"shift the bits left and zero fill.\n","info":{"declType":"value","type":{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["JS","BigInt"],"BigInt"],"tag":"TypeConstructor"}],"tag":"TypeApp"},{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["JS","BigInt"],"BigInt"],"tag":"TypeConstructor"}],"tag":"TypeApp"},{"annotation":[],"contents":[["JS","BigInt"],"BigInt"],"tag":"TypeConstructor"}],"tag":"TypeApp"}],"tag":"TypeApp"}},"kind":null,"sourceSpan":{"end":[127,46],"name":"/tmp/nix-shell.EK5B8E/tmp-40661-8ZvNoUdZfT13/purescript-js-bigints/src/JS/BigInt.purs","start":[127,1]},"title":"shl"},{"children":[],"comments":"Shift the bits right and maintain pos/neg.\n","info":{"declType":"value","type":{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["JS","BigInt"],"BigInt"],"tag":"TypeConstructor"}],"tag":"TypeApp"},{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["JS","BigInt"],"BigInt"],"tag":"TypeConstructor"}],"tag":"TypeApp"},{"annotation":[],"contents":[["JS","BigInt"],"BigInt"],"tag":"TypeConstructor"}],"tag":"TypeApp"}],"tag":"TypeApp"}},"kind":null,"sourceSpan":{"end":[130,46],"name":"/tmp/nix-shell.EK5B8E/tmp-40661-8ZvNoUdZfT13/purescript-js-bigints/src/JS/BigInt.purs","start":[130,1]},"title":"shr"},{"children":[],"comments":"Exlusive or the bits.\n","info":{"declType":"value","type":{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["JS","BigInt"],"BigInt"],"tag":"TypeConstructor"}],"tag":"TypeApp"},{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["JS","BigInt"],"BigInt"],"tag":"TypeConstructor"}],"tag":"TypeApp"},{"annotation":[],"contents":[["JS","BigInt"],"BigInt"],"tag":"TypeConstructor"}],"tag":"TypeApp"}],"tag":"TypeApp"}},"kind":null,"sourceSpan":{"end":[121,46],"name":"/tmp/nix-shell.EK5B8E/tmp-40661-8ZvNoUdZfT13/purescript-js-bigints/src/JS/BigInt.purs","start":[121,1]},"title":"xor"},{"children":[],"comments":"Returns whether an `BigInt` is an even number.\n\n``` purescript\neven (fromInt 0) == true\neven (fromInt 1) == false\n```\n","info":{"declType":"value","type":{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["JS","BigInt"],"BigInt"],"tag":"TypeConstructor"}],"tag":"TypeApp"},{"annotation":[],"contents":[["Prim"],"Boolean"],"tag":"TypeConstructor"}],"tag":"TypeApp"}},"kind":null,"sourceSpan":{"end":[172,24],"name":"/tmp/nix-shell.EK5B8E/tmp-40661-8ZvNoUdZfT13/purescript-js-bigints/src/JS/BigInt.purs","start":[172,1]},"title":"even"},{"children":[],"comments":"The negation of `even`.\n\n``` purescript\nodd (fromInt 0) == false\nodd (fromInt 1) == true\n```\n","info":{"declType":"value","type":{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["JS","BigInt"],"BigInt"],"tag":"TypeConstructor"}],"tag":"TypeApp"},{"annotation":[],"contents":[["Prim"],"Boolean"],"tag":"TypeConstructor"}],"tag":"TypeApp"}},"kind":null,"sourceSpan":{"end":[181,23],"name":"/tmp/nix-shell.EK5B8E/tmp-40661-8ZvNoUdZfT13/purescript-js-bigints/src/JS/BigInt.purs","start":[181,1]},"title":"odd"},{"children":[],"comments":"Returns whether an `BigInt` is `Even` or `Odd`.\n\n``` purescript\nparity (fromInt 0) == Even\nparity (fromInt 1) == Odd\n```\n","info":{"declType":"value","type":{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["JS","BigInt"],"BigInt"],"tag":"TypeConstructor"}],"tag":"TypeApp"},{"annotation":[],"contents":[["Data","Int"],"Parity"],"tag":"TypeConstructor"}],"tag":"TypeApp"}},"kind":null,"sourceSpan":{"end":[163,25],"name":"/tmp/nix-shell.EK5B8E/tmp-40661-8ZvNoUdZfT13/purescript-js-bigints/src/JS/BigInt.purs","start":[163,1]},"title":"parity"}],"name":"JS.BigInt","reExports":[{"declarations":[{"children":[],"comments":"The number of unique digits (including zero) used to represent integers in\na specific base.\n","info":{"dataDeclType":"newtype","declType":"data","roles":[],"typeArguments":[]},"kind":null,"sourceSpan":{"end":[175,26],"name":"/tmp/nix-shell.EK5B8E/tmp-40661-m3mlSg19mZ3h/.registry/integers-6.0.0/src/Data/Int.purs","start":[175,1]},"title":"Radix"},{"children":[{"comments":null,"info":{"arguments":[],"declType":"dataConstructor"},"sourceSpan":{"end":[112,19],"name":"/tmp/nix-shell.EK5B8E/tmp-40661-m3mlSg19mZ3h/.registry/integers-6.0.0/src/Data/Int.purs","start":[112,13]},"title":"Even"},{"comments":null,"info":{"arguments":[],"declType":"dataConstructor"},"sourceSpan":{"end":[112,25],"name":"/tmp/nix-shell.EK5B8E/tmp-40661-m3mlSg19mZ3h/.registry/integers-6.0.0/src/Data/Int.purs","start":[112,20]},"title":"Odd"},{"comments":null,"info":{"declType":"instance","dependencies":[],"type":{"annotation":[],"contents":[{"annotation":[],"contents":[["Data","Eq"],"Eq"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Data","Int"],"Parity"],"tag":"TypeConstructor"}],"tag":"TypeApp"}},"sourceSpan":{"end":[114,38],"name":"/tmp/nix-shell.EK5B8E/tmp-40661-m3mlSg19mZ3h/.registry/integers-6.0.0/src/Data/Int.purs","start":[114,1]},"title":"eqParity"},{"comments":null,"info":{"declType":"instance","dependencies":[],"type":{"annotation":[],"contents":[{"annotation":[],"contents":[["Data","Ord"],"Ord"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Data","Int"],"Parity"],"tag":"TypeConstructor"}],"tag":"TypeApp"}},"sourceSpan":{"end":[115,40],"name":"/tmp/nix-shell.EK5B8E/tmp-40661-m3mlSg19mZ3h/.registry/integers-6.0.0/src/Data/Int.purs","start":[115,1]},"title":"ordParity"},{"comments":null,"info":{"declType":"instance","dependencies":[],"type":{"annotation":[],"contents":[{"annotation":[],"contents":[["Data","Show"],"Show"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Data","Int"],"Parity"],"tag":"TypeConstructor"}],"tag":"TypeApp"}},"sourceSpan":{"end":[119,19],"name":"/tmp/nix-shell.EK5B8E/tmp-40661-m3mlSg19mZ3h/.registry/integers-6.0.0/src/Data/Int.purs","start":[117,1]},"title":"showParity"},{"comments":null,"info":{"declType":"instance","dependencies":[],"type":{"annotation":[],"contents":[{"annotation":[],"contents":[["Data","Bounded"],"Bounded"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Data","Int"],"Parity"],"tag":"TypeConstructor"}],"tag":"TypeApp"}},"sourceSpan":{"end":[123,12],"name":"/tmp/nix-shell.EK5B8E/tmp-40661-m3mlSg19mZ3h/.registry/integers-6.0.0/src/Data/Int.purs","start":[121,1]},"title":"boundedParity"},{"comments":null,"info":{"declType":"instance","dependencies":[],"type":{"annotation":[],"contents":[{"annotation":[],"contents":[["Data","Semiring"],"Semiring"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Data","Int"],"Parity"],"tag":"TypeConstructor"}],"tag":"TypeApp"}},"sourceSpan":{"end":[130,17],"name":"/tmp/nix-shell.EK5B8E/tmp-40661-m3mlSg19mZ3h/.registry/integers-6.0.0/src/Data/Int.purs","start":[125,1]},"title":"semiringParity"},{"comments":null,"info":{"declType":"instance","dependencies":[],"type":{"annotation":[],"contents":[{"annotation":[],"contents":[["Data","Ring"],"Ring"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Data","Int"],"Parity"],"tag":"TypeConstructor"}],"tag":"TypeApp"}},"sourceSpan":{"end":[133,12],"name":"/tmp/nix-shell.EK5B8E/tmp-40661-m3mlSg19mZ3h/.registry/integers-6.0.0/src/Data/Int.purs","start":[132,1]},"title":"ringParity"},{"comments":null,"info":{"declType":"instance","dependencies":[],"type":{"annotation":[],"contents":[{"annotation":[],"contents":[["Data","CommutativeRing"],"CommutativeRing"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Data","Int"],"Parity"],"tag":"TypeConstructor"}],"tag":"TypeApp"}},"sourceSpan":{"end":[135,57],"name":"/tmp/nix-shell.EK5B8E/tmp-40661-m3mlSg19mZ3h/.registry/integers-6.0.0/src/Data/Int.purs","start":[135,1]},"title":"commutativeRingParity"},{"comments":null,"info":{"declType":"instance","dependencies":[],"type":{"annotation":[],"contents":[{"annotation":[],"contents":[["Data","EuclideanRing"],"EuclideanRing"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Data","Int"],"Parity"],"tag":"TypeConstructor"}],"tag":"TypeApp"}},"sourceSpan":{"end":[141,17],"name":"/tmp/nix-shell.EK5B8E/tmp-40661-m3mlSg19mZ3h/.registry/integers-6.0.0/src/Data/Int.purs","start":[137,1]},"title":"euclideanRingParity"},{"comments":null,"info":{"declType":"instance","dependencies":[],"type":{"annotation":[],"contents":[{"annotation":[],"contents":[["Data","DivisionRing"],"DivisionRing"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Data","Int"],"Parity"],"tag":"TypeConstructor"}],"tag":"TypeApp"}},"sourceSpan":{"end":[144,19],"name":"/tmp/nix-shell.EK5B8E/tmp-40661-m3mlSg19mZ3h/.registry/integers-6.0.0/src/Data/Int.purs","start":[143,1]},"title":"divisionRingParity"}],"comments":"A type for describing whether an integer is even or odd.\n\nThe `Ord` instance considers `Even` to be less than `Odd`.\n\nThe `Semiring` instance allows you to ask about the parity of the results\nof arithmetical operations, given only the parities of the inputs. For\nexample, the sum of an odd number and an even number is odd, so\n`Odd + Even == Odd`. This also works for multiplication, eg. the product\nof two odd numbers is odd, and therefore `Odd * Odd == Odd`.\n\nMore generally, we have that\n\n```purescript\nparity x + parity y == parity (x + y)\nparity x * parity y == parity (x * y)\n```\n\nfor any integers `x`, `y`. (A mathematician would say that `parity` is a\n*ring homomorphism*.)\n\nAfter defining addition and multiplication on `Parity` in this way, the\n`Semiring` laws now force us to choose `zero = Even` and `one = Odd`.\nThis `Semiring` instance actually turns out to be a `Field`.\n","info":{"dataDeclType":"data","declType":"data","roles":[],"typeArguments":[]},"kind":null,"sourceSpan":{"end":[112,25],"name":"/tmp/nix-shell.EK5B8E/tmp-40661-m3mlSg19mZ3h/.registry/integers-6.0.0/src/Data/Int.purs","start":[112,1]},"title":"Parity"},{"children":[],"comments":"The base-8 system.\n","info":{"declType":"value","type":{"annotation":[],"contents":[["Data","Int"],"Radix"],"tag":"TypeConstructor"}},"kind":null,"sourceSpan":{"end":[182,15],"name":"/tmp/nix-shell.EK5B8E/tmp-40661-m3mlSg19mZ3h/.registry/integers-6.0.0/src/Data/Int.purs","start":[182,1]},"title":"octal"},{"children":[],"comments":"The base-16 system.\n","info":{"declType":"value","type":{"annotation":[],"contents":[["Data","Int"],"Radix"],"tag":"TypeConstructor"}},"kind":null,"sourceSpan":{"end":[190,21],"name":"/tmp/nix-shell.EK5B8E/tmp-40661-m3mlSg19mZ3h/.registry/integers-6.0.0/src/Data/Int.purs","start":[190,1]},"title":"hexadecimal"},{"children":[],"comments":"The base-10 system.\n","info":{"declType":"value","type":{"annotation":[],"contents":[["Data","Int"],"Radix"],"tag":"TypeConstructor"}},"kind":null,"sourceSpan":{"end":[186,17],"name":"/tmp/nix-shell.EK5B8E/tmp-40661-m3mlSg19mZ3h/.registry/integers-6.0.0/src/Data/Int.purs","start":[186,1]},"title":"decimal"},{"children":[],"comments":"The base-2 system.\n","info":{"declType":"value","type":{"annotation":[],"contents":[["Data","Int"],"Radix"],"tag":"TypeConstructor"}},"kind":null,"sourceSpan":{"end":[178,16],"name":"/tmp/nix-shell.EK5B8E/tmp-40661-m3mlSg19mZ3h/.registry/integers-6.0.0/src/Data/Int.purs","start":[178,1]},"title":"binary"}],"moduleName":{"item":["Data","Int"],"package":"purescript-integers"}}]}],"packageMeta":{"dependencies":{"purescript-integers":">=6.0.0 <7.0.0","purescript-maybe":">=6.0.0 <7.0.0","purescript-prelude":">=6.0.1 <7.0.0"},"homepage":"https://github.com/sigma-andex/purescript-js-bigints.git","license":["MIT AND ISC"],"name":"purescript-js-bigints","repository":{"type":"git","url":"https://github.com/sigma-andex/purescript-js-bigints.git"}},"resolvedDependencies":{"purescript-control":"6.0.0","purescript-functions":"6.0.0","purescript-integers":"6.0.0","purescript-invariant":"6.0.0","purescript-maybe":"6.0.0","purescript-newtype":"5.0.0","purescript-numbers":"9.0.1","purescript-prelude":"6.0.1","purescript-safe-coerce":"2.0.0","purescript-unsafe-coerce":"6.0.0"},"tagTime":"2023-02-21T08:52:21+0000","uploader":"pacchettibotti","version":"2.0.0","versionTag":"v2.0.0"}