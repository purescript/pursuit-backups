{"uploader":"jamesdbrock","packageMeta":{"repository":{"url":"https://github.com/jamesdbrock/purescript-arraybuffer-builder","type":"git"},"ignore":["**/.*","node_modules","bower_components","output"],"dependencies":{"purescript-arraybuffer-types":"^v2.0.0","purescript-arraybuffer":"^v10.0.2"},"name":"purescript-arraybuffer-builder","license":["MIT"]},"tagTime":"2020-07-29T13:49:51+0000","modules":[{"reExports":[],"name":"Data.ArrayBuffer.Builder","comments":"This module provides a `Builder` monoid and a `PutM` monad\nfor serializing `Data.ArrayBuffer.Types.ArrayBuffer`s.\nSee the package README for usage examples.\n\nWriting to an `ArrayBuffer` is an `Effect`ful activity, so most\nfunctions in this module must be run in a `MonadEffect` context.\n\nFor operations for working with `ArrayBuffer`, see\nmodule\n[`Data.ArrayBuffer.ArrayBuffer`](https://pursuit.purescript.org/packages/purescript-arraybuffer/docs/Data.ArrayBuffer.ArrayBuffer)\nin package __purescript-arraybuffer__.\n","declarations":[{"children":[],"comments":"The `PutM` monad is a `WriterT Builder` transformer monad which\ngives us do-notation for the `Builder` monoid. The base monad must be\na `MonadEffect`.\n","title":"PutM","info":{"arguments":[],"declType":"typeSynonym","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Control","Monad","Writer","Trans"],"WriterT"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","ArrayBuffer","Builder"],"Builder"]}]}},"sourceSpan":{"start":[70,1],"name":"/home/jbrock/work/me/purescript-arraybuffer-builder/src/Data/ArrayBuffer/Builder.purs","end":[70,28]}},{"children":[],"comments":"The `Put` monad is a `WriterT Builder Effect` monad which\ngives us do-notation for the `Builder` monoid.\n","title":"Put","info":{"arguments":[],"declType":"typeSynonym","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","ArrayBuffer","Builder"],"PutM"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Effect"],"Effect"]}]}},"sourceSpan":{"start":[74,1],"name":"/home/jbrock/work/me/purescript-arraybuffer-builder/src/Data/ArrayBuffer/Builder.purs","end":[74,23]}},{"children":[],"comments":"Build an `ArrayBuffer` with do-notation in any `MonadEffect`. *O(n)*\n","title":"execPutM","info":{"declType":"value","type":{"annotation":[],"tag":"ForAll","contents":["m",{"annotation":[],"tag":"ConstrainedType","contents":[{"constraintAnn":[],"constraintClass":[["Effect","Class"],"MonadEffect"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"m"}],"constraintData":null},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","ArrayBuffer","Builder"],"PutM"]},{"annotation":[],"tag":"TypeVar","contents":"m"}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeVar","contents":"m"},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","ArrayBuffer","Types"],"ArrayBuffer"]}]}]}]},null]}},"sourceSpan":{"start":[169,1],"name":"/home/jbrock/work/me/purescript-arraybuffer-builder/src/Data/ArrayBuffer/Builder.purs","end":[169,70]}},{"children":[],"comments":"Build an `ArrayBuffer` with do-notation. *O(n)*\n","title":"execPut","info":{"declType":"value","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","ArrayBuffer","Builder"],"Put"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","ArrayBuffer","Types"],"ArrayBuffer"]}]}]}},"sourceSpan":{"start":[173,1],"name":"/home/jbrock/work/me/purescript-arraybuffer-builder/src/Data/ArrayBuffer/Builder.purs","end":[173,42]}},{"children":[],"comments":"Append an `ArrayBuffer` to the builder.\n","title":"putArrayBuffer","info":{"declType":"value","type":{"annotation":[],"tag":"ForAll","contents":["m",{"annotation":[],"tag":"ConstrainedType","contents":[{"constraintAnn":[],"constraintClass":[["Effect","Class"],"MonadEffect"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"m"}],"constraintData":null},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","ArrayBuffer","Types"],"ArrayBuffer"]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","ArrayBuffer","Builder"],"PutM"]},{"annotation":[],"tag":"TypeVar","contents":"m"}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]}]},null]}},"sourceSpan":{"start":[177,1],"name":"/home/jbrock/work/me/purescript-arraybuffer-builder/src/Data/ArrayBuffer/Builder.purs","end":[177,74]}},{"children":[],"comments":"Append an 8-bit unsigned integer (byte) to the builder.\n","title":"putUint8","info":{"declType":"value","type":{"annotation":[],"tag":"ForAll","contents":["m",{"annotation":[],"tag":"ConstrainedType","contents":[{"constraintAnn":[],"constraintClass":[["Effect","Class"],"MonadEffect"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"m"}],"constraintData":null},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","UInt"],"UInt"]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","ArrayBuffer","Builder"],"PutM"]},{"annotation":[],"tag":"TypeVar","contents":"m"}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]}]},null]}},"sourceSpan":{"start":[188,1],"name":"/home/jbrock/work/me/purescript-arraybuffer-builder/src/Data/ArrayBuffer/Builder.purs","end":[188,61]}},{"children":[],"comments":"Append an 8-bit two’s-complement signed integer (char) to the builder.\n","title":"putInt8","info":{"declType":"value","type":{"annotation":[],"tag":"ForAll","contents":["m",{"annotation":[],"tag":"ConstrainedType","contents":[{"constraintAnn":[],"constraintClass":[["Effect","Class"],"MonadEffect"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"m"}],"constraintData":null},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","ArrayBuffer","Builder"],"PutM"]},{"annotation":[],"tag":"TypeVar","contents":"m"}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]}]},null]}},"sourceSpan":{"start":[199,1],"name":"/home/jbrock/work/me/purescript-arraybuffer-builder/src/Data/ArrayBuffer/Builder.purs","end":[199,59]}},{"children":[],"comments":"Append a 16-bit big-endian unsigned integer to the builder.\n","title":"putUint16be","info":{"declType":"value","type":{"annotation":[],"tag":"ForAll","contents":["m",{"annotation":[],"tag":"ConstrainedType","contents":[{"constraintAnn":[],"constraintClass":[["Effect","Class"],"MonadEffect"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"m"}],"constraintData":null},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","UInt"],"UInt"]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","ArrayBuffer","Builder"],"PutM"]},{"annotation":[],"tag":"TypeVar","contents":"m"}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]}]},null]}},"sourceSpan":{"start":[210,1],"name":"/home/jbrock/work/me/purescript-arraybuffer-builder/src/Data/ArrayBuffer/Builder.purs","end":[210,64]}},{"children":[],"comments":"Append a 16-bit little-endian unsigned integer to the builder.\n","title":"putUint16le","info":{"declType":"value","type":{"annotation":[],"tag":"ForAll","contents":["m",{"annotation":[],"tag":"ConstrainedType","contents":[{"constraintAnn":[],"constraintClass":[["Effect","Class"],"MonadEffect"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"m"}],"constraintData":null},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","UInt"],"UInt"]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","ArrayBuffer","Builder"],"PutM"]},{"annotation":[],"tag":"TypeVar","contents":"m"}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]}]},null]}},"sourceSpan":{"start":[221,1],"name":"/home/jbrock/work/me/purescript-arraybuffer-builder/src/Data/ArrayBuffer/Builder.purs","end":[221,64]}},{"children":[],"comments":"Append a 16-bit big-endian two’s-complement signed integer to the builder.\n","title":"putInt16be","info":{"declType":"value","type":{"annotation":[],"tag":"ForAll","contents":["m",{"annotation":[],"tag":"ConstrainedType","contents":[{"constraintAnn":[],"constraintClass":[["Effect","Class"],"MonadEffect"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"m"}],"constraintData":null},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","ArrayBuffer","Builder"],"PutM"]},{"annotation":[],"tag":"TypeVar","contents":"m"}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]}]},null]}},"sourceSpan":{"start":[232,1],"name":"/home/jbrock/work/me/purescript-arraybuffer-builder/src/Data/ArrayBuffer/Builder.purs","end":[232,62]}},{"children":[],"comments":"Append a 16-bit little-endian two’s-complement signed integer to the builder.\n","title":"putInt16le","info":{"declType":"value","type":{"annotation":[],"tag":"ForAll","contents":["m",{"annotation":[],"tag":"ConstrainedType","contents":[{"constraintAnn":[],"constraintClass":[["Effect","Class"],"MonadEffect"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"m"}],"constraintData":null},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","ArrayBuffer","Builder"],"PutM"]},{"annotation":[],"tag":"TypeVar","contents":"m"}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]}]},null]}},"sourceSpan":{"start":[243,1],"name":"/home/jbrock/work/me/purescript-arraybuffer-builder/src/Data/ArrayBuffer/Builder.purs","end":[243,62]}},{"children":[],"comments":"Append a 32-bit big-endian unsigned integer to the builder.\n","title":"putUint32be","info":{"declType":"value","type":{"annotation":[],"tag":"ForAll","contents":["m",{"annotation":[],"tag":"ConstrainedType","contents":[{"constraintAnn":[],"constraintClass":[["Effect","Class"],"MonadEffect"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"m"}],"constraintData":null},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","UInt"],"UInt"]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","ArrayBuffer","Builder"],"PutM"]},{"annotation":[],"tag":"TypeVar","contents":"m"}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]}]},null]}},"sourceSpan":{"start":[254,1],"name":"/home/jbrock/work/me/purescript-arraybuffer-builder/src/Data/ArrayBuffer/Builder.purs","end":[254,64]}},{"children":[],"comments":"Append a 32-bit little-endian unsigned integer to the builder.\n","title":"putUint32le","info":{"declType":"value","type":{"annotation":[],"tag":"ForAll","contents":["m",{"annotation":[],"tag":"ConstrainedType","contents":[{"constraintAnn":[],"constraintClass":[["Effect","Class"],"MonadEffect"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"m"}],"constraintData":null},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","UInt"],"UInt"]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","ArrayBuffer","Builder"],"PutM"]},{"annotation":[],"tag":"TypeVar","contents":"m"}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]}]},null]}},"sourceSpan":{"start":[265,1],"name":"/home/jbrock/work/me/purescript-arraybuffer-builder/src/Data/ArrayBuffer/Builder.purs","end":[265,64]}},{"children":[],"comments":"Append a 32-bit big-endian two’s-complement signed integer to the builder.\n","title":"putInt32be","info":{"declType":"value","type":{"annotation":[],"tag":"ForAll","contents":["m",{"annotation":[],"tag":"ConstrainedType","contents":[{"constraintAnn":[],"constraintClass":[["Effect","Class"],"MonadEffect"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"m"}],"constraintData":null},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","ArrayBuffer","Builder"],"PutM"]},{"annotation":[],"tag":"TypeVar","contents":"m"}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]}]},null]}},"sourceSpan":{"start":[276,1],"name":"/home/jbrock/work/me/purescript-arraybuffer-builder/src/Data/ArrayBuffer/Builder.purs","end":[276,62]}},{"children":[],"comments":"Append a 32-bit little-endian two’s-complement signed integer to the builder.\n","title":"putInt32le","info":{"declType":"value","type":{"annotation":[],"tag":"ForAll","contents":["m",{"annotation":[],"tag":"ConstrainedType","contents":[{"constraintAnn":[],"constraintClass":[["Effect","Class"],"MonadEffect"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"m"}],"constraintData":null},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","ArrayBuffer","Builder"],"PutM"]},{"annotation":[],"tag":"TypeVar","contents":"m"}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]}]},null]}},"sourceSpan":{"start":[287,1],"name":"/home/jbrock/work/me/purescript-arraybuffer-builder/src/Data/ArrayBuffer/Builder.purs","end":[287,62]}},{"children":[],"comments":"Append a 32-bit big-endian IEEE single-precision float to the builder.\n","title":"putFloat32be","info":{"declType":"value","type":{"annotation":[],"tag":"ForAll","contents":["m",{"annotation":[],"tag":"ConstrainedType","contents":[{"constraintAnn":[],"constraintClass":[["Effect","Class"],"MonadEffect"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"m"}],"constraintData":null},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Float32"],"Float32"]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","ArrayBuffer","Builder"],"PutM"]},{"annotation":[],"tag":"TypeVar","contents":"m"}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]}]},null]}},"sourceSpan":{"start":[298,1],"name":"/home/jbrock/work/me/purescript-arraybuffer-builder/src/Data/ArrayBuffer/Builder.purs","end":[298,68]}},{"children":[],"comments":"Append a 32-bit little-endian IEEE single-precision float to the builder.\n","title":"putFloat32le","info":{"declType":"value","type":{"annotation":[],"tag":"ForAll","contents":["m",{"annotation":[],"tag":"ConstrainedType","contents":[{"constraintAnn":[],"constraintClass":[["Effect","Class"],"MonadEffect"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"m"}],"constraintData":null},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Float32"],"Float32"]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","ArrayBuffer","Builder"],"PutM"]},{"annotation":[],"tag":"TypeVar","contents":"m"}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]}]},null]}},"sourceSpan":{"start":[309,1],"name":"/home/jbrock/work/me/purescript-arraybuffer-builder/src/Data/ArrayBuffer/Builder.purs","end":[309,68]}},{"children":[],"comments":"Append a 64-bit big-endian IEEE double-precision float to the builder.\n","title":"putFloat64be","info":{"declType":"value","type":{"annotation":[],"tag":"ForAll","contents":["m",{"annotation":[],"tag":"ConstrainedType","contents":[{"constraintAnn":[],"constraintClass":[["Effect","Class"],"MonadEffect"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"m"}],"constraintData":null},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Number"]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","ArrayBuffer","Builder"],"PutM"]},{"annotation":[],"tag":"TypeVar","contents":"m"}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]}]},null]}},"sourceSpan":{"start":[320,1],"name":"/home/jbrock/work/me/purescript-arraybuffer-builder/src/Data/ArrayBuffer/Builder.purs","end":[320,67]}},{"children":[],"comments":"Append a 64-bit little-endian IEEE double-precision float to the builder.\n","title":"putFloat64le","info":{"declType":"value","type":{"annotation":[],"tag":"ForAll","contents":["m",{"annotation":[],"tag":"ConstrainedType","contents":[{"constraintAnn":[],"constraintClass":[["Effect","Class"],"MonadEffect"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"m"}],"constraintData":null},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Number"]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","ArrayBuffer","Builder"],"PutM"]},{"annotation":[],"tag":"TypeVar","contents":"m"}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]}]},null]}},"sourceSpan":{"start":[331,1],"name":"/home/jbrock/work/me/purescript-arraybuffer-builder/src/Data/ArrayBuffer/Builder.purs","end":[331,67]}},{"children":[{"comments":null,"title":"semigroupBuilder","info":{"declType":"instance","dependencies":[],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Semigroup"],"Semigroup"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","ArrayBuffer","Builder"],"Builder"]}]}},"sourceSpan":{"start":[115,1],"name":"/home/jbrock/work/me/purescript-arraybuffer-builder/src/Data/ArrayBuffer/Builder.purs","end":[122,54]}},{"comments":null,"title":"monoidBuilder","info":{"declType":"instance","dependencies":[],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Monoid"],"Monoid"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","ArrayBuffer","Builder"],"Builder"]}]}},"sourceSpan":{"start":[129,1],"name":"/home/jbrock/work/me/purescript-arraybuffer-builder/src/Data/ArrayBuffer/Builder.purs","end":[130,16]}}],"comments":"Monoidal builder for `ArrayBuffer`s.\n\n### Left-associative `<>>` append operator\n\n__TL;DR__ You probably don't want to use the `Builder` monoid directly\nin your code, it’s better to use the `PutM` monad with do-notation instead.\n\nThe `Builder` monoid in this library is efficient when we `snoc` single\nitems onto the end of it, or when we only `cons` single items to the\nbeginning, but it can be less efficient when we are mixing `cons` and\n`snoc`.\nThis matters when we're appending three or more `Builder`s\nin one associative expression, because the\n`Semigroup` append operator `<>` is right-associative.\n\nTo solve this, we provide an operator `<>>` for appending `Builders`.\n`<>>` is exactly the same as `<>`, but left-associative.\nThis only matters when we're chaining together three\nor more `Builder`s in a single associative expression.\nInstead of\n```\nbuilder₁ <> builder₂ <> builder₃\n```\nwe should always prefer to\nwrite\n```\nbuilder₁ <>> builder₂ <>> builder₃\n```\n so that we get the efficient\n`snoc`ing of `Builder`s.\n\nIf we build our `ArrayBuffer`s with the `PutM` monad instead of appending by\nusing the `Semigroup` instance of `Builder`, then we always get the efficient\n`snoc` case.\n\n","title":"Builder","info":{"declType":"data","dataDeclType":"data","typeArguments":[]},"sourceSpan":{"start":[111,1],"name":"/home/jbrock/work/me/purescript-arraybuffer-builder/src/Data/ArrayBuffer/Builder.purs","end":[113,9]}},{"children":[],"comments":null,"title":"(<>>)","info":{"declType":"alias","alias":[["Data","Semigroup"],{"Right":{"Left":{"Ident":"append"}}}],"fixity":{"associativity":"infixl","precedence":5}},"sourceSpan":{"start":[127,1],"name":"/home/jbrock/work/me/purescript-arraybuffer-builder/src/Data/ArrayBuffer/Builder.purs","end":[127,23]}},{"children":[],"comments":"Build a single `ArrayBuffer` from a `Builder`. *O(n)*\n","title":"execBuilder","info":{"declType":"value","type":{"annotation":[],"tag":"ForAll","contents":["m",{"annotation":[],"tag":"ConstrainedType","contents":[{"constraintAnn":[],"constraintClass":[["Effect","Class"],"MonadEffect"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"m"}],"constraintData":null},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","ArrayBuffer","Builder"],"Builder"]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeVar","contents":"m"},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","ArrayBuffer","Types"],"ArrayBuffer"]}]}]}]},null]}},"sourceSpan":{"start":[151,1],"name":"/home/jbrock/work/me/purescript-arraybuffer-builder/src/Data/ArrayBuffer/Builder.purs","end":[151,69]}},{"children":[],"comments":"Construct a `Builder` with a single `ArrayBuffer`. *O(1)*\n","title":"singleton","info":{"declType":"value","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","ArrayBuffer","Types"],"ArrayBuffer"]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","ArrayBuffer","Builder"],"Builder"]}]}},"sourceSpan":{"start":[143,1],"name":"/home/jbrock/work/me/purescript-arraybuffer-builder/src/Data/ArrayBuffer/Builder.purs","end":[143,36]}},{"children":[],"comments":"Add an `ArrayBuffer` to the end of the `Builder`. *O(1)*\n","title":"snoc","info":{"declType":"value","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","ArrayBuffer","Builder"],"Builder"]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","ArrayBuffer","Types"],"ArrayBuffer"]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","ArrayBuffer","Builder"],"Builder"]}]}]}},"sourceSpan":{"start":[147,1],"name":"/home/jbrock/work/me/purescript-arraybuffer-builder/src/Data/ArrayBuffer/Builder.purs","end":[147,42]}},{"children":[],"comments":"Serialize an 8-bit unsigned integer (byte) into a new `ArrayBuffer`.\n","title":"encodeUint8","info":{"declType":"value","type":{"annotation":[],"tag":"ForAll","contents":["m",{"annotation":[],"tag":"ConstrainedType","contents":[{"constraintAnn":[],"constraintClass":[["Effect","Class"],"MonadEffect"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"m"}],"constraintData":null},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","UInt"],"UInt"]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeVar","contents":"m"},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","ArrayBuffer","Types"],"ArrayBuffer"]}]}]}]},null]}},"sourceSpan":{"start":[181,1],"name":"/home/jbrock/work/me/purescript-arraybuffer-builder/src/Data/ArrayBuffer/Builder.purs","end":[181,66]}},{"children":[],"comments":"Serialize an 8-bit two’s-complement signed integer (char) into a new `ArrayBuffer`.\n","title":"encodeInt8","info":{"declType":"value","type":{"annotation":[],"tag":"ForAll","contents":["m",{"annotation":[],"tag":"ConstrainedType","contents":[{"constraintAnn":[],"constraintClass":[["Effect","Class"],"MonadEffect"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"m"}],"constraintData":null},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeVar","contents":"m"},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","ArrayBuffer","Types"],"ArrayBuffer"]}]}]}]},null]}},"sourceSpan":{"start":[192,1],"name":"/home/jbrock/work/me/purescript-arraybuffer-builder/src/Data/ArrayBuffer/Builder.purs","end":[192,64]}},{"children":[],"comments":"Serialize a 16-bit big-endian unsigned integer into a new `ArrayBuffer`.\n","title":"encodeUint16be","info":{"declType":"value","type":{"annotation":[],"tag":"ForAll","contents":["m",{"annotation":[],"tag":"ConstrainedType","contents":[{"constraintAnn":[],"constraintClass":[["Effect","Class"],"MonadEffect"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"m"}],"constraintData":null},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","UInt"],"UInt"]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeVar","contents":"m"},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","ArrayBuffer","Types"],"ArrayBuffer"]}]}]}]},null]}},"sourceSpan":{"start":[203,1],"name":"/home/jbrock/work/me/purescript-arraybuffer-builder/src/Data/ArrayBuffer/Builder.purs","end":[203,69]}},{"children":[],"comments":"Serialize a 16-bit little-endian unsigned integer into a new `ArrayBuffer`.\n","title":"encodeUint16le","info":{"declType":"value","type":{"annotation":[],"tag":"ForAll","contents":["m",{"annotation":[],"tag":"ConstrainedType","contents":[{"constraintAnn":[],"constraintClass":[["Effect","Class"],"MonadEffect"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"m"}],"constraintData":null},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","UInt"],"UInt"]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeVar","contents":"m"},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","ArrayBuffer","Types"],"ArrayBuffer"]}]}]}]},null]}},"sourceSpan":{"start":[214,1],"name":"/home/jbrock/work/me/purescript-arraybuffer-builder/src/Data/ArrayBuffer/Builder.purs","end":[214,69]}},{"children":[],"comments":"Serialize a 16-bit big-endian two’s-complement signed integer into a new `ArrayBuffer`.\n","title":"encodeInt16be","info":{"declType":"value","type":{"annotation":[],"tag":"ForAll","contents":["m",{"annotation":[],"tag":"ConstrainedType","contents":[{"constraintAnn":[],"constraintClass":[["Effect","Class"],"MonadEffect"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"m"}],"constraintData":null},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeVar","contents":"m"},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","ArrayBuffer","Types"],"ArrayBuffer"]}]}]}]},null]}},"sourceSpan":{"start":[225,1],"name":"/home/jbrock/work/me/purescript-arraybuffer-builder/src/Data/ArrayBuffer/Builder.purs","end":[225,67]}},{"children":[],"comments":"Serialize a 16-bit little-endian two’s-complement signed integer into a new `ArrayBuffer`.\n","title":"encodeInt16le","info":{"declType":"value","type":{"annotation":[],"tag":"ForAll","contents":["m",{"annotation":[],"tag":"ConstrainedType","contents":[{"constraintAnn":[],"constraintClass":[["Effect","Class"],"MonadEffect"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"m"}],"constraintData":null},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeVar","contents":"m"},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","ArrayBuffer","Types"],"ArrayBuffer"]}]}]}]},null]}},"sourceSpan":{"start":[236,1],"name":"/home/jbrock/work/me/purescript-arraybuffer-builder/src/Data/ArrayBuffer/Builder.purs","end":[236,67]}},{"children":[],"comments":"Serialize a 32-bit big-endian unsigned integer into a new `ArrayBuffer`.\n","title":"encodeUint32be","info":{"declType":"value","type":{"annotation":[],"tag":"ForAll","contents":["m",{"annotation":[],"tag":"ConstrainedType","contents":[{"constraintAnn":[],"constraintClass":[["Effect","Class"],"MonadEffect"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"m"}],"constraintData":null},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","UInt"],"UInt"]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeVar","contents":"m"},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","ArrayBuffer","Types"],"ArrayBuffer"]}]}]}]},null]}},"sourceSpan":{"start":[247,1],"name":"/home/jbrock/work/me/purescript-arraybuffer-builder/src/Data/ArrayBuffer/Builder.purs","end":[247,69]}},{"children":[],"comments":"Serialize a 32-bit little-endian unsigned integer into a new `ArrayBuffer`.\n","title":"encodeUint32le","info":{"declType":"value","type":{"annotation":[],"tag":"ForAll","contents":["m",{"annotation":[],"tag":"ConstrainedType","contents":[{"constraintAnn":[],"constraintClass":[["Effect","Class"],"MonadEffect"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"m"}],"constraintData":null},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","UInt"],"UInt"]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeVar","contents":"m"},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","ArrayBuffer","Types"],"ArrayBuffer"]}]}]}]},null]}},"sourceSpan":{"start":[258,1],"name":"/home/jbrock/work/me/purescript-arraybuffer-builder/src/Data/ArrayBuffer/Builder.purs","end":[258,69]}},{"children":[],"comments":"Serialize a 32-bit big-endian two’s-complement signed integer into a new `ArrayBuffer`.\n","title":"encodeInt32be","info":{"declType":"value","type":{"annotation":[],"tag":"ForAll","contents":["m",{"annotation":[],"tag":"ConstrainedType","contents":[{"constraintAnn":[],"constraintClass":[["Effect","Class"],"MonadEffect"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"m"}],"constraintData":null},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeVar","contents":"m"},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","ArrayBuffer","Types"],"ArrayBuffer"]}]}]}]},null]}},"sourceSpan":{"start":[269,1],"name":"/home/jbrock/work/me/purescript-arraybuffer-builder/src/Data/ArrayBuffer/Builder.purs","end":[269,67]}},{"children":[],"comments":"Serialize a 32-bit little-endian two’s-complement signed integer into a new `ArrayBuffer`.\n","title":"encodeInt32le","info":{"declType":"value","type":{"annotation":[],"tag":"ForAll","contents":["m",{"annotation":[],"tag":"ConstrainedType","contents":[{"constraintAnn":[],"constraintClass":[["Effect","Class"],"MonadEffect"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"m"}],"constraintData":null},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeVar","contents":"m"},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","ArrayBuffer","Types"],"ArrayBuffer"]}]}]}]},null]}},"sourceSpan":{"start":[280,1],"name":"/home/jbrock/work/me/purescript-arraybuffer-builder/src/Data/ArrayBuffer/Builder.purs","end":[280,67]}},{"children":[],"comments":"Serialize a 32-bit big-endian IEEE single-precision float into a new `ArrayBuffer`.\n","title":"encodeFloat32be","info":{"declType":"value","type":{"annotation":[],"tag":"ForAll","contents":["m",{"annotation":[],"tag":"ConstrainedType","contents":[{"constraintAnn":[],"constraintClass":[["Effect","Class"],"MonadEffect"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"m"}],"constraintData":null},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Float32"],"Float32"]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeVar","contents":"m"},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","ArrayBuffer","Types"],"ArrayBuffer"]}]}]}]},null]}},"sourceSpan":{"start":[291,1],"name":"/home/jbrock/work/me/purescript-arraybuffer-builder/src/Data/ArrayBuffer/Builder.purs","end":[291,73]}},{"children":[],"comments":"Serialize a 32-bit little-endian IEEE single-precision float into a new `ArrayBuffer`.\n","title":"encodeFloat32le","info":{"declType":"value","type":{"annotation":[],"tag":"ForAll","contents":["m",{"annotation":[],"tag":"ConstrainedType","contents":[{"constraintAnn":[],"constraintClass":[["Effect","Class"],"MonadEffect"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"m"}],"constraintData":null},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Float32"],"Float32"]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeVar","contents":"m"},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","ArrayBuffer","Types"],"ArrayBuffer"]}]}]}]},null]}},"sourceSpan":{"start":[302,1],"name":"/home/jbrock/work/me/purescript-arraybuffer-builder/src/Data/ArrayBuffer/Builder.purs","end":[302,73]}},{"children":[],"comments":"Serialize a 64-bit big-endian IEEE double-precision float into a new `ArrayBuffer`.\n","title":"encodeFloat64be","info":{"declType":"value","type":{"annotation":[],"tag":"ForAll","contents":["m",{"annotation":[],"tag":"ConstrainedType","contents":[{"constraintAnn":[],"constraintClass":[["Effect","Class"],"MonadEffect"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"m"}],"constraintData":null},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Number"]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeVar","contents":"m"},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","ArrayBuffer","Types"],"ArrayBuffer"]}]}]}]},null]}},"sourceSpan":{"start":[313,1],"name":"/home/jbrock/work/me/purescript-arraybuffer-builder/src/Data/ArrayBuffer/Builder.purs","end":[313,72]}},{"children":[],"comments":"Serialize a 64-bit little-endian IEEE double-precision float into a new `ArrayBuffer`.\n","title":"encodeFloat64le","info":{"declType":"value","type":{"annotation":[],"tag":"ForAll","contents":["m",{"annotation":[],"tag":"ConstrainedType","contents":[{"constraintAnn":[],"constraintClass":[["Effect","Class"],"MonadEffect"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"m"}],"constraintData":null},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Number"]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeVar","contents":"m"},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","ArrayBuffer","Types"],"ArrayBuffer"]}]}]}]},null]}},"sourceSpan":{"start":[324,1],"name":"/home/jbrock/work/me/purescript-arraybuffer-builder/src/Data/ArrayBuffer/Builder.purs","end":[324,72]}}]}],"resolvedDependencies":{"purescript-proxy":"3.0.0","purescript-exceptions":"4.0.0","purescript-newtype":"3.0.0","purescript-effect":"2.0.1","purescript-quickcheck-laws":"5.1.0","purescript-control":"4.2.0","purescript-arraybuffer-types":"2.0.0","purescript-console":"4.4.0","purescript-either":"4.1.1","purescript-arrays":"5.3.1","purescript-maybe":"4.0.1","purescript-type-equality":"3.0.0","purescript-distributive":"4.0.0","purescript-unfoldable":"4.1.0","purescript-invariant":"4.1.0","purescript-lcg":"2.0.0","purescript-typelevel":"6.0.0","purescript-lazy":"4.0.0","purescript-uint":"5.1.4","purescript-float32":"0.1.1","purescript-foldable-traversable":"4.1.1","purescript-tailrec":"4.1.1","purescript-gen":"2.1.1","purescript-typelevel-prelude":"5.0.2","purescript-prelude":"4.1.1","purescript-st":"4.1.1","purescript-bifunctors":"4.0.0","purescript-nonempty":"5.0.0","purescript-unsafe-coerce":"4.0.0","purescript-refs":"4.1.0","purescript-integers":"4.0.0","purescript-orders":"4.0.0","purescript-record":"2.0.2","purescript-transformers":"4.2.0","purescript-globals":"4.1.0","purescript-generics-rep":"6.1.1","purescript-math":"2.1.1","purescript-enums":"4.0.1","purescript-psci-support":"4.0.0","purescript-random":"4.0.0","purescript-tuples":"5.1.0","purescript-partial":"2.0.1","purescript-quickcheck":"6.1.0","purescript-strings":"4.0.2","purescript-identity":"4.1.0","purescript-lists":"5.4.1","purescript-nullable":"4.1.1","purescript-functions":"4.0.0","purescript-arraybuffer":"10.0.2"},"version":"1.0.0","github":["jamesdbrock","purescript-arraybuffer-builder"],"versionTag":"v1.0.0","moduleMap":{"Data.BooleanAlgebra":"purescript-prelude","Test.QuickCheck.Laws.Control.Semigroupoid":"purescript-quickcheck-laws","Type.Data.Boolean":"purescript-typelevel-prelude","Data.Ring":"purescript-prelude","Record.ST":"purescript-record","Control.Monad.Trans.Class":"purescript-transformers","Record.Unsafe.Union":"purescript-record","Data.NonEmpty":"purescript-nonempty","Effect.Uncurried":"purescript-effect","Data.Char.Gen":"purescript-strings","Data.Typelevel.Undefined":"purescript-typelevel","Data.String.NonEmpty":"purescript-strings","Effect":"purescript-effect","Test.QuickCheck.Laws.Data.Foldable":"purescript-quickcheck-laws","Data.Traversable.Accum.Internal":"purescript-foldable-traversable","Test.QuickCheck.Laws.Data.Bounded":"purescript-quickcheck-laws","Data.Enum.Gen":"purescript-enums","Data.Nullable":"purescript-nullable","Control.Comonad.Env":"purescript-transformers","Control.Comonad.Traced.Class":"purescript-transformers","Data.Typelevel.Num.Sets":"purescript-typelevel","Type.Row.Homogeneous":"purescript-typelevel-prelude","Data.Int.Bits":"purescript-integers","Data.Bifunctor.Flip":"purescript-bifunctors","Data.String.CodePoints":"purescript-strings","Data.Ord":"purescript-prelude","Test.QuickCheck.Laws.Control.Apply":"purescript-quickcheck-laws","Control.Monad.Gen":"purescript-gen","Data.Typelevel.Num.Reps":"purescript-typelevel","Test.QuickCheck.Laws.Control.Alt":"purescript-quickcheck-laws","Test.QuickCheck.Laws.Data.Monoid":"purescript-quickcheck-laws","Type.Data.Row":"purescript-prelude","Data.ArrayBuffer.ArrayBuffer.Gen":"purescript-arraybuffer","Test.QuickCheck.Laws.Data.HeytingAlgebra":"purescript-quickcheck-laws","Test.QuickCheck.Laws.Data":"purescript-quickcheck-laws","Data.Monoid.Dual":"purescript-prelude","Data.Generic.Rep.Ring":"purescript-generics-rep","Control.Monad.Rec.Class":"purescript-tailrec","Test.QuickCheck.Laws.Control.Bind":"purescript-quickcheck-laws","Data.Bitraversable":"purescript-foldable-traversable","Data.UInt.Gen":"purescript-uint","Record.Builder":"purescript-record","Data.Boolean":"purescript-prelude","Control.Biapplicative":"purescript-bifunctors","Test.QuickCheck.Laws.Control.Monad":"purescript-quickcheck-laws","Effect.Exception.Unsafe":"purescript-exceptions","Data.Array.NonEmpty.Internal":"purescript-arrays","Type.Proxy":"purescript-proxy","Data.Array.ST.Iterator":"purescript-arrays","Test.QuickCheck.Laws.Data.Ord":"purescript-quickcheck-laws","Data.String.Pattern":"purescript-strings","Data.Bounded":"purescript-prelude","Test.QuickCheck.Laws.Control":"purescript-quickcheck-laws","Control.Monad.State.Trans":"purescript-transformers","Data.TraversableWithIndex":"purescript-foldable-traversable","Data.Int":"purescript-integers","Data.Show":"purescript-prelude","Random.LCG":"purescript-lcg","Data.Bifunctor.Clown":"purescript-bifunctors","Control.Monad.Writer.Trans":"purescript-transformers","Data.Foldable":"purescript-foldable-traversable","Control.Comonad.Store.Class":"purescript-transformers","Data.Enum":"purescript-enums","Control.Apply":"purescript-prelude","Data.Tuple.Nested":"purescript-tuples","Data.Generic.Rep.Semigroup":"purescript-generics-rep","Control.Monad":"purescript-prelude","Data.Typelevel.Num":"purescript-typelevel","Data.Lazy":"purescript-lazy","Data.Monoid":"purescript-prelude","Control.Monad.List.Trans":"purescript-transformers","Control.Monad.RWS":"purescript-transformers","Data.String.Common":"purescript-strings","Data.Maybe.First":"purescript-maybe","Control.Bind":"purescript-prelude","Data.UInt":"purescript-uint","Data.Monoid.Additive":"purescript-prelude","Data.Symbol":"purescript-prelude","Data.String.Regex":"purescript-strings","Data.HeytingAlgebra":"purescript-prelude","Control.Alt":"purescript-control","Data.ArrayBuffer.ArrayBuffer":"purescript-arraybuffer","Control.Monad.Maybe.Trans":"purescript-transformers","Control.Monad.Cont":"purescript-transformers","Control.Monad.ST.Internal":"purescript-st","Type.Data.RowList":"purescript-prelude","Effect.Ref":"purescript-refs","Data.Either.Inject":"purescript-either","Data.List.ZipList":"purescript-lists","Data.Ord.Min":"purescript-orders","Data.Ord.Unsafe":"purescript-prelude","Data.Semigroup":"purescript-prelude","Test.QuickCheck.Laws.Data.Functor":"purescript-quickcheck-laws","Test.QuickCheck.Laws.Control.Category":"purescript-quickcheck-laws","Data.Array.NonEmpty":"purescript-arrays","Control.Monad.Reader":"purescript-transformers","Data.Generic.Rep.Enum":"purescript-generics-rep","Data.Generic.Rep.Bounded":"purescript-generics-rep","Control.Comonad.Traced.Trans":"purescript-transformers","Data.Ord.Down":"purescript-orders","Data.Array.ST.Partial":"purescript-arrays","Data.Generic.Rep.Show":"purescript-generics-rep","Effect.Unsafe":"purescript-effect","Type.Data.Ordering":"purescript-typelevel-prelude","Data.ArrayBuffer.DataView.Gen":"purescript-arraybuffer","Data.Tuple":"purescript-tuples","Data.Semigroup.Foldable":"purescript-foldable-traversable","Control.Biapply":"purescript-bifunctors","Data.Distributive":"purescript-distributive","Effect.Exception":"purescript-exceptions","Type.Equality":"purescript-type-equality","Control.Alternative":"purescript-control","Data.Semiring":"purescript-prelude","Effect.Console":"purescript-console","Data.Traversable.Accum":"purescript-foldable-traversable","Data.CommutativeRing":"purescript-prelude","Data.NaturalTransformation":"purescript-prelude","Data.Monoid.Conj":"purescript-prelude","Test.QuickCheck.Laws.Data.EuclideanRing":"purescript-quickcheck-laws","Test.QuickCheck.Laws.Data.Field":"purescript-quickcheck-laws","Data.Unfoldable":"purescript-unfoldable","Data.Typelevel.Num.Aliases":"purescript-typelevel","Type.RowList":"purescript-typelevel-prelude","Test.QuickCheck.Laws.Control.Comonad":"purescript-quickcheck-laws","Control.Comonad.Store.Trans":"purescript-transformers","Control.Monad.ST":"purescript-st","Control.Monad.State.Class":"purescript-transformers","Data.List.Types":"purescript-lists","Data.String.NonEmpty.CodeUnits":"purescript-strings","Data.Functor":"purescript-prelude","Unsafe.Coerce":"purescript-unsafe-coerce","Control.Monad.Writer.Class":"purescript-transformers","Data.Generic.Rep.Ord":"purescript-generics-rep","Test.QuickCheck.Laws.Data.Semigroup":"purescript-quickcheck-laws","Control.Monad.Except":"purescript-transformers","Data.List.Lazy.Types":"purescript-lists","Control.Category":"purescript-prelude","Test.QuickCheck.Arbitrary":"purescript-quickcheck","Control.Monad.Gen.Common":"purescript-gen","Control.Monad.RWS.Trans":"purescript-transformers","Test.QuickCheck.Laws":"purescript-quickcheck-laws","Test.QuickCheck.Laws.Data.CommutativeRing":"purescript-quickcheck-laws","Data.ArrayBuffer.DataView":"purescript-arraybuffer","Control.Monad.Cont.Trans":"purescript-transformers","Data.Maybe":"purescript-maybe","Type.Row":"purescript-typelevel-prelude","Data.String.Regex.Unsafe":"purescript-strings","Test.QuickCheck.Laws.Control.Alternative":"purescript-quickcheck-laws","Control.Comonad":"purescript-control","Control.Monad.ST.Global":"purescript-st","Data.Function":"purescript-prelude","Data.List":"purescript-lists","Test.QuickCheck.Laws.Data.Semiring":"purescript-quickcheck-laws","Data.Field":"purescript-prelude","Test.QuickCheck.Laws.Data.BoundedEnum":"purescript-quickcheck-laws","Data.List.Lazy":"purescript-lists","Data.Generic.Rep.Eq":"purescript-generics-rep","Data.EuclideanRing":"purescript-prelude","Data.Semigroup.Last":"purescript-prelude","Data.Semigroup.First":"purescript-prelude","Data.Functor.Invariant":"purescript-invariant","Control.Comonad.Traced":"purescript-transformers","Global.Unsafe":"purescript-globals","Data.String.Unsafe":"purescript-strings","Test.QuickCheck.Laws.Data.DivisionRing":"purescript-quickcheck-laws","Prelude":"purescript-prelude","Effect.Class":"purescript-effect","Partial.Unsafe":"purescript-partial","Data.Array":"purescript-arrays","Data.Bifunctor.Product":"purescript-bifunctors","Control.Extend":"purescript-control","Data.Unfoldable1":"purescript-unfoldable","Control.Lazy":"purescript-control","Data.Function.Uncurried":"purescript-functions","Control.Monad.Reader.Trans":"purescript-transformers","Data.Float32":"purescript-float32","Test.QuickCheck.Laws.Data.FunctorWithIndex":"purescript-quickcheck-laws","Control.Comonad.Env.Class":"purescript-transformers","Data.ArrayBuffer.Typed.Gen":"purescript-arraybuffer","Data.ArrayBuffer.Types":"purescript-arraybuffer-types","Data.Eq":"purescript-prelude","Data.Either.Nested":"purescript-either","Data.Newtype":"purescript-newtype","Data.Semigroup.Traversable":"purescript-foldable-traversable","Data.Typelevel.Num.Ops":"purescript-typelevel","Data.Bifunctor":"purescript-bifunctors","Effect.Random":"purescript-random","Data.Monoid.Disj":"purescript-prelude","Control.Monad.Gen.Class":"purescript-gen","Data.Array.Partial":"purescript-arrays","Data.String.CaseInsensitive":"purescript-strings","Control.MonadPlus":"purescript-control","Data.Void":"purescript-prelude","Control.MonadZero":"purescript-control","Data.Ord.Max":"purescript-orders","Control.Comonad.Store":"purescript-transformers","Data.ArrayBuffer.Typed":"purescript-arraybuffer","Control.Monad.Except.Trans":"purescript-transformers","Data.String.CodeUnits":"purescript-strings","Test.QuickCheck.Laws.Control.Extend":"purescript-quickcheck-laws","Data.Bifunctor.Joker":"purescript-bifunctors","Data.FunctorWithIndex":"purescript-foldable-traversable","Data.Float32.Gen":"purescript-float32","Data.DivisionRing":"purescript-prelude","Record":"purescript-record","Data.Bifunctor.Wrap":"purescript-bifunctors","Test.QuickCheck.Laws.Control.MonadPlus":"purescript-quickcheck-laws","PSCI.Support":"purescript-psci-support","Data.Maybe.Last":"purescript-maybe","Data.Unit":"purescript-prelude","Test.QuickCheck.Laws.Control.MonadZero":"purescript-quickcheck-laws","Data.List.NonEmpty":"purescript-lists","Data.Generic.Rep.Semiring":"purescript-generics-rep","Data.List.Lazy.NonEmpty":"purescript-lists","Data.Ordering":"purescript-prelude","Control.Monad.Cont.Class":"purescript-transformers","Data.Typelevel.Bool":"purescript-typelevel","Data.Identity":"purescript-identity","Test.QuickCheck.Laws.Data.Eq":"purescript-quickcheck-laws","Math":"purescript-math","Control.Comonad.Trans.Class":"purescript-transformers","Data.String":"purescript-strings","Control.Plus":"purescript-control","Test.QuickCheck":"purescript-quickcheck","Partial":"purescript-partial","Control.Comonad.Env.Trans":"purescript-transformers","Test.QuickCheck.Laws.Control.Applicative":"purescript-quickcheck-laws","Global":"purescript-globals","Control.Monad.Reader.Class":"purescript-transformers","Data.String.NonEmpty.CodePoints":"purescript-strings","Test.QuickCheck.Laws.Data.BooleanAlgebra":"purescript-quickcheck-laws","Data.String.NonEmpty.Internal":"purescript-strings","Data.Monoid.Multiplicative":"purescript-prelude","Data.String.NonEmpty.CaseInsensitive":"purescript-strings","Type.Data.Symbol":"purescript-typelevel-prelude","Data.Array.ST":"purescript-arrays","Test.QuickCheck.Laws.Data.Ring":"purescript-quickcheck-laws","Control.Monad.Error.Class":"purescript-transformers","Data.Generic.Rep.HeytingAlgebra":"purescript-generics-rep","Data.Generic.Rep.Monoid":"purescript-generics-rep","Control.Semigroupoid":"purescript-prelude","Data.Monoid.Alternate":"purescript-control","Data.Char":"purescript-strings","Data.Generic.Rep":"purescript-generics-rep","Effect.Class.Console":"purescript-console","Data.Bifunctor.Join":"purescript-bifunctors","Data.ArrayBuffer.ValueMapping":"purescript-arraybuffer","Data.Bifoldable":"purescript-foldable-traversable","Control.Monad.ST.Ref":"purescript-st","Data.Monoid.Endo":"purescript-prelude","Control.Monad.State":"purescript-transformers","Data.List.Partial":"purescript-lists","Data.String.Regex.Flags":"purescript-strings","Test.QuickCheck.Laws.Control.Plus":"purescript-quickcheck-laws","Data.Either":"purescript-either","Type.Prelude":"purescript-typelevel-prelude","Data.ArrayBuffer.Typed.Unsafe":"purescript-arraybuffer","Control.Applicative":"purescript-prelude","Control.Monad.ST.Class":"purescript-st","Data.FoldableWithIndex":"purescript-foldable-traversable","Record.Unsafe":"purescript-prelude","Test.QuickCheck.Gen":"purescript-quickcheck","Control.Monad.Writer":"purescript-transformers","Data.Traversable":"purescript-foldable-traversable","Data.String.Gen":"purescript-strings"},"compilerVersion":"0.13.3"}