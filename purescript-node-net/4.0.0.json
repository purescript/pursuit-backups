{"uploader":"JordanMartinez","packageMeta":{"repository":{"url":"https://github.com/purescript-node/purescript-node-net.git","type":"git"},"ignore":["**/.*","node_modules","bower_components","output"],"devDependencies":{"purescript-console":"^6.0.0"},"dependencies":{"purescript-exceptions":"^6.0.0","purescript-effect":"^4.0.0","purescript-either":"^6.0.0","purescript-maybe":"^6.0.0","purescript-prelude":"^6.0.0","purescript-node-buffer":"^8.0.0","purescript-node-fs":"^8.0.0","purescript-transformers":"^6.0.0","purescript-options":"^7.0.0","purescript-foreign":"^7.0.0","purescript-nullable":"^6.0.0"},"name":"purescript-node-net","license":["MIT"]},"tagTime":"2022-04-29T14:29:06+0000","modules":[{"reExports":[],"name":"Node.Net","comments":null,"declarations":[{"kind":null,"children":[],"comments":"Returns `4` if the `String` is a valid IPv4 address, `6` if the `String`\nis a valid IPv6 address, and `0` otherwise.\n","title":"isIP","info":{"declType":"value","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]}},"sourceSpan":{"start":[9,1],"name":"/home/jordan/Programming/ps-libs/lib/node-net/src/Node/Net.purs","end":[9,37]}},{"kind":null,"children":[],"comments":"Returns `true` if the `String` is a valid IPv4 address,\nand `false` otherwise.\n","title":"isIPv4","info":{"declType":"value","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}},"sourceSpan":{"start":[13,1],"name":"/home/jordan/Programming/ps-libs/lib/node-net/src/Node/Net.purs","end":[13,43]}},{"kind":null,"children":[],"comments":"Returns `true` if the `String` is a valid IPv4 address,\nand `false` otherwise.\n","title":"isIPv6","info":{"declType":"value","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}},"sourceSpan":{"start":[17,1],"name":"/home/jordan/Programming/ps-libs/lib/node-net/src/Node/Net.purs","end":[17,43]}}]},{"reExports":[],"name":"Node.Net.Server","comments":null,"declarations":[{"kind":null,"children":[],"comments":null,"title":"Address","info":{"arguments":[],"declType":"typeSynonym","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"annotation":[],"tag":"RCons","contents":["address",{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"String"]},{"annotation":[],"tag":"RCons","contents":["family",{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"String"]},{"annotation":[],"tag":"RCons","contents":["port",{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Int"]},{"annotation":[],"tag":"REmpty"}]}]}]}]}},"sourceSpan":{"start":[45,1],"name":"/home/jordan/Programming/ps-libs/lib/node-net/src/Node/Net/Server.purs","end":[49,6]}},{"kind":null,"children":[],"comments":"Options to configure the listening side of a `Server`.\nThese options decide whether the `Server` is ICP or TCP.\n\nOne of `path` or `port` must be set.\nSetting `path` will make the `Server` ICP.\nSetting `port` will make the `Server` TCP.\n","title":"ListenOptions","info":{"declType":"data","dataDeclType":"data","typeArguments":[]},"sourceSpan":{"start":[57,1],"name":"/home/jordan/Programming/ps-libs/lib/node-net/src/Node/Net/Server.purs","end":[57,19]}},{"kind":null,"children":[],"comments":"An ICP or TCP server.\n","title":"Server","info":{"declType":"data","dataDeclType":"data","typeArguments":[]},"sourceSpan":{"start":[60,1],"name":"/home/jordan/Programming/ps-libs/lib/node-net/src/Node/Net/Server.purs","end":[60,35]}},{"kind":null,"children":[],"comments":"Options to configure the basics of a `Server`.\n","title":"ServerOptions","info":{"declType":"data","dataDeclType":"data","typeArguments":[]},"sourceSpan":{"start":[63,1],"name":"/home/jordan/Programming/ps-libs/lib/node-net/src/Node/Net/Server.purs","end":[63,19]}},{"kind":null,"children":[],"comments":"Attempts to return the bound address of a `Server`.\n\nIf the `Server` is not listening, `Nothing` is returned.\nIf the `Server` is ICP, it will return a `String`.\nIf the `Server` is TCP, it will return an `Address`.\n","title":"address","info":{"declType":"value","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Node","Net","Server"],"Server"]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Either"],"Either"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Node","Net","Server"],"Address"]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}}]}}]}]}},"sourceSpan":{"start":[72,1],"name":"/home/jordan/Programming/ps-libs/lib/node-net/src/Node/Net/Server.purs","end":[72,60]}},{"kind":null,"children":[],"comments":"Closes the `Server` and invokes the callback after the `'close'` event\nis emitted.\nAn `Error` is passed to the callback if the `Server` was not open.\n","title":"close","info":{"declType":"value","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Node","Net","Server"],"Server"]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Effect","Exception"],"Error"]}]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]}}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]}]}},"sourceSpan":{"start":[95,1],"name":"/home/jordan/Programming/ps-libs/lib/node-net/src/Node/Net/Server.purs","end":[95,63]}},{"kind":null,"children":[],"comments":"Creates an ICP or TCP `Server`, returns the `Server`,\nand adds the callback as a listenter for the `'connection'` event.\nthe `Server` will be ICP or TCP depending on what it `listen`s to.\n","title":"createServer","info":{"declType":"value","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Options"],"Options"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Node","Net","Server"],"ServerOptions"]}]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Node","Net","Socket"],"Socket"]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]}}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Node","Net","Server"],"Server"]}]}]}]}},"sourceSpan":{"start":[104,1],"name":"/home/jordan/Programming/ps-libs/lib/node-net/src/Node/Net/Server.purs","end":[104,82]}},{"kind":null,"children":[],"comments":"Returns the number of concurrent connections to the `Server`.\n","title":"getConnections","info":{"declType":"value","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Node","Net","Server"],"Server"]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Either"],"Either"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Effect","Exception"],"Error"]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]}}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]}]}},"sourceSpan":{"start":[114,1],"name":"/home/jordan/Programming/ps-libs/lib/node-net/src/Node/Net/Server.purs","end":[114,77]}},{"kind":null,"children":[],"comments":"Starts the `Server` as an ICP or TCP `Server` listening for connections,\nadds the callback as a listener to the `'listening'` event, and emits the\n`'listening'` event.\n","title":"listen","info":{"declType":"value","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Node","Net","Server"],"Server"]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Options"],"Options"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Node","Net","Server"],"ListenOptions"]}]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]}]}]}},"sourceSpan":{"start":[127,1],"name":"/home/jordan/Programming/ps-libs/lib/node-net/src/Node/Net/Server.purs","end":[127,72]}},{"kind":null,"children":[],"comments":"Maximum number of pending connections.\nDefaults to `511`.\n","title":"listenBacklog","info":{"declType":"value","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Options"],"Option"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Node","Net","Server"],"ListenOptions"]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]}},"sourceSpan":{"start":[133,1],"name":"/home/jordan/Programming/ps-libs/lib/node-net/src/Node/Net/Server.purs","end":[133,42]}},{"kind":null,"children":[],"comments":"When `true`, the handle cannot be shared and will result in an error.\nWhen `false`, the handle can be shared.\nDefaults to `false`.\n","title":"listenExclusive","info":{"declType":"value","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Options"],"Option"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Node","Net","Server"],"ListenOptions"]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}},"sourceSpan":{"start":[139,1],"name":"/home/jordan/Programming/ps-libs/lib/node-net/src/Node/Net/Server.purs","end":[139,48]}},{"kind":null,"children":[],"comments":"The host to configure TCP `Server`s.\n\nDetermines the host the `Server` will attempt to listen on.\nDefaults to IPv6 `::` if available, and IPv4 `0.0.0.0` otherwise.\n","title":"listenHost","info":{"declType":"value","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Options"],"Option"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Node","Net","Server"],"ListenOptions"]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}},"sourceSpan":{"start":[146,1],"name":"/home/jordan/Programming/ps-libs/lib/node-net/src/Node/Net/Server.purs","end":[146,42]}},{"kind":null,"children":[],"comments":"Starts the `Server` as an ICP `Server` listening for connections,\nadds the callback as a listener to the `'listening'` event, and emits the\n`'listening'` event.\n","title":"listenICP","info":{"declType":"value","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Node","Net","Server"],"Server"]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]}]}]}]}},"sourceSpan":{"start":[152,1],"name":"/home/jordan/Programming/ps-libs/lib/node-net/src/Node/Net/Server.purs","end":[152,67]}},{"kind":null,"children":[],"comments":"When `true`, only binds to IPv6 hosts and not also to IPv4 hosts.\nDefaults to `false`.\n","title":"listenIpv6Only","info":{"declType":"value","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Options"],"Option"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Node","Net","Server"],"ListenOptions"]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}},"sourceSpan":{"start":[162,1],"name":"/home/jordan/Programming/ps-libs/lib/node-net/src/Node/Net/Server.purs","end":[162,47]}},{"kind":null,"children":[],"comments":"The path to configure ICP `Server`s.\n\nDetermines the ICP endpoint the `Server` will attempt to listen on.\n","title":"listenPath","info":{"declType":"value","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Options"],"Option"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Node","Net","Server"],"ListenOptions"]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}},"sourceSpan":{"start":[168,1],"name":"/home/jordan/Programming/ps-libs/lib/node-net/src/Node/Net/Server.purs","end":[168,42]}},{"kind":null,"children":[],"comments":"The port to configure TCP `Server`s.\n\nDetermines the TCP endpoint the `Server` will attempt to listen on.\nWhen `0`, the OS will assign an arbitrary port.\n","title":"listenPort","info":{"declType":"value","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Options"],"Option"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Node","Net","Server"],"ListenOptions"]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]}},"sourceSpan":{"start":[175,1],"name":"/home/jordan/Programming/ps-libs/lib/node-net/src/Node/Net/Server.purs","end":[175,39]}},{"kind":null,"children":[],"comments":"Makes the ICP pipe readable for all users.\nDefaults to `false`.\n","title":"listenReadableAll","info":{"declType":"value","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Options"],"Option"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Node","Net","Server"],"ListenOptions"]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}},"sourceSpan":{"start":[180,1],"name":"/home/jordan/Programming/ps-libs/lib/node-net/src/Node/Net/Server.purs","end":[180,50]}},{"kind":null,"children":[],"comments":"Starts the `Server` as a TCP `Server` listening for connections,\nadds the callback as a listener to the `'listening'` event, and emits the\n`'listening'` event.\n","title":"listenTCP","info":{"declType":"value","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Node","Net","Server"],"Server"]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]}]}]}]}]}},"sourceSpan":{"start":[186,1],"name":"/home/jordan/Programming/ps-libs/lib/node-net/src/Node/Net/Server.purs","end":[186,74]}},{"kind":null,"children":[],"comments":"Makes the ICP pipe writable for all users.\nDefaults to `false`.\n","title":"listenWritableAll","info":{"declType":"value","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Options"],"Option"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Node","Net","Server"],"ListenOptions"]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}},"sourceSpan":{"start":[196,1],"name":"/home/jordan/Programming/ps-libs/lib/node-net/src/Node/Net/Server.purs","end":[196,50]}},{"kind":null,"children":[],"comments":"Returns `true` if the `Server` is listening for connections, and `false`\notherwise.\n","title":"listening","info":{"declType":"value","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Node","Net","Server"],"Server"]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}]}},"sourceSpan":{"start":[203,1],"name":"/home/jordan/Programming/ps-libs/lib/node-net/src/Node/Net/Server.purs","end":[203,38]}},{"kind":null,"children":[],"comments":"Attaches the callback as a listener to the `'close'` event.\n\n`'close'` is emitted when a close occurs.\nWill not be emitted until all connections have ended.\n","title":"onClose","info":{"declType":"value","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Node","Net","Server"],"Server"]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]}]}},"sourceSpan":{"start":[210,1],"name":"/home/jordan/Programming/ps-libs/lib/node-net/src/Node/Net/Server.purs","end":[210,48]}},{"kind":null,"children":[],"comments":"Attaches the callback as a listener to the `'connection'` event.\n\n`'connection'` is emitted when a new connection is made.\n","title":"onConnection","info":{"declType":"value","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Node","Net","Server"],"Server"]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Node","Net","Socket"],"Socket"]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]}}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]}]}},"sourceSpan":{"start":[216,1],"name":"/home/jordan/Programming/ps-libs/lib/node-net/src/Node/Net/Server.purs","end":[216,65]}},{"kind":null,"children":[],"comments":"Attaches the callback as a listener to the `'error'` event.\n\n`'error'` is emitted when an error occurs.\n","title":"onError","info":{"declType":"value","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Node","Net","Server"],"Server"]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Effect","Exception"],"Error"]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]}}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]}]}},"sourceSpan":{"start":[227,1],"name":"/home/jordan/Programming/ps-libs/lib/node-net/src/Node/Net/Server.purs","end":[227,59]}},{"kind":null,"children":[],"comments":"Attaches the callback as a listener to the `'listening'` event.\n\n`'listening'` is emitted when the `Server` has been bound.\n","title":"onListening","info":{"declType":"value","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Node","Net","Server"],"Server"]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]}]}},"sourceSpan":{"start":[234,1],"name":"/home/jordan/Programming/ps-libs/lib/node-net/src/Node/Net/Server.purs","end":[234,52]}},{"kind":null,"children":[],"comments":"Allows half open TCP connections.\nDefaults to `false`.\n","title":"serverAllowHalfOpen","info":{"declType":"value","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Options"],"Option"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Node","Net","Server"],"ServerOptions"]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}},"sourceSpan":{"start":[241,1],"name":"/home/jordan/Programming/ps-libs/lib/node-net/src/Node/Net/Server.purs","end":[241,52]}},{"kind":null,"children":[],"comments":"When `true`, pauses the `Socket` on incomming connections.\nDefaults to `false`.\n","title":"serverPauseOnConnect","info":{"declType":"value","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Options"],"Option"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Node","Net","Server"],"ServerOptions"]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}},"sourceSpan":{"start":[246,1],"name":"/home/jordan/Programming/ps-libs/lib/node-net/src/Node/Net/Server.purs","end":[246,53]}}]},{"reExports":[],"name":"Node.Net.Socket","comments":null,"declarations":[{"kind":null,"children":[],"comments":"Options to configure the connecting side of a `Socket`.\nThese options decide whether the `Socket` is ICP or TCP.\n\nOne of `path` or `port` must be set.\nSetting `path` will make the `Socket` ICP.\nSetting `port` will make the `Socket` TCP.\n","title":"ConnectOptions","info":{"declType":"data","dataDeclType":"data","typeArguments":[]},"sourceSpan":{"start":[80,1],"name":"/home/jordan/Programming/ps-libs/lib/node-net/src/Node/Net/Socket.purs","end":[80,20]}},{"kind":null,"children":[],"comments":null,"title":"Lookup","info":{"arguments":[],"declType":"typeSynonym","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"annotation":[],"tag":"RCons","contents":["address",{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"String"]},{"annotation":[],"tag":"RCons","contents":["family",{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},{"annotation":[],"tag":"RCons","contents":["host",{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"String"]},{"annotation":[],"tag":"REmpty"}]}]}]}]}},"sourceSpan":{"start":[82,1],"name":"/home/jordan/Programming/ps-libs/lib/node-net/src/Node/Net/Socket.purs","end":[86,6]}},{"kind":null,"children":[],"comments":"An ICP endpoint or TCP socket.\n","title":"Socket","info":{"declType":"data","dataDeclType":"data","typeArguments":[]},"sourceSpan":{"start":[89,1],"name":"/home/jordan/Programming/ps-libs/lib/node-net/src/Node/Net/Socket.purs","end":[89,35]}},{"kind":null,"children":[],"comments":"Options to configure the basics of a `Socket`.\n","title":"SocketOptions","info":{"declType":"data","dataDeclType":"data","typeArguments":[]},"sourceSpan":{"start":[92,1],"name":"/home/jordan/Programming/ps-libs/lib/node-net/src/Node/Net/Socket.purs","end":[92,19]}},{"kind":null,"children":[],"comments":"The number of characters buffered to be written on a `Socket`.\n\nN.B. The number of characters is not equal to the number of bytes.\n","title":"bufferSize","info":{"declType":"value","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Node","Net","Socket"],"Socket"]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]}}]}]}},"sourceSpan":{"start":[99,1],"name":"/home/jordan/Programming/ps-libs/lib/node-net/src/Node/Net/Socket.purs","end":[99,43]}},{"kind":null,"children":[],"comments":"The number of bytes recieved on the `Socket`.\n","title":"bytesRead","info":{"declType":"value","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Node","Net","Socket"],"Socket"]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]}]}},"sourceSpan":{"start":[107,1],"name":"/home/jordan/Programming/ps-libs/lib/node-net/src/Node/Net/Socket.purs","end":[107,34]}},{"kind":null,"children":[],"comments":"The number of bytes sent on the `Socket`.\n","title":"bytesWritten","info":{"declType":"value","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Node","Net","Socket"],"Socket"]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]}]}},"sourceSpan":{"start":[113,1],"name":"/home/jordan/Programming/ps-libs/lib/node-net/src/Node/Net/Socket.purs","end":[113,37]}},{"kind":null,"children":[],"comments":"Creates a custom ICP or TCP connection on the `Socket`.\nNormally, `createConnection` should be used to create the socket.\n","title":"connect","info":{"declType":"value","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Node","Net","Socket"],"Socket"]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Options"],"Options"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Node","Net","Socket"],"ConnectOptions"]}]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]}]}]}},"sourceSpan":{"start":[120,1],"name":"/home/jordan/Programming/ps-libs/lib/node-net/src/Node/Net/Socket.purs","end":[120,74]}},{"kind":null,"children":[],"comments":"Version of IP stack, either `4` or `6`.\nDefaults to `4`.\n","title":"connectFamily","info":{"declType":"value","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Options"],"Option"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Node","Net","Socket"],"ConnectOptions"]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]}},"sourceSpan":{"start":[126,1],"name":"/home/jordan/Programming/ps-libs/lib/node-net/src/Node/Net/Socket.purs","end":[126,43]}},{"kind":null,"children":[],"comments":"DNS lookup hints.\n","title":"connectHints","info":{"declType":"value","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Options"],"Option"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Node","Net","Socket"],"ConnectOptions"]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]}},"sourceSpan":{"start":[130,1],"name":"/home/jordan/Programming/ps-libs/lib/node-net/src/Node/Net/Socket.purs","end":[130,42]}},{"kind":null,"children":[],"comments":"The host to configure TCP `Socket`s.\n\nDetermines the host the `Socket` will attempt to connect to.\nDefaults to `localhost`.\n","title":"connectHost","info":{"declType":"value","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Options"],"Option"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Node","Net","Socket"],"ConnectOptions"]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}},"sourceSpan":{"start":[137,1],"name":"/home/jordan/Programming/ps-libs/lib/node-net/src/Node/Net/Socket.purs","end":[137,44]}},{"kind":null,"children":[],"comments":"Creates a custom ICP connection on the `Socket`.\nNormally, `createConnectionICP` should be used to create the socket.\n","title":"connectICP","info":{"declType":"value","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Node","Net","Socket"],"Socket"]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]}]}]}},"sourceSpan":{"start":[142,1],"name":"/home/jordan/Programming/ps-libs/lib/node-net/src/Node/Net/Socket.purs","end":[142,61]}},{"kind":null,"children":[],"comments":"Address the `Socket` should connect from.\n","title":"connectLocalAddress","info":{"declType":"value","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Options"],"Option"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Node","Net","Socket"],"ConnectOptions"]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}},"sourceSpan":{"start":[147,1],"name":"/home/jordan/Programming/ps-libs/lib/node-net/src/Node/Net/Socket.purs","end":[147,52]}},{"kind":null,"children":[],"comments":"Port the `Socket` should connect from.\n","title":"connectLocalPort","info":{"declType":"value","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Options"],"Option"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Node","Net","Socket"],"ConnectOptions"]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]}},"sourceSpan":{"start":[151,1],"name":"/home/jordan/Programming/ps-libs/lib/node-net/src/Node/Net/Socket.purs","end":[151,46]}},{"kind":null,"children":[],"comments":"The path to configure ICP `Socket`s.\n\nDetermines the ICP endpoint the `Socket` will attempt to connect to.\n","title":"connectPath","info":{"declType":"value","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Options"],"Option"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Node","Net","Socket"],"ConnectOptions"]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}},"sourceSpan":{"start":[157,1],"name":"/home/jordan/Programming/ps-libs/lib/node-net/src/Node/Net/Socket.purs","end":[157,44]}},{"kind":null,"children":[],"comments":"The port to configure TCP `Server`s.\n\nDetermines the TCP endpoint the `Server` will attempt to listen on.\n","title":"connectPort","info":{"declType":"value","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Options"],"Option"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Node","Net","Socket"],"ConnectOptions"]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]}},"sourceSpan":{"start":[163,1],"name":"/home/jordan/Programming/ps-libs/lib/node-net/src/Node/Net/Socket.purs","end":[163,41]}},{"kind":null,"children":[],"comments":"Creates a custom TCP connection on the `Socket`.\nNormally, `createConnectionTCP` should be used to create the socket.\n","title":"connectTCP","info":{"declType":"value","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Node","Net","Socket"],"Socket"]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]}]}]}]}},"sourceSpan":{"start":[168,1],"name":"/home/jordan/Programming/ps-libs/lib/node-net/src/Node/Net/Socket.purs","end":[168,68]}},{"kind":null,"children":[],"comments":"Returns `true` if `connect` was called, but the `'connect'` event hasn't\nbeen emitted yet.\nReturns `false` any other time.\n","title":"connecting","info":{"declType":"value","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Node","Net","Socket"],"Socket"]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}]}},"sourceSpan":{"start":[181,1],"name":"/home/jordan/Programming/ps-libs/lib/node-net/src/Node/Net/Socket.purs","end":[181,39]}},{"kind":null,"children":[],"comments":"Creates an ICP or TCP `Socket`, initiates a connection,\nreturns the `Socket`, adds the callback as a one-time listener for the\n`'connect'` event, and emits the `'connect'` event.\n","title":"createConnection","info":{"declType":"value","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Options"],"Options"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Node","Net","Socket"],"SocketOptions"]}]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Node","Net","Socket"],"Socket"]}]}]}]}},"sourceSpan":{"start":[189,1],"name":"/home/jordan/Programming/ps-libs/lib/node-net/src/Node/Net/Socket.purs","end":[189,74]}},{"kind":null,"children":[],"comments":"Creates an ICP `Socket`, initiates a connection,\nreturns the `Socket`, adds the callback as a one-time listener for the\n`'connect'` event, and emits the `'connect'` event.\n","title":"createConnectionICP","info":{"declType":"value","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Node","Net","Socket"],"Socket"]}]}]}]}},"sourceSpan":{"start":[196,1],"name":"/home/jordan/Programming/ps-libs/lib/node-net/src/Node/Net/Socket.purs","end":[196,62]}},{"kind":null,"children":[],"comments":"Creates a TCP `Socket`, initiates a connection,\nreturns the `Socket`, adds the callback as a one-time listener for the\n`'connect'` event, and emits the `'connect'` event.\n","title":"createConnectionTCP","info":{"declType":"value","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Node","Net","Socket"],"Socket"]}]}]}]}]}},"sourceSpan":{"start":[203,1],"name":"/home/jordan/Programming/ps-libs/lib/node-net/src/Node/Net/Socket.purs","end":[203,69]}},{"kind":null,"children":[],"comments":"Ensure no more I/O activity happens on the socket.\n\nIf an `Error` is provided, an `'error'` event is emitted.\n","title":"destroy","info":{"declType":"value","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Node","Net","Socket"],"Socket"]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Effect","Exception"],"Error"]}]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]}]}},"sourceSpan":{"start":[215,1],"name":"/home/jordan/Programming/ps-libs/lib/node-net/src/Node/Net/Socket.purs","end":[215,48]}},{"kind":null,"children":[],"comments":"Returns `true` if the connection is destroyed and can no longer transfer\ndata.\n","title":"destroyed","info":{"declType":"value","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Node","Net","Socket"],"Socket"]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}]}},"sourceSpan":{"start":[222,1],"name":"/home/jordan/Programming/ps-libs/lib/node-net/src/Node/Net/Socket.purs","end":[222,38]}},{"kind":null,"children":[],"comments":"Send a `FIN` packet to half-close the `Socket`.\nThe server might still send more data.\nInvokes the callback after the `Socket` is finished.\n","title":"end","info":{"declType":"value","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Node","Net","Socket"],"Socket"]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Node","Buffer"],"Buffer"]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]}]}]}},"sourceSpan":{"start":[230,1],"name":"/home/jordan/Programming/ps-libs/lib/node-net/src/Node/Net/Socket.purs","end":[230,54]}},{"kind":null,"children":[],"comments":"Send a `FIN` packet to half-close the `Socket`.\nThe server might still send more data.\nInvokes the callback after the `Socket` is finished.\n","title":"endString","info":{"declType":"value","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Node","Net","Socket"],"Socket"]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Node","Encoding"],"Encoding"]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]}]}]}]}},"sourceSpan":{"start":[238,1],"name":"/home/jordan/Programming/ps-libs/lib/node-net/src/Node/Net/Socket.purs","end":[238,72]}},{"kind":null,"children":[],"comments":"Attempts to return the address a client is connecting on.\nE.g. if a client connects from `192.168.1.1`,\nthe result would be `Just \"192.168.1.1\"`.\n","title":"localAddress","info":{"declType":"value","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Node","Net","Socket"],"Socket"]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}}]}]}},"sourceSpan":{"start":[247,1],"name":"/home/jordan/Programming/ps-libs/lib/node-net/src/Node/Net/Socket.purs","end":[247,48]}},{"kind":null,"children":[],"comments":"Attempts to return the port a client is connecting on.\nE.g. if a client connects from `80`,\nthe result would be `Just 80`.\n","title":"localPort","info":{"declType":"value","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Node","Net","Socket"],"Socket"]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]}}]}]}},"sourceSpan":{"start":[257,1],"name":"/home/jordan/Programming/ps-libs/lib/node-net/src/Node/Net/Socket.purs","end":[257,42]}},{"kind":null,"children":[],"comments":"Attaches the callback as a listener to the `'close'` event.\nThe `Boolean` represents whether an error happened during transmission.\n\n`'close'` is emitted when an close occurs.\n","title":"onClose","info":{"declType":"value","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Node","Net","Socket"],"Socket"]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]}}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]}]}},"sourceSpan":{"start":[266,1],"name":"/home/jordan/Programming/ps-libs/lib/node-net/src/Node/Net/Socket.purs","end":[266,61]}},{"kind":null,"children":[],"comments":"Attaches the callback as a listener to the `'connect'` event.\n\n`'connect'` is emitted when a new connection is successfully establed.\n","title":"onConnect","info":{"declType":"value","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Node","Net","Socket"],"Socket"]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]}]}},"sourceSpan":{"start":[277,1],"name":"/home/jordan/Programming/ps-libs/lib/node-net/src/Node/Net/Socket.purs","end":[277,50]}},{"kind":null,"children":[],"comments":"Attaches the callback as a listener to the `'data'` event.\n\n`'data'` is emitted when a data is recieved.\nData will be lost if there is no listener when `'data'` is emitted.\n","title":"onData","info":{"declType":"value","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Node","Net","Socket"],"Socket"]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Either"],"Either"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Node","Buffer"],"Buffer"]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]}}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]}]}},"sourceSpan":{"start":[286,1],"name":"/home/jordan/Programming/ps-libs/lib/node-net/src/Node/Net/Socket.purs","end":[286,73]}},{"kind":null,"children":[],"comments":"Attaches the callback as a listener to the `'drain'` event.\n\n`'drain'` is emitted when the write buffer is empty.\n","title":"onDrain","info":{"declType":"value","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Node","Net","Socket"],"Socket"]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]}]}},"sourceSpan":{"start":[297,1],"name":"/home/jordan/Programming/ps-libs/lib/node-net/src/Node/Net/Socket.purs","end":[297,48]}},{"kind":null,"children":[],"comments":"Attaches the callback as a listener to the `'end'` event.\n\n`'end'` is emitted when the other end of the `Socket` sends a `FIN` packet.\n","title":"onEnd","info":{"declType":"value","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Node","Net","Socket"],"Socket"]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]}]}},"sourceSpan":{"start":[303,1],"name":"/home/jordan/Programming/ps-libs/lib/node-net/src/Node/Net/Socket.purs","end":[303,46]}},{"kind":null,"children":[],"comments":"Attaches the callback as a listener to the `'error'` event.\n\n`'error'` is emitted when an error occurs.\n`'close'` is emitted directly after this event.\n","title":"onError","info":{"declType":"value","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Node","Net","Socket"],"Socket"]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Effect","Exception"],"Error"]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]}}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]}]}},"sourceSpan":{"start":[310,1],"name":"/home/jordan/Programming/ps-libs/lib/node-net/src/Node/Net/Socket.purs","end":[310,59]}},{"kind":null,"children":[],"comments":"Attaches the callback as a listener to the `'lookup'` event.\n\n`'lookup'` is emitted after resolving the hostname but before connecting.\n","title":"onLookup","info":{"declType":"value","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Node","Net","Socket"],"Socket"]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Either"],"Either"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Effect","Exception"],"Error"]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Node","Net","Socket"],"Lookup"]}]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]}}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]}]}},"sourceSpan":{"start":[319,1],"name":"/home/jordan/Programming/ps-libs/lib/node-net/src/Node/Net/Socket.purs","end":[319,74]}},{"kind":null,"children":[],"comments":"Attaches the callback as a listener to the `'ready'` event.\n\n`'ready'` is emitted when the `Socket` is ready to be used.\n","title":"onReady","info":{"declType":"value","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Node","Net","Socket"],"Socket"]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]}]}},"sourceSpan":{"start":[331,1],"name":"/home/jordan/Programming/ps-libs/lib/node-net/src/Node/Net/Socket.purs","end":[331,48]}},{"kind":null,"children":[],"comments":"Attaches the callback as a listener to the `'timeout'` event.\n\n`'timeout'` is emitted if the `Socket` times out from inactivity.\nThe `Socket` is still open and should be manually closed.\n","title":"onTimeout","info":{"declType":"value","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Node","Net","Socket"],"Socket"]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]}]}},"sourceSpan":{"start":[338,1],"name":"/home/jordan/Programming/ps-libs/lib/node-net/src/Node/Net/Socket.purs","end":[338,50]}},{"kind":null,"children":[],"comments":"Pauses `'data'` events from being emitted.\n","title":"pause","info":{"declType":"value","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Node","Net","Socket"],"Socket"]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]}},"sourceSpan":{"start":[344,1],"name":"/home/jordan/Programming/ps-libs/lib/node-net/src/Node/Net/Socket.purs","end":[344,31]}},{"kind":null,"children":[],"comments":"Returns `true` if the `Socket` is not connected yet.\nReturns `false` otherwise.\n","title":"pending","info":{"declType":"value","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Node","Net","Socket"],"Socket"]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}]}},"sourceSpan":{"start":[351,1],"name":"/home/jordan/Programming/ps-libs/lib/node-net/src/Node/Net/Socket.purs","end":[351,36]}},{"kind":null,"children":[],"comments":"Attempts to return the address a `Socket` is connected to.\n","title":"remoteAddress","info":{"declType":"value","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Node","Net","Socket"],"Socket"]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}}]}]}},"sourceSpan":{"start":[357,1],"name":"/home/jordan/Programming/ps-libs/lib/node-net/src/Node/Net/Socket.purs","end":[357,49]}},{"kind":null,"children":[],"comments":"Attempts to return the IP family a `Socket` is connected to,\neither `\"IPv4\"` or `\"IPv6\"`.\n","title":"remoteFamily","info":{"declType":"value","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Node","Net","Socket"],"Socket"]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}}]}]}},"sourceSpan":{"start":[366,1],"name":"/home/jordan/Programming/ps-libs/lib/node-net/src/Node/Net/Socket.purs","end":[366,48]}},{"kind":null,"children":[],"comments":"Attempts to return the port a `Socket` is connected to.\n","title":"remotePort","info":{"declType":"value","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Node","Net","Socket"],"Socket"]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]}}]}]}},"sourceSpan":{"start":[374,1],"name":"/home/jordan/Programming/ps-libs/lib/node-net/src/Node/Net/Socket.purs","end":[374,43]}},{"kind":null,"children":[],"comments":"Resumes emitting `'data'` events.\n","title":"resume","info":{"declType":"value","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Node","Net","Socket"],"Socket"]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]}},"sourceSpan":{"start":[382,1],"name":"/home/jordan/Programming/ps-libs/lib/node-net/src/Node/Net/Socket.purs","end":[382,32]}},{"kind":null,"children":[],"comments":"Sets the `Encoding` for the data read on the `Socket`.\n","title":"setEncoding","info":{"declType":"value","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Node","Net","Socket"],"Socket"]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Node","Encoding"],"Encoding"]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]}]}},"sourceSpan":{"start":[388,1],"name":"/home/jordan/Programming/ps-libs/lib/node-net/src/Node/Net/Socket.purs","end":[388,49]}},{"kind":null,"children":[],"comments":"Sets keep-alive behavior.\nWhen `true`, it enables the behavior.\nWhen `false`, it disables the behavior.\nThe `Int` is the initial delay in milliseconds before the first probe is\nsent to an idle `Socket`.\n","title":"setKeepAlive","info":{"declType":"value","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Node","Net","Socket"],"Socket"]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]}]}]}},"sourceSpan":{"start":[398,1],"name":"/home/jordan/Programming/ps-libs/lib/node-net/src/Node/Net/Socket.purs","end":[398,56]}},{"kind":null,"children":[],"comments":"When `true`, disables the Nagle algorithm and sends data immedately.\nWhen `false`, enables the Nagle algorithm and buffers data before sending.\n","title":"setNoDelay","info":{"declType":"value","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Node","Net","Socket"],"Socket"]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]}]}},"sourceSpan":{"start":[406,1],"name":"/home/jordan/Programming/ps-libs/lib/node-net/src/Node/Net/Socket.purs","end":[406,47]}},{"kind":null,"children":[],"comments":"When `0`, disables the existing timeout.\nOtherwise, sets the `Socket` to timeout after the given milliseconds.\nAdds the callback as a listener for the `'timeout'` event.\n","title":"setTimeout","info":{"declType":"value","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Node","Net","Socket"],"Socket"]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]}]}]}},"sourceSpan":{"start":[414,1],"name":"/home/jordan/Programming/ps-libs/lib/node-net/src/Node/Net/Socket.purs","end":[414,58]}},{"kind":null,"children":[],"comments":"Allows half open TCP connections.\nDefaults to `false`.\n","title":"socketAllowHalfOpen","info":{"declType":"value","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Options"],"Option"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Node","Net","Socket"],"SocketOptions"]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}},"sourceSpan":{"start":[420,1],"name":"/home/jordan/Programming/ps-libs/lib/node-net/src/Node/Net/Socket.purs","end":[420,52]}},{"kind":null,"children":[],"comments":"Creates a `Socket` around the given `FileDescriptor`.\nIf not specified, creates a new `Socket`.\n","title":"socketFd","info":{"declType":"value","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Options"],"Option"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Node","Net","Socket"],"SocketOptions"]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Node","FS"],"FileDescriptor"]}]}},"sourceSpan":{"start":[425,1],"name":"/home/jordan/Programming/ps-libs/lib/node-net/src/Node/Net/Socket.purs","end":[425,48]}},{"kind":null,"children":[],"comments":"The host to configure TCP `Socket`s.\n\nDetermines the host the `Socket` will attempt to connect to.\nDefaults to `localhost`.\n","title":"socketHost","info":{"declType":"value","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Options"],"Option"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Node","Net","Socket"],"SocketOptions"]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}},"sourceSpan":{"start":[432,1],"name":"/home/jordan/Programming/ps-libs/lib/node-net/src/Node/Net/Socket.purs","end":[432,42]}},{"kind":null,"children":[],"comments":"The path to configure ICP `Socket`s.\n\nDetermines the ICP endpoint the `Socket` will attempt to connect to.\n","title":"socketPath","info":{"declType":"value","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Options"],"Option"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Node","Net","Socket"],"SocketOptions"]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}},"sourceSpan":{"start":[438,1],"name":"/home/jordan/Programming/ps-libs/lib/node-net/src/Node/Net/Socket.purs","end":[438,42]}},{"kind":null,"children":[],"comments":"The port to configure TCP `Socket`s.\n\nDetermines the TCP endpoint the `Socket` will attempt to connect to.\n","title":"socketPort","info":{"declType":"value","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Options"],"Option"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Node","Net","Socket"],"SocketOptions"]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]}},"sourceSpan":{"start":[444,1],"name":"/home/jordan/Programming/ps-libs/lib/node-net/src/Node/Net/Socket.purs","end":[444,39]}},{"kind":null,"children":[],"comments":"Allows reads if a `FileDescriptor` is also set.\nDefaults to `false`.\n","title":"socketReadable","info":{"declType":"value","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Options"],"Option"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Node","Net","Socket"],"SocketOptions"]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}},"sourceSpan":{"start":[449,1],"name":"/home/jordan/Programming/ps-libs/lib/node-net/src/Node/Net/Socket.purs","end":[449,47]}},{"kind":null,"children":[],"comments":"Passed to `setTimeout` when the `Socket` is created but before it starts\nthe connection.\n","title":"socketTimeout","info":{"declType":"value","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Options"],"Option"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Node","Net","Socket"],"SocketOptions"]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]}},"sourceSpan":{"start":[454,1],"name":"/home/jordan/Programming/ps-libs/lib/node-net/src/Node/Net/Socket.purs","end":[454,42]}},{"kind":null,"children":[],"comments":"Allows writes if a `FileDescriptor` is also set.\nDefaults to `false`.\n","title":"socketWritable","info":{"declType":"value","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Options"],"Option"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Node","Net","Socket"],"SocketOptions"]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}},"sourceSpan":{"start":[459,1],"name":"/home/jordan/Programming/ps-libs/lib/node-net/src/Node/Net/Socket.purs","end":[459,47]}},{"kind":null,"children":[],"comments":"Sends data on the `Socket` and invokes the callback after the data is\nfinally written.\nReturns `true` if the data was flushed successfully.\nReturns `false` if the data was queued.\nEmits a `'drain'` event after the buffer is free.\n","title":"write","info":{"declType":"value","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Node","Net","Socket"],"Socket"]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Node","Buffer"],"Buffer"]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}]}]}]}},"sourceSpan":{"start":[469,1],"name":"/home/jordan/Programming/ps-libs/lib/node-net/src/Node/Net/Socket.purs","end":[469,59]}},{"kind":null,"children":[],"comments":"Sends data on the `Socket` and invokes the callback after the data is\nfinally written.\nReturns `true` if the data was flushed successfully.\nReturns `false` if the data was queued.\nEmits a `'drain'` event after the buffer is free.\n","title":"writeString","info":{"declType":"value","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Node","Net","Socket"],"Socket"]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Node","Encoding"],"Encoding"]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}]}]}]}]}},"sourceSpan":{"start":[479,1],"name":"/home/jordan/Programming/ps-libs/lib/node-net/src/Node/Net/Socket.purs","end":[479,77]}}]}],"resolvedDependencies":{"purescript-exceptions":"6.0.0","purescript-newtype":"5.0.0","purescript-effect":"4.0.0","purescript-ordered-collections":"3.0.0","purescript-control":"6.0.0","purescript-arraybuffer-types":"3.0.2","purescript-console":"6.0.0","purescript-either":"6.0.0","purescript-node-streams":"7.0.0","purescript-profunctor":"6.0.0","purescript-arrays":"7.0.0","purescript-maybe":"6.0.0","purescript-type-equality":"4.0.1","purescript-exists":"6.0.0","purescript-node-path":"5.0.0","purescript-distributive":"6.0.0","purescript-unfoldable":"6.0.0","purescript-invariant":"6.0.0","purescript-lazy":"6.0.0","purescript-foreign-object":"4.0.0","purescript-foldable-traversable":"6.0.0","purescript-tailrec":"6.0.0","purescript-gen":"4.0.0","purescript-typelevel-prelude":"7.0.0","purescript-functors":"5.0.0","purescript-prelude":"6.0.0","purescript-st":"6.0.0","purescript-bifunctors":"6.0.0","purescript-nonempty":"7.0.0","purescript-contravariant":"6.0.0","purescript-unsafe-coerce":"6.0.0","purescript-refs":"6.0.0","purescript-integers":"6.0.0","purescript-orders":"6.0.0","purescript-const":"6.0.0","purescript-node-buffer":"8.0.0","purescript-node-fs":"8.0.0","purescript-transformers":"6.0.0","purescript-numbers":"9.0.0","purescript-js-date":"8.0.0","purescript-enums":"6.0.0","purescript-options":"7.0.0","purescript-tuples":"7.0.0","purescript-partial":"4.0.0","purescript-strings":"6.0.0","purescript-identity":"6.0.0","purescript-foreign":"7.0.0","purescript-safe-coerce":"2.0.0","purescript-lists":"7.0.0","purescript-nullable":"6.0.0","purescript-datetime":"6.0.0","purescript-functions":"6.0.0"},"version":"4.0.0","github":["purescript-node","purescript-node-net"],"versionTag":"v4.0.0","moduleMap":{"Data.BooleanAlgebra":"purescript-prelude","Data.Decide":"purescript-contravariant","Type.Data.Boolean":"purescript-typelevel-prelude","Data.Ring":"purescript-prelude","Data.Semigroup.Generic":"purescript-prelude","Control.Monad.Trans.Class":"purescript-transformers","Data.Functor.Product":"purescript-functors","Type.Function":"purescript-typelevel-prelude","Data.Functor.Flip":"purescript-functors","Foreign.Keys":"purescript-foreign","Data.NonEmpty":"purescript-nonempty","Node.FS.Perms":"purescript-node-fs","Effect.Uncurried":"purescript-effect","Control.Monad.Identity.Trans":"purescript-transformers","Data.Char.Gen":"purescript-strings","Data.Monoid.Generic":"purescript-prelude","Data.String.NonEmpty":"purescript-strings","Effect":"purescript-effect","Data.Traversable.Accum.Internal":"purescript-foldable-traversable","Data.Enum.Gen":"purescript-enums","Data.Nullable":"purescript-nullable","Control.Comonad.Env":"purescript-transformers","Control.Comonad.Traced.Class":"purescript-transformers","Data.Functor.Costar":"purescript-functors","Data.HeytingAlgebra.Generic":"purescript-prelude","Data.Functor.Compose":"purescript-functors","Foreign.Object.Gen":"purescript-foreign-object","Type.Row.Homogeneous":"purescript-typelevel-prelude","Node.Buffer.ST":"purescript-node-buffer","Data.Int.Bits":"purescript-integers","Data.DateTime":"purescript-datetime","Data.String.CodePoints":"purescript-strings","Data.Ord":"purescript-prelude","Control.Monad.Gen":"purescript-gen","Data.Bounded.Generic":"purescript-prelude","Data.Date":"purescript-datetime","Safe.Coerce":"purescript-safe-coerce","Data.Monoid.Dual":"purescript-prelude","Control.Monad.Rec.Class":"purescript-tailrec","Data.Time.Component":"purescript-datetime","Node.FS.Internal":"purescript-node-fs","Data.Bitraversable":"purescript-foldable-traversable","Data.Boolean":"purescript-prelude","Data.Show.Generic":"purescript-prelude","Data.Map":"purescript-ordered-collections","Control.Biapplicative":"purescript-bifunctors","Effect.Exception.Unsafe":"purescript-exceptions","Data.Array.NonEmpty.Internal":"purescript-arrays","Type.Proxy":"purescript-prelude","Data.Array.ST.Iterator":"purescript-arrays","Data.Enum.Generic":"purescript-enums","Data.DateTime.Gen":"purescript-datetime","Data.String.Pattern":"purescript-strings","Data.Bounded":"purescript-prelude","Control.Monad.State.Trans":"purescript-transformers","Data.TraversableWithIndex":"purescript-foldable-traversable","Node.Encoding":"purescript-node-buffer","Data.Int":"purescript-integers","Data.Profunctor.Cochoice":"purescript-profunctor","Data.Show":"purescript-prelude","Control.Monad.Writer.Trans":"purescript-transformers","Data.Foldable":"purescript-foldable-traversable","Data.Divide":"purescript-contravariant","Control.Comonad.Store.Class":"purescript-transformers","Data.Number":"purescript-numbers","Data.Enum":"purescript-enums","Foreign.Object":"purescript-foreign-object","Control.Apply":"purescript-prelude","Data.Functor.Contravariant":"purescript-contravariant","Data.Tuple.Nested":"purescript-tuples","Data.List.Internal":"purescript-lists","Control.Monad":"purescript-prelude","Data.Lazy":"purescript-lazy","Data.Monoid":"purescript-prelude","Data.Profunctor.Closed":"purescript-profunctor","Control.Monad.List.Trans":"purescript-transformers","Data.Ord.Generic":"purescript-prelude","Control.Monad.RWS":"purescript-transformers","Data.String.Common":"purescript-strings","Data.Maybe.First":"purescript-maybe","Control.Bind":"purescript-prelude","Data.Profunctor.Split":"purescript-profunctor","Data.Number.Format":"purescript-numbers","Data.Monoid.Additive":"purescript-prelude","Data.Symbol":"purescript-prelude","Data.Map.Gen":"purescript-ordered-collections","Data.String.Regex":"purescript-strings","Data.Profunctor.Join":"purescript-profunctor","Data.HeytingAlgebra":"purescript-prelude","Control.Alt":"purescript-control","Data.Date.Gen":"purescript-datetime","Control.Monad.Maybe.Trans":"purescript-transformers","Control.Monad.Cont":"purescript-transformers","Control.Monad.ST.Internal":"purescript-st","Data.Time.Component.Gen":"purescript-datetime","Effect.Ref":"purescript-refs","Data.Either.Inject":"purescript-either","Foreign.Object.ST.Unsafe":"purescript-foreign-object","Data.List.ZipList":"purescript-lists","Data.Ord.Min":"purescript-orders","Node.FS":"purescript-node-fs","Data.Functor.Coproduct.Nested":"purescript-functors","Data.Ring.Generic":"purescript-prelude","Data.Semigroup":"purescript-prelude","Data.Array.NonEmpty":"purescript-arrays","Control.Monad.Reader":"purescript-transformers","Data.Const":"purescript-const","Control.Comonad.Traced.Trans":"purescript-transformers","Node.FS.Async":"purescript-node-fs","Data.Ord.Down":"purescript-orders","Data.Number.Approximate":"purescript-numbers","Data.Array.ST.Partial":"purescript-arrays","Effect.Unsafe":"purescript-effect","Type.Data.Ordering":"purescript-typelevel-prelude","Data.Tuple":"purescript-tuples","Data.Functor.Clown":"purescript-functors","Data.Semigroup.Foldable":"purescript-foldable-traversable","Control.Biapply":"purescript-bifunctors","Data.Distributive":"purescript-distributive","Effect.Exception":"purescript-exceptions","Type.Equality":"purescript-type-equality","Foreign.Index":"purescript-foreign","Control.Alternative":"purescript-control","Data.Semiring":"purescript-prelude","Data.Functor.Product2":"purescript-functors","Data.Exists":"purescript-exists","Effect.Console":"purescript-console","Data.Traversable.Accum":"purescript-foldable-traversable","Node.Buffer.Class":"purescript-node-buffer","Data.CommutativeRing":"purescript-prelude","Data.NaturalTransformation":"purescript-prelude","Data.Monoid.Conj":"purescript-prelude","Data.Functor.App":"purescript-functors","Data.Profunctor.Star":"purescript-profunctor","Data.Unfoldable":"purescript-unfoldable","Type.RowList":"purescript-typelevel-prelude","Control.Comonad.Store.Trans":"purescript-transformers","Foreign.Object.Unsafe":"purescript-foreign-object","Control.Monad.ST":"purescript-st","Control.Monad.State.Class":"purescript-transformers","Data.List.Types":"purescript-lists","Data.String.NonEmpty.CodeUnits":"purescript-strings","Data.Functor":"purescript-prelude","Node.FS.Stream":"purescript-node-fs","Unsafe.Coerce":"purescript-unsafe-coerce","Control.Monad.Writer.Class":"purescript-transformers","Data.Profunctor.Strong":"purescript-profunctor","Control.Monad.Except":"purescript-transformers","Data.Interval":"purescript-datetime","Data.List.Lazy.Types":"purescript-lists","Control.Category":"purescript-prelude","Data.Interval.Duration":"purescript-datetime","Control.Monad.Gen.Common":"purescript-gen","Control.Monad.RWS.Trans":"purescript-transformers","Node.FS.Stats":"purescript-node-fs","Control.Monad.Cont.Trans":"purescript-transformers","Data.Maybe":"purescript-maybe","Type.Row":"purescript-typelevel-prelude","Data.String.Regex.Unsafe":"purescript-strings","Foreign.Object.ST":"purescript-foreign-object","Data.Set":"purescript-ordered-collections","Data.Profunctor":"purescript-profunctor","Control.Comonad":"purescript-control","Control.Monad.ST.Global":"purescript-st","Data.Function":"purescript-prelude","Data.List":"purescript-lists","Data.Field":"purescript-prelude","Data.List.Lazy":"purescript-lists","Data.EuclideanRing":"purescript-prelude","Data.Semigroup.Last":"purescript-prelude","Data.Semigroup.First":"purescript-prelude","Data.Functor.Invariant":"purescript-invariant","Node.Buffer.Internal":"purescript-node-buffer","Control.Comonad.Traced":"purescript-transformers","Data.Comparison":"purescript-contravariant","Data.String.Unsafe":"purescript-strings","Prelude":"purescript-prelude","Effect.Class":"purescript-effect","Data.Predicate":"purescript-contravariant","Partial.Unsafe":"purescript-partial","Data.Array":"purescript-arrays","Control.Extend":"purescript-control","Data.Unfoldable1":"purescript-unfoldable","Control.Lazy":"purescript-control","Data.Function.Uncurried":"purescript-functions","Control.Monad.Reader.Trans":"purescript-transformers","Data.Functor.Product.Nested":"purescript-functors","Control.Comonad.Env.Class":"purescript-transformers","Node.Buffer.Immutable":"purescript-node-buffer","Data.Interval.Duration.Iso":"purescript-datetime","Data.ArrayBuffer.Types":"purescript-arraybuffer-types","Data.Eq":"purescript-prelude","Data.Either.Nested":"purescript-either","Data.Newtype":"purescript-newtype","Data.Semigroup.Traversable":"purescript-foldable-traversable","Data.Bifunctor":"purescript-bifunctors","Node.FS.Sync":"purescript-node-fs","Data.Monoid.Disj":"purescript-prelude","Control.Monad.Gen.Class":"purescript-gen","Data.Array.Partial":"purescript-arrays","Data.String.CaseInsensitive":"purescript-strings","Node.Stream":"purescript-node-streams","Control.MonadPlus":"purescript-control","Data.Void":"purescript-prelude","Data.DateTime.Instant":"purescript-datetime","Data.Profunctor.Costrong":"purescript-profunctor","Data.Ord.Max":"purescript-orders","Control.Comonad.Store":"purescript-transformers","Control.Monad.Except.Trans":"purescript-transformers","Data.String.CodeUnits":"purescript-strings","Data.FunctorWithIndex":"purescript-foldable-traversable","Data.Divisible":"purescript-contravariant","Data.Eq.Generic":"purescript-prelude","Data.DivisionRing":"purescript-prelude","Data.Equivalence":"purescript-contravariant","Data.Maybe.Last":"purescript-maybe","Data.Unit":"purescript-prelude","Data.List.NonEmpty":"purescript-lists","Data.List.Lazy.NonEmpty":"purescript-lists","Data.Ordering":"purescript-prelude","Data.Functor.Coproduct":"purescript-functors","Control.Monad.Cont.Class":"purescript-transformers","Data.Identity":"purescript-identity","Data.Set.NonEmpty":"purescript-ordered-collections","Control.Comonad.Trans.Class":"purescript-transformers","Node.Path":"purescript-node-path","Data.String":"purescript-strings","Data.Reflectable":"purescript-prelude","Control.Plus":"purescript-control","Node.Buffer.Types":"purescript-node-buffer","Data.Map.Internal":"purescript-ordered-collections","Data.Time":"purescript-datetime","Data.JSDate":"purescript-js-date","Data.Time.Duration":"purescript-datetime","Data.Date.Component":"purescript-datetime","Partial":"purescript-partial","Control.Comonad.Env.Trans":"purescript-transformers","Control.Monad.Reader.Class":"purescript-transformers","Data.String.NonEmpty.CodePoints":"purescript-strings","Data.Decidable":"purescript-contravariant","Data.String.NonEmpty.Internal":"purescript-strings","Data.Monoid.Multiplicative":"purescript-prelude","Data.String.NonEmpty.CaseInsensitive":"purescript-strings","Data.Functor.Joker":"purescript-functors","Type.Data.Symbol":"purescript-typelevel-prelude","Data.Array.ST":"purescript-arrays","Foreign":"purescript-foreign","Node.Buffer":"purescript-node-buffer","Control.Monad.Error.Class":"purescript-transformers","Control.Semigroupoid":"purescript-prelude","Data.Monoid.Alternate":"purescript-control","Data.Char":"purescript-strings","Data.Generic.Rep":"purescript-prelude","Effect.Class.Console":"purescript-console","Data.Bifunctor.Join":"purescript-bifunctors","Data.Options":"purescript-options","Data.Bifoldable":"purescript-foldable-traversable","Control.Monad.ST.Ref":"purescript-st","Data.Monoid.Endo":"purescript-prelude","Control.Monad.State":"purescript-transformers","Data.List.Partial":"purescript-lists","Data.Semiring.Generic":"purescript-prelude","Data.String.Regex.Flags":"purescript-strings","Data.Either":"purescript-either","Data.Time.Duration.Gen":"purescript-datetime","Data.Date.Component.Gen":"purescript-datetime","Type.Prelude":"purescript-typelevel-prelude","Control.Applicative":"purescript-prelude","Control.Monad.ST.Class":"purescript-st","Data.FoldableWithIndex":"purescript-foldable-traversable","Data.Op":"purescript-contravariant","Record.Unsafe":"purescript-prelude","Control.Monad.Writer":"purescript-transformers","Data.Functor.Coproduct.Inject":"purescript-functors","Data.Profunctor.Choice":"purescript-profunctor","Data.Time.Gen":"purescript-datetime","Data.Traversable":"purescript-foldable-traversable","Data.String.Gen":"purescript-strings"},"compilerVersion":"0.14.5"}