{"uploader":"sigma-andex","packageMeta":{"repository":{"url":"https://github.com/sigma-andex/purescript-fast-vect.git","type":"git"},"ignore":["**/.*","node_modules","bower_components","output"],"dependencies":{"purescript-effect":"^v3.0.0","purescript-spec-discovery":"^v6.0.0","purescript-arrays":"^v6.0.1","purescript-maybe":"^v5.0.0","purescript-aff":"^v6.0.0","purescript-prelude":"^v5.0.1","purescript-spec":"^v5.0.1","purescript-psci-support":"^v5.0.0","purescript-typelevel-arithmetic":"https://github.com/sigma-andex/purescript-typelevel-arithmetic.git#v0.1.0","purescript-partial":"^v3.0.0"},"name":"purescript-fast-vect","license":["MIT-0"]},"tagTime":"2021-08-28T12:00:58+0000","modules":[{"reExports":[],"name":"Data.FastVect.FastVect","comments":null,"declarations":[{"kind":{"kind":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Symbol"]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Type"]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Type"]}]}]},"keyword":"data"},"children":[{"comments":null,"title":"<anonymous>","info":{"declType":"instance","dependencies":[{"constraintAnn":[],"constraintClass":[["Data","Symbol"],"IsSymbol"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"len"}],"constraintKindArgs":[],"constraintData":null},{"constraintAnn":[],"constraintClass":[["Data","Show"],"Show"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"elem"}],"constraintKindArgs":[],"constraintData":null}],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Show"],"Show"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","FastVect","FastVect"],"Vect"]},{"annotation":[],"tag":"TypeVar","contents":"len"}]},{"annotation":[],"tag":"TypeVar","contents":"elem"}]}]}},"sourceSpan":{"start":[42,1],"name":"/Users/sigma-andex/code/purescript-fast-vect/src/Data/FastVect/FastVect.purs","end":[43,82]}},{"comments":null,"title":"<anonymous>","info":{"declType":"instance","dependencies":[{"constraintAnn":[],"constraintClass":[["Data","Eq"],"Eq"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"elem"}],"constraintKindArgs":[],"constraintData":null}],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Eq"],"Eq"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","FastVect","FastVect"],"Vect"]},{"annotation":[],"tag":"TypeVar","contents":"len"}]},{"annotation":[],"tag":"TypeVar","contents":"elem"}]}]}},"sourceSpan":{"start":[45,1],"name":"/Users/sigma-andex/code/purescript-fast-vect/src/Data/FastVect/FastVect.purs","end":[46,48]}},{"comments":null,"title":"<anonymous>","info":{"declType":"instance","dependencies":[],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Functor"],"Functor"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","FastVect","FastVect"],"Vect"]},{"annotation":[],"tag":"TypeVar","contents":"len"}]}]}},"sourceSpan":{"start":[48,1],"name":"/Users/sigma-andex/code/purescript-fast-vect/src/Data/FastVect/FastVect.purs","end":[49,48]}}],"comments":"A Vector: A list-like data structure that encodes it's length in the type, backed by an `Array`.\n\n```\nvect :: Vect \"1\" String\nvect = singleton \"a\"\n```\n","title":"Vect","info":{"declType":"data","dataDeclType":"data","typeArguments":[["len",null],["elem",null]]},"sourceSpan":{"start":[39,1],"name":"/Users/sigma-andex/code/purescript-fast-vect/src/Data/FastVect/FastVect.purs","end":[40,34]}},{"kind":null,"children":[],"comments":"Create a `Vect` by replicating `len` times the given element \n\n```\nvect :: Vect \"300\" String\nvect = replicate (term :: _ \"300\") \"a\"\n```\n","title":"replicate","info":{"declType":"value","type":{"annotation":[],"tag":"ForAll","contents":["len",{"annotation":[],"tag":"ForAll","contents":["elem",{"annotation":[],"tag":"ConstrainedType","contents":[{"constraintAnn":[],"constraintClass":[["Typelevel","Arithmetic","ToInt"],"ToInt"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"len"}],"constraintKindArgs":[],"constraintData":null},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Type","Proxy"],"Proxy"]},{"annotation":[],"tag":"TypeVar","contents":"len"}]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeVar","contents":"elem"}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","FastVect","FastVect"],"Vect"]},{"annotation":[],"tag":"TypeVar","contents":"len"}]},{"annotation":[],"tag":"TypeVar","contents":"elem"}]}]}]}]},null]},null]}},"sourceSpan":{"start":[57,1],"name":"/Users/sigma-andex/code/purescript-fast-vect/src/Data/FastVect/FastVect.purs","end":[60,35]}},{"kind":null,"children":[],"comments":"Creates the empty `Vect`.\n\n```\nvect :: Vect \"0\" String\nvect = empty\n```\n","title":"empty","info":{"declType":"value","type":{"annotation":[],"tag":"ForAll","contents":["elem",{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","FastVect","FastVect"],"Vect"]},{"annotation":[],"tag":"TypeLevelString","contents":"0"}]},{"annotation":[],"tag":"TypeVar","contents":"elem"}]},null]}},"sourceSpan":{"start":[69,1],"name":"/Users/sigma-andex/code/purescript-fast-vect/src/Data/FastVect/FastVect.purs","end":[71,16]}},{"kind":null,"children":[],"comments":"Create a `Vect` of one element.\n\n```\nvect :: Vect \"1\" String\nvect = singleton \"a\"\n```\n","title":"singleton","info":{"declType":"value","type":{"annotation":[],"tag":"ForAll","contents":["elem",{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeVar","contents":"elem"}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","FastVect","FastVect"],"Vect"]},{"annotation":[],"tag":"TypeLevelString","contents":"1"}]},{"annotation":[],"tag":"TypeVar","contents":"elem"}]}]},null]}},"sourceSpan":{"start":[80,1],"name":"/Users/sigma-andex/code/purescript-fast-vect/src/Data/FastVect/FastVect.purs","end":[82,23]}},{"kind":null,"children":[],"comments":"Append two `Vect`s.\n\n```\nas :: Vect \"300\" String\nas = replicate (term :: _ \"300\") \"a\"\n\nbs :: Vect \"200\" String\nbs = replicate (term :: _ \"200\") \"b\"\n\ncs :: Vect \"500\" String\ncs = append as bs\n```\n","title":"append","info":{"declType":"value","type":{"annotation":[],"tag":"ForAll","contents":["m",{"annotation":[],"tag":"ForAll","contents":["n",{"annotation":[],"tag":"ForAll","contents":["elem",{"annotation":[],"tag":"ForAll","contents":["carry",{"annotation":[],"tag":"ForAll","contents":["sum",{"annotation":[],"tag":"ForAll","contents":["m_plus_n_untrimmed",{"annotation":[],"tag":"ForAll","contents":["m_plus_n",{"annotation":[],"tag":"ForAll","contents":["m_aligned",{"annotation":[],"tag":"ForAll","contents":["n_aligned",{"annotation":[],"tag":"ConstrainedType","contents":[{"constraintAnn":[],"constraintClass":[["Typelevel","Arithmetic","Add"],"PadZeroes"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"m"},{"annotation":[],"tag":"TypeVar","contents":"n"},{"annotation":[],"tag":"TypeVar","contents":"m_aligned"},{"annotation":[],"tag":"TypeVar","contents":"n_aligned"}],"constraintKindArgs":[],"constraintData":null},{"annotation":[],"tag":"ConstrainedType","contents":[{"constraintAnn":[],"constraintClass":[["Typelevel","Arithmetic","Add"],"Add"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"m_aligned"},{"annotation":[],"tag":"TypeVar","contents":"n_aligned"},{"annotation":[],"tag":"TypeVar","contents":"carry"},{"annotation":[],"tag":"TypeVar","contents":"sum"}],"constraintKindArgs":[],"constraintData":null},{"annotation":[],"tag":"ConstrainedType","contents":[{"constraintAnn":[],"constraintClass":[["Prim","Symbol"],"Cons"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"carry"},{"annotation":[],"tag":"TypeVar","contents":"sum"},{"annotation":[],"tag":"TypeVar","contents":"m_plus_n_untrimmed"}],"constraintKindArgs":[],"constraintData":null},{"annotation":[],"tag":"ConstrainedType","contents":[{"constraintAnn":[],"constraintClass":[["Typelevel","Arithmetic","Add"],"Trim"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"m_plus_n_untrimmed"},{"annotation":[],"tag":"TypeVar","contents":"m_plus_n"}],"constraintKindArgs":[],"constraintData":null},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","FastVect","FastVect"],"Vect"]},{"annotation":[],"tag":"TypeVar","contents":"m"}]},{"annotation":[],"tag":"TypeVar","contents":"elem"}]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","FastVect","FastVect"],"Vect"]},{"annotation":[],"tag":"TypeVar","contents":"n"}]},{"annotation":[],"tag":"TypeVar","contents":"elem"}]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","FastVect","FastVect"],"Vect"]},{"annotation":[],"tag":"TypeVar","contents":"m_plus_n"}]},{"annotation":[],"tag":"TypeVar","contents":"elem"}]}]}]}]}]}]}]},null]},null]},null]},null]},null]},null]},null]},null]},null]}},"sourceSpan":{"start":[97,1],"name":"/Users/sigma-andex/code/purescript-fast-vect/src/Data/FastVect/FastVect.purs","end":[103,49]}},{"kind":null,"children":[],"comments":"Safely drop `m` elements from a `Vect`. \nWill result in a compile-time error if you are trying to drop more elements than exist in the vector.\n\n```\nvect :: Vect \"300\" String\nvect = replicate (term :: _ \"300\") \"a\"\n\nnewVect :: Vect \"200\" String\nnewVect = drop (term :: _ \"100\") vect\n```\n","title":"drop","info":{"declType":"value","type":{"annotation":[],"tag":"ForAll","contents":["m",{"annotation":[],"tag":"ForAll","contents":["n",{"annotation":[],"tag":"ForAll","contents":["elem",{"annotation":[],"tag":"ForAll","contents":["m_aligned",{"annotation":[],"tag":"ForAll","contents":["m_plus_n_aligned",{"annotation":[],"tag":"ForAll","contents":["n_untrimmed",{"annotation":[],"tag":"ForAll","contents":["m_plus_n",{"annotation":[],"tag":"ConstrainedType","contents":[{"constraintAnn":[],"constraintClass":[["Typelevel","Arithmetic","ToInt"],"ToInt"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"m"}],"constraintKindArgs":[],"constraintData":null},{"annotation":[],"tag":"ConstrainedType","contents":[{"constraintAnn":[],"constraintClass":[["Typelevel","Arithmetic","Add"],"PadZeroes"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"m"},{"annotation":[],"tag":"TypeVar","contents":"m_plus_n"},{"annotation":[],"tag":"TypeVar","contents":"m_aligned"},{"annotation":[],"tag":"TypeVar","contents":"m_plus_n_aligned"}],"constraintKindArgs":[],"constraintData":null},{"annotation":[],"tag":"ConstrainedType","contents":[{"constraintAnn":[],"constraintClass":[["Typelevel","Arithmetic","Add"],"Add"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"m_aligned"},{"annotation":[],"tag":"TypeVar","contents":"n_untrimmed"},{"annotation":[],"tag":"TypeLevelString","contents":"0"},{"annotation":[],"tag":"TypeVar","contents":"m_plus_n_aligned"}],"constraintKindArgs":[],"constraintData":null},{"annotation":[],"tag":"ConstrainedType","contents":[{"constraintAnn":[],"constraintClass":[["Typelevel","Arithmetic","Add"],"Trim"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"n_untrimmed"},{"annotation":[],"tag":"TypeVar","contents":"n"}],"constraintKindArgs":[],"constraintData":null},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Type","Proxy"],"Proxy"]},{"annotation":[],"tag":"TypeVar","contents":"m"}]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","FastVect","FastVect"],"Vect"]},{"annotation":[],"tag":"TypeVar","contents":"m_plus_n"}]},{"annotation":[],"tag":"TypeVar","contents":"elem"}]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","FastVect","FastVect"],"Vect"]},{"annotation":[],"tag":"TypeVar","contents":"n"}]},{"annotation":[],"tag":"TypeVar","contents":"elem"}]}]}]}]}]}]}]},null]},null]},null]},null]},null]},null]},null]}},"sourceSpan":{"start":[116,1],"name":"/Users/sigma-andex/code/purescript-fast-vect/src/Data/FastVect/FastVect.purs","end":[122,45]}},{"kind":null,"children":[],"comments":"Safely take `m` elements from a `Vect`.\nWill result in a compile-time error if you are trying to take more elements than exist in the vector.\n\n```\nvect :: Vect \"300\" String\nvect = replicate (term :: _ \"300\") \"a\"\n\nnewVect :: Vect \"100\" String\nnewVect = take (term :: _ \"100\") vect\n```\n","title":"take","info":{"declType":"value","type":{"annotation":[],"tag":"ForAll","contents":["m",{"annotation":[],"tag":"ForAll","contents":["n",{"annotation":[],"tag":"ForAll","contents":["elem",{"annotation":[],"tag":"ForAll","contents":["m_plus_n",{"annotation":[],"tag":"ForAll","contents":["m_aligned",{"annotation":[],"tag":"ForAll","contents":["m_aligned_plus_n",{"annotation":[],"tag":"ForAll","contents":["n_untrimmed",{"annotation":[],"tag":"ConstrainedType","contents":[{"constraintAnn":[],"constraintClass":[["Typelevel","Arithmetic","ToInt"],"ToInt"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"m"}],"constraintKindArgs":[],"constraintData":null},{"annotation":[],"tag":"ConstrainedType","contents":[{"constraintAnn":[],"constraintClass":[["Typelevel","Arithmetic","Add"],"PadZeroes"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"m"},{"annotation":[],"tag":"TypeVar","contents":"m_plus_n"},{"annotation":[],"tag":"TypeVar","contents":"m_aligned"},{"annotation":[],"tag":"TypeVar","contents":"m_aligned_plus_n"}],"constraintKindArgs":[],"constraintData":null},{"annotation":[],"tag":"ConstrainedType","contents":[{"constraintAnn":[],"constraintClass":[["Typelevel","Arithmetic","Add"],"Add"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"m_aligned"},{"annotation":[],"tag":"TypeVar","contents":"n_untrimmed"},{"annotation":[],"tag":"TypeLevelString","contents":"0"},{"annotation":[],"tag":"TypeVar","contents":"m_aligned_plus_n"}],"constraintKindArgs":[],"constraintData":null},{"annotation":[],"tag":"ConstrainedType","contents":[{"constraintAnn":[],"constraintClass":[["Typelevel","Arithmetic","Add"],"Trim"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"n_untrimmed"},{"annotation":[],"tag":"TypeVar","contents":"n"}],"constraintKindArgs":[],"constraintData":null},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Type","Proxy"],"Proxy"]},{"annotation":[],"tag":"TypeVar","contents":"m"}]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","FastVect","FastVect"],"Vect"]},{"annotation":[],"tag":"TypeVar","contents":"m_plus_n"}]},{"annotation":[],"tag":"TypeVar","contents":"elem"}]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","FastVect","FastVect"],"Vect"]},{"annotation":[],"tag":"TypeVar","contents":"m"}]},{"annotation":[],"tag":"TypeVar","contents":"elem"}]}]}]}]}]}]}]},null]},null]},null]},null]},null]},null]},null]}},"sourceSpan":{"start":[135,1],"name":"/Users/sigma-andex/code/purescript-fast-vect/src/Data/FastVect/FastVect.purs","end":[141,45]}},{"kind":null,"children":[],"comments":"Safely access the `i`-th element of a `Vect`.\n\n```\nvect :: Vect \"300\" String\nvect = replicate (term :: _ \"300\") \"a\"\n\nelem :: String\nelem = index (term :: _ \"299\") vect\n```\n","title":"index","info":{"declType":"value","type":{"annotation":[],"tag":"ForAll","contents":["m",{"annotation":[],"tag":"ForAll","contents":["m_minus_one",{"annotation":[],"tag":"ForAll","contents":["aligned_one",{"annotation":[],"tag":"ForAll","contents":["m_aligned",{"annotation":[],"tag":"ForAll","contents":["m_aligned_minus_one",{"annotation":[],"tag":"ForAll","contents":["i",{"annotation":[],"tag":"ForAll","contents":["i_aligned",{"annotation":[],"tag":"ForAll","contents":["n",{"annotation":[],"tag":"ForAll","contents":["elem",{"annotation":[],"tag":"ConstrainedType","contents":[{"constraintAnn":[],"constraintClass":[["Typelevel","Arithmetic","ToInt"],"ToInt"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"i"}],"constraintKindArgs":[],"constraintData":null},{"annotation":[],"tag":"ConstrainedType","contents":[{"constraintAnn":[],"constraintClass":[["Typelevel","Arithmetic","Add"],"PadZeroes"],"constraintArgs":[{"annotation":[],"tag":"TypeLevelString","contents":"1"},{"annotation":[],"tag":"TypeVar","contents":"m"},{"annotation":[],"tag":"TypeVar","contents":"aligned_one"},{"annotation":[],"tag":"TypeVar","contents":"m_aligned"}],"constraintKindArgs":[],"constraintData":null},{"annotation":[],"tag":"ConstrainedType","contents":[{"constraintAnn":[],"constraintClass":[["Typelevel","Arithmetic","Add"],"Add"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"aligned_one"},{"annotation":[],"tag":"TypeVar","contents":"m_minus_one"},{"annotation":[],"tag":"TypeLevelString","contents":"0"},{"annotation":[],"tag":"TypeVar","contents":"m_aligned"}],"constraintKindArgs":[],"constraintData":null},{"annotation":[],"tag":"ConstrainedType","contents":[{"constraintAnn":[],"constraintClass":[["Typelevel","Arithmetic","Add"],"PadZeroes"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"i"},{"annotation":[],"tag":"TypeVar","contents":"m_minus_one"},{"annotation":[],"tag":"TypeVar","contents":"i_aligned"},{"annotation":[],"tag":"TypeVar","contents":"m_aligned_minus_one"}],"constraintKindArgs":[],"constraintData":null},{"annotation":[],"tag":"ConstrainedType","contents":[{"constraintAnn":[],"constraintClass":[["Typelevel","Arithmetic","Add"],"Add"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"i_aligned"},{"annotation":[],"tag":"TypeVar","contents":"n"},{"annotation":[],"tag":"TypeLevelString","contents":"0"},{"annotation":[],"tag":"TypeVar","contents":"m_aligned_minus_one"}],"constraintKindArgs":[],"constraintData":null},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Type","Proxy"],"Proxy"]},{"annotation":[],"tag":"TypeVar","contents":"i"}]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","FastVect","FastVect"],"Vect"]},{"annotation":[],"tag":"TypeVar","contents":"m"}]},{"annotation":[],"tag":"TypeVar","contents":"elem"}]}]},{"annotation":[],"tag":"TypeVar","contents":"elem"}]}]}]}]}]}]}]},null]},null]},null]},null]},null]},null]},null]},null]},null]}},"sourceSpan":{"start":[176,1],"name":"/Users/sigma-andex/code/purescript-fast-vect/src/Data/FastVect/FastVect.purs","end":[183,31]}},{"kind":null,"children":[],"comments":"Safely access the head of a `Vect`.\n\n```\nvect :: Vect \"300\" String\nvect = replicate (term :: _ \"300\") \"a\"\n\nelem :: String\nelem = head vect\n```\n","title":"head","info":{"declType":"value","type":{"annotation":[],"tag":"ForAll","contents":["m",{"annotation":[],"tag":"ForAll","contents":["m_minus_one",{"annotation":[],"tag":"ForAll","contents":["aligned_one",{"annotation":[],"tag":"ForAll","contents":["m_aligned",{"annotation":[],"tag":"ForAll","contents":["m_aligned_minus_one",{"annotation":[],"tag":"ForAll","contents":["i_aligned",{"annotation":[],"tag":"ForAll","contents":["n",{"annotation":[],"tag":"ForAll","contents":["elem",{"annotation":[],"tag":"ConstrainedType","contents":[{"constraintAnn":[],"constraintClass":[["Typelevel","Arithmetic","Add"],"PadZeroes"],"constraintArgs":[{"annotation":[],"tag":"TypeLevelString","contents":"1"},{"annotation":[],"tag":"TypeVar","contents":"m"},{"annotation":[],"tag":"TypeVar","contents":"aligned_one"},{"annotation":[],"tag":"TypeVar","contents":"m_aligned"}],"constraintKindArgs":[],"constraintData":null},{"annotation":[],"tag":"ConstrainedType","contents":[{"constraintAnn":[],"constraintClass":[["Typelevel","Arithmetic","Add"],"Add"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"aligned_one"},{"annotation":[],"tag":"TypeVar","contents":"m_minus_one"},{"annotation":[],"tag":"TypeLevelString","contents":"0"},{"annotation":[],"tag":"TypeVar","contents":"m_aligned"}],"constraintKindArgs":[],"constraintData":null},{"annotation":[],"tag":"ConstrainedType","contents":[{"constraintAnn":[],"constraintClass":[["Typelevel","Arithmetic","Add"],"PadZeroes"],"constraintArgs":[{"annotation":[],"tag":"TypeLevelString","contents":"0"},{"annotation":[],"tag":"TypeVar","contents":"m_minus_one"},{"annotation":[],"tag":"TypeVar","contents":"i_aligned"},{"annotation":[],"tag":"TypeVar","contents":"m_aligned_minus_one"}],"constraintKindArgs":[],"constraintData":null},{"annotation":[],"tag":"ConstrainedType","contents":[{"constraintAnn":[],"constraintClass":[["Typelevel","Arithmetic","Add"],"Add"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"i_aligned"},{"annotation":[],"tag":"TypeVar","contents":"n"},{"annotation":[],"tag":"TypeLevelString","contents":"0"},{"annotation":[],"tag":"TypeVar","contents":"m_aligned_minus_one"}],"constraintKindArgs":[],"constraintData":null},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","FastVect","FastVect"],"Vect"]},{"annotation":[],"tag":"TypeVar","contents":"m"}]},{"annotation":[],"tag":"TypeVar","contents":"elem"}]}]},{"annotation":[],"tag":"TypeVar","contents":"elem"}]}]}]}]}]},null]},null]},null]},null]},null]},null]},null]},null]}},"sourceSpan":{"start":[195,1],"name":"/Users/sigma-andex/code/purescript-fast-vect/src/Data/FastVect/FastVect.purs","end":[201,21]}},{"kind":null,"children":[],"comments":"Split the `Vect` into two sub vectors `before` and `after`, where before contains up to `m` elements.\n\n```\nvect ∷ Vect \"10\" String\nvect = replicate (term ∷ _ \"10\") \"a\"\n\nsplit ∷\n  { after ∷ Vect \"7\" String\n  , before ∷ Vect \"3\" String\n  }\nsplit = splitAt (term ∷ _ \"3\") vect\n```\n","title":"splitAt","info":{"declType":"value","type":{"annotation":[],"tag":"ForAll","contents":["m",{"annotation":[],"tag":"ForAll","contents":["n",{"annotation":[],"tag":"ForAll","contents":["elem",{"annotation":[],"tag":"ForAll","contents":["m_aligned",{"annotation":[],"tag":"ForAll","contents":["m_plus_n_aligned",{"annotation":[],"tag":"ForAll","contents":["n_untrimmed",{"annotation":[],"tag":"ForAll","contents":["m_plus_n",{"annotation":[],"tag":"ConstrainedType","contents":[{"constraintAnn":[],"constraintClass":[["Typelevel","Arithmetic","ToInt"],"ToInt"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"m"}],"constraintKindArgs":[],"constraintData":null},{"annotation":[],"tag":"ConstrainedType","contents":[{"constraintAnn":[],"constraintClass":[["Typelevel","Arithmetic","Add"],"PadZeroes"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"m"},{"annotation":[],"tag":"TypeVar","contents":"m_plus_n"},{"annotation":[],"tag":"TypeVar","contents":"m_aligned"},{"annotation":[],"tag":"TypeVar","contents":"m_plus_n_aligned"}],"constraintKindArgs":[],"constraintData":null},{"annotation":[],"tag":"ConstrainedType","contents":[{"constraintAnn":[],"constraintClass":[["Typelevel","Arithmetic","Add"],"Add"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"m_aligned"},{"annotation":[],"tag":"TypeVar","contents":"n_untrimmed"},{"annotation":[],"tag":"TypeLevelString","contents":"0"},{"annotation":[],"tag":"TypeVar","contents":"m_plus_n_aligned"}],"constraintKindArgs":[],"constraintData":null},{"annotation":[],"tag":"ConstrainedType","contents":[{"constraintAnn":[],"constraintClass":[["Typelevel","Arithmetic","Add"],"Trim"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"n_untrimmed"},{"annotation":[],"tag":"TypeVar","contents":"n"}],"constraintKindArgs":[],"constraintData":null},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Type","Proxy"],"Proxy"]},{"annotation":[],"tag":"TypeVar","contents":"m"}]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","FastVect","FastVect"],"Vect"]},{"annotation":[],"tag":"TypeVar","contents":"m_plus_n"}]},{"annotation":[],"tag":"TypeVar","contents":"elem"}]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"annotation":[],"tag":"RCons","contents":["before",{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","FastVect","FastVect"],"Vect"]},{"annotation":[],"tag":"TypeVar","contents":"m"}]},{"annotation":[],"tag":"TypeVar","contents":"elem"}]},{"annotation":[],"tag":"RCons","contents":["after",{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","FastVect","FastVect"],"Vect"]},{"annotation":[],"tag":"TypeVar","contents":"n"}]},{"annotation":[],"tag":"TypeVar","contents":"elem"}]},{"annotation":[],"tag":"REmpty"}]}]}]}]}]}]}]}]}]},null]},null]},null]},null]},null]},null]},null]}},"sourceSpan":{"start":[156,1],"name":"/Users/sigma-andex/code/purescript-fast-vect/src/Data/FastVect/FastVect.purs","end":[162,79]}},{"kind":null,"children":[],"comments":"Attempt to create a `Vect` of a given size from an `Array`. \n\n```\nfromArray (term :: _ \"3\") [\"a\", \"b\", \"c\"] = Just (Vect (term :: _ \"3\") [\"a\", \"b\", \"c\"])\n\nfromArray (term :: _ \"4\") [\"a\", \"b\", \"c\"] = Nothing\n```\n","title":"fromArray","info":{"declType":"value","type":{"annotation":[],"tag":"ForAll","contents":["len",{"annotation":[],"tag":"ForAll","contents":["elem",{"annotation":[],"tag":"ConstrainedType","contents":[{"constraintAnn":[],"constraintClass":[["Typelevel","Arithmetic","ToInt"],"ToInt"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"len"}],"constraintKindArgs":[],"constraintData":null},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Type","Proxy"],"Proxy"]},{"annotation":[],"tag":"TypeVar","contents":"len"}]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Array"]},{"annotation":[],"tag":"TypeVar","contents":"elem"}]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","FastVect","FastVect"],"Vect"]},{"annotation":[],"tag":"TypeVar","contents":"len"}]},{"annotation":[],"tag":"TypeVar","contents":"elem"}]}}]}]}]}]},null]},null]}},"sourceSpan":{"start":[211,1],"name":"/Users/sigma-andex/code/purescript-fast-vect/src/Data/FastVect/FastVect.purs","end":[211,83]}},{"kind":null,"children":[],"comments":"Converts the `Vect` to an `Array`, effectively dropping the size information.\n","title":"toArray","info":{"declType":"value","type":{"annotation":[],"tag":"ForAll","contents":["len",{"annotation":[],"tag":"ForAll","contents":["elem",{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","FastVect","FastVect"],"Vect"]},{"annotation":[],"tag":"TypeVar","contents":"len"}]},{"annotation":[],"tag":"TypeVar","contents":"elem"}]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Array"]},{"annotation":[],"tag":"TypeVar","contents":"elem"}]}]},null]},null]}},"sourceSpan":{"start":[216,1],"name":"/Users/sigma-andex/code/purescript-fast-vect/src/Data/FastVect/FastVect.purs","end":[216,49]}},{"kind":null,"children":[],"comments":"Creates a `Vect` by adjusting the given `Array`, padding with the provided element if the array is to small or dropping elements if the array is to big.\n\n```\ntoArray $ adjust (term ∷ _ \"10\") 0 [ 1, 2, 3 ] == [ 0, 0, 0, 0, 0, 0, 0, 1, 2, 3 ]\n\ntoArray $ adjust (term ∷ _ \"3\") 0 [ 0, 0, 0, 0, 1, 2, 3 ] == [ 1, 2, 3 ]\n```\n","title":"adjust","info":{"declType":"value","type":{"annotation":[],"tag":"ForAll","contents":["len",{"annotation":[],"tag":"ForAll","contents":["elem",{"annotation":[],"tag":"ConstrainedType","contents":[{"constraintAnn":[],"constraintClass":[["Typelevel","Arithmetic","ToInt"],"ToInt"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"len"}],"constraintKindArgs":[],"constraintData":null},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Type","Proxy"],"Proxy"]},{"annotation":[],"tag":"TypeVar","contents":"len"}]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeVar","contents":"elem"}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Array"]},{"annotation":[],"tag":"TypeVar","contents":"elem"}]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","FastVect","FastVect"],"Vect"]},{"annotation":[],"tag":"TypeVar","contents":"len"}]},{"annotation":[],"tag":"TypeVar","contents":"elem"}]}]}]}]}]},null]},null]}},"sourceSpan":{"start":[226,1],"name":"/Users/sigma-andex/code/purescript-fast-vect/src/Data/FastVect/FastVect.purs","end":[226,79]}},{"kind":null,"children":[],"comments":"Like `adjust` but uses the Moinoid instance of elem to create the elements.\n","title":"adjustM","info":{"declType":"value","type":{"annotation":[],"tag":"ForAll","contents":["len",{"annotation":[],"tag":"ForAll","contents":["elem",{"annotation":[],"tag":"ConstrainedType","contents":[{"constraintAnn":[],"constraintClass":[["Data","Monoid"],"Monoid"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"elem"}],"constraintKindArgs":[],"constraintData":null},{"annotation":[],"tag":"ConstrainedType","contents":[{"constraintAnn":[],"constraintClass":[["Typelevel","Arithmetic","ToInt"],"ToInt"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"len"}],"constraintKindArgs":[],"constraintData":null},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Type","Proxy"],"Proxy"]},{"annotation":[],"tag":"TypeVar","contents":"len"}]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Array"]},{"annotation":[],"tag":"TypeVar","contents":"elem"}]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","FastVect","FastVect"],"Vect"]},{"annotation":[],"tag":"TypeVar","contents":"len"}]},{"annotation":[],"tag":"TypeVar","contents":"elem"}]}]}]}]}]},null]},null]}},"sourceSpan":{"start":[233,1],"name":"/Users/sigma-andex/code/purescript-fast-vect/src/Data/FastVect/FastVect.purs","end":[233,87]}},{"kind":null,"children":[],"comments":"Attaches an element to the front of the `Vect`, creating a new `Vect` with size incremented. \n\nNote, the running time of this function is `O(n)`.\n","title":"cons","info":{"declType":"value","type":{"annotation":[],"tag":"ForAll","contents":["len",{"annotation":[],"tag":"ForAll","contents":["elem",{"annotation":[],"tag":"ForAll","contents":["one_aligned",{"annotation":[],"tag":"ForAll","contents":["len_aligned",{"annotation":[],"tag":"ForAll","contents":["carry",{"annotation":[],"tag":"ForAll","contents":["sum",{"annotation":[],"tag":"ForAll","contents":["len_plus_1_untrimmed",{"annotation":[],"tag":"ForAll","contents":["len_plus_1",{"annotation":[],"tag":"ConstrainedType","contents":[{"constraintAnn":[],"constraintClass":[["Typelevel","Arithmetic","Add"],"PadZeroes"],"constraintArgs":[{"annotation":[],"tag":"TypeLevelString","contents":"1"},{"annotation":[],"tag":"TypeVar","contents":"len"},{"annotation":[],"tag":"TypeVar","contents":"one_aligned"},{"annotation":[],"tag":"TypeVar","contents":"len_aligned"}],"constraintKindArgs":[],"constraintData":null},{"annotation":[],"tag":"ConstrainedType","contents":[{"constraintAnn":[],"constraintClass":[["Typelevel","Arithmetic","Add"],"Add"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"one_aligned"},{"annotation":[],"tag":"TypeVar","contents":"len"},{"annotation":[],"tag":"TypeVar","contents":"carry"},{"annotation":[],"tag":"TypeVar","contents":"sum"}],"constraintKindArgs":[],"constraintData":null},{"annotation":[],"tag":"ConstrainedType","contents":[{"constraintAnn":[],"constraintClass":[["Prim","Symbol"],"Cons"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"carry"},{"annotation":[],"tag":"TypeVar","contents":"sum"},{"annotation":[],"tag":"TypeVar","contents":"len_plus_1_untrimmed"}],"constraintKindArgs":[],"constraintData":null},{"annotation":[],"tag":"ConstrainedType","contents":[{"constraintAnn":[],"constraintClass":[["Typelevel","Arithmetic","Add"],"Trim"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"len_plus_1_untrimmed"},{"annotation":[],"tag":"TypeVar","contents":"len_plus_1"}],"constraintKindArgs":[],"constraintData":null},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeVar","contents":"elem"}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","FastVect","FastVect"],"Vect"]},{"annotation":[],"tag":"TypeVar","contents":"len"}]},{"annotation":[],"tag":"TypeVar","contents":"elem"}]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","FastVect","FastVect"],"Vect"]},{"annotation":[],"tag":"TypeVar","contents":"len_plus_1"}]},{"annotation":[],"tag":"TypeVar","contents":"elem"}]}]}]}]}]}]}]},null]},null]},null]},null]},null]},null]},null]},null]}},"sourceSpan":{"start":[239,1],"name":"/Users/sigma-andex/code/purescript-fast-vect/src/Data/FastVect/FastVect.purs","end":[245,46]}},{"kind":null,"children":[],"comments":null,"title":"(:)","info":{"declType":"alias","alias":[["Data","FastVect","FastVect"],{"Right":{"Left":{"Ident":"cons"}}}],"fixity":{"associativity":"infixr","precedence":6}},"sourceSpan":{"start":[248,1],"name":"/Users/sigma-andex/code/purescript-fast-vect/src/Data/FastVect/FastVect.purs","end":[248,19]}}]}],"resolvedDependencies":{"purescript-free":"6.0.1","purescript-exceptions":"5.0.0","purescript-newtype":"4.0.0","purescript-effect":"3.0.0","purescript-ordered-collections":"2.0.1","purescript-control":"5.0.0","purescript-arraybuffer-types":"3.0.1","purescript-console":"5.0.0","purescript-either":"5.0.0","purescript-node-streams":"5.0.0","purescript-profunctor":"5.0.0","purescript-spec-discovery":"6.0.0","purescript-arrays":"6.0.1","purescript-maybe":"5.0.0","purescript-type-equality":"4.0.0","purescript-exists":"5.1.0","purescript-node-path":"4.0.0","purescript-distributive":"5.0.0","purescript-unfoldable":"5.0.0","purescript-invariant":"5.0.0","purescript-fork":"5.0.0","purescript-lazy":"5.0.0","purescript-now":"5.0.0","purescript-aff":"6.0.0","purescript-foldable-traversable":"5.0.1","purescript-tailrec":"5.0.1","purescript-avar":"4.0.0","purescript-gen":"3.0.0","purescript-functors":"4.1.1","purescript-prelude":"5.0.1","purescript-st":"5.0.1","purescript-bifunctors":"5.0.0","purescript-pipes":"7.0.1","purescript-nonempty":"6.0.0","purescript-contravariant":"5.0.0","purescript-unsafe-coerce":"5.0.0","purescript-refs":"5.0.0","purescript-integers":"5.0.0","purescript-mmorph":"6.0.0","purescript-ansi":"6.1.0","purescript-orders":"5.0.0","purescript-const":"5.0.0","purescript-spec":"5.0.1","purescript-node-buffer":"7.0.1","purescript-node-fs":"6.1.0","purescript-transformers":"5.2.0","purescript-numbers":"8.0.0","purescript-js-date":"7.0.0","purescript-math":"3.0.0","purescript-enums":"5.0.0","purescript-psci-support":"5.0.0","purescript-catenable-lists":"6.0.1","purescript-typelevel-arithmetic":"0.1.0","purescript-parallel":"5.0.0","purescript-tuples":"6.0.1","purescript-partial":"3.0.0","purescript-strings":"5.0.0","purescript-identity":"5.0.0","purescript-foreign":"6.0.1","purescript-safe-coerce":"1.0.0","purescript-lists":"6.0.1","purescript-nullable":"5.0.0","purescript-datetime":"5.0.2","purescript-functions":"5.0.0"},"version":"0.3.1","github":["sigma-andex","purescript-fast-vect"],"versionTag":"v0.3.1","moduleMap":{"Data.BooleanAlgebra":"purescript-prelude","Ansi.Output":"purescript-ansi","Data.Decide":"purescript-contravariant","Data.Ring":"purescript-prelude","Data.Semigroup.Generic":"purescript-prelude","Control.Monad.Trans.Class":"purescript-transformers","Data.Functor.Product":"purescript-functors","Data.Functor.Flip":"purescript-functors","Foreign.Keys":"purescript-foreign","Data.NonEmpty":"purescript-nonempty","Node.FS.Perms":"purescript-node-fs","Test.Spec.Console":"purescript-spec","Effect.Uncurried":"purescript-effect","Control.Monad.Identity.Trans":"purescript-transformers","Data.Char.Gen":"purescript-strings","Test.Spec.Style":"purescript-spec","Effect.Now":"purescript-now","Data.Monoid.Generic":"purescript-prelude","Data.String.NonEmpty":"purescript-strings","Effect":"purescript-effect","Data.Traversable.Accum.Internal":"purescript-foldable-traversable","Data.Enum.Gen":"purescript-enums","Data.Nullable":"purescript-nullable","Control.Comonad.Env":"purescript-transformers","Control.Comonad.Traced.Class":"purescript-transformers","Data.Functor.Costar":"purescript-functors","Test.Spec.Summary":"purescript-spec","Data.HeytingAlgebra.Generic":"purescript-prelude","Data.Functor.Compose":"purescript-functors","Node.Buffer.ST":"purescript-node-buffer","Data.Int.Bits":"purescript-integers","Data.DateTime":"purescript-datetime","Data.String.CodePoints":"purescript-strings","Data.Ord":"purescript-prelude","Control.Monad.Gen":"purescript-gen","Data.Bounded.Generic":"purescript-prelude","Control.Monad.Free.Class":"purescript-free","Type.Data.Row":"purescript-prelude","Data.Date":"purescript-datetime","Control.Comonad.Cofree.Class":"purescript-free","Safe.Coerce":"purescript-safe-coerce","Data.Monoid.Dual":"purescript-prelude","Control.Monad.Rec.Class":"purescript-tailrec","Data.Time.Component":"purescript-datetime","Node.FS.Internal":"purescript-node-fs","Data.Bitraversable":"purescript-foldable-traversable","Data.Boolean":"purescript-prelude","Data.Show.Generic":"purescript-prelude","Data.Map":"purescript-ordered-collections","Control.Biapplicative":"purescript-bifunctors","Data.CatList":"purescript-catenable-lists","Effect.Exception.Unsafe":"purescript-exceptions","Control.Parallel.Class":"purescript-parallel","Data.Array.NonEmpty.Internal":"purescript-arrays","Type.Proxy":"purescript-prelude","Pipes.Core":"purescript-pipes","Data.Coyoneda":"purescript-free","Effect.Aff.Compat":"purescript-aff","Data.Array.ST.Iterator":"purescript-arrays","Data.Enum.Generic":"purescript-enums","Data.DateTime.Gen":"purescript-datetime","Data.String.Pattern":"purescript-strings","Data.Bounded":"purescript-prelude","Control.Monad.State.Trans":"purescript-transformers","Data.TraversableWithIndex":"purescript-foldable-traversable","Node.Encoding":"purescript-node-buffer","Data.Int":"purescript-integers","Data.Profunctor.Cochoice":"purescript-profunctor","Data.Show":"purescript-prelude","Control.Monad.Writer.Trans":"purescript-transformers","Data.Foldable":"purescript-foldable-traversable","Data.Divide":"purescript-contravariant","Control.Comonad.Store.Class":"purescript-transformers","Data.Number":"purescript-numbers","Data.Enum":"purescript-enums","Control.Monad.Trampoline":"purescript-free","Test.Spec.Tree":"purescript-spec","Control.Apply":"purescript-prelude","Data.Functor.Contravariant":"purescript-contravariant","Data.Tuple.Nested":"purescript-tuples","Data.List.Internal":"purescript-lists","Control.Monad":"purescript-prelude","Data.Lazy":"purescript-lazy","Data.Monoid":"purescript-prelude","Data.Profunctor.Closed":"purescript-profunctor","Control.Monad.List.Trans":"purescript-transformers","Data.Ord.Generic":"purescript-prelude","Control.Monad.RWS":"purescript-transformers","Data.String.Common":"purescript-strings","Data.Maybe.First":"purescript-maybe","Control.Bind":"purescript-prelude","Data.Profunctor.Split":"purescript-profunctor","Data.Number.Format":"purescript-numbers","Effect.Aff.Class":"purescript-aff","Data.Monoid.Additive":"purescript-prelude","Data.Symbol":"purescript-prelude","Data.Map.Gen":"purescript-ordered-collections","Data.String.Regex":"purescript-strings","Data.Profunctor.Join":"purescript-profunctor","Data.HeytingAlgebra":"purescript-prelude","Control.Alt":"purescript-control","Data.Date.Gen":"purescript-datetime","Control.Monad.Maybe.Trans":"purescript-transformers","Control.Monad.Cont":"purescript-transformers","Control.Monad.ST.Internal":"purescript-st","Type.Data.RowList":"purescript-prelude","Data.Time.Component.Gen":"purescript-datetime","Effect.Ref":"purescript-refs","Data.Either.Inject":"purescript-either","Data.List.ZipList":"purescript-lists","Data.Ord.Min":"purescript-orders","Node.FS":"purescript-node-fs","Test.Spec.Runner":"purescript-spec","Data.Functor.Coproduct.Nested":"purescript-functors","Data.Ring.Generic":"purescript-prelude","Data.Semigroup":"purescript-prelude","Data.Array.NonEmpty":"purescript-arrays","Control.Monad.Reader":"purescript-transformers","Data.Const":"purescript-const","Test.Spec.Reporter.Console":"purescript-spec","Control.Comonad.Traced.Trans":"purescript-transformers","Node.FS.Async":"purescript-node-fs","Test.Spec.Reporter.Dot":"purescript-spec","Data.Ord.Down":"purescript-orders","Data.Number.Approximate":"purescript-numbers","Data.Array.ST.Partial":"purescript-arrays","Effect.Unsafe":"purescript-effect","Pipes.Internal":"purescript-pipes","Control.Monad.Morph":"purescript-mmorph","Data.Tuple":"purescript-tuples","Typelevel.Arithmetic.ToInt":"purescript-typelevel-arithmetic","Data.Functor.Clown":"purescript-functors","Data.Semigroup.Foldable":"purescript-foldable-traversable","Control.Biapply":"purescript-bifunctors","Data.Distributive":"purescript-distributive","Effect.Exception":"purescript-exceptions","Type.Equality":"purescript-type-equality","Foreign.Index":"purescript-foreign","Control.Alternative":"purescript-control","Data.Semiring":"purescript-prelude","Pipes.Prelude":"purescript-pipes","Data.Functor.Product2":"purescript-functors","Data.Exists":"purescript-exists","Effect.Console":"purescript-console","Data.Traversable.Accum":"purescript-foldable-traversable","Node.Buffer.Class":"purescript-node-buffer","Data.CommutativeRing":"purescript-prelude","Data.NaturalTransformation":"purescript-prelude","Data.Monoid.Conj":"purescript-prelude","Data.Yoneda":"purescript-free","Data.Functor.App":"purescript-functors","Data.Profunctor.Star":"purescript-profunctor","Data.Unfoldable":"purescript-unfoldable","Control.Comonad.Store.Trans":"purescript-transformers","Test.Spec.Assertions.String":"purescript-spec","Control.Monad.ST":"purescript-st","Control.Monad.State.Class":"purescript-transformers","Test.Spec.Discovery":"purescript-spec-discovery","Data.List.Types":"purescript-lists","Data.String.NonEmpty.CodeUnits":"purescript-strings","Data.Functor":"purescript-prelude","Node.FS.Stream":"purescript-node-fs","Unsafe.Coerce":"purescript-unsafe-coerce","Control.Monad.Writer.Class":"purescript-transformers","Data.Profunctor.Strong":"purescript-profunctor","Test.Spec.Reporter.Base":"purescript-spec","Data.CatQueue":"purescript-catenable-lists","Control.Monad.Except":"purescript-transformers","Data.Interval":"purescript-datetime","Data.List.Lazy.Types":"purescript-lists","Control.Category":"purescript-prelude","Test.Spec.Reporter.Tap":"purescript-spec","Data.Interval.Duration":"purescript-datetime","Control.Monad.Gen.Common":"purescript-gen","Control.Monad.RWS.Trans":"purescript-transformers","Test.Spec.Speed":"purescript-spec","Node.FS.Stats":"purescript-node-fs","Control.Monad.Cont.Trans":"purescript-transformers","Data.Maybe":"purescript-maybe","Data.String.Regex.Unsafe":"purescript-strings","Data.Set":"purescript-ordered-collections","Data.Profunctor":"purescript-profunctor","Control.Comonad":"purescript-control","Control.Monad.ST.Global":"purescript-st","Data.Function":"purescript-prelude","Data.List":"purescript-lists","Data.Field":"purescript-prelude","Data.List.Lazy":"purescript-lists","Data.EuclideanRing":"purescript-prelude","Data.Semigroup.Last":"purescript-prelude","Data.Semigroup.First":"purescript-prelude","Data.Functor.Invariant":"purescript-invariant","Node.Buffer.Internal":"purescript-node-buffer","Control.Comonad.Traced":"purescript-transformers","Data.Comparison":"purescript-contravariant","Data.String.Unsafe":"purescript-strings","Prelude":"purescript-prelude","Typelevel.Arithmetic.Add":"purescript-typelevel-arithmetic","Effect.Class":"purescript-effect","Data.Predicate":"purescript-contravariant","Partial.Unsafe":"purescript-partial","Data.Array":"purescript-arrays","Control.Extend":"purescript-control","Pipes":"purescript-pipes","Data.Unfoldable1":"purescript-unfoldable","Control.Lazy":"purescript-control","Data.Function.Uncurried":"purescript-functions","Control.Monad.Reader.Trans":"purescript-transformers","Data.Functor.Product.Nested":"purescript-functors","Pipes.ListT":"purescript-pipes","Control.Comonad.Env.Class":"purescript-transformers","Effect.Aff.AVar":"purescript-avar","Node.Buffer.Immutable":"purescript-node-buffer","Data.Interval.Duration.Iso":"purescript-datetime","Data.ArrayBuffer.Types":"purescript-arraybuffer-types","Data.Eq":"purescript-prelude","Test.Spec.Result":"purescript-spec","Data.Either.Nested":"purescript-either","Control.Comonad.Cofree":"purescript-free","Data.Newtype":"purescript-newtype","Data.Semigroup.Traversable":"purescript-foldable-traversable","Test.Spec.Assertions":"purescript-spec","Data.Bifunctor":"purescript-bifunctors","Node.FS.Sync":"purescript-node-fs","Test.Spec.Reporter":"purescript-spec","Data.Monoid.Disj":"purescript-prelude","Control.Monad.Gen.Class":"purescript-gen","Data.Array.Partial":"purescript-arrays","Data.String.CaseInsensitive":"purescript-strings","Control.Monad.Free":"purescript-free","Control.Parallel":"purescript-parallel","Node.Stream":"purescript-node-streams","Control.MonadPlus":"purescript-control","Data.Void":"purescript-prelude","Control.MonadZero":"purescript-control","Data.DateTime.Instant":"purescript-datetime","Data.Profunctor.Costrong":"purescript-profunctor","Data.Ord.Max":"purescript-orders","Effect.AVar":"purescript-avar","Control.Comonad.Store":"purescript-transformers","Control.Monad.Except.Trans":"purescript-transformers","Data.String.CodeUnits":"purescript-strings","Ansi.Codes":"purescript-ansi","Test.Spec":"purescript-spec","Data.FunctorWithIndex":"purescript-foldable-traversable","Data.Divisible":"purescript-contravariant","Data.Eq.Generic":"purescript-prelude","Data.DivisionRing":"purescript-prelude","PSCI.Support":"purescript-psci-support","Data.Equivalence":"purescript-contravariant","Data.Maybe.Last":"purescript-maybe","Data.Unit":"purescript-prelude","Data.List.NonEmpty":"purescript-lists","Data.List.Lazy.NonEmpty":"purescript-lists","Data.Ordering":"purescript-prelude","Data.Functor.Coproduct":"purescript-functors","Control.Monad.Cont.Class":"purescript-transformers","Effect.Aff":"purescript-aff","Data.Identity":"purescript-identity","Math":"purescript-math","Data.Set.NonEmpty":"purescript-ordered-collections","Control.Comonad.Trans.Class":"purescript-transformers","Node.Path":"purescript-node-path","Data.String":"purescript-strings","Control.Plus":"purescript-control","Node.Buffer.Types":"purescript-node-buffer","Data.Map.Internal":"purescript-ordered-collections","Data.Time":"purescript-datetime","Data.JSDate":"purescript-js-date","Data.Time.Duration":"purescript-datetime","Data.Date.Component":"purescript-datetime","Partial":"purescript-partial","Control.Comonad.Env.Trans":"purescript-transformers","Control.Monad.Reader.Class":"purescript-transformers","Data.String.NonEmpty.CodePoints":"purescript-strings","Data.Decidable":"purescript-contravariant","Data.String.NonEmpty.Internal":"purescript-strings","Data.Monoid.Multiplicative":"purescript-prelude","Data.String.NonEmpty.CaseInsensitive":"purescript-strings","Data.Functor.Joker":"purescript-functors","Data.Array.ST":"purescript-arrays","Foreign":"purescript-foreign","Node.Buffer":"purescript-node-buffer","Control.Monad.Error.Class":"purescript-transformers","Control.Semigroupoid":"purescript-prelude","Data.Monoid.Alternate":"purescript-control","Data.Char":"purescript-strings","Data.Generic.Rep":"purescript-prelude","Effect.Class.Console":"purescript-console","Data.Bifunctor.Join":"purescript-bifunctors","Control.Monad.Fork.Class":"purescript-fork","Data.Bifoldable":"purescript-foldable-traversable","Control.Monad.ST.Ref":"purescript-st","Data.Monoid.Endo":"purescript-prelude","Control.Monad.State":"purescript-transformers","Data.List.Partial":"purescript-lists","Data.Semiring.Generic":"purescript-prelude","Test.Spec.Runner.Event":"purescript-spec","Data.String.Regex.Flags":"purescript-strings","Data.Either":"purescript-either","Data.Time.Duration.Gen":"purescript-datetime","Data.Date.Component.Gen":"purescript-datetime","Control.Applicative":"purescript-prelude","Control.Monad.ST.Class":"purescript-st","Data.FoldableWithIndex":"purescript-foldable-traversable","Data.Op":"purescript-contravariant","Record.Unsafe":"purescript-prelude","Control.Monad.Writer":"purescript-transformers","Test.Spec.Reporter.Spec":"purescript-spec","Data.Functor.Coproduct.Inject":"purescript-functors","Data.Profunctor.Choice":"purescript-profunctor","Data.Time.Gen":"purescript-datetime","Data.Traversable":"purescript-foldable-traversable","Data.String.Gen":"purescript-strings"},"compilerVersion":"0.14.3"}