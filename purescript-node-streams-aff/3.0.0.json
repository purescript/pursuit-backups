{"uploader":"jamesdbrock","packageMeta":{"repository":{"url":"https://github.com/jamesdbrock/purescript-node-streams-aff.git","type":"git"},"ignore":["**/.*","node_modules","bower_components","output"],"dependencies":{"purescript-exceptions":"^v6.0.0","purescript-effect":"^v4.0.0","purescript-either":"^v6.0.0","purescript-node-streams":"^v7.0.0","purescript-arrays":"^v7.0.0","purescript-maybe":"^v6.0.0","purescript-aff":"^v7.0.0","purescript-prelude":"^v6.0.0","purescript-st":"^v6.0.0","purescript-node-buffer":"^v8.0.0","purescript-tuples":"^v7.0.0"},"name":"purescript-node-streams-aff","license":["MIT"]},"tagTime":"2022-07-04T07:12:05+0000","modules":[{"reExports":[],"name":"Node.Stream.Aff","comments":"Asynchronous I/O with the [*Node.js* Stream API](https://nodejs.org/docs/latest/api/stream.html).\n\nOpen __file streams__ with\n[__Node.FS.Stream__](https://pursuit.purescript.org/packages/purescript-node-fs/docs/Node.FS.Stream).\n\nOpen __process streams__ with\n[__Node.Process__](https://pursuit.purescript.org/packages/purescript-node-process/docs/Node.Process).\n\nAll __I/O errors__ will be thrown through the `Aff` `MonadError` class\ninstance.\n\n`Aff` __cancellation__ will clean up all *Node.js* event listeners.\n\nAll of these `Aff` functions will prevent the *Node.js* __event loop__ from\nexiting until the `Aff` function completes.\n\n## Reading\n\n#### Implementation\n\nThe reading functions in this module all operate on a `Readable` stream\nin\n[“paused mode”](https://nodejs.org/docs/latest/api/stream.html#stream_two_reading_modes).\n\nInternally the reading functions use the\n[`readable.read([size])`](https://nodejs.org/docs/latest/api/stream.html#readablereadsize)\nfunction and are subject to the caveats of that function.\n\n#### Result Buffers\n\nThe result of a reading function may be chunked into more than one `Buffer`.\nThe `fst` element of the result `Tuple` is an `Array Buffer` of what\nwas read.\nTo concatenate the result into a single `Buffer`, use\n`Node.Buffer.concat :: Array Buffer -> Buffer`.\n\n```\ninput :: Buffer <- liftEffect <<< concat <<< fst =<< readSome stdin\n```\n\nTo calculate the number of bytes read, use\n`Node.Buffer.size :: Buffer -> m Int`.\n\n```\nTuple inputs _ :: Array Buffer <- readSome stdin\nbytesRead :: Int\n    <- liftEffect $ Array.foldM (\\a b -> (a+_) <$> size b) 0 inputs\n```\n\n#### Result `readagain` flag\n\nThe `snd` element of the result `Tuple` is a `Boolean` flag which\nis `true` if the stream has not reached End-Of-File (and also if the stream\nhas not errored or been destroyed), so we know we can read again.\nIf the flag is `false` then\nno more bytes will ever be produced by the stream.\n\nReading from an ended, closed, errored, or destroyed stream\nwill complete immediately with `Tuple [] false`.\n\nThe `readagain` flag will give the same answer as a call to `Internal.readable`.\n\n## Writing\n\n#### Implementation\n\nThe writing functions in this module all operate on a `Writeable` stream.\n\nInternally the writing functions will call the\n[`writable.write(chunk[, encoding][, callback])`](https://nodejs.org/docs/latest/api/stream.html#writablewritechunk-encoding-callback)\nfunction on each of the `Buffer`s,\nand will asychronously wait if there is “backpressure” from the stream.\n\nThe writing functions will complete after all the data is flushed to the\nstream.\n","declarations":[{"kind":null,"children":[],"comments":"Wait until there is some data available from the stream, then read it.\n\nThis function is useful for streams like __stdin__ which never\nreach End-Of-File.\n\n","title":"readSome","info":{"declType":"value","type":{"annotation":[],"tag":"ForAll","contents":["m",{"annotation":[],"tag":"ForAll","contents":["r",{"annotation":[],"tag":"ConstrainedType","contents":[{"constraintAnn":[],"constraintClass":[["Effect","Aff","Class"],"MonadAff"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"m"}],"constraintKindArgs":[],"constraintData":null},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Node","Stream"],"Readable"]},{"annotation":[],"tag":"TypeVar","contents":"r"}]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeVar","contents":"m"},{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Tuple"],"Tuple"]},{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Array"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Node","Buffer"],"Buffer"]}]}}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}}]}]}]},null]},null]}},"sourceSpan":{"start":[114,1],"name":"src/Node/Stream/Aff.purs","end":[118,38]}},{"kind":null,"children":[],"comments":"Read all data until the end of the stream.\n\nNote that __stdin__ will never end.\n","title":"readAll","info":{"declType":"value","type":{"annotation":[],"tag":"ForAll","contents":["m",{"annotation":[],"tag":"ForAll","contents":["r",{"annotation":[],"tag":"ConstrainedType","contents":[{"constraintAnn":[],"constraintClass":[["Effect","Aff","Class"],"MonadAff"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"m"}],"constraintKindArgs":[],"constraintData":null},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Node","Stream"],"Readable"]},{"annotation":[],"tag":"TypeVar","contents":"r"}]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeVar","contents":"m"},{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Tuple"],"Tuple"]},{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Array"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Node","Buffer"],"Buffer"]}]}}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}}]}]}]},null]},null]}},"sourceSpan":{"start":[175,1],"name":"src/Node/Stream/Aff.purs","end":[179,38]}},{"kind":null,"children":[],"comments":"Wait for *N* bytes to become available from the stream.\n\nIf more than *N* bytes are available on the stream, then\ncompletes with *N* bytes and leaves the rest in the stream’s internal buffer.\n\nIf the end of the stream is reached before *N* bytes are available,\nthen completes with less than *N* bytes.\n","title":"readN","info":{"declType":"value","type":{"annotation":[],"tag":"ForAll","contents":["m",{"annotation":[],"tag":"ForAll","contents":["r",{"annotation":[],"tag":"ConstrainedType","contents":[{"constraintAnn":[],"constraintClass":[["Effect","Aff","Class"],"MonadAff"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"m"}],"constraintKindArgs":[],"constraintData":null},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Node","Stream"],"Readable"]},{"annotation":[],"tag":"TypeVar","contents":"r"}]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeVar","contents":"m"},{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Tuple"],"Tuple"]},{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Array"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Node","Buffer"],"Buffer"]}]}}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}}]}]}]}]},null]},null]}},"sourceSpan":{"start":[245,1],"name":"src/Node/Stream/Aff.purs","end":[250,38]}},{"kind":null,"children":[],"comments":"Write to a stream.\n\nWill complete after the data is flushed to the stream.\n","title":"write","info":{"declType":"value","type":{"annotation":[],"tag":"ForAll","contents":["m",{"annotation":[],"tag":"ForAll","contents":["w",{"annotation":[],"tag":"ConstrainedType","contents":[{"constraintAnn":[],"constraintClass":[["Effect","Aff","Class"],"MonadAff"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"m"}],"constraintKindArgs":[],"constraintData":null},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Node","Stream"],"Writable"]},{"annotation":[],"tag":"TypeVar","contents":"w"}]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Array"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Node","Buffer"],"Buffer"]}]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeVar","contents":"m"},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]}]}]},null]},null]}},"sourceSpan":{"start":[330,1],"name":"src/Node/Stream/Aff.purs","end":[335,12]}},{"kind":null,"children":[],"comments":"Signal that no more data will be written to the `Writable`. Will complete\nafter all data is written and flushed.\n\nWhen the `Writable` is an [__fs.WriteStream__](https://nodejs.org/api/fs.html#class-fswritestream)\nthen this will close the file descriptor because\n\n> “If `autoClose` is set to true (default behavior) on `'error'`\n> or `'finish'` the file descriptor will be closed automatically.”\n","title":"end","info":{"declType":"value","type":{"annotation":[],"tag":"ForAll","contents":["m",{"annotation":[],"tag":"ForAll","contents":["w",{"annotation":[],"tag":"ConstrainedType","contents":[{"constraintAnn":[],"constraintClass":[["Effect","Aff","Class"],"MonadAff"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"m"}],"constraintKindArgs":[],"constraintData":null},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Node","Stream"],"Writable"]},{"annotation":[],"tag":"TypeVar","contents":"w"}]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeVar","contents":"m"},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]}]},null]},null]}},"sourceSpan":{"start":[387,1],"name":"src/Node/Stream/Aff.purs","end":[391,12]}},{"kind":null,"children":[],"comments":"Concatenate an `Array` of UTF-8 encoded `Buffer`s into a `String`.\n","title":"toStringUTF8","info":{"declType":"value","type":{"annotation":[],"tag":"ForAll","contents":["m",{"annotation":[],"tag":"ConstrainedType","contents":[{"constraintAnn":[],"constraintClass":[["Effect","Class"],"MonadEffect"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"m"}],"constraintKindArgs":[],"constraintData":null},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Array"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Node","Buffer"],"Buffer"]}]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeVar","contents":"m"},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}]}]},null]}},"sourceSpan":{"start":[399,1],"name":"src/Node/Stream/Aff.purs","end":[399,68]}},{"kind":null,"children":[],"comments":"Encode a `String` as an `Array` containing one UTF-8 encoded `Buffer`.\n","title":"fromStringUTF8","info":{"declType":"value","type":{"annotation":[],"tag":"ForAll","contents":["m",{"annotation":[],"tag":"ConstrainedType","contents":[{"constraintAnn":[],"constraintClass":[["Effect","Class"],"MonadEffect"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"m"}],"constraintKindArgs":[],"constraintData":null},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeVar","contents":"m"},{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Array"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Node","Buffer"],"Buffer"]}]}}]}]}]},null]}},"sourceSpan":{"start":[403,1],"name":"src/Node/Stream/Aff.purs","end":[403,72]}}]},{"reExports":[],"name":"Node.Stream.Aff.Internal","comments":"Maybe the stuff in here should be moved into the\n[__Node.Stream__](https://pursuit.purescript.org/packages/purescript-node-streams/docs/Node.Stream)\nmodule?\n","declarations":[{"kind":null,"children":[],"comments":"Listen for one `drain` event, call the callback, then remove\nthe event listener.\n\nReturns an effect for removing the event listener before the event\nis raised.\n","title":"onceDrain","info":{"declType":"value","type":{"annotation":[],"tag":"ForAll","contents":["w",{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Node","Stream"],"Writable"]},{"annotation":[],"tag":"TypeVar","contents":"w"}]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}}]}]}]},null]}},"sourceSpan":{"start":[46,1],"name":"src/Node/Stream/Internal.purs","end":[50,26]}},{"kind":null,"children":[],"comments":"Listen for one `end` event, call the callback, then remove\nthe event listener.\n\nReturns an effect for removing the event listener before the event\nis raised.\n","title":"onceEnd","info":{"declType":"value","type":{"annotation":[],"tag":"ForAll","contents":["r",{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Node","Stream"],"Readable"]},{"annotation":[],"tag":"TypeVar","contents":"r"}]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}}]}]}]},null]}},"sourceSpan":{"start":[35,1],"name":"src/Node/Stream/Internal.purs","end":[39,26]}},{"kind":null,"children":[],"comments":"Listen for one `error` event, call the callback, then remove\nthe event listener.\n\nReturns an effect for removing the event listener before the event\nis raised.\n","title":"onceError","info":{"declType":"value","type":{"annotation":[],"tag":"ForAll","contents":["r",{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Node","Stream"],"Stream"]},{"annotation":[],"tag":"TypeVar","contents":"r"}]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Effect","Exception"],"Error"]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]}}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}}]}]}]},null]}},"sourceSpan":{"start":[57,1],"name":"src/Node/Stream/Internal.purs","end":[61,26]}},{"kind":null,"children":[],"comments":"Listen for one `readable` event, call the callback, then remove\nthe event listener.\n\nReturns an effect for removing the event listener before the event\nis raised.\n","title":"onceReadable","info":{"declType":"value","type":{"annotation":[],"tag":"ForAll","contents":["r",{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Node","Stream"],"Readable"]},{"annotation":[],"tag":"TypeVar","contents":"r"}]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}}]}]}]},null]}},"sourceSpan":{"start":[24,1],"name":"src/Node/Stream/Internal.purs","end":[28,26]}},{"kind":null,"children":[],"comments":"The [`readable.readable`](https://nodejs.org/api/stream.html#readablereadable)\nproperty of a stream.\n\n> Is true if it is safe to call `readable.read()`, which means the stream\n> has not been destroyed or emitted `'error'` or `'end'`.\n","title":"readable","info":{"declType":"value","type":{"annotation":[],"tag":"ForAll","contents":["r",{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Node","Stream"],"Readable"]},{"annotation":[],"tag":"TypeVar","contents":"r"}]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}]},null]}},"sourceSpan":{"start":[68,1],"name":"src/Node/Stream/Internal.purs","end":[71,20]}}]}],"resolvedDependencies":{"purescript-exceptions":"6.0.0","purescript-newtype":"5.0.0","purescript-effect":"4.0.0","purescript-ordered-collections":"3.0.0","purescript-control":"6.0.0","purescript-arraybuffer-types":"3.0.2","purescript-either":"6.1.0","purescript-node-streams":"7.0.0","purescript-profunctor":"6.0.0","purescript-arrays":"7.0.0","purescript-maybe":"6.0.0","purescript-type-equality":"4.0.1","purescript-exists":"6.0.0","purescript-distributive":"6.0.0","purescript-unfoldable":"6.0.0","purescript-invariant":"6.0.0","purescript-lazy":"6.0.0","purescript-aff":"7.0.0","purescript-foldable-traversable":"6.0.0","purescript-tailrec":"6.1.0","purescript-gen":"4.0.0","purescript-functors":"5.0.0","purescript-prelude":"6.0.0","purescript-st":"6.0.0","purescript-bifunctors":"6.0.0","purescript-nonempty":"7.0.0","purescript-contravariant":"6.0.0","purescript-unsafe-coerce":"6.0.0","purescript-refs":"6.0.0","purescript-integers":"6.0.0","purescript-orders":"6.0.0","purescript-const":"6.0.0","purescript-node-buffer":"8.0.0","purescript-transformers":"6.0.0","purescript-numbers":"9.0.0","purescript-enums":"6.0.0","purescript-parallel":"6.0.0","purescript-tuples":"7.0.0","purescript-partial":"4.0.0","purescript-identity":"6.0.0","purescript-safe-coerce":"2.0.0","purescript-lists":"7.0.0","purescript-nullable":"6.0.0","purescript-datetime":"6.0.0","purescript-functions":"6.0.0"},"version":"3.0.0","github":["jamesdbrock","purescript-node-streams-aff"],"versionTag":"v3.0.0","moduleMap":{"Data.BooleanAlgebra":"purescript-prelude","Data.Decide":"purescript-contravariant","Data.Ring":"purescript-prelude","Data.Semigroup.Generic":"purescript-prelude","Control.Monad.Trans.Class":"purescript-transformers","Data.Functor.Product":"purescript-functors","Data.Functor.Flip":"purescript-functors","Data.NonEmpty":"purescript-nonempty","Effect.Uncurried":"purescript-effect","Control.Monad.Identity.Trans":"purescript-transformers","Data.Monoid.Generic":"purescript-prelude","Effect":"purescript-effect","Data.Traversable.Accum.Internal":"purescript-foldable-traversable","Data.Enum.Gen":"purescript-enums","Data.Nullable":"purescript-nullable","Control.Comonad.Env":"purescript-transformers","Control.Comonad.Traced.Class":"purescript-transformers","Data.Functor.Costar":"purescript-functors","Data.HeytingAlgebra.Generic":"purescript-prelude","Data.Functor.Compose":"purescript-functors","Node.Buffer.ST":"purescript-node-buffer","Data.Int.Bits":"purescript-integers","Data.DateTime":"purescript-datetime","Data.Ord":"purescript-prelude","Control.Monad.Gen":"purescript-gen","Data.Bounded.Generic":"purescript-prelude","Data.Date":"purescript-datetime","Safe.Coerce":"purescript-safe-coerce","Data.Monoid.Dual":"purescript-prelude","Control.Monad.Rec.Class":"purescript-tailrec","Data.Time.Component":"purescript-datetime","Data.Bitraversable":"purescript-foldable-traversable","Data.Boolean":"purescript-prelude","Data.Show.Generic":"purescript-prelude","Data.Map":"purescript-ordered-collections","Control.Biapplicative":"purescript-bifunctors","Effect.Exception.Unsafe":"purescript-exceptions","Control.Parallel.Class":"purescript-parallel","Data.Array.NonEmpty.Internal":"purescript-arrays","Type.Proxy":"purescript-prelude","Effect.Aff.Compat":"purescript-aff","Data.Array.ST.Iterator":"purescript-arrays","Data.Enum.Generic":"purescript-enums","Data.DateTime.Gen":"purescript-datetime","Data.Bounded":"purescript-prelude","Control.Monad.State.Trans":"purescript-transformers","Data.TraversableWithIndex":"purescript-foldable-traversable","Node.Encoding":"purescript-node-buffer","Data.Int":"purescript-integers","Data.Profunctor.Cochoice":"purescript-profunctor","Data.Show":"purescript-prelude","Control.Monad.Writer.Trans":"purescript-transformers","Data.Foldable":"purescript-foldable-traversable","Data.Divide":"purescript-contravariant","Control.Comonad.Store.Class":"purescript-transformers","Data.Number":"purescript-numbers","Data.Enum":"purescript-enums","Control.Apply":"purescript-prelude","Data.Functor.Contravariant":"purescript-contravariant","Data.Tuple.Nested":"purescript-tuples","Data.List.Internal":"purescript-lists","Control.Monad":"purescript-prelude","Data.Lazy":"purescript-lazy","Data.Monoid":"purescript-prelude","Data.Profunctor.Closed":"purescript-profunctor","Control.Monad.List.Trans":"purescript-transformers","Data.Ord.Generic":"purescript-prelude","Control.Monad.RWS":"purescript-transformers","Data.Maybe.First":"purescript-maybe","Control.Bind":"purescript-prelude","Data.Profunctor.Split":"purescript-profunctor","Data.Number.Format":"purescript-numbers","Effect.Aff.Class":"purescript-aff","Data.Monoid.Additive":"purescript-prelude","Data.Symbol":"purescript-prelude","Data.Map.Gen":"purescript-ordered-collections","Data.Profunctor.Join":"purescript-profunctor","Data.HeytingAlgebra":"purescript-prelude","Control.Alt":"purescript-control","Data.Date.Gen":"purescript-datetime","Control.Monad.Maybe.Trans":"purescript-transformers","Control.Monad.Cont":"purescript-transformers","Control.Monad.ST.Internal":"purescript-st","Data.Time.Component.Gen":"purescript-datetime","Effect.Ref":"purescript-refs","Data.Either.Inject":"purescript-either","Data.List.ZipList":"purescript-lists","Data.Ord.Min":"purescript-orders","Data.Functor.Coproduct.Nested":"purescript-functors","Data.Ring.Generic":"purescript-prelude","Data.Semigroup":"purescript-prelude","Data.Array.NonEmpty":"purescript-arrays","Control.Monad.Reader":"purescript-transformers","Data.Const":"purescript-const","Control.Comonad.Traced.Trans":"purescript-transformers","Data.Ord.Down":"purescript-orders","Data.Number.Approximate":"purescript-numbers","Data.Array.ST.Partial":"purescript-arrays","Effect.Unsafe":"purescript-effect","Data.Tuple":"purescript-tuples","Data.Functor.Clown":"purescript-functors","Data.Semigroup.Foldable":"purescript-foldable-traversable","Control.Biapply":"purescript-bifunctors","Data.Distributive":"purescript-distributive","Effect.Exception":"purescript-exceptions","Type.Equality":"purescript-type-equality","Control.Alternative":"purescript-control","Data.Semiring":"purescript-prelude","Data.Functor.Product2":"purescript-functors","Data.Exists":"purescript-exists","Data.Traversable.Accum":"purescript-foldable-traversable","Node.Buffer.Class":"purescript-node-buffer","Data.CommutativeRing":"purescript-prelude","Data.NaturalTransformation":"purescript-prelude","Data.Monoid.Conj":"purescript-prelude","Data.Functor.App":"purescript-functors","Data.Profunctor.Star":"purescript-profunctor","Data.Unfoldable":"purescript-unfoldable","Control.Comonad.Store.Trans":"purescript-transformers","Control.Monad.ST":"purescript-st","Control.Monad.State.Class":"purescript-transformers","Data.List.Types":"purescript-lists","Data.Functor":"purescript-prelude","Unsafe.Coerce":"purescript-unsafe-coerce","Control.Monad.Writer.Class":"purescript-transformers","Data.Profunctor.Strong":"purescript-profunctor","Control.Monad.Except":"purescript-transformers","Data.Interval":"purescript-datetime","Data.List.Lazy.Types":"purescript-lists","Control.Category":"purescript-prelude","Data.Interval.Duration":"purescript-datetime","Control.Monad.Gen.Common":"purescript-gen","Control.Monad.RWS.Trans":"purescript-transformers","Control.Monad.Cont.Trans":"purescript-transformers","Data.Maybe":"purescript-maybe","Data.Set":"purescript-ordered-collections","Data.Profunctor":"purescript-profunctor","Control.Comonad":"purescript-control","Control.Monad.ST.Global":"purescript-st","Data.Function":"purescript-prelude","Data.List":"purescript-lists","Data.Field":"purescript-prelude","Data.List.Lazy":"purescript-lists","Data.EuclideanRing":"purescript-prelude","Data.Semigroup.Last":"purescript-prelude","Data.Semigroup.First":"purescript-prelude","Data.Functor.Invariant":"purescript-invariant","Node.Buffer.Internal":"purescript-node-buffer","Control.Comonad.Traced":"purescript-transformers","Data.Comparison":"purescript-contravariant","Prelude":"purescript-prelude","Effect.Class":"purescript-effect","Data.Predicate":"purescript-contravariant","Partial.Unsafe":"purescript-partial","Data.Array":"purescript-arrays","Control.Extend":"purescript-control","Data.Unfoldable1":"purescript-unfoldable","Control.Lazy":"purescript-control","Data.Function.Uncurried":"purescript-functions","Control.Monad.Reader.Trans":"purescript-transformers","Data.Functor.Product.Nested":"purescript-functors","Control.Comonad.Env.Class":"purescript-transformers","Node.Buffer.Immutable":"purescript-node-buffer","Data.Interval.Duration.Iso":"purescript-datetime","Data.ArrayBuffer.Types":"purescript-arraybuffer-types","Data.Eq":"purescript-prelude","Data.Either.Nested":"purescript-either","Data.Newtype":"purescript-newtype","Data.Semigroup.Traversable":"purescript-foldable-traversable","Data.Bifunctor":"purescript-bifunctors","Data.Monoid.Disj":"purescript-prelude","Control.Monad.Gen.Class":"purescript-gen","Data.Array.Partial":"purescript-arrays","Control.Parallel":"purescript-parallel","Node.Stream":"purescript-node-streams","Control.MonadPlus":"purescript-control","Data.Void":"purescript-prelude","Data.DateTime.Instant":"purescript-datetime","Data.Profunctor.Costrong":"purescript-profunctor","Data.Ord.Max":"purescript-orders","Control.Comonad.Store":"purescript-transformers","Control.Monad.Except.Trans":"purescript-transformers","Data.FunctorWithIndex":"purescript-foldable-traversable","Data.Divisible":"purescript-contravariant","Data.Eq.Generic":"purescript-prelude","Data.DivisionRing":"purescript-prelude","Data.Equivalence":"purescript-contravariant","Data.Maybe.Last":"purescript-maybe","Data.Unit":"purescript-prelude","Data.List.NonEmpty":"purescript-lists","Data.List.Lazy.NonEmpty":"purescript-lists","Data.Ordering":"purescript-prelude","Data.Functor.Coproduct":"purescript-functors","Control.Monad.Cont.Class":"purescript-transformers","Effect.Aff":"purescript-aff","Data.Identity":"purescript-identity","Data.Set.NonEmpty":"purescript-ordered-collections","Control.Comonad.Trans.Class":"purescript-transformers","Data.Reflectable":"purescript-prelude","Control.Plus":"purescript-control","Node.Buffer.Types":"purescript-node-buffer","Data.Map.Internal":"purescript-ordered-collections","Data.Time":"purescript-datetime","Data.Time.Duration":"purescript-datetime","Data.Date.Component":"purescript-datetime","Partial":"purescript-partial","Control.Comonad.Env.Trans":"purescript-transformers","Control.Monad.Reader.Class":"purescript-transformers","Data.Decidable":"purescript-contravariant","Data.Monoid.Multiplicative":"purescript-prelude","Data.Functor.Joker":"purescript-functors","Data.Array.ST":"purescript-arrays","Node.Buffer":"purescript-node-buffer","Control.Monad.Error.Class":"purescript-transformers","Control.Semigroupoid":"purescript-prelude","Data.Monoid.Alternate":"purescript-control","Data.Generic.Rep":"purescript-prelude","Data.Bifunctor.Join":"purescript-bifunctors","Data.Bifoldable":"purescript-foldable-traversable","Control.Monad.ST.Ref":"purescript-st","Data.Monoid.Endo":"purescript-prelude","Control.Monad.State":"purescript-transformers","Data.List.Partial":"purescript-lists","Data.Semiring.Generic":"purescript-prelude","Data.Either":"purescript-either","Data.Time.Duration.Gen":"purescript-datetime","Data.Date.Component.Gen":"purescript-datetime","Control.Applicative":"purescript-prelude","Control.Monad.ST.Class":"purescript-st","Data.FoldableWithIndex":"purescript-foldable-traversable","Data.Op":"purescript-contravariant","Record.Unsafe":"purescript-prelude","Control.Monad.Writer":"purescript-transformers","Data.Functor.Coproduct.Inject":"purescript-functors","Data.Profunctor.Choice":"purescript-profunctor","Data.Time.Gen":"purescript-datetime","Data.Traversable":"purescript-foldable-traversable"},"compilerVersion":"0.15.2"}